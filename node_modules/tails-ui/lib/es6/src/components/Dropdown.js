// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReasonReact from "reason-react/lib/es6/src/ReasonReact.js";

var component = ReasonReact.reducerComponent("Dropdown");

function make($staropt$star, $staropt$star$1, children) {
  var text = $staropt$star ? $staropt$star[0] : "Dropdown";
  var color = $staropt$star$1 ? $staropt$star$1[0] : "teal";
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      var match = +(self[/* state */2][/* isOpen */0] === /* false */0);
      var match$1 = +(self[/* state */2][/* isOpen */0] === /* true */1);
      var match$2 = +(self[/* state */2][/* isOpen */0] === /* true */1);
      return React.createElement("div", {
                  className: "relative inline-block cursor-pointer",
                  onBlur: (function () {
                      return Curry._1(self[/* send */4], /* Close */1);
                    }),
                  onClick: (function () {
                      return Curry._1(self[/* send */4], /* Toggle */0);
                    })
                }, React.createElement("button", {
                      className: "bg-" + (String(color) + (" hover:bg-" + (String(color) + "-dark p-3 rounded text-white shadow-inner flex items-center justify-between")))
                    }, React.createElement("span", {
                          className: "pr-2"
                        }, text), match !== 0 ? React.createElement("svg", {
                            height: "16",
                            width: "16",
                            fill: "#fff",
                            viewBox: "0 0 32 32"
                          }, React.createElement("path", {
                                d: "M32 16c0-8.837-7.163-16-16-16s-16 7.163-16 16 7.163 16 16 16 16-7.163 16-16zM3 16c0-7.18 5.82-13 13-13s13 5.82 13 13-5.82 13-13 13-13-5.82-13-13z"
                              }), React.createElement("path", {
                                d: "M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z"
                              })) : null, match$1 !== 0 ? React.createElement("svg", {
                            height: "16",
                            width: "16",
                            fill: "#fff",
                            viewBox: "0 0 32 32"
                          }, React.createElement("path", {
                                d: "M0 16c0 8.837 7.163 16 16 16s16-7.163 16-16-7.163-16-16-16-16 7.163-16 16zM29 16c0 7.18-5.82 13-13 13s-13-5.82-13-13 5.82-13 13-13 13 5.82 13 13z"
                              }), React.createElement("path", {
                                d: "M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z"
                              })) : null), match$2 !== 0 ? React.createElement("div", {
                        className: "bg-white shadow rounded z-10 p-4 min-w-full"
                      }, React.createElement("div", {
                            className: "flex flex-col uppercase"
                          }, children)) : null);
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* isOpen : false */0];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (action !== 0) {
        return /* Update */Block.__(0, [/* record */[/* isOpen : false */0]]);
      } else {
        return /* Update */Block.__(0, [/* record */[/* isOpen */1 - state[/* isOpen */0]]]);
      }
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(/* Some */[jsProps.text], /* Some */[jsProps.color], jsProps.children);
      }));

export {
  component ,
  make ,
  $$default ,
  $$default as default,
  
}
/* component Not a pure module */
