["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.component');\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\nreagent.impl.component.extract_props = (function reagent$impl$component$extract_props(v){\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nif(cljs.core.map_QMARK_(p)){\nreturn p;\n} else {\nreturn null;\n}\n});\nreagent.impl.component.extract_children = (function reagent$impl$component$extract_children(v){\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nvar first_child = (((((p == null)) || (cljs.core.map_QMARK_(p))))?(2):(1));\nif((cljs.core.count(v) > first_child)){\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_child);\n} else {\nreturn null;\n}\n});\nreagent.impl.component.props_argv = (function reagent$impl$component$props_argv(c,p){\nvar temp__5755__auto__ = p.argv;\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c.constructor,reagent.impl.util.shallow_obj_to_map(p)], null);\n} else {\nvar a = temp__5755__auto__;\nreturn a;\n}\n});\nreagent.impl.component.get_argv = (function reagent$impl$component$get_argv(c){\nreturn reagent.impl.component.props_argv(c,c.props);\n});\nreagent.impl.component.get_props = (function reagent$impl$component$get_props(c){\nvar p = c.props;\nvar temp__5755__auto__ = p.argv;\nif((temp__5755__auto__ == null)){\nreturn reagent.impl.util.shallow_obj_to_map(p);\n} else {\nvar v = temp__5755__auto__;\nreturn reagent.impl.component.extract_props(v);\n}\n});\nreagent.impl.component.get_children = (function reagent$impl$component$get_children(c){\nvar p = c.props;\nvar temp__5755__auto__ = p.argv;\nif((temp__5755__auto__ == null)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,module$node_modules$react$index.Children.toArray(p.children));\n} else {\nvar v = temp__5755__auto__;\nreturn reagent.impl.component.extract_children(v);\n}\n});\nreagent.impl.component.reagent_class_QMARK_ = (function reagent$impl$component$reagent_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) && ((!(((function (){var G__71340 = c;\nvar G__71340__$1 = (((G__71340 == null))?null:G__71340.prototype);\nif((G__71340__$1 == null)){\nreturn null;\n} else {\nreturn G__71340__$1.reagentRender;\n}\n})() == null)))));\n});\nreagent.impl.component.react_class_QMARK_ = (function reagent$impl$component$react_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) && ((!(((function (){var G__71343 = c;\nvar G__71343__$1 = (((G__71343 == null))?null:G__71343.prototype);\nif((G__71343__$1 == null)){\nreturn null;\n} else {\nreturn G__71343__$1.render;\n}\n})() == null)))));\n});\nreagent.impl.component.reagent_component_QMARK_ = (function reagent$impl$component$reagent_component_QMARK_(c){\nreturn (!((c.reagentRender == null)));\n});\nreagent.impl.component.state_atom = (function reagent$impl$component$state_atom(this$){\nvar sa = this$.cljsState;\nif((!((sa == null)))){\nreturn sa;\n} else {\nreturn (this$.cljsState = reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1(null));\n}\n});\n/**\n * Calls the render function of the component `c`.  If result `res` evaluates to a:\n *   1) Vector (form-1 component) - Treats the vector as hiccup and returns\n *      a react element with a render function based on that hiccup\n *   2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n *      and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n *   3) Anything else - Returns the result of evaluating `c`\n */\nreagent.impl.component.wrap_render = (function reagent$impl$component$wrap_render(c,compiler){\nwhile(true){\nvar f = c.reagentRender;\nvar _ = ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')))})());\nvar res = ((c.cljsLegacyRender === true)?f.call(c,c):(function (){var v = reagent.impl.component.get_argv(c);\nvar n = cljs.core.count(v);\nvar G__71349 = n;\nswitch (G__71349) {\ncase (1):\nreturn f.call(c);\n\nbreak;\ncase (2):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)));\n\nbreak;\ncase (3):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)));\n\nbreak;\ncase (4):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)));\n\nbreak;\ncase (5):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(4)));\n\nbreak;\ndefault:\nreturn f.apply(c,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(v).slice((1)));\n\n}\n})());\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 = ((reagent.impl.component.reagent_class_QMARK_(res))?((function (c,compiler,f,_,res){\nreturn (function() { \nvar G__71521__delegate = function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__71521 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__71522__i = 0, G__71522__a = new Array(arguments.length -  0);\nwhile (G__71522__i < G__71522__a.length) {G__71522__a[G__71522__i] = arguments[G__71522__i + 0]; ++G__71522__i;}\n  args = new cljs.core.IndexedSeq(G__71522__a,0,null);\n} \nreturn G__71521__delegate.call(this,args);};\nG__71521.cljs$lang$maxFixedArity = 0;\nG__71521.cljs$lang$applyTo = (function (arglist__71523){\nvar args = cljs.core.seq(arglist__71523);\nreturn G__71521__delegate(args);\n});\nG__71521.cljs$core$IFn$_invoke$arity$variadic = G__71521__delegate;\nreturn G__71521;\n})()\n;})(c,compiler,f,_,res))\n:res);\n(c.reagentRender = f__$1);\n\nvar G__71525 = c;\nvar G__71526 = compiler;\nc = G__71525;\ncompiler = G__71526;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.component_name = (function reagent$impl$component$component_name(c){\nvar or__4160__auto__ = (function (){var G__71353 = c;\nvar G__71353__$1 = (((G__71353 == null))?null:G__71353.constructor);\nif((G__71353__$1 == null)){\nreturn null;\n} else {\nreturn G__71353__$1.displayName;\n}\n})();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar G__71354 = c;\nvar G__71354__$1 = (((G__71354 == null))?null:G__71354.constructor);\nif((G__71354__$1 == null)){\nreturn null;\n} else {\nreturn G__71354__$1.name;\n}\n}\n});\nreagent.impl.component.comp_name = (function reagent$impl$component$comp_name(){\nvar c = reagent.impl.component._STAR_current_component_STAR_;\nvar n = reagent.impl.component.component_name(c);\nif((!(cljs.core.empty_QMARK_(n)))){\nreturn [\" (in \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\")\"].join('');\n} else {\nreturn \"\";\n}\n\n});\nreagent.impl.component.do_render = (function reagent$impl$component$do_render(c,compiler){\nvar _STAR_current_component_STAR__orig_val__71356 = reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__71357 = c;\n(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__temp_val__71357);\n\ntry{var ok = [false];\ntry{var res = reagent.impl.component.wrap_render(c,compiler);\n(ok[(0)] = true);\n\nreturn res;\n}finally {if(cljs.core.truth_((ok[(0)]))){\n} else {\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).error([\"Error rendering component\",reagent.impl.component.comp_name()].join(''));\n} else {\n}\n}\n}\n}finally {(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__orig_val__71356);\n}});\nreagent.impl.component.rat_opts = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370),true], null);\nreagent.impl.component.custom_wrapper = (function reagent$impl$component$custom_wrapper(key,f){\nvar G__71361 = key;\nvar G__71361__$1 = (((G__71361 instanceof cljs.core.Keyword))?G__71361.fqn:null);\nswitch (G__71361__$1) {\ncase \"getDefaultProps\":\nthrow (new Error(\"getDefaultProps not supported\"));\n\nbreak;\ncase \"getDerivedStateFromProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_getDerivedStateFromProps(props,state){\nreturn f.call(null,(function (){var temp__5755__auto__ = props.argv;\nif((temp__5755__auto__ == null)){\nreturn props;\n} else {\nvar a = temp__5755__auto__;\nreturn reagent.impl.component.extract_props(a);\n}\n})(),state);\n});\n\nbreak;\ncase \"getInitialState\":\nreturn (function reagent$impl$component$custom_wrapper_$_getInitialState(c){\nreturn cljs.core.reset_BANG_(reagent.impl.component.state_atom(c),f.call(c,c));\n});\n\nbreak;\ncase \"getSnapshotBeforeUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_getSnapshotBeforeUpdate(oldprops,oldstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate);\n});\n\nbreak;\ncase \"componentWillReceiveProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \"UNSAFE_componentWillReceiveProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \"shouldComponentUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_shouldComponentUpdate(nextprops,nextstate){\nvar or__4160__auto__ = reagent.impl.util._STAR_always_update_STAR_;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar c = this;\nvar old_argv = c.props.argv;\nvar new_argv = nextprops.argv;\nvar noargv = (((old_argv == null)) || ((new_argv == null)));\nif((f == null)){\nvar or__4160__auto____$1 = noargv;\nif(or__4160__auto____$1){\nreturn or__4160__auto____$1;\n} else {\ntry{return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e71366){var e = e71366;\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Exception thrown while comparing argv's in shouldComponentUpdate: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(''));\n} else {\n}\n\nreturn false;\n}}\n} else {\nif(noargv){\nreturn f.call(c,c,reagent.impl.component.get_argv(c),reagent.impl.component.props_argv(c,nextprops));\n} else {\nreturn f.call(c,c,old_argv,new_argv);\n\n}\n}\n}\n});\n\nbreak;\ncase \"componentWillUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \"UNSAFE_componentWillUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \"componentDidUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidUpdate(oldprops,oldstate,snapshot){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate,snapshot);\n});\n\nbreak;\ncase \"componentWillMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"UNSAFE_componentWillMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"componentDidMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"componentWillUnmount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUnmount(){\nvar c = this;\nvar G__71402_71533 = goog.object.get(c,\"cljsRatom\");\nif((G__71402_71533 == null)){\n} else {\nreagent.ratom.dispose_BANG_(G__71402_71533);\n}\n\nreagent.impl.batching.mark_rendered(c);\n\nif((f == null)){\nreturn null;\n} else {\nreturn f.call(c,c);\n}\n});\n\nbreak;\ncase \"componentDidCatch\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidCatch(error,info){\nvar c = this;\nreturn f.call(c,c,error,info);\n});\n\nbreak;\ndefault:\nreturn null;\n\n}\n});\nreagent.impl.component.get_wrapper = (function reagent$impl$component$get_wrapper(key,f){\nvar wrap = reagent.impl.component.custom_wrapper(key,f);\nif(cljs.core.truth_((function (){var and__4149__auto__ = wrap;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn f;\n} else {\nreturn and__4149__auto__;\n}\n})())){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')));\n}\n} else {\n}\n\nvar or__4160__auto__ = wrap;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn f;\n}\n});\nreagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",1795750960),null,new cljs.core.Keyword(null,\"componentWillUnmount\",\"componentWillUnmount\",1573788814),null], null);\nreagent.impl.component.dash_to_method_name = reagent.impl.util.memoize_1(reagent.impl.util.dash_to_method_name);\nreagent.impl.component.camelify_map_keys = (function reagent$impl$component$camelify_map_keys(fun_map){\nreturn cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(reagent.impl.component.dash_to_method_name(k)),v);\n}),cljs.core.PersistentArrayMap.EMPTY,fun_map);\n});\nreagent.impl.component.add_obligatory = (function reagent$impl$component$add_obligatory(fun_map){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([reagent.impl.component.obligatory,fun_map], 0));\n});\nreagent.impl.component.wrap_funs = (function reagent$impl$component$wrap_funs(fmap,compiler){\nvar renders_71539 = cljs.core.select_keys(fmap,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383)], null));\nvar render_fun_71540 = cljs.core.first(cljs.core.vals(renders_71539));\nif(cljs.core.not(new cljs.core.Keyword(null,\"componentFunction\",\"componentFunction\",825866104).cljs$core$IFn$_invoke$arity$1(fmap))){\n} else {\nthrow (new Error([\"Assert failed: \",\":component-function is no longer supported, use :reagent-render instead.\",\"\\n\",\"(not (:componentFunction fmap))\"].join('')));\n}\n\nif((cljs.core.count(renders_71539) > (0))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Missing reagent-render\",\"\\n\",\"(pos? (count renders))\"].join('')));\n}\n\nif(((1) === cljs.core.count(renders_71539))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Too many render functions supplied\",\"\\n\",\"(== 1 (count renders))\"].join('')));\n}\n\nif(cljs.core.ifn_QMARK_(render_fun_71540)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([render_fun_71540], 0))].join(''),\"\\n\",\"(clojure.core/ifn? render-fun)\"].join('')));\n}\n\n\nvar render_fun = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(fmap);\n}\n})();\nvar legacy_render = (new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(fmap) == null);\nvar name = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = reagent.impl.util.fun_name(render_fun);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"reagent\"));\n}\n}\n})();\nvar fmap__$1 = cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,reagent.impl.component.get_wrapper(k,v));\n}),cljs.core.PersistentArrayMap.EMPTY,fmap);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(fmap__$1,new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601),name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613),legacy_render,new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383),render_fun,new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),(function reagent$impl$component$wrap_funs_$_render(){\nvar c = this;\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.do_render(c,compiler);\n} else {\nvar rat = goog.object.get(c,\"cljsRatom\");\nreagent.impl.batching.mark_rendered(c);\n\nif((rat == null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.do_render(c,compiler);\n}),c,\"cljsRatom\",reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n})], 0));\n});\nreagent.impl.component.map_to_js = (function reagent$impl$component$map_to_js(m){\nreturn cljs.core.reduce_kv((function (o,k,v){\nvar G__71441 = o;\ngoog.object.set(G__71441,cljs.core.name(k),v);\n\nreturn G__71441;\n}),({}),m);\n});\nreagent.impl.component.cljsify = (function reagent$impl$component$cljsify(body,compiler){\nreturn reagent.impl.component.wrap_funs(reagent.impl.component.add_obligatory(reagent.impl.component.camelify_map_keys(body)),compiler);\n});\nreagent.impl.component.built_in_static_method_names = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"childContextTypes\",\"childContextTypes\",578717991),new cljs.core.Keyword(null,\"contextTypes\",\"contextTypes\",-2023853910),new cljs.core.Keyword(null,\"contextType\",\"contextType\",1033066077),new cljs.core.Keyword(null,\"getDerivedStateFromProps\",\"getDerivedStateFromProps\",-991834739),new cljs.core.Keyword(null,\"getDerivedStateFromError\",\"getDerivedStateFromError\",166658477)], null);\n/**\n * Creates JS class based on provided Clojure map.\n * \n *   Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n *   and can be provided in snake-case or camelCase.\n *   Constructor function is defined using key `:getInitialState`.\n * \n *   React built-in static methods or properties are automatically defined as statics.\n */\nreagent.impl.component.create_class = (function reagent$impl$component$create_class(body,compiler){\nif(cljs.core.map_QMARK_(body)){\n} else {\nthrow (new Error(\"Assert failed: (map? body)\"));\n}\n\nvar body__$1 = reagent.impl.component.cljsify(body,compiler);\nvar methods$ = reagent.impl.component.map_to_js(cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc,body__$1,new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601),new cljs.core.Keyword(null,\"getInitialState\",\"getInitialState\",1541760916),new cljs.core.Keyword(null,\"constructor\",\"constructor\",-1953928811),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383),reagent.impl.component.built_in_static_method_names], 0)));\nvar static_methods = reagent.impl.component.map_to_js(cljs.core.select_keys(body__$1,reagent.impl.component.built_in_static_method_names));\nvar display_name = new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar get_initial_state = new cljs.core.Keyword(null,\"getInitialState\",\"getInitialState\",1541760916).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar construct = new cljs.core.Keyword(null,\"constructor\",\"constructor\",-1953928811).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar cmp = (function (props,context,updater){\nvar this$ = this;\nmodule$node_modules$react$index.Component.call(this$,props,context,updater);\n\nif(cljs.core.truth_(construct)){\n(construct.cljs$core$IFn$_invoke$arity$2 ? construct.cljs$core$IFn$_invoke$arity$2(this$,props) : construct.call(null,this$,props));\n} else {\n}\n\nif(cljs.core.truth_(get_initial_state)){\n(this$.state = (get_initial_state.cljs$core$IFn$_invoke$arity$1 ? get_initial_state.cljs$core$IFn$_invoke$arity$1(this$) : get_initial_state.call(null,this$)));\n} else {\n}\n\n(this$.cljsMountOrder = reagent.impl.batching.next_mount_count());\n\nreturn this$;\n});\ngoog.object.extend(cmp.prototype,module$node_modules$react$index.Component.prototype,methods$);\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.render = new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.reagentRender = new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.cljsLegacyRender = new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\ngoog.object.extend(cmp,module$node_modules$react$index.Component,static_methods);\n\nif(cljs.core.truth_(display_name)){\n(cmp.displayName = display_name);\n\n(cmp.cljs$lang$ctorStr = display_name);\n\n(cmp.cljs$lang$ctorPrWriter = (function (this$,writer,opt){\nreturn cljs.core._write(writer,display_name);\n}));\n} else {\n}\n\n(cmp.cljs$lang$type = true);\n\n(cmp.prototype.constructor = cmp);\n\nreturn cmp;\n});\nreagent.impl.component.cached_react_class = (function reagent$impl$component$cached_react_class(compiler,c){\nreturn goog.object.get(c,reagent.impl.protocols.get_id(compiler));\n});\nreagent.impl.component.cache_react_class = (function reagent$impl$component$cache_react_class(compiler,c,constructor$){\ngoog.object.set(c,reagent.impl.protocols.get_id(compiler),constructor$);\n\nreturn constructor$;\n});\nreagent.impl.component.fn_to_class = (function reagent$impl$component$fn_to_class(compiler,f){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')));\n}\n\nif((!((!(((reagent.impl.component.react_class_QMARK_(f)) && ((!(reagent.impl.component.reagent_class_QMARK_(f)))))))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Using native React classes directly in Hiccup forms \",\"is not supported. Use create-element or \",\"adapt-react-class instead: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4160__auto__ = reagent.impl.util.fun_name(f);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn f;\n}\n})()),reagent.impl.component.comp_name()].join(''));\n} else {\n}\n} else {\n}\n\nif(reagent.impl.component.reagent_class_QMARK_(f)){\nreturn reagent.impl.component.cache_react_class(compiler,f,f);\n} else {\nvar spec = cljs.core.meta(f);\nvar withrender = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(spec,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),f);\nvar res = reagent.impl.component.create_class(withrender,compiler);\nreturn reagent.impl.component.cache_react_class(compiler,f,res);\n}\n});\nreagent.impl.component.as_class = (function reagent$impl$component$as_class(tag,compiler){\nvar temp__5755__auto__ = reagent.impl.component.cached_react_class(compiler,tag);\nif((temp__5755__auto__ == null)){\nreturn reagent.impl.component.fn_to_class(compiler,tag);\n} else {\nvar cached_class = temp__5755__auto__;\nreturn cached_class;\n}\n});\nreagent.impl.component.reactify_component = (function reagent$impl$component$reactify_component(comp,compiler){\nif(reagent.impl.component.react_class_QMARK_(comp)){\nreturn comp;\n} else {\nreturn reagent.impl.component.as_class(comp,compiler);\n}\n});\nreagent.impl.component.functional_wrap_render = (function reagent$impl$component$functional_wrap_render(compiler,c){\nwhile(true){\nvar f = c.reagentRender;\nvar _ = ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')))})());\nvar argv = c.argv;\nvar res = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,argv);\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 = ((reagent.impl.component.reagent_class_QMARK_(res))?((function (compiler,c,f,_,argv,res){\nreturn (function() { \nvar G__71543__delegate = function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__71543 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__71544__i = 0, G__71544__a = new Array(arguments.length -  0);\nwhile (G__71544__i < G__71544__a.length) {G__71544__a[G__71544__i] = arguments[G__71544__i + 0]; ++G__71544__i;}\n  args = new cljs.core.IndexedSeq(G__71544__a,0,null);\n} \nreturn G__71543__delegate.call(this,args);};\nG__71543.cljs$lang$maxFixedArity = 0;\nG__71543.cljs$lang$applyTo = (function (arglist__71545){\nvar args = cljs.core.seq(arglist__71545);\nreturn G__71543__delegate(args);\n});\nG__71543.cljs$core$IFn$_invoke$arity$variadic = G__71543__delegate;\nreturn G__71543;\n})()\n;})(compiler,c,f,_,argv,res))\n:res);\n(c.reagentRender = f__$1);\n\nvar G__71546 = compiler;\nvar G__71547 = c;\ncompiler = G__71546;\nc = G__71547;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.functional_do_render = (function reagent$impl$component$functional_do_render(compiler,c){\nvar _STAR_current_component_STAR__orig_val__71490 = reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__71491 = c;\n(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__temp_val__71491);\n\ntry{var ok = [false];\ntry{var res = reagent.impl.component.functional_wrap_render(compiler,c);\n(ok[(0)] = true);\n\nreturn res;\n}finally {if(cljs.core.truth_((ok[(0)]))){\n} else {\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).error([\"Error rendering component\",reagent.impl.component.comp_name()].join(''));\n} else {\n}\n}\n}\n}finally {(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__orig_val__71490);\n}});\nreagent.impl.component.functional_render = (function reagent$impl$component$functional_render(compiler,jsprops){\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.functional_do_render(compiler,jsprops);\n} else {\nvar argv = jsprops.argv;\nvar tag = jsprops.reagentRender;\nvar vec__71499 = module$node_modules$react$index.useState((0));\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71499,(0),null);\nvar update_count = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71499,(1),null);\nvar state_ref = module$node_modules$react$index.useRef();\nvar ___$1 = (cljs.core.truth_(state_ref.current)?null:(function (){var obj = ({});\n(obj.forceUpdate = (function (){\nreturn (update_count.cljs$core$IFn$_invoke$arity$1 ? update_count.cljs$core$IFn$_invoke$arity$1(cljs.core.inc) : update_count.call(null,cljs.core.inc));\n}));\n\n(obj.cljsMountOrder = reagent.impl.batching.next_mount_count());\n\n(obj.constructor = tag);\n\n(obj.reagentRender = tag);\n\nreturn (state_ref.current = obj);\n})());\nvar reagent_state = state_ref.current;\nvar rat = goog.object.get(reagent_state,\"cljsRatom\");\nmodule$node_modules$react$index.useEffect((function reagent$impl$component$functional_render_$_mount(){\nreturn (function reagent$impl$component$functional_render_$_mount_$_unmount(){\nvar G__71514 = goog.object.get(reagent_state,\"cljsRatom\");\nif((G__71514 == null)){\nreturn null;\n} else {\nreturn reagent.ratom.dispose_BANG_(G__71514);\n}\n});\n}),[]);\n\n(reagent_state.argv = argv);\n\nreagent.impl.batching.mark_rendered(reagent_state);\n\nif((rat == null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.functional_do_render(compiler,reagent_state);\n}),reagent_state,\"cljsRatom\",reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n});\nreagent.impl.component.functional_render_memo_fn = (function reagent$impl$component$functional_render_memo_fn(prev_props,next_props){\nvar old_argv = prev_props.argv;\nvar new_argv = next_props.argv;\nif(reagent.impl.util._STAR_always_update_STAR_ === false){\ntry{return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e71517){var e = e71517;\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Exception thrown while comparing argv's in shouldComponentUpdate: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(''));\n} else {\n}\n\nreturn false;\n}} else {\nreturn false;\n}\n});\n/**\n * Create copy of functional-render with displayName set to name of the\n *   original Reagent component.\n */\nreagent.impl.component.functional_render_fn = (function reagent$impl$component$functional_render_fn(compiler,tag){\nvar or__4160__auto__ = reagent.impl.component.cached_react_class(compiler,tag);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar f = (function (jsprops){\nreturn reagent.impl.component.functional_render(compiler,jsprops);\n});\nvar _ = (f.displayName = reagent.impl.util.fun_name(tag));\nvar f__$1 = module$node_modules$react$index.memo(f,reagent.impl.component.functional_render_memo_fn);\nreagent.impl.component.cache_react_class(compiler,tag,f__$1);\n\nreturn f__$1;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/component.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",27],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",["^ ","~$dev?","~$reagent.debug","~$warn","^P","~$error","^P","~$warn-unless","^P","~$assert-callable","^P"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.component","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^11","~$reagent.impl.protocols","^12","~$p","^12","~$reagent.ratom","^13","^B","^C","~$cljs.core","^14","^C","^C","~$gobj","~$goog.object","~$goog","^17","^16","^16","~$reagent.impl.batching","^18","~$util","^11","~$ratom","^13","~$batch","^18","^P","^P"],"~:seen",["^V",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P","^14","^14","^13","^13","^1:","^13"],"~:form",["~#list",["~$ns","^X",["^1A",["^1=",["^16","~:as","^15"],["^B","^1C","^B"],["^11","^1C","^19"],["^18","^1C","^1;"],["^12","^1C","~$p"],["^13","^1C","^1:"],["^P","~:refer-macros",["^O","^Q","^R","^S","^T"]]]]]],"~:flags",["^ ","^1=",["^V",[]]],"~:js-deps",["^ "],"~:deps",["^17","^14","^16","^C","^11","^18","^12","^13","^P"]],"^Z","^X","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/component.cljs"],"~:compiled-at",1621210453078,"~:resource-name","reagent/impl/component.cljs","~:warnings",[],"~:source","(ns reagent.impl.component\n  (:require [goog.object :as gobj]\n            [react :as react]\n            [reagent.impl.util :as util]\n            [reagent.impl.batching :as batch]\n            [reagent.impl.protocols :as p]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dev? warn error warn-unless assert-callable]]))\n\n(declare ^:dynamic *current-component*)\n\n\n;;; Argv access\n\n(defn extract-props [v]\n  (let [p (nth v 1 nil)]\n    (if (map? p) p)))\n\n(defn extract-children [v]\n  (let [p (nth v 1 nil)\n        first-child (if (or (nil? p) (map? p)) 2 1)]\n    (if (> (count v) first-child)\n      (subvec v first-child))))\n\n(defn props-argv [^js/React.Component c p]\n  (if-some [a (.-argv p)]\n    a\n    [(.-constructor c) (util/shallow-obj-to-map p)]))\n\n(defn get-argv [^js/React.Component c]\n  (props-argv c (.-props c)))\n\n(defn get-props [^js/React.Component c]\n  (let [p (.-props c)]\n    (if-some [v (.-argv p)]\n      (extract-props v)\n      (util/shallow-obj-to-map p))))\n\n(defn get-children [^js/React.Component c]\n  (let [p (.-props c)]\n    (if-some [v (.-argv p)]\n      (extract-children v)\n      (->> (.-children p)\n           (react/Children.toArray)\n           (into [])))))\n\n(defn ^boolean reagent-class? [c]\n  (and (fn? c)\n       (some? (some-> c (.-prototype) (.-reagentRender)))))\n\n(defn ^boolean react-class? [c]\n  (and (fn? c)\n       (some? (some-> c (.-prototype) (.-render)))))\n\n(defn ^boolean reagent-component? [^clj c]\n  (some? (.-reagentRender c)))\n\n;;; State\n\n(defn state-atom [^clj this]\n  (let [sa (.-cljsState this)]\n    (if-not (nil? sa)\n      sa\n      (set! (.-cljsState this) (ratom/atom nil)))))\n\n;;; Rendering\n\n(defn wrap-render\n  \"Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`\"\n  [^clj c compiler]\n  (let [f (.-reagentRender c)\n        _ (assert-callable f)\n        ;; cljsLegacyRender tells if this calls was defined\n        ;; using :render instead of :reagent-render\n        ;; in that case, the :render fn is called with just `this` as argument.\n        res (if (true? (.-cljsLegacyRender c))\n              (.call f c c)\n              (let [v (get-argv c)\n                    n (count v)]\n                (case n\n                  1 (.call f c)\n                  2 (.call f c (nth v 1))\n                  3 (.call f c (nth v 1) (nth v 2))\n                  4 (.call f c (nth v 1) (nth v 2) (nth v 3))\n                  5 (.call f c (nth v 1) (nth v 2) (nth v 3) (nth v 4))\n                  (.apply f c (.slice (into-array v) 1)))))]\n    (cond\n      (vector? res) (p/as-element compiler res)\n      (ifn? res) (let [f (if (reagent-class? res)\n                           (fn [& args]\n                             (p/as-element compiler (apply vector res args)))\n                           res)]\n                   (set! (.-reagentRender c) f)\n                   (recur c compiler))\n      :else res)))\n\n(defn component-name [c]\n  (or (some-> c .-constructor .-displayName)\n      (some-> c .-constructor .-name)))\n\n(defn comp-name []\n  (if (dev?)\n    (let [c *current-component*\n          n (component-name c)]\n      (if-not (empty? n)\n        (str \" (in \" n \")\")\n        \"\"))\n    \"\"))\n\n(defn do-render [c compiler]\n  (binding [*current-component* c]\n    (if (dev?)\n      ;; Log errors, without using try/catch (and mess up call stack)\n      (let [ok (array false)]\n        (try\n          (let [res (wrap-render c compiler)]\n            (aset ok 0 true)\n            res)\n          (finally\n            (when-not (aget ok 0)\n              (error (str \"Error rendering component\"\n                          (comp-name)))))))\n      (wrap-render c compiler))))\n\n\n;;; Method wrapping\n\n(def rat-opts {:no-cache true})\n\n(defn custom-wrapper [key f]\n  (case key\n    :getDefaultProps\n    (throw (js/Error. \"getDefaultProps not supported\"))\n\n    :getDerivedStateFromProps\n    (fn getDerivedStateFromProps [props state]\n      ;; Read props from Reagent argv\n      (.call f nil (if-some [a (.-argv props)] (extract-props a) props) state))\n\n    ;; In ES6 React, this is now part of the constructor\n    :getInitialState\n    (fn getInitialState [c]\n      (reset! (state-atom c) (.call f c c)))\n\n    :getSnapshotBeforeUpdate\n    (fn getSnapshotBeforeUpdate [oldprops oldstate]\n      (this-as c (.call f c c (props-argv c oldprops) oldstate)))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillReceiveProps\n    (fn componentWillReceiveProps [nextprops]\n      (this-as c (.call f c c (props-argv c nextprops))))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillReceiveProps\n    (fn componentWillReceiveProps [nextprops]\n      (this-as c (.call f c c (props-argv c nextprops))))\n\n    :shouldComponentUpdate\n    (fn shouldComponentUpdate [nextprops nextstate]\n      (or util/*always-update*\n          (this-as c\n                   ;; Don't care about nextstate here, we use forceUpdate\n                   ;; when only when state has changed anyway.\n                   (let [old-argv (.. c -props -argv)\n                         new-argv (.-argv nextprops)\n                         noargv (or (nil? old-argv) (nil? new-argv))]\n                     (cond\n                       (nil? f) (or noargv (try (not= old-argv new-argv)\n                                                (catch :default e\n                                                  (warn \"Exception thrown while comparing argv's in shouldComponentUpdate: \" old-argv \" \" new-argv \" \" e)\n                                                  false)))\n                       noargv (.call f c c (get-argv c) (props-argv c nextprops))\n                       :else  (.call f c c old-argv new-argv))))))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillUpdate\n    (fn componentWillUpdate [nextprops nextstate]\n      (this-as c (.call f c c (props-argv c nextprops) nextstate)))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillUpdate\n    (fn componentWillUpdate [nextprops nextstate]\n      (this-as c (.call f c c (props-argv c nextprops) nextstate)))\n\n    :componentDidUpdate\n    (fn componentDidUpdate [oldprops oldstate snapshot]\n      (this-as c (.call f c c (props-argv c oldprops) oldstate snapshot)))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillMount\n    (fn componentWillMount []\n      (this-as c (.call f c c)))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillMount\n    (fn componentWillMount []\n      (this-as c (.call f c c)))\n\n    :componentDidMount\n    (fn componentDidMount []\n      (this-as c (.call f c c)))\n\n    :componentWillUnmount\n    (fn componentWillUnmount []\n      (this-as c\n               (some-> (gobj/get c \"cljsRatom\") ratom/dispose!)\n               (batch/mark-rendered c)\n               (when-not (nil? f)\n                 (.call f c c))))\n\n    :componentDidCatch\n    (fn componentDidCatch [error info]\n      (this-as c (.call f c c error info)))\n\n    nil))\n\n(defn get-wrapper [key f]\n  (let [wrap (custom-wrapper key f)]\n    (when (and wrap f)\n      (assert-callable f))\n    (or wrap f)))\n\n;; Though the value is nil here, the wrapper function will be\n;; added to class to manage Reagent ratom lifecycle.\n(def obligatory {:shouldComponentUpdate nil\n                 :componentWillUnmount nil})\n\n(def dash-to-method-name (util/memoize-1 util/dash-to-method-name))\n\n(defn camelify-map-keys [fun-map]\n  (reduce-kv (fn [m k v]\n               (assoc m (-> k dash-to-method-name keyword) v))\n             {} fun-map))\n\n(defn add-obligatory [fun-map]\n  (merge obligatory fun-map))\n\n(defn wrap-funs [fmap compiler]\n  (when (dev?)\n    (let [renders (select-keys fmap [:render :reagentRender])\n          render-fun (-> renders vals first)]\n      (assert (not (:componentFunction fmap)) \":component-function is no longer supported, use :reagent-render instead.\")\n      (assert (pos? (count renders)) \"Missing reagent-render\")\n      (assert (== 1 (count renders)) \"Too many render functions supplied\")\n      (assert-callable render-fun)))\n  (let [render-fun (or (:reagentRender fmap)\n                       (:render fmap))\n        legacy-render (nil? (:reagentRender fmap))\n        name (or (:displayName fmap)\n                 (util/fun-name render-fun)\n                 (str (gensym \"reagent\")))\n        fmap (reduce-kv (fn [m k v]\n                          (assoc m k (get-wrapper k v)))\n                        {} fmap)]\n    (assoc fmap\n           :displayName name\n           :cljsLegacyRender legacy-render\n           :reagentRender render-fun\n           :render (fn render []\n                     (this-as c (if util/*non-reactive*\n                                  (do-render c compiler)\n                                  (let [^clj rat (gobj/get c \"cljsRatom\")]\n                                    (batch/mark-rendered c)\n                                    (if (nil? rat)\n                                      (ratom/run-in-reaction #(do-render c compiler) c \"cljsRatom\"\n                                                             batch/queue-render rat-opts)\n                                      (._run rat false)))))))))\n\n(defn map-to-js [m]\n  (reduce-kv (fn [o k v]\n               (doto o\n                 (gobj/set (name k) v)))\n             #js{} m))\n\n(defn cljsify [body compiler]\n  (-> body\n      camelify-map-keys\n      add-obligatory\n      (wrap-funs compiler)))\n\n;; Idea from:\n;; https://gist.github.com/pesterhazy/2a25c82db0519a28e415b40481f84554\n;; https://gist.github.com/thheller/7f530b34de1c44589f4e0671e1ef7533#file-es6-class-cljs-L18\n\n(def built-in-static-method-names\n  [:childContextTypes :contextTypes :contextType\n   :getDerivedStateFromProps :getDerivedStateFromError])\n\n(defn create-class\n  \"Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics.\"\n  [body compiler]\n  {:pre [(map? body)]}\n  (let [body (cljsify body compiler)\n        methods (map-to-js (apply dissoc body :displayName :getInitialState :constructor\n                                  :render :reagentRender\n                                  built-in-static-method-names))\n        static-methods (map-to-js (select-keys body built-in-static-method-names))\n        display-name (:displayName body)\n        get-initial-state (:getInitialState body)\n        construct (:constructor body)\n        cmp (fn [props context updater]\n              (this-as ^clj this\n                (.call react/Component this props context updater)\n                (when construct\n                  (construct this props))\n                (when get-initial-state\n                  (set! (.-state this) (get-initial-state this)))\n                (set! (.-cljsMountOrder this) (batch/next-mount-count))\n                this))]\n\n    (gobj/extend (.-prototype cmp) (.-prototype react/Component) methods)\n\n    ;; These names SHOULD be mangled by Closure so we can't use goog/extend\n\n    (when (:render body)\n      (set! (.-render ^js (.-prototype cmp)) (:render body)))\n\n    (when (:reagentRender body)\n      (set! (.-reagentRender ^clj (.-prototype cmp)) (:reagentRender body)))\n\n    (when (:cljsLegacyRender body)\n      (set! (.-cljsLegacyRender ^clj (.-prototype cmp)) (:cljsLegacyRender body)))\n\n    (gobj/extend cmp react/Component static-methods)\n\n    (when display-name\n      (set! (.-displayName cmp) display-name)\n      (set! (.-cljs$lang$ctorStr cmp) display-name)\n      (set! (.-cljs$lang$ctorPrWriter cmp)\n            (fn [this writer opt]\n              (cljs.core/-write writer display-name))))\n\n    (set! (.-cljs$lang$type cmp) true)\n    (set! (.. cmp -prototype -constructor) cmp)\n\n    cmp))\n\n;; Cache result to the tag but per compiler ID\n;; TODO: Generate cache & get methods to the Object using macro,\n;; can generate code calling interop forms.\n(defn cached-react-class [compiler ^clj c]\n  (gobj/get c (p/get-id compiler)))\n\n(defn cache-react-class [compiler ^clj c constructor]\n  (gobj/set c (p/get-id compiler) constructor)\n  constructor)\n\n(defn fn-to-class [compiler f]\n  (assert-callable f)\n  (warn-unless (not (and (react-class? f)\n                         (not (reagent-class? f))))\n               \"Using native React classes directly in Hiccup forms \"\n               \"is not supported. Use create-element or \"\n               \"adapt-react-class instead: \" (or (util/fun-name f)\n                                                 f)\n               (comp-name))\n  (if (reagent-class? f)\n    (cache-react-class compiler f f)\n    (let [spec (meta f)\n          withrender (assoc spec :reagent-render f)\n          res (create-class withrender compiler)]\n      (cache-react-class compiler f res))))\n\n(defn as-class [tag compiler]\n  (if-some [cached-class (cached-react-class compiler tag)]\n    cached-class\n    (fn-to-class compiler tag)))\n\n(defn reactify-component [comp compiler]\n  (if (react-class? comp)\n    comp\n    (as-class comp compiler)))\n\n(defn functional-wrap-render\n  [compiler ^clj c]\n  (let [f (.-reagentRender c)\n        _ (assert-callable f)\n        argv (.-argv c)\n        res (apply f argv)]\n    (cond\n      (vector? res) (p/as-element compiler res)\n      (ifn? res) (let [f (if (reagent-class? res)\n                           (fn [& args]\n                             (p/as-element compiler (apply vector res args)))\n                           res)]\n                   (set! (.-reagentRender c) f)\n                   (recur compiler c))\n      :else res)))\n\n(defn functional-do-render [compiler c]\n  (binding [*current-component* c]\n    (if (dev?)\n      ;; Log errors, without using try/catch (and mess up call stack)\n      (let [ok (array false)]\n        (try\n          (let [res (functional-wrap-render compiler c)]\n            (aset ok 0 true)\n            res)\n          (finally\n            (when-not (aget ok 0)\n              (error (str \"Error rendering component\" (comp-name)))))))\n      (functional-wrap-render compiler c))))\n\n(defn functional-render [compiler ^clj jsprops]\n  (if util/*non-reactive*\n    ;; Non-reactive component needs just the render fn and argv\n    (functional-do-render compiler jsprops)\n    (let [argv (.-argv jsprops)\n          tag (.-reagentRender jsprops)\n\n          ;; Use counter to trigger render manually.\n          [_ update-count] (react/useState 0)\n\n          ;; This object mimics React Class attributes and methods.\n          ;; To support form-2 components, even the render fn needs to\n          ;; be stored as it is created during the first render,\n          ;; and subsequent renders need to retrieve the created fn.\n          state-ref (react/useRef)\n\n          _ (when-not (.-current state-ref)\n              (let [obj #js {}]\n                (set! (.-forceUpdate obj) (fn [] (update-count inc)))\n                (set! (.-cljsMountOrder obj) (batch/next-mount-count))\n                ;; Use reagentRender name, as that is also used\n                ;; by class components, and some checks.\n                ;; reagentRender is replaced with form-2 inner fn,\n                ;; constructor refers to the original fn.\n                (set! (.-constructor obj) tag)\n                (set! (.-reagentRender obj) tag)\n\n                (set! (.-current state-ref) obj)))\n\n          reagent-state (.-current state-ref)\n\n          ;; FIXME: Access cljsRatom using interop forms\n          rat ^ratom/Reaction (gobj/get reagent-state \"cljsRatom\")]\n\n      (react/useEffect\n        (fn mount []\n          (fn unmount []\n            (some-> (gobj/get reagent-state \"cljsRatom\") ratom/dispose!)))\n        ;; Ignore props - only run effect once on mount and unmount\n        #js [])\n\n      ;; Argv is also stored in the state,\n      ;; so reaction fn will always see the latest value.\n      (set! (.-argv reagent-state) argv)\n\n      (batch/mark-rendered reagent-state)\n\n      ;; static-fns :render\n      (if (nil? rat)\n        (ratom/run-in-reaction\n          ;; Mock Class component API\n          #(functional-do-render compiler reagent-state)\n          reagent-state\n          \"cljsRatom\"\n          batch/queue-render\n          rat-opts)\n        ;; TODO: Consider passing props here, instead of keeping them in state?\n        (._run rat false)))))\n\n(defn functional-render-memo-fn\n  [prev-props next-props]\n  (let [old-argv (.-argv prev-props)\n        new-argv (.-argv next-props)]\n    (and (false? util/*always-update*)\n         (try\n           (= old-argv new-argv)\n           (catch :default e\n             (warn \"Exception thrown while comparing argv's in shouldComponentUpdate: \" old-argv \" \" new-argv \" \" e)\n             false)))))\n\n(defn functional-render-fn\n  \"Create copy of functional-render with displayName set to name of the\n  original Reagent component.\"\n  [compiler tag]\n  ;; TODO: Could be disabled for optimized builds?\n  ;; Or not currently - the memo wrap is required.\n  (or (cached-react-class compiler tag)\n      (let [f (fn [jsprops] (functional-render compiler jsprops))\n            _ (set! (.-displayName f) (util/fun-name tag))\n            f (react/memo f functional-render-memo-fn)]\n        (cache-react-class compiler tag f)\n        f)))\n","~:reader-features",["^V",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.component/extract-props","v","p","cljs.core.nth","cljs.core/map?","reagent.impl.component/extract-children","first-child","cljs.core/count","cljs.core.subvec","reagent.impl.component/props-argv","c","temp__5755__auto__","a","reagent.impl.util/shallow-obj-to-map","reagent.impl.component/get-argv","reagent.impl.component/get-props","reagent.impl.component/get-children","js/module$node_modules$react$index.Children.toArray","cljs.core.into","reagent.impl.component/reagent-class?","cljs.core/fn?","G__71340","reagent.impl.component/react-class?","G__71343","reagent.impl.component/reagent-component?","reagent.impl.component/state-atom","this","sa","reagent.ratom.atom","reagent.impl.component/wrap-render","compiler","f","_","cljs.core/ifn?","js/Error","cljs.core.pr_str","res","n","G__71349","cljs.core.into_array","cljs.core/vector?","reagent.impl.protocols/as-element","args","cljs.core.apply","cljs.core/vector","reagent.impl.component/component-name","or__4160__auto__","G__71353","G__71354","reagent.impl.component/comp-name","reagent.impl.component/*current-component*","cljs.core/empty?","reagent.impl.component/do-render","*current-component*-orig-val__71356","*current-component*-temp-val__71357","ok","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","reagent.impl.component/rat-opts","reagent.impl.component/custom-wrapper","key","G__71361","cljs.core/Keyword","props","state","cljs.core/reset!","oldprops","oldstate","nextprops","nextstate","reagent.impl.util/*always-update*","old-argv","new-argv","noargv","e71366","cljs.core.not_EQ_","e","snapshot","G__71402","goog.object/get","reagent.ratom/dispose!","reagent.impl.batching/mark-rendered","error","info","reagent.impl.component/get-wrapper","wrap","and__4149__auto__","reagent.impl.component/obligatory","reagent.impl.component/dash-to-method-name","reagent.impl.util/memoize-1","reagent.impl.util/dash-to-method-name","reagent.impl.component/camelify-map-keys","fun-map","cljs.core/reduce-kv","m","k","cljs.core.assoc","cljs.core.keyword","reagent.impl.component/add-obligatory","cljs.core.merge","reagent.impl.component/wrap-funs","fmap","renders","cljs.core/select-keys","render-fun","cljs.core/vals","cljs.core/first","cljs.core/not","legacy-render","name","reagent.impl.util/fun-name","cljs.core.gensym","reagent.impl.util/*non-reactive*","rat","reagent.ratom/run-in-reaction","reagent.impl.batching/queue-render","reagent.impl.component/map-to-js","o","G__71441","goog.object/set","cljs.core/name","reagent.impl.component/cljsify","body","reagent.impl.component/built-in-static-method-names","reagent.impl.component/create-class","methods","cljs.core/dissoc","static-methods","display-name","get-initial-state","construct","cmp","context","updater","js/module$node_modules$react$index.Component","reagent.impl.batching/next-mount-count","goog.object/extend","writer","opt","cljs.core/-write","reagent.impl.component/cached-react-class","reagent.impl.protocols/get-id","reagent.impl.component/cache-react-class","constructor","reagent.impl.component/fn-to-class","spec","cljs.core/meta","withrender","reagent.impl.component/as-class","tag","cached-class","reagent.impl.component/reactify-component","comp","reagent.impl.component/functional-wrap-render","argv","reagent.impl.component/functional-do-render","*current-component*-orig-val__71490","*current-component*-temp-val__71491","reagent.impl.component/functional-render","jsprops","vec__71499","update-count","js/module$node_modules$react$index.useState","state-ref","js/module$node_modules$react$index.useRef","obj","cljs.core/inc","reagent-state","js/module$node_modules$react$index.useEffect","G__71514","reagent.impl.component/functional-render-memo-fn","prev-props","next-props","e71517","cljs.core._EQ_","reagent.impl.component/functional-render-fn","js/module$node_modules$react$index.memo"]],"~:used-vars",["^V",["~$reagent.impl.component/as-class","~$reagent.impl.component/get-children","~$cljs.core/keyword","~$reagent.impl.component/extract-props","~$reagent.impl.component/camelify-map-keys","~$reagent.impl.component/custom-wrapper","~$cljs.core/vector?","~$cljs.core/=","~$reagent.impl.component/map-to-js","~$cljs.core/ifn?","~$reagent.impl.batching/queue-render","~$cljs.core/-write","~$reagent.impl.component/cached-react-class","~$reagent.impl.component/reagent-component?","~$cljs.core/count","~$reagent.impl.component/dash-to-method-name","~$reagent.impl.component/functional-render-fn","~$reagent.impl.util/*non-reactive*","~$reagent.impl.protocols/get-id","~$cljs.core/not=","~$reagent.impl.component/functional-render","~$reagent.debug/has-console","~$cljs.core/pr-str","~$reagent.impl.component/comp-name","~$js/console","~$reagent.impl.component/wrap-funs","~$reagent.impl.component/extract-children","~$reagent.impl.util/shallow-obj-to-map","~$cljs.core/empty?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$reagent.ratom/dispose!","~$reagent.impl.component/functional-do-render","~$reagent.impl.batching/mark-rendered","~$cljs.core/fn?","~$reagent.impl.component/rat-opts","~$reagent.impl.component/component-name","~$reagent.impl.component/cache-react-class","~$reagent.impl.component/do-render","~$goog.object/set","~$reagent.debug/tracking","~$reagent.impl.component/functional-render-memo-fn","~$reagent.impl.util/*always-update*","~$reagent.impl.component/cljsify","~$js/module$node_modules$react$index.Children.toArray","~$reagent.debug/track-console","~$cljs.core/subvec","~$reagent.impl.component/create-class","~$reagent.impl.component/functional-wrap-render","~$reagent.impl.component/get-argv","~$reagent.ratom/run-in-reaction","~$reagent.impl.component/react-class?","~$reagent.impl.util/memoize-1","~$reagent.impl.util/dash-to-method-name","~$reagent.impl.component/built-in-static-method-names","~$reagent.impl.component/fn-to-class","~$reagent.impl.component/reactify-component","~$cljs.core/not","~$reagent.impl.component/reagent-class?","~$reagent.impl.component/props-argv","~$cljs.core/assoc","~$reagent.impl.component/obligatory","~$goog.object/extend","~$reagent.impl.component/*current-component*","~$js/module$node_modules$react$index.useEffect","~$reagent.impl.component/get-props","~$cljs.core/reduce-kv","~$reagent.impl.protocols/as-element","~$reagent.impl.component/get-wrapper","~$reagent.impl.component/add-obligatory","~$reagent.impl.component/wrap-render","~$js/module$node_modules$react$index.Component","~$reagent.ratom/atom","~$cljs.core/name","~$cljs.core/merge","~$js/Error","~$reagent.impl.component/state-atom","~$goog.object/get"]]],"~:cache-keys",["~#cmap",[["^1I","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^V",[]],"~:deps-syms",["^17","^14","^P","^11"]]],["^1I","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","~$goog.dom.HtmlElement"]]],["^1I","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","~$goog.array","~$goog.asserts"]]],["^1I","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3S","~$goog.labs.userAgent.util","^16","~$goog.string.internal"]]],["^1I","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3V"]]],["^1I","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T"]]],["^1I","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^14","~$clojure.string","~$clojure.walk","^16","^P"]]],["^1I","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^14","^11","^P","^18","~$clojure.set","^16"]]],["^1I","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1I","shadow/js.js"],["e789e354d6afe7fd62e5f7505a5a195575db182b","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^44","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^45","~$module$node_modules$object_assign$index"]]],["^1I","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T","~$goog.reflect"]]],["^1I","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T","~$goog.fs.blob","^3W","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3Y","^3Z","^3[","^40"]]],["^1I","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3S","^3T","~$goog.html.SafeUrl","^3[","^40","^3V"]]],["^1I","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4<","~$goog.html.SafeStyle","^4>","^3X","~$goog.html.uncheckedconversions","^3[","^3V"]]],["^1I","reagent/impl/component.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^14","^16","^C","^11","^18","^12","^13","^P"]]],["^1I","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^14"]]],["^1I","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1I","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3S","^3T","~$goog.dom.TagName","~$goog.dom.tags","^4<","^4B","~$goog.html.SafeStyleSheet","^4>","^3X","^4=","^3Y","^3Z","~$goog.labs.userAgent.browser","^16","^3[","^40","^3V"]]],["^1I","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^16"]]],["^1I","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3S"]]],["^1I","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1I","reagent/impl/protocols.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^14"]]],["^1I","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3S","^3T","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1I","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^44","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","519ffd5a4c91b67302cc9947b794966d629860cd","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^45"]]],["^1I","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",[]]],["^1I","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3S","^16"]]],["^1I","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^14","^4L","~$goog.string.StringBuffer"]]],["^44","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","6093d43b27c84de58b9ce55e3a930469339c9e54","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^45","^49"]]],["^1I","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","~$goog.dom.safe","^4C","^3[","^3V"]]],["^1I","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3V"]]],["^1I","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3S","^3T","^4@","~$goog.math"]]],["^1I","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T","^4A","^4<","^4B","^4H","^4>","^3X","^3[","^3V","^3Y"]]],["^1I","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17"]]],["^1I","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","~$goog.math.Long","~$goog.math.Integer","^4L","^16","^3S","~$goog.Uri","^4R"]]],["^1I","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3[","^40","^4=","^3T"]]],["^1I","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^14"]]],["^1I","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3[","^4B","^40","^3S","^16","^3T","^3V"]]],["^1I","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^4:"]]],["^1I","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^14"]]],["^1I","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T","^4L"]]],["^1I","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3N",["^ ","^3O",null,"^3P",["^V",[]],"^3Q",["^17","^3T","^40"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1618720871000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1618720871000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1618720871000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/component.cljs","^7",1,"^8",5,"^9",1,"^:",27],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M"],"^N",["^ ","^O","^P","^Q","^P","^R","^P","^S","^P","^T","^P"],"^U",["^V",[]],"~:shadow/js-access-properties",["^V",["useRef","Children.toArray","Component","useEffect","useState","memo"]],"^W","^X","^[",null,"^10",["^ ","^11","^11","^12","^12","~$p","^12","^13","^13","^B","^C","^14","^14","^C","^C","^15","^16","^17","^17","^16","^16","^18","^18","^19","^11","^1:","^13","^1;","^18","^P","^P"],"^1<",["^V",["^1="]],"~:shadow/js-access-global",["^V",["Error"]],"^1>",null,"~:defs",["^ ","~$get-props",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",33,"^8",7,"^9",33,"^:",16,"~:arglists",["^1A",["~$quote",["^1A",[["~$c"]]]]]],"^W","^3?","^6","reagent/impl/component.cljs","^:",16,"~:method-params",["^1A",[["~$c"]]],"~:protocol-impl",null,"~:arglists-meta",["^1A",[null,null]],"^8",1,"~:variadic?",false,"^7",33,"~:ret-tag",["^V",[null,"~$any","~$clj-nil"]],"^9",33,"~:max-fixed-arity",1,"~:fn-var",true,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"~$get-wrapper",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",223,"^8",7,"^9",223,"^:",18,"^5Q",["^1A",["^5R",["^1A",[["~$key","~$f"]]]]]],"^W","^3B","^6","reagent/impl/component.cljs","^:",18,"^5S",["^1A",[["^61","~$f"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",223,"^5W",["^V",[null,"^5X"]],"^9",223,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^61","~$f"]]]]]],"~$get-argv",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",30,"^8",7,"^9",30,"^:",15,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"^W","^2[","^6","reagent/impl/component.cljs","^:",15,"^5S",["^1A",[["~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",30,"^5W",["^V",["~$cljs.core/IVector","^5X"]],"^9",30,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"~$wrap-render",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",68,"^8",7,"^9",68,"^:",18,"^5Q",["^1A",["^5R",["^1A",[["~$c","~$compiler"]]]]],"~:doc","Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`"],"^W","^3D","^6","reagent/impl/component.cljs","^:",18,"^5S",["^1A",[["~$c","^65"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",68,"^5W",["^V",[null,"^5X"]],"^9",68,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c","^65"]]]]],"^66","Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`"],"~$rat-opts",["^ ","^W","^2M","^6","reagent/impl/component.cljs","^7",133,"^8",1,"^9",133,"^:",14,"^5",["^ ","^6","reagent/impl/component.cljs","^7",133,"^8",6,"^9",133,"^:",14],"~:tag","~$cljs.core/IMap"],"~$obligatory",["^ ","^W","^3;","^6","reagent/impl/component.cljs","^7",231,"^8",1,"^9",231,"^:",16,"^5",["^ ","^6","reagent/impl/component.cljs","^7",231,"^8",6,"^9",231,"^:",16],"^68","^69"],"~$props-argv",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",25,"^8",7,"^9",25,"^:",17,"^5Q",["^1A",["^5R",["^1A",[["~$c","~$p"]]]]]],"^W","^39","^6","reagent/impl/component.cljs","^:",17,"^5S",["^1A",[["~$c","~$p"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",25,"^5W",["^V",["^63","^5X"]],"^9",25,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c","~$p"]]]]]],"~$built-in-static-method-names",["^ ","^W","^34","^6","reagent/impl/component.cljs","^7",291,"^8",1,"^9",291,"^:",34,"^5",["^ ","^6","reagent/impl/component.cljs","^7",291,"^8",6,"^9",291,"^:",34],"^68","^63"],"~$do-render",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",115,"^8",7,"^9",115,"^:",16,"^5Q",["^1A",["^5R",["^1A",[["~$c","^65"]]]]]],"^W","^2P","^6","reagent/impl/component.cljs","^:",16,"^5S",["^1A",[["~$c","^65"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",115,"^9",115,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c","^65"]]]]]],"~$comp-name",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",106,"^8",7,"^9",106,"^:",16,"^5Q",["^1A",["^5R",["^1A",[[]]]]]],"^W","^2@","^6","reagent/impl/component.cljs","^:",16,"^5S",["^1A",[[]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",106,"^5W","~$string","^9",106,"^5Z",0,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[[]]]]]],"~$add-obligatory",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",241,"^8",7,"^9",241,"^:",21,"^5Q",["^1A",["^5R",["^1A",[["~$fun-map"]]]]]],"^W","^3C","^6","reagent/impl/component.cljs","^:",21,"^5S",["^1A",[["^6A"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",241,"^5W",["^V",["^5X","^5Y"]],"^9",241,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^6A"]]]]]],"~$cached-react-class",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",353,"^8",7,"^9",353,"^:",25,"^5Q",["^1A",["^5R",["^1A",[["^65","~$c"]]]]]],"^W","^25","^6","reagent/impl/component.cljs","^:",25,"^5S",["^1A",[["^65","~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",353,"^5W","^5X","^9",353,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^65","~$c"]]]]]],"~$state-atom",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",60,"^8",7,"^9",60,"^:",17,"^5Q",["^1A",["^5R",["^1A",[["~$this"]]]]]],"^W","^3J","^6","reagent/impl/component.cljs","^:",17,"^5S",["^1A",[["^6D"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",60,"^5W",["^V",[null,"^5X"]],"^9",60,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^6D"]]]]]],"~$functional-wrap-render",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",386,"^8",7,"^9",386,"^:",29,"^5Q",["^1A",["^5R",["^1A",[["^65","~$c"]]]]]],"^W","^2Z","^6","reagent/impl/component.cljs","^:",29,"^5S",["^1A",[["^65","~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",386,"^5W","^5X","^9",386,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^65","~$c"]]]]]],"~$reagent-component?",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",55,"^8",16,"^9",55,"^:",34,"^68","~$boolean","^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"^W","^26","^6","reagent/impl/component.cljs","^:",34,"^5S",["^1A",[["~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",55,"^5W","^6G","^9",55,"^5Z",1,"^68","^6G","^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"~$as-class",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",376,"^8",7,"^9",376,"^:",15,"^5Q",["^1A",["^5R",["^1A",[["~$tag","^65"]]]]]],"^W","^1U","^6","reagent/impl/component.cljs","^:",15,"^5S",["^1A",[["^6I","^65"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",376,"^5W","^5X","^9",376,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^6I","^65"]]]]]],"~$dash-to-method-name",["^ ","^W","^28","^6","reagent/impl/component.cljs","^7",234,"^8",1,"^9",234,"^:",25,"^5",["^ ","^6","reagent/impl/component.cljs","^7",234,"^8",6,"^9",234,"^:",25],"^68","~$function"],"~$reagent-class?",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",47,"^8",16,"^9",47,"^:",30,"^68","^6G","^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"^W","^38","^6","reagent/impl/component.cljs","^:",30,"^5S",["^1A",[["~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",47,"^5W","^6G","^9",47,"^5Z",1,"^68","^6G","^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"~$functional-render-memo-fn",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",475,"^8",7,"^9",475,"^:",32,"^5Q",["^1A",["^5R",["^1A",[["~$prev-props","~$next-props"]]]]]],"^W","^2S","^6","reagent/impl/component.cljs","^:",32,"^5S",["^1A",[["^6N","^6O"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",475,"^5W",["^V",[null,"^6G"]],"^9",475,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^6N","^6O"]]]]]],"~$fn-to-class",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",360,"^8",7,"^9",360,"^:",18,"^5Q",["^1A",["^5R",["^1A",[["^65","~$f"]]]]]],"^W","^35","^6","reagent/impl/component.cljs","^:",18,"^5S",["^1A",[["^65","~$f"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",360,"^5W","^5X","^9",360,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^65","~$f"]]]]]],"~$reactify-component",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",381,"^8",7,"^9",381,"^:",25,"^5Q",["^1A",["^5R",["^1A",[["~$comp","^65"]]]]]],"^W","^36","^6","reagent/impl/component.cljs","^:",25,"^5S",["^1A",[["^6R","^65"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",381,"^5W",["^V",[null,"^5X"]],"^9",381,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^6R","^65"]]]]]],"~$map-to-js",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",275,"^8",7,"^9",275,"^:",16,"^5Q",["^1A",["^5R",["^1A",[["~$m"]]]]]],"^W","^21","^6","reagent/impl/component.cljs","^:",16,"^5S",["^1A",[["~$m"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",275,"^5W",["^V",[null,"^5X"]],"^9",275,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$m"]]]]]],"~$component-name",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",102,"^8",7,"^9",102,"^:",21,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"^W","^2N","^6","reagent/impl/component.cljs","^:",21,"^5S",["^1A",[["~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",102,"^5W",["^V",["^5X","^5Y"]],"^9",102,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"~$extract-children",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",19,"^8",7,"^9",19,"^:",23,"^5Q",["^1A",["^5R",["^1A",[["~$v"]]]]]],"^W","^2C","^6","reagent/impl/component.cljs","^:",23,"^5S",["^1A",[["~$v"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",19,"^5W",["^V",["^5X","^5Y"]],"^9",19,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$v"]]]]]],"~$functional-render",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",416,"^8",7,"^9",416,"^:",24,"^5Q",["^1A",["^5R",["^1A",[["^65","~$jsprops"]]]]]],"^W","^2=","^6","reagent/impl/component.cljs","^:",24,"^5S",["^1A",[["^65","^6W"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",416,"^5W","^5X","^9",416,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^65","^6W"]]]]]],"~$functional-do-render",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",402,"^8",7,"^9",402,"^:",27,"^5Q",["^1A",["^5R",["^1A",[["^65","~$c"]]]]]],"^W","^2J","^6","reagent/impl/component.cljs","^:",27,"^5S",["^1A",[["^65","~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",402,"^9",402,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^65","~$c"]]]]]],"~$extract-props",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",15,"^8",7,"^9",15,"^:",20,"^5Q",["^1A",["^5R",["^1A",[["~$v"]]]]]],"^W","^1X","^6","reagent/impl/component.cljs","^:",20,"^5S",["^1A",[["~$v"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",15,"^5W",["^V",[null,"^5X","^5Y"]],"^9",15,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$v"]]]]]],"~$*current-component*",["^ ","^5",["^ ","^6","reagent/impl/component.cljs","^7",10,"^8",20,"^9",10,"^:",39,"~:dynamic",true,"~:declared",true],"^W","^3=","^6","reagent/impl/component.cljs","^:",39,"^8",1,"^6[",true,"^7",10,"^70",true,"^9",10,"^68","^5X"],"~$get-children",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",39,"^8",7,"^9",39,"^:",19,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"^W","^1V","^6","reagent/impl/component.cljs","^:",19,"^5S",["^1A",[["~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",39,"^5W",["^V",[null,"~$clj","^5X","^5Y"]],"^9",39,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"~$camelify-map-keys",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",236,"^8",7,"^9",236,"^:",24,"^5Q",["^1A",["^5R",["^1A",[["^6A"]]]]]],"^W","^1Y","^6","reagent/impl/component.cljs","^:",24,"^5S",["^1A",[["^6A"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",236,"^5W",["^V",[null,"^5X"]],"^9",236,"^5Z",1,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^6A"]]]]]],"~$cljsify",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",281,"^8",7,"^9",281,"^:",14,"^5Q",["^1A",["^5R",["^1A",[["~$body","^65"]]]]]],"^W","^2U","^6","reagent/impl/component.cljs","^:",14,"^5S",["^1A",[["^75","^65"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",281,"^5W",["^V",["^72","^5X"]],"^9",281,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^75","^65"]]]]]],"~$functional-render-fn",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",486,"^8",7,"^9",486,"^:",27,"^5Q",["^1A",["^5R",["^1A",[["^65","^6I"]]]]],"^66","Create copy of functional-render with displayName set to name of the\n  original Reagent component."],"^W","^29","^6","reagent/impl/component.cljs","^:",27,"^5S",["^1A",[["^65","^6I"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",486,"^5W",["^V",["^5X","~$js"]],"^9",486,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^65","^6I"]]]]],"^66","Create copy of functional-render with displayName set to name of the\n  original Reagent component."],"~$react-class?",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",51,"^8",16,"^9",51,"^:",28,"^68","^6G","^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"^W","^31","^6","reagent/impl/component.cljs","^:",28,"^5S",["^1A",[["~$c"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",51,"^5W","^6G","^9",51,"^5Z",1,"^68","^6G","^5[",true,"^5Q",["^1A",["^5R",["^1A",[["~$c"]]]]]],"~$cache-react-class",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",356,"^8",7,"^9",356,"^:",24,"^5Q",["^1A",["^5R",["^1A",[["^65","~$c","~$constructor"]]]]]],"^W","^2O","^6","reagent/impl/component.cljs","^:",24,"^5S",["^1A",[["^65","~$c","^7:"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",356,"^9",356,"^5Z",3,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^65","~$c","^7:"]]]]]],"~$custom-wrapper",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",135,"^8",7,"^9",135,"^:",21,"^5Q",["^1A",["^5R",["^1A",[["^61","~$f"]]]]]],"^W","^1Z","^6","reagent/impl/component.cljs","^:",21,"^5S",["^1A",[["^61","~$f"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",135,"^9",135,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^61","~$f"]]]]]],"~$create-class",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",295,"^8",7,"^9",295,"^:",19,"^5Q",["^1A",["^5R",["^1A",[["^75","^65"]]]]],"^66","Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics."],"^W","^2Y","^6","reagent/impl/component.cljs","^:",19,"^5S",["^1A",[["^75","^65"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",295,"^5W","^6K","^9",295,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^75","^65"]]]]],"^66","Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics."],"~$wrap-funs",["^ ","^5P",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",244,"^8",7,"^9",244,"^:",16,"^5Q",["^1A",["^5R",["^1A",[["~$fmap","^65"]]]]]],"^W","^2B","^6","reagent/impl/component.cljs","^:",16,"^5S",["^1A",[["^7>","^65"]]],"^5T",null,"^5U",["^1A",[null,null]],"^8",1,"^5V",false,"^7",244,"^5W",["^V",["^72","^5X"]],"^9",244,"^5Z",2,"^5[",true,"^5Q",["^1A",["^5R",["^1A",[["^7>","^65"]]]]]]],"^1?",["^ ","^P","^P","^14","^14","^13","^13","^1:","^13"],"~:cljs.analyzer/constants",["^ ","^1<",["^V",["~:cljsLegacyRender","~:else","~:childContextTypes","~:displayName","~:contextTypes","~:getDerivedStateFromProps","~:getDerivedStateFromError","~:componentWillUnmount","~:shouldComponentUpdate","~:reagentRender","~:no-cache","~:render","~:reagent-render","~:getInitialState","~:constructor","~:componentFunction","~:contextType"]],"~:order",["^7A","^7J","^7H","^7G","^7K","^7I","^7O","^7C","^7@","^7B","^7D","^7P","^7E","^7F","^7M","^7N","^7L"]],"^1E",["^ ","^1=",["^V",[]]],"^1F",["^ "],"^1G",["^17","^14","^16","^C","^11","^18","^12","^13","^P"]],"^Z","^X","~:ns-specs",["^ "],"~:ns-spec-vars",["^V",[]],"~:compiler-options",["^3M",[["^7T","~:static-fns"],true,["^7T","~:shadow-tweaks"],null,["^7T","~:source-map-inline"],null,["^7T","~:elide-asserts"],false,["^7T","~:optimize-constants"],null,["^7T","^1L"],null,["^7T","~:external-config"],null,["^7T","~:tooling-config"],null,["^7T","~:emit-constants"],null,["^7T","~:load-tests"],null,["^7T","~:form-size-threshold"],null,["^7T","~:data-readers"],null,["^7T","~:infer-externs"],"~:auto",["^7T","^1N"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7T","~:fn-invoke-direct"],null,["^7T","~:source-map"],"/dev/null"]]]