["^ ","~:output",["^ ","~:js","goog.provide('pinkgorilla.dsl.leaflet');\npinkgorilla.dsl.leaflet.default_options = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"zoom\",\"zoom\",-1827487038),new cljs.core.Keyword(null,\"line-join\",\"line-join\",-1560936092),new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.Keyword(null,\"width\",\"width\",-384071477),new cljs.core.Keyword(null,\"center\",\"center\",-748944368),new cljs.core.Keyword(null,\"dash-array\",\"dash-array\",2130256592),new cljs.core.Keyword(null,\"weight\",\"weight\",-1262796205),new cljs.core.Keyword(null,\"opacity\",\"opacity\",397153780),new cljs.core.Keyword(null,\"line-cap\",\"line-cap\",448406012),new cljs.core.Keyword(null,\"height\",\"height\",1025178622)],[(10),\"miter\",\"steelblue\",(600),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [8.5407166,-79.8833319], null),\"1, 0\",5.0,1.0,\"butt\",(400)]);\npinkgorilla.dsl.leaflet.transpose_coord = (function pinkgorilla$dsl$leaflet$transpose_coord(p__102620){\nvar vec__102621 = p__102620;\nvar lat = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__102621,(0),null);\nvar lon = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__102621,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lon,lat], null);\n});\npinkgorilla.dsl.leaflet.multipoint_feature = (function pinkgorilla$dsl$leaflet$multipoint_feature(coords){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"Feature\",\"Feature\",2013251655),new cljs.core.Keyword(null,\"geometry\",\"geometry\",-405034994),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"MultiPoint\",\"MultiPoint\",507414646),new cljs.core.Keyword(null,\"coordinates\",\"coordinates\",-1225332668),cljs.core.map.cljs$core$IFn$_invoke$arity$2(pinkgorilla.dsl.leaflet.transpose_coord,coords)], null)], null);\n});\npinkgorilla.dsl.leaflet.linestring_feature = (function pinkgorilla$dsl$leaflet$linestring_feature(coords){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"Feature\",\"Feature\",2013251655),new cljs.core.Keyword(null,\"geometry\",\"geometry\",-405034994),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"LineString\",\"LineString\",-1553785666),new cljs.core.Keyword(null,\"coordinates\",\"coordinates\",-1225332668),cljs.core.map.cljs$core$IFn$_invoke$arity$2(pinkgorilla.dsl.leaflet.transpose_coord,coords)], null)], null);\n});\npinkgorilla.dsl.leaflet.polygon_feature = (function pinkgorilla$dsl$leaflet$polygon_feature(coords_arrays){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"Feature\",\"Feature\",2013251655),new cljs.core.Keyword(null,\"geometry\",\"geometry\",-405034994),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"Polygon\",\"Polygon\",-148258306),new cljs.core.Keyword(null,\"coordinates\",\"coordinates\",-1225332668),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__102624_SHARP_){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(pinkgorilla.dsl.leaflet.transpose_coord,p1__102624_SHARP_);\n}),coords_arrays)], null)], null);\n});\nif((typeof pinkgorilla !== 'undefined') && (typeof pinkgorilla.dsl !== 'undefined') && (typeof pinkgorilla.dsl.leaflet !== 'undefined') && (typeof pinkgorilla.dsl.leaflet.geojson_for_geodesc !== 'undefined')){\n} else {\npinkgorilla.dsl.leaflet.geojson_for_geodesc = (function (){var method_table__4654__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4655__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4656__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4657__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4658__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__102628 = cljs.core.get_global_hierarchy;\nreturn (fexpr__102628.cljs$core$IFn$_invoke$arity$0 ? fexpr__102628.cljs$core$IFn$_invoke$arity$0() : fexpr__102628.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"pinkgorilla.dsl.leaflet\",\"geojson-for-geodesc\"),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4658__auto__,method_table__4654__auto__,prefer_table__4655__auto__,method_cache__4656__auto__,cached_hierarchy__4657__auto__));\n})();\n}\npinkgorilla.dsl.leaflet.geojson_for_geodesc.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"geojson\",\"geojson\",-719473398),(function (geodesc){\nreturn new cljs.core.Keyword(null,\"desc\",\"desc\",2093485764).cljs$core$IFn$_invoke$arity$1(geodesc);\n}));\npinkgorilla.dsl.leaflet.geojson_for_geodesc.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"points\",\"points\",-1486596883),(function (geodesc){\nreturn pinkgorilla.dsl.leaflet.multipoint_feature(new cljs.core.Keyword(null,\"desc\",\"desc\",2093485764).cljs$core$IFn$_invoke$arity$1(geodesc));\n}));\npinkgorilla.dsl.leaflet.geojson_for_geodesc.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),(function (geodesc){\nreturn pinkgorilla.dsl.leaflet.linestring_feature(new cljs.core.Keyword(null,\"desc\",\"desc\",2093485764).cljs$core$IFn$_invoke$arity$1(geodesc));\n}));\npinkgorilla.dsl.leaflet.geojson_for_geodesc.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"polygon\",\"polygon\",837053759),(function (geodesc){\nreturn pinkgorilla.dsl.leaflet.polygon_feature(new cljs.core.Keyword(null,\"desc\",\"desc\",2093485764).cljs$core$IFn$_invoke$arity$1(geodesc));\n}));\n/**\n * parses custom syntax for geo-data specification.\n * see unit test\n * [vec of points] & [:kw1 val1 :kw2 val2]   \n */\npinkgorilla.dsl.leaflet.parse_args = (function pinkgorilla$dsl$leaflet$parse_args(args){\nvar args__$1 = args;\nvar geodescs = cljs.core.PersistentVector.EMPTY;\nvar options = cljs.core.PersistentArrayMap.EMPTY;\nwhile(true){\nif(cljs.core.not(cljs.core.seq(args__$1))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [geodescs,options], null);\n} else {\nvar arg = cljs.core.first(args__$1);\nvar rstargs = cljs.core.next(args__$1);\nif((arg instanceof cljs.core.Keyword)){\nif(cljs.core.seq(rstargs)){\nvar G__102670 = cljs.core.next(rstargs);\nvar G__102671 = geodescs;\nvar G__102672 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(options,arg,cljs.core.first(rstargs));\nargs__$1 = G__102670;\ngeodescs = G__102671;\noptions = G__102672;\ncontinue;\n} else {\nreturn null;\n}\n} else {\nvar G__102673 = rstargs;\nvar G__102674 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(geodescs,arg);\nvar G__102675 = options;\nargs__$1 = G__102673;\ngeodescs = G__102674;\noptions = G__102675;\ncontinue;\n}\n}\nbreak;\n}\n});\npinkgorilla.dsl.leaflet.canonicalize_geodesc = (function pinkgorilla$dsl$leaflet$canonicalize_geodesc(default_type,g){\nvar type_desig = cljs.core.first(g);\nvar desc = cljs.core.second(g);\nvar canon = (((type_desig instanceof cljs.core.Keyword))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type_desig,new cljs.core.Keyword(null,\"desc\",\"desc\",2093485764),desc], null):new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),default_type,new cljs.core.Keyword(null,\"desc\",\"desc\",2093485764),g], null));\nreturn canon;\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\npinkgorilla.dsl.leaflet.LeafletView = (function (geodescs,opts,__meta,__extmap,__hash){\nthis.geodescs = geodescs;\nthis.opts = opts;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4415__auto__,k__4416__auto__){\nvar self__ = this;\nvar this__4415__auto____$1 = this;\nreturn this__4415__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4416__auto__,null);\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4417__auto__,k102633,else__4418__auto__){\nvar self__ = this;\nvar this__4417__auto____$1 = this;\nvar G__102637 = k102633;\nvar G__102637__$1 = (((G__102637 instanceof cljs.core.Keyword))?G__102637.fqn:null);\nswitch (G__102637__$1) {\ncase \"geodescs\":\nreturn self__.geodescs;\n\nbreak;\ncase \"opts\":\nreturn self__.opts;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k102633,else__4418__auto__);\n\n}\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4434__auto__,f__4435__auto__,init__4436__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4437__auto__,p__102638){\nvar vec__102639 = p__102638;\nvar k__4438__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__102639,(0),null);\nvar v__4439__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__102639,(1),null);\nreturn (f__4435__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4435__auto__.cljs$core$IFn$_invoke$arity$3(ret__4437__auto__,k__4438__auto__,v__4439__auto__) : f__4435__auto__.call(null,ret__4437__auto__,k__4438__auto__,v__4439__auto__));\n}),init__4436__auto__,this__4434__auto____$1);\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4429__auto__,writer__4430__auto__,opts__4431__auto__){\nvar self__ = this;\nvar this__4429__auto____$1 = this;\nvar pr_pair__4432__auto__ = (function (keyval__4433__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4431__auto__,keyval__4433__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,pr_pair__4432__auto__,\"#pinkgorilla.dsl.leaflet.LeafletView{\",\", \",\"}\",opts__4431__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"geodescs\",\"geodescs\",-105626026),self__.geodescs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),self__.opts],null))], null),self__.__extmap));\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__102632){\nvar self__ = this;\nvar G__102632__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__102632__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"geodescs\",\"geodescs\",-105626026),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4413__auto__){\nvar self__ = this;\nvar this__4413__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4410__auto__){\nvar self__ = this;\nvar this__4410__auto____$1 = this;\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(self__.geodescs,self__.opts,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4419__auto__){\nvar self__ = this;\nvar this__4419__auto____$1 = this;\nreturn (2 + cljs.core.count(self__.__extmap));\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4411__auto__){\nvar self__ = this;\nvar this__4411__auto____$1 = this;\nvar h__4273__auto__ = self__.__hash;\nif((!((h__4273__auto__ == null)))){\nreturn h__4273__auto__;\n} else {\nvar h__4273__auto____$1 = (function (coll__4412__auto__){\nreturn (-1319916287 ^ cljs.core.hash_unordered_coll(coll__4412__auto__));\n})(this__4411__auto____$1);\n(self__.__hash = h__4273__auto____$1);\n\nreturn h__4273__auto____$1;\n}\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this102634,other102635){\nvar self__ = this;\nvar this102634__$1 = this;\nreturn (((!((other102635 == null)))) && ((this102634__$1.constructor === other102635.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this102634__$1.geodescs,other102635.geodescs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this102634__$1.opts,other102635.opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this102634__$1.__extmap,other102635.__extmap)));\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4424__auto__,k__4425__auto__){\nvar self__ = this;\nvar this__4424__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),null,new cljs.core.Keyword(null,\"geodescs\",\"geodescs\",-105626026),null], null), null),k__4425__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4424__auto____$1),self__.__meta),k__4425__auto__);\n} else {\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(self__.geodescs,self__.opts,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4425__auto__)),null));\n}\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4422__auto__,k__4423__auto__,G__102632){\nvar self__ = this;\nvar this__4422__auto____$1 = this;\nvar pred__102646 = cljs.core.keyword_identical_QMARK_;\nvar expr__102647 = k__4423__auto__;\nif(cljs.core.truth_((pred__102646.cljs$core$IFn$_invoke$arity$2 ? pred__102646.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"geodescs\",\"geodescs\",-105626026),expr__102647) : pred__102646.call(null,new cljs.core.Keyword(null,\"geodescs\",\"geodescs\",-105626026),expr__102647)))){\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(G__102632,self__.opts,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__102646.cljs$core$IFn$_invoke$arity$2 ? pred__102646.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),expr__102647) : pred__102646.call(null,new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),expr__102647)))){\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(self__.geodescs,G__102632,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(self__.geodescs,self__.opts,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4423__auto__,G__102632),null));\n}\n}\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4427__auto__){\nvar self__ = this;\nvar this__4427__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"geodescs\",\"geodescs\",-105626026),self__.geodescs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),self__.opts,null))], null),self__.__extmap));\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4414__auto__,G__102632){\nvar self__ = this;\nvar this__4414__auto____$1 = this;\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(self__.geodescs,self__.opts,G__102632,self__.__extmap,self__.__hash));\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4420__auto__,entry__4421__auto__){\nvar self__ = this;\nvar this__4420__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4421__auto__)){\nreturn this__4420__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4421__auto__,(0)),cljs.core._nth(entry__4421__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4420__auto____$1,entry__4421__auto__);\n}\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"geodescs\",\"geodescs\",1534905501,null),new cljs.core.Symbol(null,\"opts\",\"opts\",1795607228,null)], null);\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.cljs$lang$type = true);\n\n(pinkgorilla.dsl.leaflet.LeafletView.cljs$lang$ctorPrSeq = (function (this__4458__auto__){\nreturn (new cljs.core.List(null,\"pinkgorilla.dsl.leaflet/LeafletView\",null,(1),null));\n}));\n\n(pinkgorilla.dsl.leaflet.LeafletView.cljs$lang$ctorPrWriter = (function (this__4458__auto__,writer__4459__auto__){\nreturn cljs.core._write(writer__4459__auto__,\"pinkgorilla.dsl.leaflet/LeafletView\");\n}));\n\n/**\n * Positional factory function for pinkgorilla.dsl.leaflet/LeafletView.\n */\npinkgorilla.dsl.leaflet.__GT_LeafletView = (function pinkgorilla$dsl$leaflet$__GT_LeafletView(geodescs,opts){\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(geodescs,opts,null,null,null));\n});\n\n/**\n * Factory function for pinkgorilla.dsl.leaflet/LeafletView, taking a map of keywords to field values.\n */\npinkgorilla.dsl.leaflet.map__GT_LeafletView = (function pinkgorilla$dsl$leaflet$map__GT_LeafletView(G__102636){\nvar extmap__4454__auto__ = (function (){var G__102650 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__102636,new cljs.core.Keyword(null,\"geodescs\",\"geodescs\",-105626026),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"opts\",\"opts\",155075701)], 0));\nif(cljs.core.record_QMARK_(G__102636)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__102650);\n} else {\nreturn G__102650;\n}\n})();\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(new cljs.core.Keyword(null,\"geodescs\",\"geodescs\",-105626026).cljs$core$IFn$_invoke$arity$1(G__102636),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701).cljs$core$IFn$_invoke$arity$1(G__102636),null,cljs.core.not_empty(extmap__4454__auto__),null));\n});\n\n/**\n * Plots geometries on a map.\n */\npinkgorilla.dsl.leaflet.geo = (function pinkgorilla$dsl$leaflet$geo(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___102690 = arguments.length;\nvar i__4772__auto___102691 = (0);\nwhile(true){\nif((i__4772__auto___102691 < len__4771__auto___102690)){\nargs__4777__auto__.push((arguments[i__4772__auto___102691]));\n\nvar G__102692 = (i__4772__auto___102691 + (1));\ni__4772__auto___102691 = G__102692;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((0) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((0)),(0),null)):null);\nreturn pinkgorilla.dsl.leaflet.geo.cljs$core$IFn$_invoke$arity$variadic(argseq__4778__auto__);\n});\n\n(pinkgorilla.dsl.leaflet.geo.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar vec__102656 = pinkgorilla.dsl.leaflet.parse_args(args);\nvar geometries = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__102656,(0),null);\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__102656,(1),null);\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__102654_SHARP_){\nreturn pinkgorilla.dsl.leaflet.canonicalize_geodesc(new cljs.core.Keyword(null,\"points\",\"points\",-1486596883),p1__102654_SHARP_);\n}),geometries),opts,null,null,null));\n}));\n\n(pinkgorilla.dsl.leaflet.geo.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(pinkgorilla.dsl.leaflet.geo.cljs$lang$applyTo = (function (seq102655){\nvar self__4759__auto__ = this;\nreturn self__4759__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq102655));\n}));\n\n/**\n * Plots geometries on a map.\n */\npinkgorilla.dsl.leaflet.geojson = (function pinkgorilla$dsl$leaflet$geojson(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___102693 = arguments.length;\nvar i__4772__auto___102694 = (0);\nwhile(true){\nif((i__4772__auto___102694 < len__4771__auto___102693)){\nargs__4777__auto__.push((arguments[i__4772__auto___102694]));\n\nvar G__102695 = (i__4772__auto___102694 + (1));\ni__4772__auto___102694 = G__102695;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((0) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((0)),(0),null)):null);\nreturn pinkgorilla.dsl.leaflet.geojson.cljs$core$IFn$_invoke$arity$variadic(argseq__4778__auto__);\n});\n\n(pinkgorilla.dsl.leaflet.geojson.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar vec__102661 = pinkgorilla.dsl.leaflet.parse_args(args);\nvar geodescs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__102661,(0),null);\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__102661,(1),null);\nreturn (new pinkgorilla.dsl.leaflet.LeafletView(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__102659_SHARP_){\nreturn pinkgorilla.dsl.leaflet.canonicalize_geodesc(new cljs.core.Keyword(null,\"geojson\",\"geojson\",-719473398),p1__102659_SHARP_);\n}),geodescs),opts,null,null,null));\n}));\n\n(pinkgorilla.dsl.leaflet.geojson.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(pinkgorilla.dsl.leaflet.geojson.cljs$lang$applyTo = (function (seq102660){\nvar self__4759__auto__ = this;\nreturn self__4759__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq102660));\n}));\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","why dsl? \n   create functions/macros that allow to easily create renderable data structures\n\n   The data that gets passed to a renderer has to be verbose, because it allows \n   to configure all options. The dsl allows us to build the data that gets displayed\n   in an easy manner.\n\n   dsl stolen from: https://github.com/wiseman/leaflet-gorilla\n   - currently not working, because:\n     1. we need to calculate map center\n     2. wiseman syntax does not allow to specify all params needed\n\n","~:file","pinkgorilla/dsl/leaflet.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$pinkgorilla.dsl.leaflet","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^X","~$goog","^Y"],"~:seen",["^Q",[]],"~:uses",null,"~:require-macros",["^ ","^X","^X"],"~:form",["~#list",["~$ns","^S","why dsl? \n   create functions/macros that allow to easily create renderable data structures\n\n   The data that gets passed to a renderer has to be verbose, because it allows \n   to configure all options. The dsl allows us to build the data that gets displayed\n   in an easy manner.\n\n   dsl stolen from: https://github.com/wiseman/leaflet-gorilla\n   - currently not working, because:\n     1. we need to calculate map center\n     2. wiseman syntax does not allow to specify all params needed\n\n"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^Y","^X"]],"^U","^S","~:resource-id",["~:shadow.build.classpath/resource","pinkgorilla/dsl/leaflet.cljc"],"~:compiled-at",1621210466692,"~:resource-name","pinkgorilla/dsl/leaflet.cljc","~:warnings",[],"~:source","(ns pinkgorilla.dsl.leaflet\n  \"why dsl? \n   create functions/macros that allow to easily create renderable data structures\n\n   The data that gets passed to a renderer has to be verbose, because it allows \n   to configure all options. The dsl allows us to build the data that gets displayed\n   in an easy manner.\n\n   dsl stolen from: https://github.com/wiseman/leaflet-gorilla\n   - currently not working, because:\n     1. we need to calculate map center\n     2. wiseman syntax does not allow to specify all params needed\n\n\")\n\n(def default-options\n  {:width 600\n   :height 400\n\n   :zoom 10\n   :center [8.5407166 -79.8833319] ; panama, but better to calculate center automatically\n   ;{style: {color: '{{color}}',\n   ;            weight: {{weight}},\n   ;            dashArray: '{{dash-array}}',\n   ;            lineCap: '{{line-cap}}',\n   ;            lineJoin: '{{line-join}}',\n   ;            opacity: {{opacity}}}});\n   ; defaults for a new plot that gets added\n   :color \"steelblue\"\n   :weight 5.0\n   :opacity 1.0\n   :dash-array \"1, 0\"\n   :line-cap \"butt\"\n   :line-join \"miter\"})\n\n;; Draw on Map\n\n(defn- transpose-coord [[lat lon]]\n  [lon lat])\n\n(defn- multipoint-feature [coords]\n  {:type :Feature\n   :geometry {:type :MultiPoint\n              :coordinates (map transpose-coord coords)}})\n\n(defn- linestring-feature [coords]\n  {:type :Feature\n   :geometry {:type :LineString\n              :coordinates (map transpose-coord coords)}})\n\n(defn- polygon-feature [coords-arrays]\n  {:type :Feature\n   :geometry {:type :Polygon\n              :coordinates (map #(map transpose-coord %) coords-arrays)}})\n\n;; We use [lat lon], but GeoJSON uses [lon lat].\n\n\n;; geo-json format\n\n(defmulti geojson-for-geodesc :type)\n\n(defmethod geojson-for-geodesc :geojson [geodesc]\n  ;(json/read-str \n  (:desc geodesc)\n  ; )\n  )\n\n(defmethod geojson-for-geodesc :points [geodesc]\n  (multipoint-feature (:desc geodesc)))\n\n(defmethod geojson-for-geodesc :line [geodesc]\n  (linestring-feature (:desc geodesc)))\n\n(defmethod geojson-for-geodesc :polygon [geodesc]\n  (polygon-feature (:desc geodesc)))\n\n(defn parse-args\n  \"parses custom syntax for geo-data specification.\n   see unit test\n   [vec of points] & [:kw1 val1 :kw2 val2]   \"\n  [args]\n  (loop [args args\n         geodescs []\n         options {}]\n    (if (not (seq args))\n      [geodescs options]\n      (let [arg (first args)\n            rstargs (next args)]\n        (if (keyword? arg)\n          (if (seq rstargs)\n            (recur (next rstargs)\n                   geodescs\n                   (assoc options arg (first rstargs)))\n            #?(:clj  (throw (Exception. (str \"No value specified for option \" arg)))\n               :cljs  nil) ; TODO: return exception also in cljs.\n            )\n          (recur rstargs\n                 (conj geodescs arg)\n                 options))))))\n\n(defn canonicalize-geodesc [default-type g]\n  (let [type-desig (first g)\n        desc (second g)\n        canon (if (keyword? type-desig)\n                {:type type-desig :desc desc}\n                {:type default-type :desc g})]\n    canon))\n\n(defrecord LeafletView [geodescs opts])\n\n(defn geo\n  \"Plots geometries on a map.\"\n  [& args]\n  (let [[geometries opts] (parse-args args)]\n    (LeafletView. (map #(canonicalize-geodesc :points %) geometries) opts)))\n\n(defn geojson\n  \"Plots geometries on a map.\"\n  [& args]\n  (let [[geodescs opts] (parse-args args)]\n    (LeafletView. (map #(canonicalize-geodesc :geojson %) geodescs) opts)))\n\n;; TODO\n\n; Leaflet is provider-agnostic, meaning that it doesn’t enforce a particular choice of \n; providers for tiles. You can try replacing mapbox/streets-v11 with mapbox/satellite-v9\n; .tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n;    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n;    maxZoom: 18,\n;    id: 'mapbox/streets-v11',\n;    tileSize: 512,\n;    zoomOffset: -1,\n;    accessToken: 'your.mapbox.access.token'}\n;\n;   mymap.on ('click', onMapClick);\n\n ;pointerIcon = new L.Icon({\n ; iconUrl: '../assets/pointerIcon.svg',\n ; iconRetinaUrl: '../assets/pointerIcon.svg',\n ; iconAnchor: [5, 55],\n ; popupAnchor: [10, -44],\n ; iconSize: [25, 55],\n ; shadowUrl: '../assets/marker-shadow.png',\n ; shadowSize: [68, 95],\n ; shadowAnchor: [20, 92],\n;})\n;\n;\n; Tooltip\n; attribution: string (optional)\n; className: string (optional)\n; onClose: () => void (optional)\n; onOpen: () => void (optional)","~:reader-features",["^Q",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAeA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAsBL,AAAA,AAAAC,AAAOG;AAAP,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAyBG;AAAzB,AAAAF,AAAAD,AAAA,AAAA,AAA6BI;AAA7B,AAAA,AACGA,AAAID;;AAEP,AAAA,AAAOE,AAAoBC;AAA3B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAG2B,AAACC,AAAIL,AAAgBI;;AAEhD,AAAA,AAAOE,AAAoBF;AAA3B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAG2B,AAACC,AAAIL,AAAgBI;;AAEhD,AAAA,AAAOG,AAAiBC;AAAxB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAG2B,AAAA,AAAAC,AAACJ;AAAD,AAAM,AAAAI,AAACJ,AAAIL;AAAmBQ;;AAOzD,AAAA,AAAAE,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAUS;AAAVR,AAAA,AAAAD,AAAA;AAAAE,AAAA,AAAAF,AAAA;AAAAG,AAAA,AAAAH,AAAA;AAAAI,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAAL,AAAAE,AAAAC,AAAAC;;;AAEA,AAAAM,AAAA,AAAA,AAAyCC;AAAzC,AAEE,AAAA,AAAOA;;AAIT,AAAAD,AAAA,AAAA,AAAwCC;AAAxC,AACE,AAACtB,AAAmB,AAAA,AAAOsB;;AAE7B,AAAAD,AAAA,AAAA,AAAsCC;AAAtC,AACE,AAACnB,AAAmB,AAAA,AAAOmB;;AAE7B,AAAAD,AAAA,AAAA,AAAyCC;AAAzC,AACE,AAAClB,AAAgB,AAAA,AAAOkB;;AAE1B;;;;;AAAA,AAAMC,AAIHC;AAJH,AAKE,AAAOA,AAAKA;AAAZ,AACOC;AADP,AAEOC;;AAFP,AAGE,AAAI,AAACC,AAAI,AAACC,AAAIJ;AAAd,AACGC,AAASC;;AACV,AAAMG,AAAI,AAACC,AAAMN;AACXO,AAAQ,AAACC,AAAKR;AADpB,AAEE,AAAI,AAAAS,AAAUJ;AACZ,AAAI,AAACD,AAAIG;AACP,AAAO,AAACC,AAAKD;AACNN;AACA,AAACS,AAAMR,AAAQG,AAAI,AAACC,AAAMC;;;;;;AAHnC;;;AAOA,AAAOA;AACA,AAACI,AAAKV,AAASI;AACfH;;;;;;;;;;AAEjB,AAAA,AAAMU,AAAsBC,AAAaC;AAAzC,AACE,AAAMC,AAAW,AAACT,AAAMQ;AAClBE,AAAK,AAACC,AAAOH;AACbI,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAI,AAAAT,AAAUM,AACLA,AAAiBC,AACjBH,AAAmBC;AAJxC,AAKEI;;AAEJ,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAC,AAAW6D;;AAAX,AAAA,AAAA9D,AAAA;AAAA,AAAA,AAAAA,AAAAC,AAAA;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAW0D;;AAAX,AAAA,AAAA5D,AAAA;AAAA,AAAA,AAAAG,AAAAF;AAAAE,AAAA,AAAA,AAAAA,AAAAf,AAAA,AAAAe,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAAvB;;;AAAA;AAAAwB;;;;AAAA,AAAAhC,AAAAiC,AAAAJ,AAAAC;;;;;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAAC,AAAAC,AAAWoD;;AAAX,AAAA,AAAAtD,AAAA;AAAA,AAAA,AAAAG,AAAA,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAAE,AAAA,AAAA9D,AAAA6D,AAAA,AAAA;AAAAE,AAAA,AAAA/D,AAAA6D,AAAA,AAAA;AAAA,AAAA,AAAAL,AAAAA,AAAAG,AAAAG,AAAAC,AAAAP,AAAAG,AAAAG,AAAAC;AAAAN,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAS,AAAAC,AAAAC,AAAW2C;;AAAX,AAAA,AAAA7C,AAAA;AAAA,AAAA,AAAAG,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAJ,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAE;;AAAA,AAAA,AAAAC,AAAAJ,AAAAE,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAAI,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA1C,AAAA,AAAA,AAAA0C,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAlB,AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAA,AAAAkB,AAAWqC;;AAAX,AAAA,AAAArC,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAlB,AAAA,AAAAoB,AAAApB,AAAA,AAAAqB;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAWiC;;AAAX,AAAA,AAAAjC,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAW+B;;AAAX,AAAA,AAAA/B,AAAA;AAAA,AAAA,AAAAjD,AAAAwB,AAAAwB,AAAAvB,AAAAyB,AAAW8B;;;AAAX,AAAA,AAAA,AAAA,AAAA7B,AAAW6B;;AAAX,AAAA,AAAA7B,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA3B;;;AAAA,AAAA,AAAA,AAAA,AAAA4B,AAAW2B;;AAAX,AAAA,AAAA3B,AAAA;AAAA,AAAA,AAAAC,AAAAJ;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;AAAAA;;AAAA,AAAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAAF;AAAA,AAAA,AAAAH,AAAAI;;AAAAA;;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAWsB;;AAAX,AAAA,AAAAvB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAF,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAF,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAF,AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAWmB;;AAAX,AAAA,AAAApB,AAAA;AAAA,AAAA,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAL,AAAAZ,AAAAa;;AAAA,AAAA7D,AAAAwB,AAAAwB,AAAA,AAAAkB,AAAA,AAAAH,AAAAtC,AAAAoC,AAAA,AAAWmB;;;;AAAX,AAAA,AAAA,AAAA,AAAAb,AAAAC,AAAAzB,AAAWqC;;AAAX,AAAA,AAAAb,AAAA;AAAA,AAAA,AAAAE,AAAAC;AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAAC,AAAAA,AAAA,AAAAE,AAAAF,AAAA,AAAAE;AAAA,AAAA5B,AAAAnB,AAAAwB,AAAAvB,AAAA,AAAWuD;;AAAX,AAAA,AAAAX,AAAAA,AAAA,AAAAE,AAAAF,AAAA,AAAAE;AAAA,AAAAvE,AAAA2C,AAAAK,AAAAvB,AAAA,AAAWuD;;AAAX,AAAAhF,AAAAwB,AAAAwB,AAAA,AAAAvC,AAAAgB,AAAA2C,AAAAzB,AAAA,AAAWqC;;;;;AAAX,AAAA,AAAA,AAAA,AAAAR,AAAWQ;;AAAX,AAAA,AAAAR,AAAA;AAAA,AAAA,AAAArE,AAAA,AAAAsC,AAAA,AAAA,AAAAgC,AAAA,AAAAzE,AAAA,AAAA,AAAAyE,AAAA,AAAAjD,AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAA,AAAAiD,AAAA/B,AAAWqC;;AAAX,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAA1E,AAAAwB,AAAAmB,AAAAlB,AAAAyB,AAAW8B;;;AAAX,AAAA,AAAA,AAAA,AAAAL,AAAAC,AAAWI;;AAAX,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAA,AAAAE,AAAAD;AAAA,AAAAD,AAAA,AAAAG,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA;;AAAA,AAAA/C,AAAAkD,AAAAJ,AAAAC;;;;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAF,AAAA,AAAAC,AAAAE;AAAA,AAAA,AAAAC,AAAAD,AAAA;;;AAAA;;;AAAA,AAAWM,AAAazF,AAASwB;AAAjC,AAAA,AAAAwD,AAAA,AAAA,AAAA,AAAwBhF,AAASwB;;;AAAjC;;;AAAA,AAAA6D,AAAWK;AAAX,AAAA,AAAAJ,AAAA,AAAAC,AAAA,AAAAxB,AAAAsB,AAAA,AAAA;AAAA,AAAA,AAAA,AAAAG,AAAAH;AAAA,AAAApB,AAAA,AAAAsB;;AAAAA;;;AAAA,AAAA,AAAAP,AAAA,AAAA,AAAAK,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAnB,AAAAoB,AAAA;;;AAAAN,AAEA,AAAA;;;AAAA,AAAAW,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAEDlG;AAFL,AAGE,AAAAqG,AAAwB,AAACtG,AAAWC;AAApC,AAAA5B,AAAAiI,AAAA,AAAA,AAAOC;AAAP,AAAAlI,AAAAiI,AAAA,AAAA,AAAkB5E;AAAlB,AACE,AAAAwD,AAAc,AAAA,AAAAsB,AAAC7H;AAAD,AAAM,AAAA,AAAA6H,AAAC3F;AAArB,AAAA,AAAA,AAAqD0F,AAAY7E;;;AAJrE,AAAA,AAAA,AAAMyE;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAhG,AAAA+F;;;AAAA,AAMA,AAAA;;;AAAA,AAAAP,AAAMY;AAAN,AAAA,AAAAX,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAW,AAAAR;;;AAAA,AAAA,AAAA,AAAA,AAAMQ,AAEDxG;AAFL,AAGE,AAAA0G,AAAsB,AAAC3G,AAAWC;AAAlC,AAAA5B,AAAAsI,AAAA,AAAA,AAAOzG;AAAP,AAAA7B,AAAAsI,AAAA,AAAA,AAAgBjF;AAAhB,AACE,AAAAwD,AAAc,AAAA,AAAA0B,AAACjI;AAAD,AAAM,AAAA,AAAAiI,AAAC/F;AAArB,AAAA,AAAA,AAAsDX,AAAUwB;;;AAJpE,AAAA,AAAA,AAAM+E;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAJ,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAhG,AAAAqG;;;AAAA","names",["pinkgorilla.dsl.leaflet/default-options","p__102620","vec__102621","cljs.core.nth","pinkgorilla.dsl.leaflet/transpose-coord","lat","lon","pinkgorilla.dsl.leaflet/multipoint-feature","coords","cljs.core.map","pinkgorilla.dsl.leaflet/linestring-feature","pinkgorilla.dsl.leaflet/polygon-feature","coords-arrays","p1__102624#","js/pinkgorilla","js/pinkgorilla.dsl","js/pinkgorilla.dsl.leaflet","js/pinkgorilla.dsl.leaflet.geojson-for-geodesc","method-table__4654__auto__","cljs.core.atom","prefer-table__4655__auto__","method-cache__4656__auto__","cached-hierarchy__4657__auto__","hierarchy__4658__auto__","cljs.core.get","fexpr__102628","cljs.core/MultiFn","cljs.core.symbol","pinkgorilla.dsl.leaflet/geojson-for-geodesc","geodesc","pinkgorilla.dsl.leaflet/parse-args","args","geodescs","options","cljs.core/not","cljs.core/seq","arg","cljs.core/first","rstargs","cljs.core/next","cljs.core/Keyword","cljs.core.assoc","cljs.core.conj","pinkgorilla.dsl.leaflet/canonicalize-geodesc","default-type","g","type-desig","desc","cljs.core/second","canon","this__4415__auto__","k__4416__auto__","this__4417__auto__","k102633","else__4418__auto__","G__102637","opts","__extmap","this__4434__auto__","f__4435__auto__","init__4436__auto__","cljs.core.reduce","ret__4437__auto__","p__102638","vec__102639","k__4438__auto__","v__4439__auto__","this__4429__auto__","writer__4430__auto__","opts__4431__auto__","pr-pair__4432__auto__","keyval__4433__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__102632","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4413__auto__","__meta","this__4410__auto__","__hash","this__4419__auto__","cljs.core/count","this__4411__auto__","h__4273__auto__","coll__4412__auto__","cljs.core/hash-unordered-coll","this102634","other102635","cljs.core._EQ_","this__4424__auto__","k__4425__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4422__auto__","k__4423__auto__","pred__102646","cljs.core/keyword-identical?","expr__102647","this__4427__auto__","cljs.core/MapEntry","this__4414__auto__","this__4420__auto__","entry__4421__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","pinkgorilla.dsl.leaflet/LeafletView","this__4458__auto__","cljs.core/List","writer__4459__auto__","cljs.core/-write","G__102636","extmap__4454__auto__","G__102650","cljs.core/record?","pinkgorilla.dsl.leaflet/->LeafletView","pinkgorilla.dsl.leaflet/map->LeafletView","var_args","args__4777__auto__","len__4771__auto__","i__4772__auto__","argseq__4778__auto__","cljs.core/IndexedSeq","pinkgorilla.dsl.leaflet/geo","seq102655","self__4759__auto__","vec__102656","geometries","p1__102654#","pinkgorilla.dsl.leaflet/geojson","seq102660","vec__102661","p1__102659#"]],"~:used-vars",["^Q",["~$pinkgorilla.dsl.leaflet/polygon-feature","~$cljs.core/MultiFn","~$pinkgorilla.dsl.leaflet/transpose-coord","~$pinkgorilla.dsl.leaflet/parse-args","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/-assoc","~$cljs.core/-write","~$cljs.core/-iterator","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/Keyword","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/-with-meta","~$cljs.core/concat","~$pinkgorilla.dsl.leaflet/geo","~$pinkgorilla.dsl.leaflet/geojson-for-geodesc","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/conj","~$cljs.core/-conj","~$cljs.core/map","~$pinkgorilla.dsl.leaflet/geojson","~$js/pinkgorilla","~$cljs.core/PersistentVector","~$cljs.core/List","~$cljs.core/-add-method","~$cljs.core/get","~$cljs.core/-nth","~$pinkgorilla.dsl.leaflet/default-options","~$cljs.core/not-empty","~$cljs.core/symbol","~$cljs.core/-lookup","~$cljs.core/nil-iter","~$pinkgorilla.dsl.leaflet/canonicalize-geodesc","~$cljs.core/next","~$cljs.core/RecordIter","~$pinkgorilla.dsl.leaflet/linestring-feature","~$js/pinkgorilla.dsl.leaflet","~$cljs.core/not","~$cljs.core/assoc","~$pinkgorilla.dsl.leaflet/LeafletView","~$pinkgorilla.dsl.leaflet/multipoint-feature","~$cljs.core/first","~$js/pinkgorilla.dsl","~$pinkgorilla.dsl.leaflet/->LeafletView","~$pinkgorilla.dsl.leaflet/map->LeafletView","~$js/pinkgorilla.dsl.leaflet.geojson-for-geodesc"]]],"~:cache-keys",["~#cmap",[["^18","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Q",[]],"~:deps-syms",["^Y","~$goog.dom.HtmlElement"]]],["^18","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","~$goog.array","~$goog.asserts"]]],["^18","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2R","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^18","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2V"]]],["^18","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S"]]],["^18","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^18","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S","~$goog.reflect"]]],["^18","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S","~$goog.fs.blob","^2W","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2Y","^2Z","^2[","^30"]]],["^18","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","pinkgorilla/dsl/leaflet.cljc"],["5dfa2288f50e86e0aca96c1cc97855634d650cf5","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^X"]]],["^18","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2R","^2S","~$goog.html.SafeUrl","^2[","^30","^2V"]]],["^18","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^34","~$goog.html.SafeStyle","^36","^2X","~$goog.html.uncheckedconversions","^2[","^2V"]]],["^18","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^18","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2R","^2S","~$goog.dom.TagName","~$goog.dom.tags","^34","^3:","~$goog.html.SafeStyleSheet","^36","^2X","^35","^2Y","^2Z","~$goog.labs.userAgent.browser","^2U","^2[","^30","^2V"]]],["^18","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2U"]]],["^18","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2R"]]],["^18","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^18","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2R","^2S","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^18","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",[]]],["^18","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2R","^2U"]]],["^18","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","~$goog.dom.safe","^3;","^2[","^2V"]]],["^18","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2V"]]],["^18","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2R","^2S","^38","~$goog.math"]]],["^18","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S","^39","^34","^3:","^3@","^36","^2X","^2[","^2V","^2Y"]]],["^18","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y"]]],["^18","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","~$goog.math.Long","~$goog.math.Integer","^3D","^2U","^2R","~$goog.Uri","~$goog.string.StringBuffer"]]],["^18","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2[","^30","^35","^2S"]]],["^18","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2[","^3:","^30","^2R","^2U","^2S","^2V"]]],["^18","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^32"]]],["^18","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S","^3D"]]],["^18","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^Y","^2S","^30"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","why dsl? \n   create functions/macros that allow to easily create renderable data structures\n\n   The data that gets passed to a renderer has to be verbose, because it allows \n   to configure all options. The dsl allows us to build the data that gets displayed\n   in an easy manner.\n\n   dsl stolen from: https://github.com/wiseman/leaflet-gorilla\n   - currently not working, because:\n     1. we need to calculate map center\n     2. wiseman syntax does not allow to specify all params needed\n\n","^7","pinkgorilla/dsl/leaflet.cljc","^8",1,"^9",5,"^:",1,"^;",28],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N"],"^O",null,"^P",["^Q",[]],"^R","^S","^V",null,"^W",["^ ","^X","^X","^Y","^Y"],"^Z",["^Q",[]],"^[",null,"~:defs",["^ ","~$map->LeafletView",["^ ","~:protocol-inline",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^;",23,"^9",12,"~:internal-ctor",true,"~:factory","~:map","^8",110,"^:",110,"~:arglists",["^12",["~$quote",["^12",[["~$G__102636"]]]]],"^6","Factory function for pinkgorilla.dsl.leaflet/LeafletView, taking a map of keywords to field values."],"^R","^2I","^7","pinkgorilla/dsl/leaflet.cljc","^;",23,"~:method-params",["^12",[["^4I"]]],"~:protocol-impl",null,"~:arglists-meta",["^12",[null,null]],"^9",1,"^4D",true,"~:variadic?",false,"^4E","^4F","^8",110,"~:ret-tag","^2D","^:",110,"~:max-fixed-arity",1,"~:fn-var",true,"^4G",["^12",["^4H",["^12",[["^4I"]]]]],"^6","Factory function for pinkgorilla.dsl.leaflet/LeafletView, taking a map of keywords to field values."],"~$multipoint-feature",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",41,"^9",8,"^:",41,"^;",26,"~:private",true,"^4G",["^12",["^4H",["^12",[["~$coords"]]]]]],"^4R",true,"^R","^2E","^7","pinkgorilla/dsl/leaflet.cljc","^;",26,"^4J",["^12",[["^4S"]]],"^4K",null,"^4L",["^12",[null,null]],"^9",1,"^4M",false,"^8",41,"^4N","~$cljs.core/IMap","^:",41,"^4O",1,"^4P",true,"^4G",["^12",["^4H",["^12",[["^4S"]]]]]],"~$->LeafletView",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^;",23,"^9",12,"^4D",true,"^4E","~:positional","^8",110,"^:",110,"^4G",["^12",["^4H",["^12",[["~$geodescs","~$opts"]]]]],"^6","Positional factory function for pinkgorilla.dsl.leaflet/LeafletView."],"^R","^2H","^7","pinkgorilla/dsl/leaflet.cljc","^;",23,"^4J",["^12",[["^4W","^4X"]]],"^4K",null,"^4L",["^12",[null,null]],"^9",1,"^4D",true,"^4M",false,"^4E","^4V","^8",110,"^4N","^2D","^:",110,"^4O",2,"^4P",true,"^4G",["^12",["^4H",["^12",[["^4W","^4X"]]]]],"^6","Positional factory function for pinkgorilla.dsl.leaflet/LeafletView."],"~$geojson-for-geodesc",["^ ","^R","^1W","^7","pinkgorilla/dsl/leaflet.cljc","^8",61,"^9",1,"^:",61,"^;",30,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",61,"^9",11,"^:",61,"^;",30],"~:tag","^1E"],"~$default-options",["^ ","^R","^28","^7","pinkgorilla/dsl/leaflet.cljc","^8",16,"^9",1,"^:",16,"^;",21,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",16,"^9",6,"^:",16,"^;",21],"^4Z","^4T"],"~$parse-args",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",78,"^9",7,"^:",78,"^;",17,"^4G",["^12",["^4H",["^12",[["~$args"]]]]],"^6","parses custom syntax for geo-data specification.\n   see unit test\n   [vec of points] & [:kw1 val1 :kw2 val2]   "],"^R","^1G","^7","pinkgorilla/dsl/leaflet.cljc","^;",17,"^4J",["^12",[["^51"]]],"^4K",null,"^4L",["^12",[null,null]],"^9",1,"^4M",false,"^8",78,"^4N",["^Q",["~$cljs.core/IVector","~$clj-nil"]],"^:",78,"^4O",1,"^4P",true,"^4G",["^12",["^4H",["^12",[["^51"]]]]],"^6","parses custom syntax for geo-data specification.\n   see unit test\n   [vec of points] & [:kw1 val1 :kw2 val2]   "],"~$geo",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",112,"^9",7,"^:",112,"^;",10,"^4G",["^12",["^4H",["^12",[["~$&","^51"]]]]],"^6","Plots geometries on a map.","~:top-fn",["^ ","^4M",true,"~:fixed-arity",0,"^4O",0,"^4J",[["^12",["^51"]]],"^4G",["^12",[["~$&","^51"]]],"^4L",["^12",[null]]]],"^R","^1V","^7","pinkgorilla/dsl/leaflet.cljc","^;",10,"^55",["^ ","^4M",true,"^56",0,"^4O",0,"^4J",[["^12",["^51"]]],"^4G",["^12",[["~$&","^51"]]],"^4L",["^12",[null]]],"^4J",[["^12",["^51"]]],"^4K",null,"^56",0,"^4L",["^12",[null]],"^9",1,"^4M",true,"~:methods",[["^ ","^56",0,"^4M",true,"^4Z","^2D"]],"^8",112,"^4N","~$any","^:",112,"^4O",0,"^4P",true,"^4G",["^12",[["~$&","^51"]]],"^6","Plots geometries on a map."],"~$geojson",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",118,"^9",7,"^:",118,"^;",14,"^4G",["^12",["^4H",["^12",[["~$&","^51"]]]]],"^6","Plots geometries on a map.","^55",["^ ","^4M",true,"^56",0,"^4O",0,"^4J",[["^12",["^51"]]],"^4G",["^12",[["~$&","^51"]]],"^4L",["^12",[null]]]],"^R","^21","^7","pinkgorilla/dsl/leaflet.cljc","^;",14,"^55",["^ ","^4M",true,"^56",0,"^4O",0,"^4J",[["^12",["^51"]]],"^4G",["^12",[["~$&","^51"]]],"^4L",["^12",[null]]],"^4J",[["^12",["^51"]]],"^4K",null,"^56",0,"^4L",["^12",[null]],"^9",1,"^4M",true,"^57",[["^ ","^56",0,"^4M",true,"^4Z","^2D"]],"^8",118,"^4N","^58","^:",118,"^4O",0,"^4P",true,"^4G",["^12",[["~$&","^51"]]],"^6","Plots geometries on a map."],"~$LeafletView",["^ ","~:num-fields",2,"~:protocols",["^Q",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^4T","~$cljs.core/ILookup"]],"^R","^2D","^7","pinkgorilla/dsl/leaflet.cljc","^;",23,"~:type",true,"^9",12,"^4D",true,"^8",110,"~:record",true,"^:",110,"^4Z","~$function","~:skip-protocol-flag",["^Q",["^5=","^5>","^5?","^5@","^5A","^5B","^5C","^5D","^5E","^5F","^5G","^5H","^5I","^4T","^5J"]]],"~$polygon-feature",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",51,"^9",8,"^:",51,"^;",23,"^4R",true,"^4G",["^12",["^4H",["^12",[["~$coords-arrays"]]]]]],"^4R",true,"^R","^1D","^7","pinkgorilla/dsl/leaflet.cljc","^;",23,"^4J",["^12",[["^5P"]]],"^4K",null,"^4L",["^12",[null,null]],"^9",1,"^4M",false,"^8",51,"^4N","^4T","^:",51,"^4O",1,"^4P",true,"^4G",["^12",["^4H",["^12",[["^5P"]]]]]],"~$linestring-feature",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",46,"^9",8,"^:",46,"^;",26,"^4R",true,"^4G",["^12",["^4H",["^12",[["^4S"]]]]]],"^4R",true,"^R","^2@","^7","pinkgorilla/dsl/leaflet.cljc","^;",26,"^4J",["^12",[["^4S"]]],"^4K",null,"^4L",["^12",[null,null]],"^9",1,"^4M",false,"^8",46,"^4N","^4T","^:",46,"^4O",1,"^4P",true,"^4G",["^12",["^4H",["^12",[["^4S"]]]]]],"~$transpose-coord",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",38,"^9",8,"^:",38,"^;",23,"^4R",true,"^4G",["^12",["^4H",["^12",[[["~$lat","~$lon"]]]]]]],"^4R",true,"^R","^1F","^7","pinkgorilla/dsl/leaflet.cljc","^;",23,"^4J",["^12",[["~$p__102620"]]],"^4K",null,"^4L",["^12",[null,null]],"^9",1,"^4M",false,"^8",38,"^4N","^52","^:",38,"^4O",1,"^4P",true,"^4G",["^12",["^4H",["^12",[[["^5S","^5T"]]]]]]],"~$canonicalize-geodesc",["^ ","^4C",null,"^5",["^ ","^7","pinkgorilla/dsl/leaflet.cljc","^8",102,"^9",7,"^:",102,"^;",27,"^4G",["^12",["^4H",["^12",[["~$default-type","~$g"]]]]]],"^R","^2=","^7","pinkgorilla/dsl/leaflet.cljc","^;",27,"^4J",["^12",[["^5W","~$g"]]],"^4K",null,"^4L",["^12",[null,null]],"^9",1,"^4M",false,"^8",102,"^4N","^4T","^:",102,"^4O",2,"^4P",true,"^4G",["^12",["^4H",["^12",[["^5W","~$g"]]]]]]],"^10",["^ ","^X","^X"],"~:cljs.analyzer/constants",["^ ","^Z",["^Q",["~:zoom","~:coordinates","~:line-join","~:desc","~:color","~:Feature","~:default","~:geojson","~:width","^5K","~:points","~:geometry","~:center","~:dash-array","^8","~:weight","~:opacity","~:opts","~:MultiPoint","~:geodescs","~:hierarchy","~:line-cap","^4X","^4W","~:LineString","~:Polygon","~:height","~:polygon"]],"~:order",["^5Y","^5[","^61","^65","^68","^69","^6:","^6;","^6@","^6C","^5K","^67","^62","^5Z","^6=","^6A","^6B","^6?","^63","^64","^60","^66","^8","^6D","^6>","^6<","^4W","^4X"]],"^14",["^ "],"^15",["^ "],"^16",["^Y","^X"]],"^U","^S","~:ns-specs",["^ "],"~:ns-spec-vars",["^Q",[]],"~:compiler-options",["^2L",[["^6H","~:static-fns"],true,["^6H","~:shadow-tweaks"],null,["^6H","~:source-map-inline"],null,["^6H","~:elide-asserts"],false,["^6H","~:optimize-constants"],null,["^6H","^1;"],null,["^6H","~:external-config"],null,["^6H","~:tooling-config"],null,["^6H","~:emit-constants"],null,["^6H","~:load-tests"],null,["^6H","~:form-size-threshold"],null,["^6H","~:data-readers"],null,["^6H","~:infer-externs"],"~:auto",["^6H","^1="],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6H","~:fn-invoke-direct"],null,["^6H","~:source-map"],"/dev/null"]]]