["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.fn');\n/**\n * Construct function form.\n */\nrewrite_clj.node.fn.construct_fn = (function rewrite_clj$node$fn$construct_fn(syms,vararg,body){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(new cljs.core.List(null,cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(syms,(cljs.core.truth_(vararg)?(new cljs.core.List(null,new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),(new cljs.core.List(null,vararg,null,(1),null)),(2),null)):null))),(new cljs.core.List(null,body,null,(1),null)),(2),null)),(3),null));\n});\n/**\n * Get index based on the substring following the parameter's `%`.\n * Zero means vararg.\n */\nrewrite_clj.node.fn.sym_index = (function rewrite_clj$node$fn$sym_index(n){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,\"&\")){\nreturn (0);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,\"\")){\nreturn (1);\n} else {\nif(cljs.core.truth_(cljs.core.re_matches(/\\d+/,n))){\nreturn parseInt(n);\n} else {\nthrow (new Error(\"arg literal must be %, %& or %integer.\"));\n\n}\n}\n}\n});\n/**\n * If symbol starting with `%`, convert to respective gensym.\n */\nrewrite_clj.node.fn.symbol__GT_gensym = (function rewrite_clj$node$fn$symbol__GT_gensym(sym_seq,vararg_QMARK_,max_n,sym){\nif((sym instanceof cljs.core.Symbol)){\nvar nm = cljs.core.name(sym);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(nm.indexOf(\"%\"),(0))){\nvar i = rewrite_clj.node.fn.sym_index(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(nm,(1)));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(max_n,cljs.core.max,i);\n\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(sym_seq,i);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Walk the form and create an expand function form.\n */\nrewrite_clj.node.fn.fn_walk = (function rewrite_clj$node$fn$fn_walk(form){\nvar syms = (function (){var iter__4564__auto__ = (function rewrite_clj$node$fn$fn_walk_$_iter__82741(s__82742){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__82742__$1 = s__82742;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__82742__$1);\nif(temp__5753__auto__){\nvar s__82742__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__82742__$2)){\nvar c__4562__auto__ = cljs.core.chunk_first(s__82742__$2);\nvar size__4563__auto__ = cljs.core.count(c__4562__auto__);\nvar b__82744 = cljs.core.chunk_buffer(size__4563__auto__);\nif((function (){var i__82743 = (0);\nwhile(true){\nif((i__82743 < size__4563__auto__)){\nvar i = cljs.core._nth(c__4562__auto__,i__82743);\nvar base = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i,(0)))?\"rest__\":[\"p\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i),\"__\"].join(''));\nvar s = cljs.core.name(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(base));\ncljs.core.chunk_append(b__82744,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([s,\"#\"].join('')));\n\nvar G__82792 = (i__82743 + (1));\ni__82743 = G__82792;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__82744),rewrite_clj$node$fn$fn_walk_$_iter__82741(cljs.core.chunk_rest(s__82742__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__82744),null);\n}\n} else {\nvar i = cljs.core.first(s__82742__$2);\nvar base = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i,(0)))?\"rest__\":[\"p\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i),\"__\"].join(''));\nvar s = cljs.core.name(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(base));\nreturn cljs.core.cons(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([s,\"#\"].join('')),rewrite_clj$node$fn$fn_walk_$_iter__82741(cljs.core.rest(s__82742__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4564__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$0());\n})();\nvar vararg_QMARK_ = false;\nvar max_n = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nvar body = clojure.walk.prewalk((function (p1__82740_SHARP_){\nvar or__4160__auto__ = rewrite_clj.node.fn.symbol__GT_gensym(syms,vararg_QMARK_,max_n,p1__82740_SHARP_);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn p1__82740_SHARP_;\n}\n}),form);\nreturn rewrite_clj.node.fn.construct_fn(cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(max_n),cljs.core.rest(syms)),null,body);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {rewrite_clj.node.protocols.InnerNode}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.fn.FnNode = (function (children,__meta,__extmap,__hash){\nthis.children = children;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(rewrite_clj.node.fn.FnNode.prototype.toString = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn this$.rewrite_clj$node$protocols$Node$string$arity$1(null);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4415__auto__,k__4416__auto__){\nvar self__ = this;\nvar this__4415__auto____$1 = this;\nreturn this__4415__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4416__auto__,null);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4417__auto__,k82747,else__4418__auto__){\nvar self__ = this;\nvar this__4417__auto____$1 = this;\nvar G__82758 = k82747;\nvar G__82758__$1 = (((G__82758 instanceof cljs.core.Keyword))?G__82758.fqn:null);\nswitch (G__82758__$1) {\ncase \"children\":\nreturn self__.children;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k82747,else__4418__auto__);\n\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4434__auto__,f__4435__auto__,init__4436__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4437__auto__,p__82759){\nvar vec__82760 = p__82759;\nvar k__4438__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82760,(0),null);\nvar v__4439__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82760,(1),null);\nreturn (f__4435__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4435__auto__.cljs$core$IFn$_invoke$arity$3(ret__4437__auto__,k__4438__auto__,v__4439__auto__) : f__4435__auto__.call(null,ret__4437__auto__,k__4438__auto__,v__4439__auto__));\n}),init__4436__auto__,this__4434__auto____$1);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4429__auto__,writer__4430__auto__,opts__4431__auto__){\nvar self__ = this;\nvar this__4429__auto____$1 = this;\nvar pr_pair__4432__auto__ = (function (keyval__4433__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4431__auto__,keyval__4433__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,pr_pair__4432__auto__,\"#rewrite-clj.node.fn.FnNode{\",\", \",\"}\",opts__4431__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children],null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__82746){\nvar self__ = this;\nvar G__82746__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__82746__$1,1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4413__auto__){\nvar self__ = this;\nvar this__4413__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4410__auto__){\nvar self__ = this;\nvar this__4410__auto____$1 = this;\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4419__auto__){\nvar self__ = this;\nvar this__4419__auto____$1 = this;\nreturn (1 + cljs.core.count(self__.__extmap));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4411__auto__){\nvar self__ = this;\nvar this__4411__auto____$1 = this;\nvar h__4273__auto__ = self__.__hash;\nif((!((h__4273__auto__ == null)))){\nreturn h__4273__auto__;\n} else {\nvar h__4273__auto____$1 = (function (coll__4412__auto__){\nreturn (-1740346885 ^ cljs.core.hash_unordered_coll(coll__4412__auto__));\n})(this__4411__auto____$1);\n(self__.__hash = h__4273__auto____$1);\n\nreturn h__4273__auto____$1;\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this82748,other82749){\nvar self__ = this;\nvar this82748__$1 = this;\nreturn (((!((other82749 == null)))) && ((this82748__$1.constructor === other82749.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this82748__$1.children,other82749.children)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this82748__$1.__extmap,other82749.__extmap)));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn false;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn rewrite_clj.node.fn.fn_walk(rewrite_clj.node.protocols.sexprs(self__.children));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn ((3) + rewrite_clj.node.protocols.sum_lengths(self__.children));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn [\"#(\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings(self__.children)),\")\"].join('');\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4424__auto__,k__4425__auto__){\nvar self__ = this;\nvar this__4424__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),null], null), null),k__4425__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4424__auto____$1),self__.__meta),k__4425__auto__);\n} else {\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4425__auto__)),null));\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn true;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.children;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){\nvar self__ = this;\nvar this$__$1 = this;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children_SINGLEQUOTE_);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4422__auto__,k__4423__auto__,G__82746){\nvar self__ = this;\nvar this__4422__auto____$1 = this;\nvar pred__82779 = cljs.core.keyword_identical_QMARK_;\nvar expr__82780 = k__4423__auto__;\nif(cljs.core.truth_((pred__82779.cljs$core$IFn$_invoke$arity$2 ? pred__82779.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),expr__82780) : pred__82779.call(null,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),expr__82780)))){\nreturn (new rewrite_clj.node.fn.FnNode(G__82746,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4423__auto__,G__82746),null));\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4427__auto__){\nvar self__ = this;\nvar this__4427__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children,null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4414__auto__,G__82746){\nvar self__ = this;\nvar this__4414__auto____$1 = this;\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,G__82746,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4420__auto__,entry__4421__auto__){\nvar self__ = this;\nvar this__4420__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4421__auto__)){\nreturn this__4420__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4421__auto__,(0)),cljs.core._nth(entry__4421__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4420__auto____$1,entry__4421__auto__);\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"children\",\"children\",699969545,null)], null);\n}));\n\n(rewrite_clj.node.fn.FnNode.cljs$lang$type = true);\n\n(rewrite_clj.node.fn.FnNode.cljs$lang$ctorPrSeq = (function (this__4458__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.fn/FnNode\",null,(1),null));\n}));\n\n(rewrite_clj.node.fn.FnNode.cljs$lang$ctorPrWriter = (function (this__4458__auto__,writer__4459__auto__){\nreturn cljs.core._write(writer__4459__auto__,\"rewrite-clj.node.fn/FnNode\");\n}));\n\n/**\n * Positional factory function for rewrite-clj.node.fn/FnNode.\n */\nrewrite_clj.node.fn.__GT_FnNode = (function rewrite_clj$node$fn$__GT_FnNode(children){\nreturn (new rewrite_clj.node.fn.FnNode(children,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.fn.map__GT_FnNode = (function rewrite_clj$node$fn$map__GT_FnNode(G__82750){\nvar extmap__4454__auto__ = (function (){var G__82789 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(G__82750,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nif(cljs.core.record_QMARK_(G__82750)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__82789);\n} else {\nreturn G__82789;\n}\n})();\nreturn (new rewrite_clj.node.fn.FnNode(new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__82750),null,cljs.core.not_empty(extmap__4454__auto__),null));\n});\n\n/**\n * Create node representing an anonymous function.\n */\nrewrite_clj.node.fn.fn_node = (function rewrite_clj$node$fn$fn_node(children){\nreturn rewrite_clj.node.fn.__GT_FnNode(children);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/fn.cljs","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",33,"~:no-doc",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.fn","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node.protocols","^X","~$node","^X","~$clojure.walk","^Z","~$w","^Z","~$cljs.core","^[","~$goog","^10"],"~:seen",["^Q",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^[","^["],"~:form",["~#list",["~$ns","^S",["^16",["^12",["^X","~:as","^Y"],["^Z","^18","~$w"]]]]],"~:flags",["^ ","^12",["^Q",[]]],"~:js-deps",["^ "],"~:deps",["^10","^[","^X","^Z"]],"^U","^S","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/fn.cljs"],"~:compiled-at",1621210459397,"~:resource-name","rewrite_clj/node/fn.cljs","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.fn\n  (:require [rewrite-clj.node.protocols :as node]\n            [clojure.walk :as w]))\n\n;; ## Conversion\n\n(defn- construct-fn\n  \"Construct function form.\"\n  [syms vararg body]\n  (list\n    'fn*\n    (vec\n      (concat\n        syms\n        (if vararg\n          (list '& vararg))))\n    body))\n\n(defn- sym-index\n  \"Get index based on the substring following the parameter's `%`.\n   Zero means vararg.\"\n  [n]\n  (cond (= n \"&\") 0\n        (= n \"\") 1\n        (re-matches #\"\\d+\" n) (js/parseInt n)\n        :else (throw (js/Error. \"arg literal must be %, %& or %integer.\"))))\n\n;; TODO: No promises available\n(defn- symbol->gensym\n  \"If symbol starting with `%`, convert to respective gensym.\"\n  [sym-seq vararg? max-n sym]\n  (if (symbol? sym)\n    (let [nm (name sym)]\n      (if (= (.indexOf nm \"%\") 0)\n        (let [i (sym-index (subs nm 1))]\n;;           (if (and (= i 0) (not (realized? vararg?)))\n;;             (deliver vararg? true))\n          (swap! max-n max i)\n          (nth sym-seq i))))))\n\n;; TODO: No promises available\n(defn- fn-walk\n  \"Walk the form and create an expand function form.\"\n  [form]\n  (let [syms (for [i (range)\n                   :let [base (if (= i 0)\n                                \"rest__\"\n                                (str \"p\" i \"__\"))\n                         s (name (gensym base))]]\n               (symbol (str s \"#\")))\n        vararg? false ;(promise)\n        max-n (atom 0)\n        body (w/prewalk\n               #(or (symbol->gensym syms vararg? max-n %) %)\n               form)]\n    (construct-fn\n      (take @max-n (rest syms))\n      nil\n;;       (if (deref vararg? 0 nil)\n;;         (first syms))\n      body)))\n\n;; ## Node\n\n(defrecord FnNode [children]\n  node/Node\n  (tag [_] :fn)\n  (printable-only? [_]\n    false)\n  (sexpr [_]\n    (fn-walk (node/sexprs children)))\n  (length [_]\n    (+ 3 (node/sum-lengths children)))\n  (string [_]\n    (str \"#(\" (node/concat-strings children) \")\"))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;; TODO\n;(node/make-printable! FnNode)\n\n;; ## Constructor\n\n(defn fn-node\n  \"Create node representing an anonymous function.\"\n  [children]\n  (->FnNode children))\n","~:reader-features",["^Q",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.node.fn/construct-fn","syms","vararg","body","cljs.core/List","cljs.core/vec","cljs.core.concat","rewrite-clj.node.fn/sym-index","n","cljs.core._EQ_","cljs.core/re-matches","js/parseInt","js/Error","rewrite-clj.node.fn/symbol->gensym","sym-seq","vararg?","max-n","sym","cljs.core/Symbol","nm","cljs.core/name","i","cljs.core.subs","cljs.core.swap_BANG_","cljs.core/max","cljs.core.nth","rewrite-clj.node.fn/fn-walk","form","iter__4564__auto__","s__82742","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4562__auto__","size__4563__auto__","cljs.core/count","b__82744","cljs.core/chunk-buffer","i__82743","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__82741","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core.range","base","s","cljs.core.gensym","cljs.core.symbol","cljs.core.atom","p1__82740#","clojure.walk/prewalk","or__4160__auto__","cljs.core/deref","cljs.core.take","this__4415__auto__","k__4416__auto__","this__4417__auto__","k82747","else__4418__auto__","G__82758","cljs.core/Keyword","children","cljs.core.get","__extmap","this__4434__auto__","f__4435__auto__","init__4436__auto__","cljs.core.reduce","ret__4437__auto__","p__82759","vec__82760","k__4438__auto__","v__4439__auto__","this__4429__auto__","writer__4430__auto__","opts__4431__auto__","pr-pair__4432__auto__","keyval__4433__auto__","cljs.core/pr-sequential-writer","cljs.core/PersistentVector","G__82746","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4413__auto__","__meta","this__4410__auto__","__hash","this__4419__auto__","this__4411__auto__","h__4273__auto__","coll__4412__auto__","cljs.core/hash-unordered-coll","this82748","other82749","cljs.core/PROTOCOL_SENTINEL","this__4424__auto__","k__4425__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4422__auto__","k__4423__auto__","pred__82779","cljs.core/keyword-identical?","expr__82780","cljs.core.assoc","this__4427__auto__","cljs.core/MapEntry","this__4414__auto__","this__4420__auto__","entry__4421__auto__","cljs.core/vector?","cljs.core/-conj","rewrite-clj.node.fn/FnNode","this__4458__auto__","writer__4459__auto__","cljs.core/-write","G__82750","extmap__4454__auto__","G__82789","cljs.core/record?","rewrite-clj.node.fn/->FnNode","rewrite-clj.node.fn/map->FnNode","_","rewrite-clj.node.protocols/sexprs","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","this","children'","rewrite-clj.node.fn/fn-node","cljs.core/chunk-first"]],"~:used-vars",["^Q",["~$rewrite-clj.node.fn/FnNode","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$cljs.core/=","~$rewrite-clj.node.fn/->FnNode","~$cljs.core/-assoc","~$cljs.core/re-matches","~$cljs.core/-write","~$rewrite-clj.node.fn/symbol->gensym","~$cljs.core/-iterator","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/take","~$rewrite-clj.node.protocols/concat-strings","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$rewrite-clj.node.fn/fn-node","~$cljs.core/-with-meta","~$cljs.core/concat","~$rewrite-clj.node.protocols/sexprs","~$rewrite-clj.node.fn/map->FnNode","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/-conj","~$cljs.core/PersistentVector","~$cljs.core/List","~$cljs.core/swap!","~$js/parseInt","~$cljs.core/get","~$cljs.core/-nth","~$cljs.core/not-empty","~$rewrite-clj.node.fn/fn-walk","~$rewrite-clj.node.fn/sym-index","~$cljs.core/-lookup","~$cljs.core/nth","~$cljs.core/max","~$cljs.core/nil-iter","~$rewrite-clj.node.fn/construct-fn","~$cljs.core/vec","~$cljs.core/RecordIter","~$rewrite-clj.node.protocols/string","~$cljs.core/not","~$cljs.core/assoc","~$cljs.core/Symbol","~$rewrite-clj.node.protocols/sum-lengths","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^1=","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Q",[]],"~:deps-syms",["^10","~$goog.dom.HtmlElement"]]],["^1=","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","~$goog.array","~$goog.asserts"]]],["^1=","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2V","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1=","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2Z"]]],["^1=","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W"]]],["^1=","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^1=","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W","~$goog.reflect"]]],["^1=","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W","~$goog.fs.blob","^2[","~$goog.html.SafeScript","~$goog.html.trustedtypes","^31","^32","^33","^34"]]],["^1=","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2V","^2W","~$goog.html.SafeUrl","^33","^34","^2Z"]]],["^1=","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^38","~$goog.html.SafeStyle","^3:","^30","~$goog.html.uncheckedconversions","^33","^2Z"]]],["^1=","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^["]]],["^1=","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1=","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2V","^2W","~$goog.dom.TagName","~$goog.dom.tags","^38","^3>","~$goog.html.SafeStyleSheet","^3:","^30","^39","^31","^32","~$goog.labs.userAgent.browser","^2Y","^33","^34","^2Z"]]],["^1=","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2Y"]]],["^1=","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2V"]]],["^1=","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1=","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2V","^2W","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","rewrite_clj/node/protocols.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^[","~$clojure.string"]]],["^1=","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",[]]],["^1=","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2V","^2Y"]]],["^1=","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^[","^3H","~$goog.string.StringBuffer"]]],["^1=","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","~$goog.dom.safe","^3?","^33","^2Z"]]],["^1=","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","rewrite_clj/node/fn.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^[","^X","^Z"]]],["^1=","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2Z"]]],["^1=","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2V","^2W","^3<","~$goog.math"]]],["^1=","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W","^3=","^38","^3>","^3D","^3:","^30","^33","^2Z","^31"]]],["^1=","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10"]]],["^1=","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","~$goog.math.Long","~$goog.math.Integer","^3H","^2Y","^2V","~$goog.Uri","^3O"]]],["^1=","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^33","^34","^39","^2W"]]],["^1=","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^33","^3>","^34","^2V","^2Y","^2W","^2Z"]]],["^1=","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^36"]]],["^1=","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W","^3H"]]],["^1=","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^Q",[]],"^2T",["^10","^2W","^34"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",1,"^8",14,"^9",1,"^:",33,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N"],"^O",null,"^P",["^Q",[]],"^R","^S","^V",null,"^W",["^ ","^X","^X","^Y","^X","^Z","^Z","~$w","^Z","^[","^[","^10","^10"],"^11",["^Q",["^12"]],"~:shadow/js-access-global",["^Q",["Error","parseInt"]],"^13",null,"~:defs",["^ ","~$construct-fn",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",7,"^8",8,"^9",7,"^:",20,"~:private",true,"~:arglists",["^16",["~$quote",["^16",[["~$syms","~$vararg","~$body"]]]]],"~:doc","Construct function form."],"^4J",true,"^R","^2F","^6","rewrite_clj/node/fn.cljs","^:",20,"~:method-params",["^16",[["^4M","^4N","^4O"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"~:ret-tag","^2:","^9",7,"~:max-fixed-arity",3,"~:fn-var",true,"^4K",["^16",["^4L",["^16",[["^4M","^4N","^4O"]]]]],"^4P","Construct function form."],"~$sym-index",["^ ","^4I",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",19,"^8",8,"^9",19,"^:",17,"^4J",true,"^4K",["^16",["^4L",["^16",[["~$n"]]]]],"^4P","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"^4J",true,"^R","^2A","^6","rewrite_clj/node/fn.cljs","^:",17,"^4Q",["^16",[["~$n"]]],"^4R",null,"^4S",["^16",[null,null]],"^8",1,"^4T",false,"^7",19,"^4U",["^Q",["~$js","~$number"]],"^9",19,"^4V",1,"^4W",true,"^4K",["^16",["^4L",["^16",[["~$n"]]]]],"^4P","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"~$symbol->gensym",["^ ","^4I",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",29,"^8",8,"^9",29,"^:",22,"^4J",true,"^4K",["^16",["^4L",["^16",[["~$sym-seq","~$vararg?","~$max-n","~$sym"]]]]],"^4P","If symbol starting with `%`, convert to respective gensym."],"^4J",true,"^R","^1S","^6","rewrite_clj/node/fn.cljs","^:",22,"^4Q",["^16",[["^50","^51","^52","^53"]]],"^4R",null,"^4S",["^16",[null,null]],"^8",1,"^4T",false,"^7",29,"^4U",["^Q",["~$any","~$clj-nil"]],"^9",29,"^4V",4,"^4W",true,"^4K",["^16",["^4L",["^16",[["^50","^51","^52","^53"]]]]],"^4P","If symbol starting with `%`, convert to respective gensym."],"~$fn-walk",["^ ","^4I",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",42,"^8",8,"^9",42,"^:",15,"^4J",true,"^4K",["^16",["^4L",["^16",[["~$form"]]]]],"^4P","Walk the form and create an expand function form."],"^4J",true,"^R","^2@","^6","rewrite_clj/node/fn.cljs","^:",15,"^4Q",["^16",[["^57"]]],"^4R",null,"^4S",["^16",[null,null]],"^8",1,"^4T",false,"^7",42,"^4U","^2:","^9",42,"^4V",1,"^4W",true,"^4K",["^16",["^4L",["^16",[["^57"]]]]],"^4P","Walk the form and create an expand function form."],"~$FnNode",["^ ","~:num-fields",1,"~:protocols",["^Q",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^R","^1I","^6","rewrite_clj/node/fn.cljs","^:",18,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",65,"~:record",true,"^9",65,"~:tag","~$function","~:skip-protocol-flag",["^Q",["^5;","^5<","^5=","^5>","^5?","^5A","^5C","^5D","^5E","^5F","^5G","^5I","^5J","^5K","^5L"]]],"~$->FnNode",["^ ","^4I",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^:",18,"^8",12,"^5N",true,"~:factory","~:positional","^7",65,"^9",65,"^4K",["^16",["^4L",["^16",[["~$children"]]]]],"^4P","Positional factory function for rewrite-clj.node.fn/FnNode."],"^R","^1O","^6","rewrite_clj/node/fn.cljs","^:",18,"^4Q",["^16",[["^5V"]]],"^4R",null,"^4S",["^16",[null,null]],"^8",1,"^5N",true,"^4T",false,"^5T","^5U","^7",65,"^4U","^1I","^9",65,"^4V",1,"^4W",true,"^4K",["^16",["^4L",["^16",[["^5V"]]]]],"^4P","Positional factory function for rewrite-clj.node.fn/FnNode."],"~$map->FnNode",["^ ","^4I",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^:",18,"^8",12,"^5N",true,"^5T","~:map","^7",65,"^9",65,"^4K",["^16",["^4L",["^16",[["~$G__82750"]]]]],"^4P","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"^R","^25","^6","rewrite_clj/node/fn.cljs","^:",18,"^4Q",["^16",[["^5Y"]]],"^4R",null,"^4S",["^16",[null,null]],"^8",1,"^5N",true,"^4T",false,"^5T","^5X","^7",65,"^4U","^1I","^9",65,"^4V",1,"^4W",true,"^4K",["^16",["^4L",["^16",[["^5Y"]]]]],"^4P","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"~$fn-node",["^ ","^4I",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",94,"^8",7,"^9",94,"^:",14,"^4K",["^16",["^4L",["^16",[["^5V"]]]]],"^4P","Create node representing an anonymous function."],"^R","^21","^6","rewrite_clj/node/fn.cljs","^:",14,"^4Q",["^16",[["^5V"]]],"^4R",null,"^4S",["^16",[null,null]],"^8",1,"^4T",false,"^7",94,"^4U","^1I","^9",94,"^4V",1,"^4W",true,"^4K",["^16",["^4L",["^16",[["^5V"]]]]],"^4P","Create node representing an anonymous function."]],"^14",["^ ","^[","^["],"~:cljs.analyzer/constants",["^ ","^11",["^Q",["~$&","~:children","~:fn","~:else","^5V","~$fn*"]],"~:order",["^63","~$&","^62","^60","^61","^5V"]],"^19",["^ ","^12",["^Q",[]]],"^1:",["^ "],"^1;",["^10","^[","^X","^Z"]],"^U","^S","~:ns-specs",["^ "],"~:ns-spec-vars",["^Q",[]],"~:compiler-options",["^2P",[["^67","~:static-fns"],true,["^67","~:shadow-tweaks"],null,["^67","~:source-map-inline"],null,["^67","~:elide-asserts"],false,["^67","~:optimize-constants"],null,["^67","^1@"],null,["^67","~:external-config"],null,["^67","~:tooling-config"],null,["^67","~:emit-constants"],null,["^67","~:load-tests"],null,["^67","~:form-size-threshold"],null,["^67","~:data-readers"],null,["^67","~:infer-externs"],"~:auto",["^67","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^67","~:fn-invoke-direct"],null,["^67","~:source-map"],"/dev/null"]]]