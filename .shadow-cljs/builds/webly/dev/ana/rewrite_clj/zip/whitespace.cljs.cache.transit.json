["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.whitespace');\nrewrite_clj.zip.whitespace.whitespace_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_QMARK_(zloc){\nvar G__83006 = zloc;\nvar G__83006__$1 = (((G__83006 == null))?null:clojure.zip.node(G__83006));\nif((G__83006__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1(G__83006__$1) : rewrite_clj.node.whitespace_QMARK_.call(null,G__83006__$1));\n}\n});\nrewrite_clj.zip.whitespace.linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$linebreak_QMARK_(zloc){\nvar G__83007 = zloc;\nvar G__83007__$1 = (((G__83007 == null))?null:clojure.zip.node(G__83007));\nif((G__83007__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1(G__83007__$1) : rewrite_clj.node.linebreak_QMARK_.call(null,G__83007__$1));\n}\n});\nrewrite_clj.zip.whitespace.comment_QMARK_ = (function rewrite_clj$zip$whitespace$comment_QMARK_(zloc){\nvar G__83008 = zloc;\nvar G__83008__$1 = (((G__83008 == null))?null:clojure.zip.node(G__83008));\nif((G__83008__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1(G__83008__$1) : rewrite_clj.node.comment_QMARK_.call(null,G__83008__$1));\n}\n});\nrewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_not_linebreak_QMARK_(zloc){\nvar and__4149__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(zloc);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(zloc));\n} else {\nreturn and__4149__auto__;\n}\n});\nrewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_or_comment_QMARK_(zloc){\nvar G__83009 = zloc;\nvar G__83009__$1 = (((G__83009 == null))?null:clojure.zip.node(G__83009));\nif((G__83009__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.whitespace_or_comment_QMARK_(G__83009__$1);\n}\n});\n/**\n * Perform the given movement while the given predicate returns true.\n */\nrewrite_clj.zip.whitespace.skip = (function rewrite_clj$zip$whitespace$skip(f,p_QMARK_,zloc){\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(p_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(clojure.zip.end_QMARK_),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.iterate(f,zloc)))));\n});\n/**\n * Perform the given movement (default: `z/right`) until a non-whitespace/\n * non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace = (function rewrite_clj$zip$whitespace$skip_whitespace(var_args){\nvar G__83011 = arguments.length;\nswitch (G__83011) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.right,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = (function (f,zloc){\nreturn rewrite_clj.zip.whitespace.skip(f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2);\n\n/**\n * Move left until a non-whitespace/non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace_left = (function rewrite_clj$zip$whitespace$skip_whitespace_left(zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.left,zloc);\n});\n/**\n * Prepend a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_space = (function rewrite_clj$zip$whitespace$prepend_space(var_args){\nvar G__83013 = arguments.length;\nswitch (G__83013) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.append_space = (function rewrite_clj$zip$whitespace$append_space(var_args){\nvar G__83015 = arguments.length;\nswitch (G__83015) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Prepend a newlines node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_newline = (function rewrite_clj$zip$whitespace$prepend_newline(var_args){\nvar G__83018 = arguments.length;\nswitch (G__83018) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a newline node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.append_newline = (function rewrite_clj$zip$whitespace$append_newline(var_args){\nvar G__83020 = arguments.length;\nswitch (G__83020) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^W","~$node","^W","~$clojure.zip","^Y","~$z","^Y","~$cljs.core","^Z","~$goog","^["],"~:seen",["^P",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Z","^Z"],"~:form",["~#list",["~$ns","^R",["^15",["^11",["^W","~:as","^X"],["^Y","^17","~$z"]]]]],"~:flags",["^ ","^11",["^P",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^W","^Y"]],"^T","^R","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/whitespace.cljs"],"~:compiled-at",1621210459644,"~:resource-name","rewrite_clj/zip/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.whitespace\n  (:require [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n;; ## Predicates\n\n(defn whitespace?\n  [zloc]\n  (some-> zloc z/node node/whitespace?))\n\n(defn linebreak?\n  [zloc]\n  (some-> zloc z/node node/linebreak?))\n\n(defn comment?\n  [zloc]\n  (some-> zloc z/node node/comment?))\n\n(defn whitespace-not-linebreak?\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  [zloc]\n  (some-> zloc z/node node/whitespace-or-comment?))\n\n\n;; ## Movement\n\n(defn skip\n  \"Perform the given movement while the given predicate returns true.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement z/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.\"\n  ([zloc] (skip-whitespace z/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Move left until a non-whitespace/non-comment node is encountered.\"\n  [zloc]\n  (skip-whitespace z/left zloc))\n\n;; ## Insertion\n\n(defn prepend-space\n  \"Prepend a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (prepend-space zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/spaces n))))\n\n(defn append-space\n  \"Append a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (append-space zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/spaces n))))\n\n(defn prepend-newline\n  \"Prepend a newlines node representing the given number of newlines (default: 1).\"\n  ([zloc] (prepend-newline zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/newlines n))))\n\n(defn append-newline\n  \"Append a newline node representing the given number of newlines (default: 1).\"\n  ([zloc] (append-newline zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/newlines n))))\n","~:reader-features",["^P",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.zip.whitespace/whitespace?","zloc","G__83006","clojure.zip/node","rewrite-clj.node/whitespace?","rewrite-clj.zip.whitespace/linebreak?","G__83007","rewrite-clj.node/linebreak?","rewrite-clj.zip.whitespace/comment?","G__83008","rewrite-clj.node/comment?","rewrite-clj.zip.whitespace/whitespace-not-linebreak?","and__4149__auto__","cljs.core/not","rewrite-clj.zip.whitespace/whitespace-or-comment?","G__83009","rewrite-clj.node/whitespace-or-comment?","rewrite-clj.zip.whitespace/skip","f","p?","cljs.core/iterate","cljs.core.take_while","cljs.core/identity","cljs.core/complement","clojure.zip/end?","cljs.core.drop_while","cljs.core/first","var_args","G__83011","rewrite-clj.zip.whitespace/skip-whitespace","js/Error","rewrite_clj.zip.whitespace.skip_whitespace","clojure.zip/right","rewrite-clj.zip.whitespace/skip-whitespace-left","clojure.zip/left","G__83013","rewrite-clj.zip.whitespace/prepend-space","rewrite_clj.zip.whitespace.prepend_space","n","clojure.zip/insert-left","rewrite-clj.node/spaces","G__83015","rewrite-clj.zip.whitespace/append-space","rewrite_clj.zip.whitespace.append_space","clojure.zip/insert-right","G__83018","rewrite-clj.zip.whitespace/prepend-newline","rewrite_clj.zip.whitespace.prepend_newline","rewrite-clj.node/newlines","G__83020","rewrite-clj.zip.whitespace/append-newline","rewrite_clj.zip.whitespace.append_newline"]],"~:used-vars",["^P",["~$rewrite-clj.zip.whitespace/prepend-space","~$rewrite-clj.zip.whitespace/comment?","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","~$rewrite-clj.zip.whitespace/append-newline","~$clojure.zip/end?","~$rewrite-clj.zip.whitespace/prepend-newline","~$cljs.core/take-while","~$cljs.core/drop-while","~$rewrite-clj.zip.whitespace/append-space","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","~$cljs.core/identity","~$rewrite-clj.node/comment?","~$cljs.core/iterate","~$rewrite-clj.zip.whitespace/whitespace?","~$rewrite-clj.node/spaces","~$rewrite-clj.zip.whitespace/skip-whitespace-left","~$clojure.zip/insert-right","~$rewrite-clj.zip.whitespace/skip","~$rewrite-clj.node/whitespace-or-comment?","~$rewrite-clj.node/whitespace?","~$clojure.zip/insert-left","~$rewrite-clj.node/linebreak?","~$clojure.zip/right","~$cljs.core/not","~$cljs.core/complement","~$rewrite-clj.node/newlines","~$rewrite-clj.zip.whitespace/linebreak?","~$cljs.core/first","~$js/Error","~$clojure.zip/left","~$rewrite-clj.zip.whitespace/skip-whitespace"]]],"~:cache-keys",["~#cmap",[["^1<","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^P",[]],"~:deps-syms",["^[","~$goog.dom.HtmlElement"]]],["^1<","rewrite_clj/node/token.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","~$rewrite-clj.node.protocols"]]],["^1<","cljs/tools/reader/impl/utils.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","~$clojure.string","~$goog.string"]]],["^1<","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","~$goog.array","~$goog.asserts"]]],["^1<","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2E","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1<","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2I"]]],["^1<","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F"]]],["^1<","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","cljs/tools/reader/impl/inspect.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z"]]],["^1<","cljs/tools/reader.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^E","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2E","^2D","~$goog.string.StringBuffer"]]],["^1<","rewrite_clj/node/forms.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B"]]],["^1<","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^1<","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F","~$goog.reflect"]]],["^1<","rewrite_clj/node/reader_macro.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B","~$rewrite-clj.node.whitespace"]]],["^1<","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F","~$goog.fs.blob","^2J","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2L","^2M","^2N","^2O"]]],["^1<","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2E","^2F","~$goog.html.SafeUrl","^2N","^2O","^2I"]]],["^1<","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2X","~$goog.html.SafeStyle","^2Z","^2K","~$goog.html.uncheckedconversions","^2N","^2I"]]],["^1<","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z"]]],["^1<","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1<","rewrite_clj/node/meta.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B","^2V"]]],["^1<","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2E","^2F","~$goog.dom.TagName","~$goog.dom.tags","^2X","^32","~$goog.html.SafeStyleSheet","^2Z","^2K","^2Y","^2L","^2M","~$goog.labs.userAgent.browser","^2H","^2N","^2O","^2I"]]],["^1<","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2H"]]],["^1<","rewrite_clj/node/stringz.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B","~$cljs.tools.reader","^2C"]]],["^1<","rewrite_clj/node/comment.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B"]]],["^1<","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2E"]]],["^1<","rewrite_clj/node/keyword.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B"]]],["^1<","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1<","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2E","^2F","^2D","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1<","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","rewrite_clj/node/protocols.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2C"]]],["^1<","rewrite_clj/node/seq.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B"]]],["^1<","rewrite_clj/node/uneval.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B"]]],["^1<","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",[]]],["^1<","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2E","^2H"]]],["^1<","cljs/tools/reader/impl/errors.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^E","^2C","~$cljs.tools.reader.impl.inspect"]]],["^1<","rewrite_clj/node/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B"]]],["^1<","rewrite_clj/node/coercer.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2B","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2V"]]],["^1<","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2D","^2S"]]],["^1<","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","~$goog.dom.safe","^33","^2N","^2I"]]],["^1<","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","rewrite_clj/node/fn.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B","~$clojure.walk"]]],["^1<","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2I"]]],["^1<","rewrite_clj/node.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","~$rewrite-clj.node.coercer","^2B","^3E","^3L","^2V","^3M","^3C","^3D","^3I","^3G","^3K","^3F","^3H","^3J"]]],["^1<","clojure/zip.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z"]]],["^1<","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","cljs/tools/reader/reader_types.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2P","^2D","^2S"]]],["^1<","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2E","^2F","^30","~$goog.math"]]],["^1<","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F","^31","^2X","^32","^38","^2Z","^2K","^2N","^2I","^2L"]]],["^1<","rewrite_clj/node/quote.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2B"]]],["^1<","cljs/tools/reader/impl/commons.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^2R","^E","^2P"]]],["^1<","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^["]]],["^1<","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","~$goog.math.Long","~$goog.math.Integer","^2D","^2H","^2E","~$goog.Uri","^2S"]]],["^1<","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2N","^2O","^2Y","^2F"]]],["^1<","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2N","^32","^2O","^2E","^2H","^2F","^2I"]]],["^1<","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2U"]]],["^1<","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F","^2D"]]],["^1<","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^2F","^2O"]]],["^1<","rewrite_clj/zip/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2=",["^ ","^2>",null,"^2?",["^P",[]],"^2@",["^[","^Z","^W","^Y"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/cljs/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M"],"^N",null,"^O",["^P",[]],"^Q","^R","^U",null,"^V",["^ ","^W","^W","^X","^W","^Y","^Y","~$z","^Y","^Z","^Z","^[","^["],"^10",["^P",["^11"]],"~:shadow/js-access-global",["^P",["Error"]],"^12",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",7,"^8",7,"^9",7,"^:",18,"~:arglists",["^15",["~$quote",["^15",[["~$zloc"]]]]]],"^Q","^1U","^6","rewrite_clj/zip/whitespace.cljs","^:",18,"~:method-params",["^15",[["^4M"]]],"~:protocol-impl",null,"~:arglists-meta",["^15",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"~:ret-tag",["^P",["~$any","~$clj-nil"]],"^9",7,"~:max-fixed-arity",1,"~:fn-var",true,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]],"~$linebreak?",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",11,"^8",7,"^9",11,"^:",17,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]],"^Q","^26","^6","rewrite_clj/zip/whitespace.cljs","^:",17,"^4N",["^15",[["^4M"]]],"^4O",null,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^7",11,"^4R",["^P",["^4S","^4T"]],"^9",11,"^4U",1,"^4V",true,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]],"~$skip",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",32,"^8",7,"^9",32,"^:",11,"^4K",["^15",["^4L",["^15",[["~$f","~$p?","^4M"]]]]],"~:doc","Perform the given movement while the given predicate returns true."],"^Q","^1Y","^6","rewrite_clj/zip/whitespace.cljs","^:",11,"^4N",["^15",[["~$f","^4Y","^4M"]]],"^4O",null,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^7",32,"^4R",["^P",["^4S","^4T"]],"^9",32,"^4U",3,"^4V",true,"^4K",["^15",["^4L",["^15",[["~$f","^4Y","^4M"]]]]],"^4Z","Perform the given movement while the given predicate returns true."],"~$prepend-space",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",54,"^8",7,"^9",54,"^:",20,"^4K",["^15",["^4L",["^15",[["^4M"],["^4M","~$n"]]]]],"^4Z","Prepend a whitespace node representing the given number of spaces (default: 1).","~:top-fn",["^ ","^4Q",false,"~:fixed-arity",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4P",["^15",[null,null]]]],"^Q","^1H","^6","rewrite_clj/zip/whitespace.cljs","^:",20,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4P",["^15",[null,null]]],"^4N",[["^4M"],["^4M","~$n"]],"^4O",null,"^51",2,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"~:methods",[["^ ","^51",1,"^4Q",false,"~:tag","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^P",["~$clj","~$cljs.core/MetaFn","^4T"]]]],"^7",54,"^9",54,"^4U",2,"^4V",true,"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4Z","Prepend a whitespace node representing the given number of spaces (default: 1)."],"~$append-newline",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",72,"^8",7,"^9",72,"^:",21,"^4K",["^15",["^4L",["^15",[["^4M"],["^4M","~$n"]]]]],"^4Z","Append a newline node representing the given number of newlines (default: 1).","^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4P",["^15",[null,null]]]],"^Q","^1K","^6","rewrite_clj/zip/whitespace.cljs","^:",21,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4P",["^15",[null,null]]],"^4N",[["^4M"],["^4M","~$n"]],"^4O",null,"^51",2,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^52",[["^ ","^51",1,"^4Q",false,"^53","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^P",["^54","^55","^4T"]]]],"^7",72,"^9",72,"^4U",2,"^4V",true,"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4Z","Append a newline node representing the given number of newlines (default: 1)."],"~$prepend-newline",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",66,"^8",7,"^9",66,"^:",22,"^4K",["^15",["^4L",["^15",[["^4M"],["^4M","~$n"]]]]],"^4Z","Prepend a newlines node representing the given number of newlines (default: 1).","^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4P",["^15",[null,null]]]],"^Q","^1M","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4P",["^15",[null,null]]],"^4N",[["^4M"],["^4M","~$n"]],"^4O",null,"^51",2,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^52",[["^ ","^51",1,"^4Q",false,"^53","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^P",["^54","^55","^4T"]]]],"^7",66,"^9",66,"^4U",2,"^4V",true,"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4Z","Prepend a newlines node representing the given number of newlines (default: 1)."],"~$append-space",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",60,"^8",7,"^9",60,"^:",19,"^4K",["^15",["^4L",["^15",[["^4M"],["^4M","~$n"]]]]],"^4Z","Append a whitespace node representing the given number of spaces (default: 1).","^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4P",["^15",[null,null]]]],"^Q","^1P","^6","rewrite_clj/zip/whitespace.cljs","^:",19,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4P",["^15",[null,null]]],"^4N",[["^4M"],["^4M","~$n"]],"^4O",null,"^51",2,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^52",[["^ ","^51",1,"^4Q",false,"^53","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^P",["^54","^55","^4T"]]]],"^7",60,"^9",60,"^4U",2,"^4V",true,"^4K",["^15",[["^4M"],["^4M","~$n"]]],"^4Z","Append a whitespace node representing the given number of spaces (default: 1)."],"~$skip-whitespace-left",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",47,"^8",7,"^9",47,"^:",27,"^4K",["^15",["^4L",["^15",[["^4M"]]]]],"^4Z","Move left until a non-whitespace/non-comment node is encountered."],"^Q","^1W","^6","rewrite_clj/zip/whitespace.cljs","^:",27,"^4N",["^15",[["^4M"]]],"^4O",null,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^7",47,"^4R",["^P",["^4S","^4T"]],"^9",47,"^4U",1,"^4V",true,"^4K",["^15",["^4L",["^15",[["^4M"]]]]],"^4Z","Move left until a non-whitespace/non-comment node is encountered."],"~$skip-whitespace",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",41,"^8",7,"^9",41,"^:",22,"^4K",["^15",["^4L",["^15",[["^4M"],["~$f","^4M"]]]]],"^4Z","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.","^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["~$f","^4M"]],"^4K",["^15",[["^4M"],["~$f","^4M"]]],"^4P",["^15",[null,null]]]],"^Q","^2:","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["~$f","^4M"]],"^4K",["^15",[["^4M"],["~$f","^4M"]]],"^4P",["^15",[null,null]]],"^4N",[["^4M"],["~$f","^4M"]],"^4O",null,"^51",2,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^52",[["^ ","^51",1,"^4Q",false,"^53","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^P",["^4S","^4T"]]]],"^7",41,"^9",41,"^4U",2,"^4V",true,"^4K",["^15",[["^4M"],["~$f","^4M"]]],"^4Z","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered."],"~$comment?",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",15,"^8",7,"^9",15,"^:",15,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]],"^Q","^1I","^6","rewrite_clj/zip/whitespace.cljs","^:",15,"^4N",["^15",[["^4M"]]],"^4O",null,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^7",15,"^4R",["^P",["^4S","^4T"]],"^9",15,"^4U",1,"^4V",true,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]],"~$whitespace-not-linebreak?",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",19,"^8",7,"^9",19,"^:",32,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]],"^Q","^1J","^6","rewrite_clj/zip/whitespace.cljs","^:",32,"^4N",["^15",[["^4M"]]],"^4O",null,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^7",19,"^4R",["^P",["~$boolean","^4S","^4T"]],"^9",19,"^4U",1,"^4V",true,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]],"~$whitespace-or-comment?",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",25,"^8",7,"^9",25,"^:",29,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]],"^Q","^1Q","^6","rewrite_clj/zip/whitespace.cljs","^:",29,"^4N",["^15",[["^4M"]]],"^4O",null,"^4P",["^15",[null,null]],"^8",1,"^4Q",false,"^7",25,"^4R",["^P",["^4S","^4T"]],"^9",25,"^4U",1,"^4V",true,"^4K",["^15",["^4L",["^15",[["^4M"]]]]]]],"^13",["^ ","^Z","^Z"],"^18",["^ ","^11",["^P",[]]],"^19",["^ "],"^1:",["^[","^Z","^W","^Y"]],"^T","^R","~:ns-specs",["^ "],"~:ns-spec-vars",["^P",[]],"~:compiler-options",["^2<",[["^5A","~:static-fns"],true,["^5A","~:shadow-tweaks"],null,["^5A","~:source-map-inline"],null,["^5A","~:elide-asserts"],false,["^5A","~:optimize-constants"],null,["^5A","^1?"],null,["^5A","~:external-config"],null,["^5A","~:tooling-config"],null,["^5A","~:emit-constants"],null,["^5A","~:load-tests"],null,["^5A","~:form-size-threshold"],null,["^5A","~:data-readers"],null,["^5A","~:infer-externs"],"~:auto",["^5A","^1A"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5A","~:fn-invoke-direct"],null,["^5A","~:source-map"],"/dev/null"]]]