["^ ","~:output",["^ ","~:js","goog.provide('taoensso.sente');\nif(cljs.core.vector_QMARK_(taoensso.encore.encore_version)){\ntaoensso.encore.assert_min_encore_version(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(105),(0)], null));\n} else {\ntaoensso.encore.assert_min_encore_version(2.105);\n}\n/**\n * Useful for identifying client/server mismatch\n */\ntaoensso.sente.sente_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(11),(0)], null);\ntaoensso.sente.node_target_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\");\nif((typeof taoensso !== 'undefined') && (typeof taoensso.sente !== 'undefined') && (typeof taoensso.sente.debug_mode_QMARK__ !== 'undefined')){\n} else {\ntaoensso.sente.debug_mode_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\n}\ntaoensso.sente.expected = (function taoensso$sente$expected(expected,x){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),expected,new cljs.core.Keyword(null,\"actual\",\"actual\",107306363),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x),new cljs.core.Keyword(null,\"value\",\"value\",305978217),x], null)], null);\n});\n/**\n * Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n *   returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\n */\ntaoensso.sente.validate_event = (function taoensso$sente$validate_event(x){\nif((!(cljs.core.vector_QMARK_(x)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-type\",\"wrong-type\",929556915),taoensso.sente.expected(new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),x)], null);\n} else {\nif(cljs.core.not((function (){var G__75657 = cljs.core.count(x);\nvar fexpr__75656 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null);\nreturn (fexpr__75656.cljs$core$IFn$_invoke$arity$1 ? fexpr__75656.cljs$core$IFn$_invoke$arity$1(G__75657) : fexpr__75656.call(null,G__75657));\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-length\",\"wrong-length\",1367572281),taoensso.sente.expected(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),x)], null);\n} else {\nvar vec__75659 = x;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75659,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75659,(1),null);\nif((!((ev_id instanceof cljs.core.Keyword)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-id-type\",\"wrong-id-type\",-1213601689),taoensso.sente.expected(new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),ev_id)], null);\n} else {\nif(cljs.core.not(cljs.core.namespace(ev_id))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"unnamespaced-id\",\"unnamespaced-id\",1976189772),taoensso.sente.expected(new cljs.core.Keyword(null,\"namespaced-keyword\",\"namespaced-keyword\",131372895),ev_id)], null);\n} else {\nreturn null;\n\n}\n}\n\n}\n}\n});\n/**\n * Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n *   throws a validation exception.\n */\ntaoensso.sente.assert_event = (function taoensso$sente$assert_event(x){\nvar temp__5753__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar errs = temp__5753__auto__;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid event\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"errors\",\"errors\",-908790718),errs], null));\n} else {\nreturn null;\n}\n});\n/**\n * Valid [ev-id ?ev-data] form?\n */\ntaoensso.sente.event_QMARK_ = (function taoensso$sente$event_QMARK_(x){\nreturn (taoensso.sente.validate_event(x) == null);\n});\ntaoensso.sente.as_event = (function taoensso$sente$as_event(x){\nvar temp__5751__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar errs = temp__5751__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-event\",\"chsk/bad-event\",-565206930),x], null);\n} else {\nreturn x;\n}\n});\ntaoensso.sente.client_event_msg_QMARK_ = (function taoensso$sente$client_event_msg_QMARK_(x){\nif(cljs.core.map_QMARK_(x)){\nif(taoensso.encore.ks_GT__EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x)){\nvar map__75668 = x;\nvar map__75668__$1 = cljs.core.__destructure_map(map__75668);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75668__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75668__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75668__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75668__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(state)) && (taoensso.sente.event_QMARK_(event)));\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ntaoensso.sente.server_event_msg_QMARK_ = (function taoensso$sente$server_event_msg_QMARK_(x){\nif(cljs.core.map_QMARK_(x)){\nif(taoensso.encore.ks_GT__EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),null,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),null,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),null,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x)){\nvar map__75705 = x;\nvar map__75705__$1 = cljs.core.__destructure_map(map__75705);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75705__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75705__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar connected_uids = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75705__$1,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231));\nvar send_buffers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75705__$1,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787));\nvar ring_req = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75705__$1,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75705__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75705__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75705__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(connected_uids)) && (taoensso.encore.atom_QMARK_(send_buffers)) && (cljs.core.map_QMARK_(ring_req)) && (taoensso.encore.nblank_str_QMARK_(client_id)) && (taoensso.sente.event_QMARK_(event)) && ((((_QMARK_reply_fn == null)) || (cljs.core.ifn_QMARK_(_QMARK_reply_fn)))));\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n/**\n * All server `event-msg`s go through this\n */\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = (function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv,p__75719){\nvar map__75720 = p__75719;\nvar map__75720__$1 = cljs.core.__destructure_map(map__75720);\nvar ev_msg = map__75720__$1;\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75720__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75720__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nvar vec__75721 = taoensso.sente.as_event(event);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75721,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75721,(1),null);\nvar valid_event = vec__75721;\nvar ev_msg_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),valid_event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null)], 0));\nif((!(taoensso.sente.server_event_msg_QMARK_(ev_msg_STAR_)))){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,194,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad ev-msg: %s\",ev_msg], null);\n}),null)),null,292940533,null);\n} else {\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ch_recv,ev_msg_STAR_);\n}\n});\ntaoensso.sente.cb_error_QMARK_ = (function taoensso$sente$cb_error_QMARK_(cb_reply_clj){\nvar fexpr__75740 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264),null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439),null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489),null], null), null);\nreturn (fexpr__75740.cljs$core$IFn$_invoke$arity$1 ? fexpr__75740.cljs$core$IFn$_invoke$arity$1(cb_reply_clj) : fexpr__75740.call(null,cb_reply_clj));\n});\ntaoensso.sente.cb_success_QMARK_ = (function taoensso$sente$cb_success_QMARK_(cb_reply_clj){\nreturn cljs.core.not(taoensso.sente.cb_error_QMARK_(cb_reply_clj));\n});\n/**\n * prefixed-pstr->[clj ?cb-uuid]\n */\ntaoensso.sente.unpack = (function taoensso$sente$unpack(packer,prefixed_pstr){\nif(typeof prefixed_pstr === 'string'){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",208,\"(string? prefixed-pstr)\",prefixed_pstr,null,null);\n}\n\nvar wrapped_QMARK_ = taoensso.encore.str_starts_with_QMARK_(prefixed_pstr,\"+\");\nvar pstr = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(prefixed_pstr,(1));\nvar clj = (function (){try{return taoensso.sente.interfaces.unpack(packer,pstr);\n}catch (e75759){var t = e75759;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,215,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad package: %s (%s)\",pstr,t], null);\n}),null)),null,-973631052,null);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-package\",\"chsk/bad-package\",501893679),pstr], null);\n}})();\nvar vec__75756 = ((wrapped_QMARK_)?clj:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,null], null));\nvar clj__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75756,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75756,(1),null);\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),_QMARK_cb_uuid))?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):_QMARK_cb_uuid);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,221,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unpacking: %s -> %s\",prefixed_pstr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null)], null);\n}),null)),null,1675189093,null);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null);\n});\n/**\n * clj->prefixed-pstr\n */\ntaoensso.sente.pack = (function taoensso$sente$pack(var_args){\nvar G__75774 = arguments.length;\nswitch (G__75774) {\ncase 2:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2 = (function (packer,clj){\nvar pstr = [\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,228,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (unwrapped): %s -> %s\",clj,pstr], null);\n}),null)),null,-1355407672,null);\n\nreturn pstr;\n}));\n\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3 = (function (packer,clj,_QMARK_cb_uuid){\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_cb_uuid,new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321)))?(0):_QMARK_cb_uuid);\nvar wrapped_clj = (cljs.core.truth_(_QMARK_cb_uuid__$1)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,_QMARK_cb_uuid__$1], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null));\nvar pstr = [\"+\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,wrapped_clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,237,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (wrapped): %s -> %s\",wrapped_clj,pstr], null);\n}),null)),null,2088973889,null);\n\nreturn pstr;\n}));\n\n(taoensso.sente.pack.cljs$lang$maxFixedArity = 3);\n\n\n/**\n* @constructor\n * @implements {taoensso.sente.interfaces.IPacker}\n*/\ntaoensso.sente.EdnPacker = (function (){\n});\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = (function (_,x){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(x);\n}));\n\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = (function (_,s){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(s);\n}));\n\n(taoensso.sente.EdnPacker.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(taoensso.sente.EdnPacker.cljs$lang$type = true);\n\n(taoensso.sente.EdnPacker.cljs$lang$ctorStr = \"taoensso.sente/EdnPacker\");\n\n(taoensso.sente.EdnPacker.cljs$lang$ctorPrWriter = (function (this__4404__auto__,writer__4405__auto__,opt__4406__auto__){\nreturn cljs.core._write(writer__4405__auto__,\"taoensso.sente/EdnPacker\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/EdnPacker.\n */\ntaoensso.sente.__GT_EdnPacker = (function taoensso$sente$__GT_EdnPacker(){\nreturn (new taoensso.sente.EdnPacker());\n});\n\ntaoensso.sente.default_edn_packer = (new taoensso.sente.EdnPacker());\ntaoensso.sente.coerce_packer = (function taoensso$sente$coerce_packer(x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885))){\nreturn taoensso.sente.default_edn_packer;\n} else {\nvar e = (function (){try{if((function (p1__75793_SHARP_){\nif((!((p1__75793_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__75793_SHARP_.taoensso$sente$interfaces$IPacker$)))){\nreturn true;\n} else {\nif((!p1__75793_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__75793_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__75793_SHARP_);\n}\n})(x)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e75804){if((e75804 instanceof Error)){\nvar e = e75804;\nreturn e;\n} else {\nthrow e75804;\n\n}\n}})();\nif((e == null)){\nreturn x;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",250,\"((fn* [p1__75793#] (satisfies? interfaces/IPacker p1__75793#)) x)\",x,e,null);\n}\n}\n});\ntaoensso.sente.next_idx_BANG_ = (taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0 ? taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0() : taoensso.encore.idx_fn.call(null));\n\n\n/**\n * Alpha, subject to change.\n *   Returns true iff given Ring request is allowed by `allowed-origins`.\n *   `allowed-origins` may be `:all` or #{<origin>}.\n */\ntaoensso.sente.allow_origin_QMARK_ = (function taoensso$sente$allow_origin_QMARK_(allowed_origins,ring_req){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(allowed_origins,new cljs.core.Keyword(null,\"all\",\"all\",892129742))){\nreturn true;\n} else {\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nvar origin = cljs.core.get.cljs$core$IFn$_invoke$arity$3(headers,\"origin\",new cljs.core.Keyword(null,\"nx\",\"nx\",-1996436366));\nvar have_origin_QMARK_ = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(origin,new cljs.core.Keyword(null,\"nx\",\"nx\",-1996436366));\nif(((have_origin_QMARK_) && (cljs.core.contains_QMARK_(cljs.core.set(allowed_origins),origin)))){\nreturn true;\n} else {\nvar referer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(headers,\"referer\",\"\");\nif(cljs.core.truth_((((!(have_origin_QMARK_)))?taoensso.encore.rsome((function (p1__75813_SHARP_){\nreturn clojure.string.starts_with_QMARK_(referer,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__75813_SHARP_),\"/\"].join(''));\n}),allowed_origins):false))){\nreturn true;\n} else {\nreturn false;\n}\n}\n}\n});\n/**\n * Takes a web server adapter[1] and returns a map with keys:\n * \n *  :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n *  :send-fn                     ; (fn [user-id ev] for server>user push.\n *  :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n *  :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n * \n *  :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n *  :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n * \n *   Security options:\n * \n *  :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n * \n *  :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n *                     ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n * \n *  :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n *                     ; must return truthy, otherwise connection requests will be\n *                     ; rejected with (unauthorized-fn <ring-req>) response.\n *                     ;\n *                     ; May check Authroization HTTP header, etc.\n * \n *  :?unauthorized-fn  ; An alternative API to `authorized?-fn`+`unauthorized-fn` pair.\n *                     ; ?(fn [ring-req)) -> <?rejection-resp>. I.e. when return value\n *                     ; is non-nil, connection requests will be rejected with that\n *                     ; non-nil value.\n * \n *   Other common options:\n * \n *  :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n *  :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n *  :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n *  :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n *  :send-buf-ms-ajax  ; [2]\n *  :send-buf-ms-ws    ; [2]\n *  :packer            ; :edn (default), or an IPacker implementation.\n * \n *   [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n *         `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n *    You must have the necessary web-server dependency in your project.clj and\n *    the necessary entry in your namespace's `ns` form.\n * \n *   [2] Optimization to allow transparent batching of rapidly-triggered\n *    server>user pushes. This is esp. important for Ajax clients which use a\n *    (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n *    after send call (larger values => larger batch windows).\n */\ntaoensso.sente.make_channel_socket_server_BANG_ = (function taoensso$sente$make_channel_socket_server_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___77755 = arguments.length;\nvar i__4772__auto___77756 = (0);\nwhile(true){\nif((i__4772__auto___77756 < len__4771__auto___77755)){\nargs__4777__auto__.push((arguments[i__4772__auto___77756]));\n\nvar G__77757 = (i__4772__auto___77756 + (1));\ni__4772__auto___77756 = G__77757;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((1) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((1)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4778__auto__);\n});\n\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (web_server_ch_adapter,p__75842){\nvar vec__75843 = p__75842;\nvar map__75846 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75843,(0),null);\nvar map__75846__$1 = cljs.core.__destructure_map(map__75846);\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(25)], 0)));\nvar _QMARK_unauthorized_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75846__$1,new cljs.core.Keyword(null,\"?unauthorized-fn\",\"?unauthorized-fn\",-1883475616));\nvar send_buf_ms_ws = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"send-buf-ms-ws\",\"send-buf-ms-ws\",-1149586238),(30));\nvar allowed_origins = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"allowed-origins\",\"allowed-origins\",1477851683),new cljs.core.Keyword(null,\"all\",\"all\",892129742));\nvar lp_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar csrf_token_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"csrf-token-fn\",\"csrf-token-fn\",-1846298394),(function (ring_req){\nvar or__4160__auto__ = new cljs.core.Keyword(null,\"anti-forgery-token\",\"anti-forgery-token\",806990841).cljs$core$IFn$_invoke$arity$1(ring_req);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nvar or__4160__auto____$2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(\"ring.middleware.anti-forgery\",\"anti-forgery-token\",\"ring.middleware.anti-forgery/anti-forgery-token\",571563484)], null));\nif(cljs.core.truth_(or__4160__auto____$2)){\nreturn or__4160__auto____$2;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),\"__anti-forgery-token\"], null));\n}\n}\n}\n}));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar unauthorized_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"unauthorized-fn\",\"unauthorized-fn\",-2032603957),(function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(401),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Unauthorized request\"], null);\n}));\nvar send_buf_ms_ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"send-buf-ms-ajax\",\"send-buf-ms-ajax\",1546129037),(100));\nvar bad_origin_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"bad-origin-fn\",\"bad-origin-fn\",1385595727),(function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Unauthorized origin\"], null);\n}));\nvar handshake_data_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"handshake-data-fn\",\"handshake-data-fn\",2011983089),(function (ring_req){\nreturn null;\n}));\nvar user_id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"user-id-fn\",\"user-id-fn\",-1532150029),(function (ring_req){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400)], null));\n}));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((1000)));\nvar authorized_QMARK__fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75846__$1,new cljs.core.Keyword(null,\"authorized?-fn\",\"authorized?-fn\",-1334669261));\nvar bad_csrf_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75846__$1,new cljs.core.Keyword(null,\"bad-csrf-fn\",\"bad-csrf-fn\",16619032),(function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Bad CSRF token\"], null);\n}));\nvar e_77766 = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ajax)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e75868){if((e75868 instanceof Error)){\nvar e_77766 = e75868;\nreturn e_77766;\n} else {\nthrow e75868;\n\n}\n}})();\nif((e_77766 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",394,\"(enc/pos-int? send-buf-ms-ajax)\",send_buf_ms_ajax,e_77766,null);\n}\n\nvar e_77768 = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ws)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e75869){if((e75869 instanceof Error)){\nvar e_77768 = e75869;\nreturn e_77768;\n} else {\nthrow e75869;\n\n}\n}})();\nif((e_77768 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",394,\"(enc/pos-int? send-buf-ms-ws)\",send_buf_ms_ws,e_77768,null);\n}\n\n\nvar e_77772 = (function (){try{if((function (p1__75821_SHARP_){\nif((!((p1__75821_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__75821_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$)))){\nreturn true;\n} else {\nif((!p1__75821_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__75821_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__75821_SHARP_);\n}\n})(web_server_ch_adapter)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e75871){if((e75871 instanceof Error)){\nvar e_77772 = e75871;\nreturn e_77772;\n} else {\nthrow e75871;\n\n}\n}})();\nif((e_77772 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",395,\"((fn* [p1__75821#] (satisfies? interfaces/IServerChanAdapter p1__75821#)) web-server-ch-adapter)\",web_server_ch_adapter,e_77772,null);\n}\n\nvar max_ms_77777 = taoensso.sente.default_client_side_ajax_timeout_ms;\nif((lp_timeout_ms >= max_ms_77777)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":lp-timeout-ms must be < \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(max_ms_77777)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),lp_timeout_ms,new cljs.core.Keyword(null,\"default-client-side-ajax-timeout-ms\",\"default-client-side-ajax-timeout-ms\",1149929762),max_ms_77777], null));\n} else {\n}\n\nvar allowed_origins__$1 = (cljs.core.truth_((function (x){\nvar or__4160__auto__ = cljs.core.set_QMARK_(x);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar fexpr__75884 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"all\",\"all\",892129742),null], null), null);\nreturn (fexpr__75884.cljs$core$IFn$_invoke$arity$1 ? fexpr__75884.cljs$core$IFn$_invoke$arity$1(x) : fexpr__75884.call(null,x));\n}\n})(allowed_origins))?allowed_origins:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",404,\"([:or set? #{:all}] allowed-origins)\",allowed_origins,null,null));\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar ch_recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(recv_buf_or_n);\nvar user_id_fn__$1 = (function (ring_req,client_id){\nvar or__4160__auto__ = (function (){var G__75888 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ring_req,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id);\nreturn (user_id_fn.cljs$core$IFn$_invoke$arity$1 ? user_id_fn.cljs$core$IFn$_invoke$arity$1(G__75888) : user_id_fn.call(null,G__75888));\n})();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486);\n}\n});\nvar conns_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar send_buffers_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar connected_uids_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.PersistentHashSet.EMPTY], null));\nvar upd_conn_BANG_ = (function() {\nvar G__77794 = null;\nvar G__77794__3 = (function (conn_type,uid,client_id){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\nvar vec__75894 = _QMARK_v;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75894,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75894,(1),null);\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),_QMARK_sch], null));\n}));\n});\nvar G__77794__4 = (function (conn_type,uid,client_id,new__QMARK_sch){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new__QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),new__QMARK_sch], null));\n}));\n});\nG__77794 = function(conn_type,uid,client_id,new__QMARK_sch){\nswitch(arguments.length){\ncase 3:\nreturn G__77794__3.call(this,conn_type,uid,client_id);\ncase 4:\nreturn G__77794__4.call(this,conn_type,uid,client_id,new__QMARK_sch);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__77794.cljs$core$IFn$_invoke$arity$3 = G__77794__3;\nG__77794.cljs$core$IFn$_invoke$arity$4 = G__77794__4;\nreturn G__77794;\n})()\n;\nvar connect_uid_BANG_ = (function (conn_type,uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e75899){if((e75899 instanceof Error)){\nvar e = e75899;\nreturn e;\n} else {\nthrow e75899;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",440,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__75901){\nvar map__75902 = p__75901;\nvar map__75902__$1 = cljs.core.__destructure_map(map__75902);\nvar old_m = map__75902__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75902__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75902__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75902__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar new_m = (function (){var G__75905 = conn_type;\nvar G__75905__$1 = (((G__75905 instanceof cljs.core.Keyword))?G__75905.fqn:null);\nswitch (G__75905__$1) {\ncase \"ws\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),ajax__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ncase \"ajax\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),ws,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__75905__$1)].join('')));\n\n}\n})();\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif((((!(cljs.core.contains_QMARK_(old_any,uid)))) && (cljs.core.contains_QMARK_(new_any,uid)))){\nreturn new cljs.core.Keyword(null,\"newly-connected\",\"newly-connected\",-2029862681);\n} else {\nreturn null;\n}\n})());\n}));\nreturn newly_connected_QMARK_;\n});\nvar upd_connected_uid_BANG_ = (function (uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e75909){if((e75909 instanceof Error)){\nvar e = e75909;\nreturn e;\n} else {\nthrow e75909;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",457,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__75910){\nvar map__75911 = p__75910;\nvar map__75911__$1 = cljs.core.__destructure_map(map__75911);\nvar old_m = map__75911__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75911__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75911__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75911__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar conns_SINGLEQUOTE_ = cljs.core.deref(conns_);\nvar any_ws_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_clients_QMARK_ = ((any_ws_clients_QMARK_) || (any_ajax_clients_QMARK_));\nvar new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),((any_ws_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ws,uid)),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),((any_ajax_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid)),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),((any_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(any,uid))], null);\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif(((cljs.core.contains_QMARK_(old_any,uid)) && ((!(cljs.core.contains_QMARK_(new_any,uid)))))){\nreturn new cljs.core.Keyword(null,\"newly-disconnected\",\"newly-disconnected\",-1586164962);\n} else {\nreturn null;\n}\n})());\n}));\nreturn newly_disconnected_QMARK_;\n});\nvar send_fn = (function() { \nvar G__77840__delegate = function (user_id,ev,p__75921){\nvar vec__75922 = p__75921;\nvar map__75925 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75922,(0),null);\nvar map__75925__$1 = cljs.core.__destructure_map(map__75925);\nvar opts = map__75925__$1;\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75925__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar uid_77843 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(user_id,new cljs.core.Keyword(\"sente\",\"all-users-without-uid\",\"sente/all-users-without-uid\",-42979578)))?new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486):user_id);\nvar __77844 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,483,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (->uid %s) %s\",uid_77843,ev], null);\n}),null)),null,1567412721,null);\nvar __77845__$1 = (cljs.core.truth_(uid_77843)?null:(function(){throw (new Error([\"Assert failed: \",[\"Support for sending to `nil` user-ids has been REMOVED. \",\"Please send to `:sente/all-users-without-uid` instead.\"].join(''),\"\\n\",\"uid\"].join('')))})());\nvar __77846__$2 = taoensso.sente.assert_event(ev);\nvar ev_uuid_77847 = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\nvar flush_buffer_BANG__77848 = (function (conn_type){\nvar temp__5753__auto__ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type], null),(function (m){\nvar vec__75928 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_77843);\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75928,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75928,(1),null);\nif(cljs.core.contains_QMARK_(ev_uuids,ev_uuid_77847)){\nreturn taoensso.encore.swapped(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,uid_77843),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_77843));\n} else {\nreturn taoensso.encore.swapped(m,null);\n}\n}));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar pulled = temp__5753__auto__;\nvar vec__75931 = pulled;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75931,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75931,(1),null);\nif(cljs.core.vector_QMARK_(buffered_evs)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",511,\"(vector? buffered-evs)\",buffered_evs,null,null);\n}\n\nif(cljs.core.set_QMARK_(ev_uuids)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",512,\"(set? ev-uuids)\",ev_uuids,null,null);\n}\n\nvar buffered_evs_ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,buffered_evs);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,515,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"buffered-evs-ppstr: %s\",buffered_evs_ppstr], null);\n}),null)),null,1830375736,null);\n\nvar G__75939 = conn_type;\nvar G__75939__$1 = (((G__75939 instanceof cljs.core.Keyword))?G__75939.fqn:null);\nswitch (G__75939__$1) {\ncase \"ws\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4 ? taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4(conns_,uid_77843,buffered_evs_ppstr,upd_conn_BANG_) : taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null,conns_,uid_77843,buffered_evs_ppstr,upd_conn_BANG_));\n\nbreak;\ncase \"ajax\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,uid_77843,buffered_evs_ppstr) : taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null,conns_,uid_77843,buffered_evs_ppstr));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__75939__$1)].join('')));\n\n}\n} else {\nreturn null;\n}\n});\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ev,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"close\",\"chsk/close\",1840295819)], null))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,524,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk closing (client may reconnect): %s\",uid_77843], null);\n}),null)),null,920563487,null);\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__77848(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__77848(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\n}\n\nvar seq__75940_77872 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid_77843], null))));\nvar chunk__75941_77874 = null;\nvar count__75942_77877 = (0);\nvar i__75943_77879 = (0);\nwhile(true){\nif((i__75943_77879 < count__75942_77877)){\nvar vec__75953_77880 = chunk__75941_77874.cljs$core$IIndexed$_nth$arity$2(null,i__75943_77879);\nvar _QMARK_sch_77881 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75953_77880,(0),null);\nvar _udt_77882 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75953_77880,(1),null);\nvar temp__5753__auto___77883 = _QMARK_sch_77881;\nif(cljs.core.truth_(temp__5753__auto___77883)){\nvar sch_77884 = temp__5753__auto___77883;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_77884);\n} else {\n}\n\n\nvar G__77886 = seq__75940_77872;\nvar G__77887 = chunk__75941_77874;\nvar G__77888 = count__75942_77877;\nvar G__77889 = (i__75943_77879 + (1));\nseq__75940_77872 = G__77886;\nchunk__75941_77874 = G__77887;\ncount__75942_77877 = G__77888;\ni__75943_77879 = G__77889;\ncontinue;\n} else {\nvar temp__5753__auto___77892 = cljs.core.seq(seq__75940_77872);\nif(temp__5753__auto___77892){\nvar seq__75940_77893__$1 = temp__5753__auto___77892;\nif(cljs.core.chunked_seq_QMARK_(seq__75940_77893__$1)){\nvar c__4591__auto___77895 = cljs.core.chunk_first(seq__75940_77893__$1);\nvar G__77896 = cljs.core.chunk_rest(seq__75940_77893__$1);\nvar G__77897 = c__4591__auto___77895;\nvar G__77898 = cljs.core.count(c__4591__auto___77895);\nvar G__77899 = (0);\nseq__75940_77872 = G__77896;\nchunk__75941_77874 = G__77897;\ncount__75942_77877 = G__77898;\ni__75943_77879 = G__77899;\ncontinue;\n} else {\nvar vec__75958_77900 = cljs.core.first(seq__75940_77893__$1);\nvar _QMARK_sch_77901 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75958_77900,(0),null);\nvar _udt_77902 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75958_77900,(1),null);\nvar temp__5753__auto___77904__$1 = _QMARK_sch_77901;\nif(cljs.core.truth_(temp__5753__auto___77904__$1)){\nvar sch_77905 = temp__5753__auto___77904__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_77905);\n} else {\n}\n\n\nvar G__77907 = cljs.core.next(seq__75940_77893__$1);\nvar G__77908 = null;\nvar G__77909 = (0);\nvar G__77910 = (0);\nseq__75940_77872 = G__77907;\nchunk__75941_77874 = G__77908;\ncount__75942_77877 = G__77909;\ni__75943_77879 = G__77910;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__75963_77915 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid_77843], null))));\nvar chunk__75965_77916 = null;\nvar count__75966_77917 = (0);\nvar i__75967_77918 = (0);\nwhile(true){\nif((i__75967_77918 < count__75966_77917)){\nvar vec__75979_77919 = chunk__75965_77916.cljs$core$IIndexed$_nth$arity$2(null,i__75967_77918);\nvar _QMARK_sch_77920 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75979_77919,(0),null);\nvar _udt_77921 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75979_77919,(1),null);\nvar temp__5753__auto___77922 = _QMARK_sch_77920;\nif(cljs.core.truth_(temp__5753__auto___77922)){\nvar sch_77923 = temp__5753__auto___77922;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_77923);\n} else {\n}\n\n\nvar G__77925 = seq__75963_77915;\nvar G__77926 = chunk__75965_77916;\nvar G__77927 = count__75966_77917;\nvar G__77928 = (i__75967_77918 + (1));\nseq__75963_77915 = G__77925;\nchunk__75965_77916 = G__77926;\ncount__75966_77917 = G__77927;\ni__75967_77918 = G__77928;\ncontinue;\n} else {\nvar temp__5753__auto___77931 = cljs.core.seq(seq__75963_77915);\nif(temp__5753__auto___77931){\nvar seq__75963_77933__$1 = temp__5753__auto___77931;\nif(cljs.core.chunked_seq_QMARK_(seq__75963_77933__$1)){\nvar c__4591__auto___77934 = cljs.core.chunk_first(seq__75963_77933__$1);\nvar G__77935 = cljs.core.chunk_rest(seq__75963_77933__$1);\nvar G__77936 = c__4591__auto___77934;\nvar G__77937 = cljs.core.count(c__4591__auto___77934);\nvar G__77938 = (0);\nseq__75963_77915 = G__77935;\nchunk__75965_77916 = G__77936;\ncount__75966_77917 = G__77937;\ni__75967_77918 = G__77938;\ncontinue;\n} else {\nvar vec__75986_77939 = cljs.core.first(seq__75963_77933__$1);\nvar _QMARK_sch_77940 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75986_77939,(0),null);\nvar _udt_77941 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75986_77939,(1),null);\nvar temp__5753__auto___77943__$1 = _QMARK_sch_77940;\nif(cljs.core.truth_(temp__5753__auto___77943__$1)){\nvar sch_77944 = temp__5753__auto___77943__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_77944);\n} else {\n}\n\n\nvar G__77946 = cljs.core.next(seq__75963_77933__$1);\nvar G__77947 = null;\nvar G__77948 = (0);\nvar G__77949 = (0);\nseq__75963_77915 = G__77946;\nchunk__75965_77916 = G__77947;\ncount__75966_77917 = G__77948;\ni__75967_77918 = G__77949;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\nvar seq__75989_77951 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)], null));\nvar chunk__75990_77952 = null;\nvar count__75991_77953 = (0);\nvar i__75992_77954 = (0);\nwhile(true){\nif((i__75992_77954 < count__75991_77953)){\nvar conn_type_77956 = chunk__75990_77952.cljs$core$IIndexed$_nth$arity$2(null,i__75992_77954);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_77956,uid_77843], null),((function (seq__75989_77951,chunk__75990_77952,count__75991_77953,i__75992_77954,conn_type_77956,uid_77843,__77844,__77845__$1,__77846__$2,ev_uuid_77847,flush_buffer_BANG__77848,vec__75922,map__75925,map__75925__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__75843,map__75846,map__75846__$1,ws_kalive_ms,_QMARK_unauthorized_fn,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_77847])], null);\n} else {\nvar vec__76003 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76003,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76003,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_77847)], null);\n}\n});})(seq__75989_77951,chunk__75990_77952,count__75991_77953,i__75992_77954,conn_type_77956,uid_77843,__77844,__77845__$1,__77846__$2,ev_uuid_77847,flush_buffer_BANG__77848,vec__75922,map__75925,map__75925__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__75843,map__75846,map__75846__$1,ws_kalive_ms,_QMARK_unauthorized_fn,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn))\n);\n\n\nvar G__77957 = seq__75989_77951;\nvar G__77958 = chunk__75990_77952;\nvar G__77959 = count__75991_77953;\nvar G__77960 = (i__75992_77954 + (1));\nseq__75989_77951 = G__77957;\nchunk__75990_77952 = G__77958;\ncount__75991_77953 = G__77959;\ni__75992_77954 = G__77960;\ncontinue;\n} else {\nvar temp__5753__auto___77963 = cljs.core.seq(seq__75989_77951);\nif(temp__5753__auto___77963){\nvar seq__75989_77964__$1 = temp__5753__auto___77963;\nif(cljs.core.chunked_seq_QMARK_(seq__75989_77964__$1)){\nvar c__4591__auto___77965 = cljs.core.chunk_first(seq__75989_77964__$1);\nvar G__77966 = cljs.core.chunk_rest(seq__75989_77964__$1);\nvar G__77967 = c__4591__auto___77965;\nvar G__77968 = cljs.core.count(c__4591__auto___77965);\nvar G__77969 = (0);\nseq__75989_77951 = G__77966;\nchunk__75990_77952 = G__77967;\ncount__75991_77953 = G__77968;\ni__75992_77954 = G__77969;\ncontinue;\n} else {\nvar conn_type_77971 = cljs.core.first(seq__75989_77964__$1);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_77971,uid_77843], null),((function (seq__75989_77951,chunk__75990_77952,count__75991_77953,i__75992_77954,conn_type_77971,seq__75989_77964__$1,temp__5753__auto___77963,uid_77843,__77844,__77845__$1,__77846__$2,ev_uuid_77847,flush_buffer_BANG__77848,vec__75922,map__75925,map__75925__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__75843,map__75846,map__75846__$1,ws_kalive_ms,_QMARK_unauthorized_fn,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_77847])], null);\n} else {\nvar vec__76011 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76011,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76011,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_77847)], null);\n}\n});})(seq__75989_77951,chunk__75990_77952,count__75991_77953,i__75992_77954,conn_type_77971,seq__75989_77964__$1,temp__5753__auto___77963,uid_77843,__77844,__77845__$1,__77846__$2,ev_uuid_77847,flush_buffer_BANG__77848,vec__75922,map__75925,map__75925__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__75843,map__75846,map__75846__$1,ws_kalive_ms,_QMARK_unauthorized_fn,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn))\n);\n\n\nvar G__77975 = cljs.core.next(seq__75989_77964__$1);\nvar G__77976 = null;\nvar G__77977 = (0);\nvar G__77978 = (0);\nseq__75989_77951 = G__77975;\nchunk__75990_77952 = G__77976;\ncount__75991_77953 = G__77977;\ni__75992_77954 = G__77978;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__77848(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__77848(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\nvar ws_timeout_77979 = cljs.core.async.timeout(send_buf_ms_ws);\nvar ajax_timeout_77980 = cljs.core.async.timeout(send_buf_ms_ajax);\nvar c__65866__auto___77981 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_76021){\nvar state_val_76022 = (state_76021[(1)]);\nif((state_val_76022 === (1))){\nvar state_76021__$1 = state_76021;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_76021__$1,(2),ws_timeout_77979);\n} else {\nif((state_val_76022 === (2))){\nvar inst_76018 = (state_76021[(2)]);\nvar inst_76019 = flush_buffer_BANG__77848(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar state_76021__$1 = (function (){var statearr_76025 = state_76021;\n(statearr_76025[(7)] = inst_76018);\n\nreturn statearr_76025;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76021__$1,inst_76019);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__65652__auto__ = null;\nvar taoensso$sente$state_machine__65652__auto____0 = (function (){\nvar statearr_76028 = [null,null,null,null,null,null,null,null];\n(statearr_76028[(0)] = taoensso$sente$state_machine__65652__auto__);\n\n(statearr_76028[(1)] = (1));\n\nreturn statearr_76028;\n});\nvar taoensso$sente$state_machine__65652__auto____1 = (function (state_76021){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_76021);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e76029){var ex__65655__auto__ = e76029;\nvar statearr_76030_77986 = state_76021;\n(statearr_76030_77986[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_76021[(4)]))){\nvar statearr_76033_77988 = state_76021;\n(statearr_76033_77988[(1)] = cljs.core.first((state_76021[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__77990 = state_76021;\nstate_76021 = G__77990;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65652__auto__ = function(state_76021){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65652__auto____1.call(this,state_76021);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65652__auto____0;\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65652__auto____1;\nreturn taoensso$sente$state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_76035 = f__65867__auto__();\n(statearr_76035[(6)] = c__65866__auto___77981);\n\nreturn statearr_76035;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\n\nvar c__65866__auto___77991 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_76042){\nvar state_val_76043 = (state_76042[(1)]);\nif((state_val_76043 === (1))){\nvar state_76042__$1 = state_76042;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_76042__$1,(2),ajax_timeout_77980);\n} else {\nif((state_val_76043 === (2))){\nvar inst_76038 = (state_76042[(2)]);\nvar inst_76039 = flush_buffer_BANG__77848(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar state_76042__$1 = (function (){var statearr_76045 = state_76042;\n(statearr_76045[(7)] = inst_76038);\n\nreturn statearr_76045;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76042__$1,inst_76039);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__65652__auto__ = null;\nvar taoensso$sente$state_machine__65652__auto____0 = (function (){\nvar statearr_76046 = [null,null,null,null,null,null,null,null];\n(statearr_76046[(0)] = taoensso$sente$state_machine__65652__auto__);\n\n(statearr_76046[(1)] = (1));\n\nreturn statearr_76046;\n});\nvar taoensso$sente$state_machine__65652__auto____1 = (function (state_76042){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_76042);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e76047){var ex__65655__auto__ = e76047;\nvar statearr_76048_77994 = state_76042;\n(statearr_76048_77994[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_76042[(4)]))){\nvar statearr_76049_77997 = state_76042;\n(statearr_76049_77997[(1)] = cljs.core.first((state_76042[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__77999 = state_76042;\nstate_76042 = G__77999;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65652__auto__ = function(state_76042){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65652__auto____1.call(this,state_76042);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65652__auto____0;\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65652__auto____1;\nreturn taoensso$sente$state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_76050 = f__65867__auto__();\n(statearr_76050[(6)] = c__65866__auto___77991);\n\nreturn statearr_76050;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\n}\n}\n\nreturn null;\n};\nvar G__77840 = function (user_id,ev,var_args){\nvar p__75921 = null;\nif (arguments.length > 2) {\nvar G__78003__i = 0, G__78003__a = new Array(arguments.length -  2);\nwhile (G__78003__i < G__78003__a.length) {G__78003__a[G__78003__i] = arguments[G__78003__i + 2]; ++G__78003__i;}\n  p__75921 = new cljs.core.IndexedSeq(G__78003__a,0,null);\n} \nreturn G__77840__delegate.call(this,user_id,ev,p__75921);};\nG__77840.cljs$lang$maxFixedArity = 2;\nG__77840.cljs$lang$applyTo = (function (arglist__78004){\nvar user_id = cljs.core.first(arglist__78004);\narglist__78004 = cljs.core.next(arglist__78004);\nvar ev = cljs.core.first(arglist__78004);\nvar p__75921 = cljs.core.rest(arglist__78004);\nreturn G__77840__delegate(user_id,ev,p__75921);\n});\nG__77840.cljs$core$IFn$_invoke$arity$variadic = G__77840__delegate;\nreturn G__77840;\n})()\n;\nvar bad_csrf_QMARK_ = (function (ring_req){\nif((csrf_token_fn == null)){\nreturn false;\n} else {\nvar temp__5751__auto__ = (csrf_token_fn.cljs$core$IFn$_invoke$arity$1 ? csrf_token_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : csrf_token_fn.call(null,ring_req));\nif(cljs.core.truth_(temp__5751__auto__)){\nvar reference_csrf_token = temp__5751__auto__;\nvar csrf_token_from_client = (function (){var or__4160__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-csrf-token\"], null));\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-xsrf-token\"], null));\n}\n}\n})();\nreturn cljs.core.not(taoensso.encore.const_str_EQ_(reference_csrf_token,csrf_token_from_client));\n} else {\nreturn true;\n}\n}\n});\nvar unauthorized_QMARK_ = (function (ring_req){\nif((authorized_QMARK__fn == null)){\nreturn false;\n} else {\nreturn cljs.core.not((authorized_QMARK__fn.cljs$core$IFn$_invoke$arity$1 ? authorized_QMARK__fn.cljs$core$IFn$_invoke$arity$1(ring_req) : authorized_QMARK__fn.call(null,ring_req)));\n}\n});\nvar possible_rejection_resp = (function (ring_req){\nif(bad_csrf_QMARK_(ring_req)){\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null,ring_req));\n} else {\nif(taoensso.sente.allow_origin_QMARK_(allowed_origins__$1,ring_req)){\nif(unauthorized_QMARK_(ring_req)){\nreturn (unauthorized_fn.cljs$core$IFn$_invoke$arity$1 ? unauthorized_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : unauthorized_fn.call(null,ring_req));\n} else {\nvar b2__904__auto__ = (function (){var temp__5753__auto__ = _QMARK_unauthorized_fn;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar uf = temp__5753__auto__;\nreturn (uf.cljs$core$IFn$_invoke$arity$1 ? uf.cljs$core$IFn$_invoke$arity$1(ring_req) : uf.call(null,ring_req));\n} else {\nreturn null;\n}\n})();\nif((b2__904__auto__ == null)){\nreturn null;\n} else {\nvar unauthorized_resp = b2__904__auto__;\nreturn unauthorized_resp;\n}\n}\n} else {\nreturn (bad_origin_fn.cljs$core$IFn$_invoke$arity$1 ? bad_origin_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_origin_fn.call(null,ring_req));\n}\n}\n});\nvar ev_msg_const = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),send_buffers_], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),send_buffers_,new cljs.core.Keyword(null,\"ajax-post-fn\",\"ajax-post-fn\",1830071264),(function (ring_req){\nvar b2__895__auto__ = possible_rejection_resp(ring_req);\nif(cljs.core.truth_(b2__895__auto__)){\nvar resp = b2__895__auto__;\nreturn resp;\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\nif(cljs.core.not(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: (not websocket?)\"));\n}\n\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar ppstr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar vec__76061 = taoensso.sente.unpack(packer__$1,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76061,(0),null);\nvar has_cb_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76061,(1),null);\nvar reply_fn = (function (){var replied_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nreturn (function (resp_clj){\nif(cljs.core.compare_and_set_BANG_(replied_QMARK__,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,642,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ajax post reply): %s\",resp_clj], null);\n}),null)),null,-298718842,null);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,resp_clj));\n} else {\nreturn null;\n}\n});\n})();\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),clj,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),user_id_fn__$1(ring_req,client_id),new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),(cljs.core.truth_(has_cb_QMARK_)?reply_fn:null)], null)], 0)));\n\nif(cljs.core.truth_(has_cb_QMARK_)){\nvar temp__5753__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ms = temp__5753__auto__;\nvar c__65866__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_76075){\nvar state_val_76076 = (state_76075[(1)]);\nif((state_val_76076 === (1))){\nvar inst_76068 = cljs.core.async.timeout(ms);\nvar state_76075__$1 = state_76075;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_76075__$1,(2),inst_76068);\n} else {\nif((state_val_76076 === (2))){\nvar inst_76071 = (state_76075[(2)]);\nvar inst_76072 = reply_fn(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar state_76075__$1 = (function (){var statearr_76079 = state_76075;\n(statearr_76079[(7)] = inst_76071);\n\nreturn statearr_76079;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76075__$1,inst_76072);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__65652__auto__ = null;\nvar taoensso$sente$state_machine__65652__auto____0 = (function (){\nvar statearr_76081 = [null,null,null,null,null,null,null,null];\n(statearr_76081[(0)] = taoensso$sente$state_machine__65652__auto__);\n\n(statearr_76081[(1)] = (1));\n\nreturn statearr_76081;\n});\nvar taoensso$sente$state_machine__65652__auto____1 = (function (state_76075){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_76075);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e76082){var ex__65655__auto__ = e76082;\nvar statearr_76083_78017 = state_76075;\n(statearr_76083_78017[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_76075[(4)]))){\nvar statearr_76084_78018 = state_76075;\n(statearr_76084_78018[(1)] = cljs.core.first((state_76075[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__78019 = state_76075;\nstate_76075 = G__78019;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65652__auto__ = function(state_76075){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65652__auto____1.call(this,state_76075);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65652__auto____0;\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65652__auto____1;\nreturn taoensso$sente$state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_76086 = f__65867__auto__();\n(statearr_76086[(6)] = c__65866__auto__);\n\nreturn statearr_76086;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\nreturn c__65866__auto__;\n} else {\nreturn null;\n}\n} else {\nreturn reply_fn(new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337));\n}\n})], null));\n}\n}),new cljs.core.Keyword(null,\"ajax-get-or-ws-handshake-fn\",\"ajax-get-or-ws-handshake-fn\",-1210409233),(function (ring_req){\nvar sch_uuid = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar uid = user_id_fn__$1(ring_req,client_id);\nvar receive_event_msg_BANG_ = (function() {\nvar taoensso$sente$self = null;\nvar taoensso$sente$self__1 = (function (event){\nreturn taoensso$sente$self.cljs$core$IFn$_invoke$arity$2(event,null);\n});\nvar taoensso$sente$self__2 = (function (event,_QMARK_reply_fn){\nreturn taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),uid], null)], 0)));\n});\ntaoensso$sente$self = function(event,_QMARK_reply_fn){\nswitch(arguments.length){\ncase 1:\nreturn taoensso$sente$self__1.call(this,event);\ncase 2:\nreturn taoensso$sente$self__2.call(this,event,_QMARK_reply_fn);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$self__1;\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$2 = taoensso$sente$self__2;\nreturn taoensso$sente$self;\n})()\n;\nvar send_handshake_BANG_ = (function (server_ch,websocket_QMARK_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,686,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-handshake!\"], null);\n}),null)),null,-464545737,null);\n\nvar _QMARK_handshake_data = (handshake_data_fn.cljs$core$IFn$_invoke$arity$1 ? handshake_data_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : handshake_data_fn.call(null,ring_req));\nvar handshake_ev = (((_QMARK_handshake_data == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null,_QMARK_handshake_data], null)], null));\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,handshake_ev));\n});\nif(clojure.string.blank_QMARK_(client_id)){\nvar err_msg = \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\";\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,699,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[err_msg,\": %s\"].join(''),ring_req], null);\n}),null)),null,1686057249,null);\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_msg,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req], null));\n} else {\nvar b2__895__auto__ = possible_rejection_resp(ring_req);\nif(cljs.core.truth_(b2__895__auto__)){\nvar resp = b2__895__auto__;\nreturn resp;\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\nif(cljs.core.truth_(websocket_QMARK_)){\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,710,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New WebSocket channel: %s (%s)\",uid,sch_uuid], null);\n}),null)),null,1576855337,null);\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid))){\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nsend_handshake_BANG_(server_ch,websocket_QMARK_);\n\nvar temp__5753__auto__ = ws_kalive_ms;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ms = temp__5753__auto__;\nvar c__65866__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_76140){\nvar state_val_76141 = (state_76140[(1)]);\nif((state_val_76141 === (7))){\nvar inst_76136 = (state_76140[(2)]);\nvar state_76140__$1 = state_76140;\nvar statearr_76144_78036 = state_76140__$1;\n(statearr_76144_78036[(2)] = inst_76136);\n\n(statearr_76144_78036[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (1))){\nvar inst_76100 = udt_open;\nvar inst_76101 = inst_76100;\nvar state_76140__$1 = (function (){var statearr_76145 = state_76140;\n(statearr_76145[(7)] = inst_76101);\n\nreturn statearr_76145;\n})();\nvar statearr_76146_78039 = state_76140__$1;\n(statearr_76146_78039[(2)] = null);\n\n(statearr_76146_78039[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (4))){\nvar inst_76113 = (state_76140[(8)]);\nvar inst_76105 = (state_76140[(2)]);\nvar inst_76108 = cljs.core.deref(conns_);\nvar inst_76110 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_76111 = [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id];\nvar inst_76112 = (new cljs.core.PersistentVector(null,3,(5),inst_76110,inst_76111,null));\nvar inst_76113__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_76108,inst_76112);\nvar state_76140__$1 = (function (){var statearr_76147 = state_76140;\n(statearr_76147[(8)] = inst_76113__$1);\n\n(statearr_76147[(9)] = inst_76105);\n\nreturn statearr_76147;\n})();\nif(cljs.core.truth_(inst_76113__$1)){\nvar statearr_76148_78042 = state_76140__$1;\n(statearr_76148_78042[(1)] = (5));\n\n} else {\nvar statearr_76150_78043 = state_76140__$1;\n(statearr_76150_78043[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (13))){\nvar inst_76120 = (state_76140[(10)]);\nvar inst_76129 = (state_76140[(2)]);\nvar inst_76101 = inst_76120;\nvar state_76140__$1 = (function (){var statearr_76151 = state_76140;\n(statearr_76151[(11)] = inst_76129);\n\n(statearr_76151[(7)] = inst_76101);\n\nreturn statearr_76151;\n})();\nvar statearr_76152_78046 = state_76140__$1;\n(statearr_76152_78046[(2)] = null);\n\n(statearr_76152_78046[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (6))){\nvar state_76140__$1 = state_76140;\nvar statearr_76154_78049 = state_76140__$1;\n(statearr_76154_78049[(2)] = null);\n\n(statearr_76154_78049[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (3))){\nvar inst_76138 = (state_76140[(2)]);\nvar state_76140__$1 = state_76140;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76140__$1,inst_76138);\n} else {\nif((state_val_76141 === (12))){\nvar state_76140__$1 = state_76140;\nvar statearr_76155_78050 = state_76140__$1;\n(statearr_76155_78050[(2)] = null);\n\n(statearr_76155_78050[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (2))){\nvar inst_76103 = cljs.core.async.timeout(ms);\nvar state_76140__$1 = state_76140;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_76140__$1,(4),inst_76103);\n} else {\nif((state_val_76141 === (11))){\nvar inst_76125 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304));\nvar inst_76126 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_76125);\nvar state_76140__$1 = state_76140;\nvar statearr_76157_78054 = state_76140__$1;\n(statearr_76157_78054[(2)] = inst_76126);\n\n(statearr_76157_78054[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (9))){\nvar state_76140__$1 = state_76140;\nvar statearr_76158_78055 = state_76140__$1;\n(statearr_76158_78055[(2)] = null);\n\n(statearr_76158_78055[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (5))){\nvar inst_76113 = (state_76140[(8)]);\nvar inst_76119 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_76113,(0),null);\nvar inst_76120 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_76113,(1),null);\nvar inst_76121 = taoensso.sente.interfaces.sch_open_QMARK_(server_ch);\nvar state_76140__$1 = (function (){var statearr_76161 = state_76140;\n(statearr_76161[(10)] = inst_76120);\n\n(statearr_76161[(12)] = inst_76119);\n\nreturn statearr_76161;\n})();\nif(cljs.core.truth_(inst_76121)){\nvar statearr_76162_78061 = state_76140__$1;\n(statearr_76162_78061[(1)] = (8));\n\n} else {\nvar statearr_76163_78063 = state_76140__$1;\n(statearr_76163_78063[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (10))){\nvar inst_76133 = (state_76140[(2)]);\nvar state_76140__$1 = state_76140;\nvar statearr_76165_78064 = state_76140__$1;\n(statearr_76165_78064[(2)] = inst_76133);\n\n(statearr_76165_78064[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76141 === (8))){\nvar inst_76101 = (state_76140[(7)]);\nvar inst_76120 = (state_76140[(10)]);\nvar inst_76123 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_76120,inst_76101);\nvar state_76140__$1 = state_76140;\nif(inst_76123){\nvar statearr_76167_78067 = state_76140__$1;\n(statearr_76167_78067[(1)] = (11));\n\n} else {\nvar statearr_76171_78069 = state_76140__$1;\n(statearr_76171_78069[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__65652__auto__ = null;\nvar taoensso$sente$state_machine__65652__auto____0 = (function (){\nvar statearr_76173 = [null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_76173[(0)] = taoensso$sente$state_machine__65652__auto__);\n\n(statearr_76173[(1)] = (1));\n\nreturn statearr_76173;\n});\nvar taoensso$sente$state_machine__65652__auto____1 = (function (state_76140){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_76140);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e76174){var ex__65655__auto__ = e76174;\nvar statearr_76175_78070 = state_76140;\n(statearr_76175_78070[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_76140[(4)]))){\nvar statearr_76176_78071 = state_76140;\n(statearr_76176_78071[(1)] = cljs.core.first((state_76140[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__78073 = state_76140;\nstate_76140 = G__78073;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65652__auto__ = function(state_76140){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65652__auto____1.call(this,state_76140);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65652__auto____0;\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65652__auto____1;\nreturn taoensso$sente$state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_76178 = f__65867__auto__();\n(statearr_76178[(6)] = c__65866__auto__);\n\nreturn statearr_76178;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\nreturn c__65866__auto__;\n} else {\nreturn null;\n}\n} else {\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,739,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New Ajax handshake/poll: %s (%s)\",uid,sch_uuid], null);\n}),null)),null,783043666,null);\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar handshake_QMARK_ = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"init?\",\"init?\",438181499).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093).cljs$core$IFn$_invoke$arity$1(params);\n}\n})();\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid))){\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nif(cljs.core.truth_(handshake_QMARK_)){\nreturn send_handshake_BANG_(server_ch,websocket_QMARK_);\n} else {\nvar temp__5753__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ms = temp__5753__auto__;\nvar c__65866__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_76208){\nvar state_val_76210 = (state_76208[(1)]);\nif((state_val_76210 === (1))){\nvar inst_76183 = cljs.core.async.timeout(ms);\nvar state_76208__$1 = state_76208;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_76208__$1,(2),inst_76183);\n} else {\nif((state_val_76210 === (2))){\nvar inst_76190 = (state_76208[(7)]);\nvar inst_76185 = (state_76208[(2)]);\nvar inst_76186 = cljs.core.deref(conns_);\nvar inst_76187 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_76188 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id];\nvar inst_76189 = (new cljs.core.PersistentVector(null,3,(5),inst_76187,inst_76188,null));\nvar inst_76190__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_76186,inst_76189);\nvar state_76208__$1 = (function (){var statearr_76215 = state_76208;\n(statearr_76215[(8)] = inst_76185);\n\n(statearr_76215[(7)] = inst_76190__$1);\n\nreturn statearr_76215;\n})();\nif(cljs.core.truth_(inst_76190__$1)){\nvar statearr_76216_78085 = state_76208__$1;\n(statearr_76216_78085[(1)] = (3));\n\n} else {\nvar statearr_76217_78086 = state_76208__$1;\n(statearr_76217_78086[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76210 === (3))){\nvar inst_76190 = (state_76208[(7)]);\nvar inst_76195 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_76190,(0),null);\nvar inst_76196 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_76190,(1),null);\nvar inst_76197 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_76196,udt_open);\nvar state_76208__$1 = (function (){var statearr_76219 = state_76208;\n(statearr_76219[(9)] = inst_76195);\n\nreturn statearr_76219;\n})();\nif(inst_76197){\nvar statearr_76223_78090 = state_76208__$1;\n(statearr_76223_78090[(1)] = (6));\n\n} else {\nvar statearr_76224_78095 = state_76208__$1;\n(statearr_76224_78095[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76210 === (4))){\nvar state_76208__$1 = state_76208;\nvar statearr_76226_78096 = state_76208__$1;\n(statearr_76226_78096[(2)] = null);\n\n(statearr_76226_78096[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76210 === (5))){\nvar inst_76206 = (state_76208[(2)]);\nvar state_76208__$1 = state_76208;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76208__$1,inst_76206);\n} else {\nif((state_val_76210 === (6))){\nvar inst_76199 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar inst_76200 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_76199);\nvar state_76208__$1 = state_76208;\nvar statearr_76227_78100 = state_76208__$1;\n(statearr_76227_78100[(2)] = inst_76200);\n\n(statearr_76227_78100[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76210 === (7))){\nvar state_76208__$1 = state_76208;\nvar statearr_76229_78101 = state_76208__$1;\n(statearr_76229_78101[(2)] = null);\n\n(statearr_76229_78101[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76210 === (8))){\nvar inst_76203 = (state_76208[(2)]);\nvar state_76208__$1 = state_76208;\nvar statearr_76234_78102 = state_76208__$1;\n(statearr_76234_78102[(2)] = inst_76203);\n\n(statearr_76234_78102[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__65652__auto__ = null;\nvar taoensso$sente$state_machine__65652__auto____0 = (function (){\nvar statearr_76236 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_76236[(0)] = taoensso$sente$state_machine__65652__auto__);\n\n(statearr_76236[(1)] = (1));\n\nreturn statearr_76236;\n});\nvar taoensso$sente$state_machine__65652__auto____1 = (function (state_76208){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_76208);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e76237){var ex__65655__auto__ = e76237;\nvar statearr_76238_78106 = state_76208;\n(statearr_76238_78106[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_76208[(4)]))){\nvar statearr_76239_78108 = state_76208;\n(statearr_76239_78108[(1)] = cljs.core.first((state_76208[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__78110 = state_76208;\nstate_76208 = G__78110;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65652__auto__ = function(state_76208){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65652__auto____1.call(this,state_76208);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65652__auto____0;\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65652__auto____1;\nreturn taoensso$sente$state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_76244 = f__65867__auto__();\n(statearr_76244[(6)] = c__65866__auto__);\n\nreturn statearr_76244;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\nreturn c__65866__auto__;\n} else {\nreturn null;\n}\n}\n}\n}),new cljs.core.Keyword(null,\"on-msg\",\"on-msg\",-2021925279),(function (server_ch,websocket_QMARK_,req_ppstr){\nif(cljs.core.truth_(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: websocket?\"));\n}\n\nupd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id);\n\nvar vec__76246 = taoensso.sente.unpack(packer__$1,req_ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76246,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76246,(1),null);\nreturn receive_event_msg_BANG_(clj,(cljs.core.truth_(_QMARK_cb_uuid)?(function taoensso$sente$reply_fn(resp_clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,769,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ws reply): %s\",resp_clj], null);\n}),null)),null,-380675386,null);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(packer__$1,resp_clj,_QMARK_cb_uuid));\n}):null));\n}),new cljs.core.Keyword(null,\"on-close\",\"on-close\",-761178394),(function (server_ch,websocket_QMARK_,_status){\nvar conn_type = (cljs.core.truth_(websocket_QMARK_)?new cljs.core.Keyword(null,\"ws\",\"ws\",86841443):new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,778,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"%s channel closed: %s (%s)\",(cljs.core.truth_(websocket_QMARK_)?\"WebSocket\":\"Ajax\"),uid,sch_uuid], null);\n}),null)),null,-2040418489,null);\nvar updated_conn = upd_conn_BANG_(conn_type,uid,client_id,null);\nvar udt_close = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar c__65866__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_76319){\nvar state_val_76320 = (state_76319[(1)]);\nif((state_val_76320 === (7))){\nvar state_76319__$1 = state_76319;\nvar statearr_76322_78117 = state_76319__$1;\n(statearr_76322_78117[(2)] = null);\n\n(statearr_76322_78117[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (1))){\nvar inst_76259 = cljs.core.async.timeout((5000));\nvar state_76319__$1 = state_76319;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_76319__$1,(2),inst_76259);\n} else {\nif((state_val_76320 === (4))){\nvar state_76319__$1 = state_76319;\nvar statearr_76327_78120 = state_76319__$1;\n(statearr_76327_78120[(2)] = null);\n\n(statearr_76327_78120[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (13))){\nvar state_76319__$1 = state_76319;\nvar statearr_76329_78122 = state_76319__$1;\n(statearr_76329_78122[(2)] = null);\n\n(statearr_76329_78122[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (6))){\nvar inst_76270 = (state_76319[(7)]);\nvar inst_76269 = (state_76319[(8)]);\nvar inst_76292 = (state_76319[(9)]);\nvar inst_76271 = (state_76319[(10)]);\nvar inst_76287 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_76288 = [conn_type,uid,client_id];\nvar inst_76289 = (new cljs.core.PersistentVector(null,3,(5),inst_76287,inst_76288,null));\nvar inst_76291 = (function (){var vec__76262 = inst_76269;\nvar __QMARK_sch = inst_76270;\nvar udt_t1 = inst_76271;\nreturn (function (p__76290){\nvar vec__76331 = p__76290;\nvar _sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76331,(0),null);\nvar udt_t1__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76331,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1__$1,udt_close)){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),true);\n} else {\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_sch,udt_t1__$1], null),false);\n}\n});\n})();\nvar inst_76292__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_76289,inst_76291);\nvar state_76319__$1 = (function (){var statearr_76338 = state_76319;\n(statearr_76338[(9)] = inst_76292__$1);\n\nreturn statearr_76338;\n})();\nif(cljs.core.truth_(inst_76292__$1)){\nvar statearr_76339_78131 = state_76319__$1;\n(statearr_76339_78131[(1)] = (9));\n\n} else {\nvar statearr_76340_78135 = state_76319__$1;\n(statearr_76340_78135[(1)] = (10));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (3))){\nvar inst_76270 = (state_76319[(7)]);\nvar inst_76269 = (state_76319[(8)]);\nvar inst_76271 = (state_76319[(10)]);\nvar inst_76275 = (function (){var vec__76262 = inst_76269;\nvar __QMARK_sch = inst_76270;\nvar udt_t1 = inst_76271;\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"close-timeout: %s %s %s %s\",conn_type,uid,sch_uuid,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1,udt_close),udt_t1,udt_close], null)], null);\n});\n})();\nvar inst_76276 = (new cljs.core.Delay(inst_76275,null));\nvar inst_76277 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,792,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_76276,null,-900174583,null);\nvar state_76319__$1 = state_76319;\nvar statearr_76342_78138 = state_76319__$1;\n(statearr_76342_78138[(2)] = inst_76277);\n\n(statearr_76342_78138[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (12))){\nvar inst_76301 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_76302 = [new cljs.core.Keyword(\"chsk\",\"uidport-close\",\"chsk/uidport-close\",901058678),uid];\nvar inst_76303 = (new cljs.core.PersistentVector(null,2,(5),inst_76301,inst_76302,null));\nvar inst_76304 = receive_event_msg_BANG_(inst_76303);\nvar state_76319__$1 = state_76319;\nvar statearr_76347_78142 = state_76319__$1;\n(statearr_76347_78142[(2)] = inst_76304);\n\n(statearr_76347_78142[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (2))){\nvar inst_76269 = (state_76319[(8)]);\nvar inst_76261 = (state_76319[(2)]);\nvar inst_76265 = cljs.core.deref(conns_);\nvar inst_76266 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_76267 = [conn_type,uid,client_id];\nvar inst_76268 = (new cljs.core.PersistentVector(null,3,(5),inst_76266,inst_76267,null));\nvar inst_76269__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_76265,inst_76268);\nvar inst_76270 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_76269__$1,(0),null);\nvar inst_76271 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_76269__$1,(1),null);\nvar inst_76272 = cljs.core.deref(taoensso.sente.debug_mode_QMARK__);\nvar state_76319__$1 = (function (){var statearr_76349 = state_76319;\n(statearr_76349[(7)] = inst_76270);\n\n(statearr_76349[(8)] = inst_76269__$1);\n\n(statearr_76349[(10)] = inst_76271);\n\n(statearr_76349[(11)] = inst_76261);\n\nreturn statearr_76349;\n})();\nif(cljs.core.truth_(inst_76272)){\nvar statearr_76350_78144 = state_76319__$1;\n(statearr_76350_78144[(1)] = (3));\n\n} else {\nvar statearr_76351_78146 = state_76319__$1;\n(statearr_76351_78146[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (11))){\nvar inst_76310 = (state_76319[(2)]);\nvar state_76319__$1 = state_76319;\nvar statearr_76353_78147 = state_76319__$1;\n(statearr_76353_78147[(2)] = inst_76310);\n\n(statearr_76353_78147[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (9))){\nvar inst_76270 = (state_76319[(7)]);\nvar inst_76269 = (state_76319[(8)]);\nvar inst_76292 = (state_76319[(9)]);\nvar inst_76271 = (state_76319[(10)]);\nvar inst_76294 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_76295 = [conn_type,uid];\nvar inst_76296 = (new cljs.core.PersistentVector(null,2,(5),inst_76294,inst_76295,null));\nvar inst_76297 = (function (){var vec__76262 = inst_76269;\nvar __QMARK_sch = inst_76270;\nvar udt_t1 = inst_76271;\nvar disconnect_QMARK_ = inst_76292;\nreturn (function (_QMARK_m){\nif(cljs.core.empty_QMARK_(_QMARK_m)){\nreturn new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782);\n} else {\nreturn _QMARK_m;\n}\n});\n})();\nvar inst_76298 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_76296,inst_76297);\nvar inst_76299 = upd_connected_uid_BANG_(uid);\nvar state_76319__$1 = (function (){var statearr_76358 = state_76319;\n(statearr_76358[(12)] = inst_76298);\n\nreturn statearr_76358;\n})();\nif(cljs.core.truth_(inst_76299)){\nvar statearr_76359_78149 = state_76319__$1;\n(statearr_76359_78149[(1)] = (12));\n\n} else {\nvar statearr_76360_78150 = state_76319__$1;\n(statearr_76360_78150[(1)] = (13));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (5))){\nvar inst_76271 = (state_76319[(10)]);\nvar inst_76280 = (state_76319[(2)]);\nvar inst_76281 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_76271,udt_close);\nvar state_76319__$1 = (function (){var statearr_76362 = state_76319;\n(statearr_76362[(13)] = inst_76280);\n\nreturn statearr_76362;\n})();\nif(inst_76281){\nvar statearr_76366_78152 = state_76319__$1;\n(statearr_76366_78152[(1)] = (6));\n\n} else {\nvar statearr_76367_78153 = state_76319__$1;\n(statearr_76367_78153[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (14))){\nvar inst_76307 = (state_76319[(2)]);\nvar state_76319__$1 = state_76319;\nvar statearr_76369_78154 = state_76319__$1;\n(statearr_76369_78154[(2)] = inst_76307);\n\n(statearr_76369_78154[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (10))){\nvar state_76319__$1 = state_76319;\nvar statearr_76373_78155 = state_76319__$1;\n(statearr_76373_78155[(2)] = null);\n\n(statearr_76373_78155[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76320 === (8))){\nvar inst_76313 = (state_76319[(2)]);\nvar state_76319__$1 = state_76319;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76319__$1,inst_76313);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__65652__auto__ = null;\nvar taoensso$sente$state_machine__65652__auto____0 = (function (){\nvar statearr_76376 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_76376[(0)] = taoensso$sente$state_machine__65652__auto__);\n\n(statearr_76376[(1)] = (1));\n\nreturn statearr_76376;\n});\nvar taoensso$sente$state_machine__65652__auto____1 = (function (state_76319){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_76319);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e76378){var ex__65655__auto__ = e76378;\nvar statearr_76379_78157 = state_76319;\n(statearr_76379_78157[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_76319[(4)]))){\nvar statearr_76380_78159 = state_76319;\n(statearr_76380_78159[(1)] = cljs.core.first((state_76319[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__78160 = state_76319;\nstate_76319 = G__78160;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65652__auto__ = function(state_76319){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65652__auto____1.call(this,state_76319);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65652__auto____0;\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65652__auto____1;\nreturn taoensso$sente$state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_76382 = f__65867__auto__();\n(statearr_76382[(6)] = c__65866__auto__);\n\nreturn statearr_76382;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\nreturn c__65866__auto__;\n}),new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),(function (server_ch,websocket_QMARK_,error){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,814,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"ring-req->server-ch-resp error: %s (%s)\",error,uid,sch_uuid], null);\n}),null)),null,-1734561164,null);\n})], null));\n}\n}\n})], null);\n}));\n\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = (function (seq75836){\nvar G__75837 = cljs.core.first(seq75836);\nvar seq75836__$1 = cljs.core.next(seq75836);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__75837,seq75836__$1);\n}));\n\n/**\n * Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_,uid,buffered_evs_pstr,upd_conn_BANG_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,820,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ws-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,-1541088514,null);\n\nvar seq__76390 = cljs.core.seq(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid], null)));\nvar chunk__76391 = null;\nvar count__76392 = (0);\nvar i__76393 = (0);\nwhile(true){\nif((i__76393 < count__76392)){\nvar vec__76420 = chunk__76391.cljs$core$IIndexed$_nth$arity$2(null,i__76393);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76420,(0),null);\nvar vec__76423 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76420,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76423,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76423,(1),null);\nvar temp__5753__auto___78164 = _QMARK_sch;\nif(cljs.core.truth_(temp__5753__auto___78164)){\nvar sch_78165 = temp__5753__auto___78164;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_78165,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__78166 = seq__76390;\nvar G__78167 = chunk__76391;\nvar G__78168 = count__76392;\nvar G__78169 = (i__76393 + (1));\nseq__76390 = G__78166;\nchunk__76391 = G__78167;\ncount__76392 = G__78168;\ni__76393 = G__78169;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__76390);\nif(temp__5753__auto__){\nvar seq__76390__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__76390__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__76390__$1);\nvar G__78171 = cljs.core.chunk_rest(seq__76390__$1);\nvar G__78172 = c__4591__auto__;\nvar G__78173 = cljs.core.count(c__4591__auto__);\nvar G__78174 = (0);\nseq__76390 = G__78171;\nchunk__76391 = G__78172;\ncount__76392 = G__78173;\ni__76393 = G__78174;\ncontinue;\n} else {\nvar vec__76428 = cljs.core.first(seq__76390__$1);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76428,(0),null);\nvar vec__76431 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76428,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76431,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76431,(1),null);\nvar temp__5753__auto___78176__$1 = _QMARK_sch;\nif(cljs.core.truth_(temp__5753__auto___78176__$1)){\nvar sch_78177 = temp__5753__auto___78176__$1;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_78177,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__78178 = cljs.core.next(seq__76390__$1);\nvar G__78179 = null;\nvar G__78180 = (0);\nvar G__78181 = (0);\nseq__76390 = G__78178;\nchunk__76391 = G__78179;\ncount__76392 = G__78180;\ni__76393 = G__78181;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n *   Allows some time for possible Ajax poller reconnects.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(conns_,uid,buffered_evs_pstr){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,830,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ajax-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,1379741278,null);\n\nvar ms_backoffs = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(90),(180),(360),(720),(1440)], null);\nvar client_ids_unsatisfied = cljs.core.keys(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid], null)));\nif(cljs.core.empty_QMARK_(client_ids_unsatisfied)){\nreturn null;\n} else {\nvar c__65866__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_76498){\nvar state_val_76499 = (state_76498[(1)]);\nif((state_val_76499 === (7))){\nvar inst_76449 = (state_76498[(7)]);\nvar inst_76458 = (state_76498[(8)]);\nvar inst_76448 = (state_76498[(9)]);\nvar inst_76469 = (function (){var n = inst_76448;\nvar client_ids_satisfied = inst_76449;\nvar _QMARK_pulled = inst_76458;\nreturn (function (s,client_id,p__76468){\nvar vec__76503 = p__76468;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76503,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76503,(1),null);\nvar sent_QMARK_ = (function (){var temp__5753__auto__ = _QMARK_sch;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar sch = temp__5753__auto__;\nreturn taoensso.sente.interfaces.sch_send_BANG_(_QMARK_sch,cljs.core.not(new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101)),buffered_evs_pstr);\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(sent_QMARK_)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,client_id);\n} else {\nreturn s;\n}\n});\n})();\nvar inst_76470 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_76471 = cljs.core.reduce_kv(inst_76469,inst_76470,inst_76458);\nvar state_76498__$1 = state_76498;\nvar statearr_76506_78185 = state_76498__$1;\n(statearr_76506_78185[(2)] = inst_76471);\n\n(statearr_76506_78185[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (1))){\nvar inst_76447 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_76448 = (0);\nvar inst_76449 = inst_76447;\nvar state_76498__$1 = (function (){var statearr_76507 = state_76498;\n(statearr_76507[(7)] = inst_76449);\n\n(statearr_76507[(9)] = inst_76448);\n\nreturn statearr_76507;\n})();\nvar statearr_76508_78187 = state_76498__$1;\n(statearr_76508_78187[(2)] = null);\n\n(statearr_76508_78187[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (4))){\nvar state_76498__$1 = state_76498;\nvar statearr_76509_78188 = state_76498__$1;\n(statearr_76509_78188[(2)] = true);\n\n(statearr_76509_78188[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (15))){\nvar inst_76491 = (state_76498[(2)]);\nvar state_76498__$1 = state_76498;\nvar statearr_76510_78190 = state_76498__$1;\n(statearr_76510_78190[(2)] = inst_76491);\n\n(statearr_76510_78190[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (13))){\nvar inst_76476 = (state_76498[(10)]);\nvar inst_76481 = cljs.core.rand_int(inst_76476);\nvar inst_76482 = (inst_76476 + inst_76481);\nvar inst_76483 = cljs.core.async.timeout(inst_76482);\nvar state_76498__$1 = state_76498;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_76498__$1,(16),inst_76483);\n} else {\nif((state_val_76499 === (6))){\nvar inst_76458 = (state_76498[(8)]);\nvar inst_76466 = (state_76498[(2)]);\nvar state_76498__$1 = (function (){var statearr_76511 = state_76498;\n(statearr_76511[(11)] = inst_76466);\n\nreturn statearr_76511;\n})();\nif(cljs.core.truth_(inst_76458)){\nvar statearr_76512_78192 = state_76498__$1;\n(statearr_76512_78192[(1)] = (7));\n\n} else {\nvar statearr_76513_78193 = state_76498__$1;\n(statearr_76513_78193[(1)] = (8));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (3))){\nvar inst_76496 = (state_76498[(2)]);\nvar state_76498__$1 = state_76498;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76498__$1,inst_76496);\n} else {\nif((state_val_76499 === (12))){\nvar inst_76494 = (state_76498[(2)]);\nvar state_76498__$1 = state_76498;\nvar statearr_76514_78194 = state_76498__$1;\n(statearr_76514_78194[(2)] = inst_76494);\n\n(statearr_76514_78194[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (2))){\nvar inst_76449 = (state_76498[(7)]);\nvar inst_76458 = (state_76498[(8)]);\nvar inst_76448 = (state_76498[(9)]);\nvar inst_76452 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_76453 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid];\nvar inst_76454 = (new cljs.core.PersistentVector(null,2,(5),inst_76452,inst_76453,null));\nvar inst_76457 = (function (){var n = inst_76448;\nvar client_ids_satisfied = inst_76449;\nreturn (function (m){\nvar ks_to_pull = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(client_ids_satisfied,cljs.core.keys(m));\nif(cljs.core.empty_QMARK_(ks_to_pull)){\nreturn taoensso.encore.swapped(m,null);\n} else {\nreturn taoensso.encore.swapped(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m__$1,k){\nvar vec__76519 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76519,(0),null);\nvar udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76519,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,udt], null));\n}),m,ks_to_pull),cljs.core.select_keys(m,ks_to_pull));\n}\n});\n})();\nvar inst_76458__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_76454,inst_76457);\nvar inst_76460 = (function (){var n = inst_76448;\nvar client_ids_satisfied = inst_76449;\nvar _QMARK_pulled = inst_76458__$1;\nreturn (function (x){\nvar or__4160__auto__ = (x == null);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nreturn taoensso.truss.impl.non_throwing(cljs.core.map_QMARK_)(x);\n}\n});\n})();\nvar inst_76461 = inst_76460(inst_76458__$1);\nvar state_76498__$1 = (function (){var statearr_76522 = state_76498;\n(statearr_76522[(8)] = inst_76458__$1);\n\nreturn statearr_76522;\n})();\nif(cljs.core.truth_(inst_76461)){\nvar statearr_76523_78198 = state_76498__$1;\n(statearr_76523_78198[(1)] = (4));\n\n} else {\nvar statearr_76524_78199 = state_76498__$1;\n(statearr_76524_78199[(1)] = (5));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (11))){\nvar state_76498__$1 = state_76498;\nvar statearr_76526_78200 = state_76498__$1;\n(statearr_76526_78200[(2)] = null);\n\n(statearr_76526_78200[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (9))){\nvar inst_76449 = (state_76498[(7)]);\nvar inst_76476 = (state_76498[(10)]);\nvar inst_76448 = (state_76498[(9)]);\nvar inst_76474 = (state_76498[(2)]);\nvar inst_76475 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(inst_76449,inst_76474);\nvar inst_76476__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ms_backoffs,inst_76448);\nvar state_76498__$1 = (function (){var statearr_76528 = state_76498;\n(statearr_76528[(10)] = inst_76476__$1);\n\n(statearr_76528[(12)] = inst_76475);\n\nreturn statearr_76528;\n})();\nif(cljs.core.truth_(inst_76476__$1)){\nvar statearr_76533_78203 = state_76498__$1;\n(statearr_76533_78203[(1)] = (10));\n\n} else {\nvar statearr_76534_78204 = state_76498__$1;\n(statearr_76534_78204[(1)] = (11));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (5))){\nvar inst_76458 = (state_76498[(8)]);\nvar inst_76464 = taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",857,\"([:or nil? map?] ?pulled)\",inst_76458,null,null);\nvar state_76498__$1 = state_76498;\nvar statearr_76538_78205 = state_76498__$1;\n(statearr_76538_78205[(2)] = inst_76464);\n\n(statearr_76538_78205[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (14))){\nvar state_76498__$1 = state_76498;\nvar statearr_76539_78207 = state_76498__$1;\n(statearr_76539_78207[(2)] = null);\n\n(statearr_76539_78207[(1)] = (15));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (16))){\nvar inst_76475 = (state_76498[(12)]);\nvar inst_76448 = (state_76498[(9)]);\nvar inst_76485 = (state_76498[(2)]);\nvar inst_76486 = (inst_76448 + (1));\nvar inst_76448__$1 = inst_76486;\nvar inst_76449 = inst_76475;\nvar state_76498__$1 = (function (){var statearr_76541 = state_76498;\n(statearr_76541[(7)] = inst_76449);\n\n(statearr_76541[(13)] = inst_76485);\n\n(statearr_76541[(9)] = inst_76448__$1);\n\nreturn statearr_76541;\n})();\nvar statearr_76542_78210 = state_76498__$1;\n(statearr_76542_78210[(2)] = null);\n\n(statearr_76542_78210[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (10))){\nvar inst_76475 = (state_76498[(12)]);\nvar inst_76478 = cljs.core.complement(inst_76475);\nvar inst_76479 = taoensso.encore.rsome(inst_76478,client_ids_unsatisfied);\nvar state_76498__$1 = state_76498;\nif(cljs.core.truth_(inst_76479)){\nvar statearr_76543_78211 = state_76498__$1;\n(statearr_76543_78211[(1)] = (13));\n\n} else {\nvar statearr_76544_78212 = state_76498__$1;\n(statearr_76544_78212[(1)] = (14));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76499 === (8))){\nvar state_76498__$1 = state_76498;\nvar statearr_76545_78213 = state_76498__$1;\n(statearr_76545_78213[(2)] = null);\n\n(statearr_76545_78213[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto__ = null;\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto____0 = (function (){\nvar statearr_76546 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_76546[(0)] = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto__);\n\n(statearr_76546[(1)] = (1));\n\nreturn statearr_76546;\n});\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto____1 = (function (state_76498){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_76498);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e76547){var ex__65655__auto__ = e76547;\nvar statearr_76548_78215 = state_76498;\n(statearr_76548_78215[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_76498[(4)]))){\nvar statearr_76549_78217 = state_76498;\n(statearr_76549_78217[(1)] = cljs.core.first((state_76498[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__78218 = state_76498;\nstate_76498 = G__78218;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto__ = function(state_76498){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto____1.call(this,state_76498);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto____0;\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto____1;\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_76550 = f__65867__auto__();\n(statearr_76550[(6)] = c__65866__auto__);\n\nreturn statearr_76550;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\nreturn c__65866__auto__;\n}\n});\n/**\n * Alias of `taoensso.encore/ajax-lite`\n */\ntaoensso.sente.ajax_lite = taoensso.encore.ajax_lite;\n\n/**\n * @interface\n */\ntaoensso.sente.IChSocket = function(){};\n\nvar taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_78219 = (function (chsk){\nvar x__4463__auto__ = (((chsk == null))?null:chsk);\nvar m__4464__auto__ = (taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4464__auto__.call(null,chsk));\n} else {\nvar m__4461__auto__ = (taoensso.sente._chsk_connect_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4461__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-connect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_connect_BANG_ = (function taoensso$sente$_chsk_connect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_78219(chsk);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_78221 = (function (chsk,reason){\nvar x__4463__auto__ = (((chsk == null))?null:chsk);\nvar m__4464__auto__ = (taoensso.sente._chsk_disconnect_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4464__auto__.call(null,chsk,reason));\n} else {\nvar m__4461__auto__ = (taoensso.sente._chsk_disconnect_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4461__auto__.call(null,chsk,reason));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-disconnect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_disconnect_BANG_ = (function taoensso$sente$_chsk_disconnect_BANG_(chsk,reason){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(chsk,reason);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_78221(chsk,reason);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_78224 = (function (chsk){\nvar x__4463__auto__ = (((chsk == null))?null:chsk);\nvar m__4464__auto__ = (taoensso.sente._chsk_reconnect_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4464__auto__.call(null,chsk));\n} else {\nvar m__4461__auto__ = (taoensso.sente._chsk_reconnect_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4461__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-reconnect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_reconnect_BANG_ = (function taoensso$sente$_chsk_reconnect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1(chsk);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_78224(chsk);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_78226 = (function (chsk,ev,opts){\nvar x__4463__auto__ = (((chsk == null))?null:chsk);\nvar m__4464__auto__ = (taoensso.sente._chsk_send_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4464__auto__.call(null,chsk,ev,opts));\n} else {\nvar m__4461__auto__ = (taoensso.sente._chsk_send_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4461__auto__.call(null,chsk,ev,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-send!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_send_BANG_ = (function taoensso$sente$_chsk_send_BANG_(chsk,ev,opts){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk,ev,opts);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_78226(chsk,ev,opts);\n}\n});\n\ntaoensso.sente.chsk_connect_BANG_ = (function taoensso$sente$chsk_connect_BANG_(chsk){\nreturn taoensso.sente._chsk_connect_BANG_(chsk);\n});\ntaoensso.sente.chsk_disconnect_BANG_ = (function taoensso$sente$chsk_disconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_disconnect_BANG_(chsk,new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641));\n});\n/**\n * Useful for reauthenticating after login/logout, etc.\n */\ntaoensso.sente.chsk_reconnect_BANG_ = (function taoensso$sente$chsk_reconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_reconnect_BANG_(chsk);\n});\n/**\n * Deprecated\n */\ntaoensso.sente.chsk_destroy_BANG_ = taoensso.sente.chsk_disconnect_BANG_;\n/**\n * Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\n */\ntaoensso.sente.chsk_send_BANG_ = (function taoensso$sente$chsk_send_BANG_(var_args){\nvar G__76588 = arguments.length;\nswitch (G__76588) {\ncase 2:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (chsk,ev){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (chsk,ev,_QMARK_timeout_ms,_QMARK_cb){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),_QMARK_timeout_ms,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),_QMARK_cb], null));\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (chsk,ev,opts){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,904,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (%s) %s\",cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),cljs.core.boolean$(new cljs.core.Keyword(null,\"cb\",\"cb\",589947841).cljs$core$IFn$_invoke$arity$1(opts))),ev], null);\n}),null)),null,-932689508,null);\n\nreturn taoensso.sente._chsk_send_BANG_(chsk,ev,opts);\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4);\n\ntaoensso.sente.chsk_send__GT_closed_BANG_ = (function taoensso$sente$chsk_send__GT_closed_BANG_(_QMARK_cb_fn){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,908,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send against closed chsk.\"], null);\n}),null)),null,262263720,null);\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)));\n} else {\n}\n\nreturn false;\n});\ntaoensso.sente.assert_send_args = (function taoensso$sente$assert_send_args(x,_QMARK_timeout_ms,_QMARK_cb){\ntaoensso.sente.assert_event(x);\n\nif((((((_QMARK_timeout_ms == null)) && ((_QMARK_cb == null)))) || (taoensso.encore.nat_int_QMARK_(_QMARK_timeout_ms)))){\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb requires a timeout; timeout-ms should be a +ive integer: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(_QMARK_timeout_ms)].join(''),\"\\n\",\"(or (and (nil? ?timeout-ms) (nil? ?cb)) (and (enc/nat-int? ?timeout-ms)))\"].join('')));\n}\n\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)) || (taoensso.encore.chan_QMARK_(_QMARK_cb)))){\nreturn null;\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb should be nil, an ifn, or a channel: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(_QMARK_cb))].join(''),\"\\n\",\"(or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\"].join('')));\n}\n});\ntaoensso.sente.pull_unused_cb_fn_BANG_ = (function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_,_QMARK_cb_uuid){\nvar temp__5753__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar cb_uuid = temp__5753__auto__;\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null),(function (_QMARK_f){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),_QMARK_f);\n}));\n} else {\nreturn null;\n}\n});\n/**\n * Atomically swaps the value of chk's :state_ atom.\n */\ntaoensso.sente.swap_chsk_state_BANG_ = (function taoensso$sente$swap_chsk_state_BANG_(chsk,f){\nvar vec__76611 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk),(function (old_state){\nvar new_state = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(old_state) : f.call(null,old_state));\nvar new_state__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530).cljs$core$IFn$_invoke$arity$1(old_state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_state,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),false):new_state);\nvar new_state__$2 = (cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(new_state__$1))?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new_state__$1,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)):new_state__$1);\nreturn taoensso.encore.swapped(new_state__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state__$2], null));\n}));\nvar old_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76611,(0),null);\nvar new_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76611,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_state,new_state)){\nvar output = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state], null);\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(chsk,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"state\",\"chsk/state\",-1991397620),output], null));\n\nreturn output;\n} else {\nreturn null;\n}\n});\ntaoensso.sente.chsk_state__GT_closed = (function taoensso$sente$chsk_state__GT_closed(state,reason){\nvar e_78242 = (function (){try{if(cljs.core.map_QMARK_(state)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e76625){if((e76625 instanceof Error)){\nvar e_78242 = e76625;\nreturn e_78242;\n} else {\nthrow e76625;\n\n}\n}})();\nif((e_78242 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",951,\"(map? state)\",state,e_78242,null);\n}\n\nvar e_78244 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__76631 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641),null,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720),null,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424),null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__76631) : taoensso.truss.impl.set_STAR_.call(null,G__76631));\n})(),x);\n})(reason)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e76630){if((e76630 instanceof Error)){\nvar e_78244 = e76630;\nreturn e_78244;\n} else {\nthrow e76630;\n\n}\n}})();\nif((e_78244 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",952,\"([:el #{:requested-disconnect :downgrading-ws-to-ajax :unexpected :requested-reconnect}] reason)\",reason,e_78244,null);\n}\n\nif(cljs.core.truth_((function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(state);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(reason,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}\n})())){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"last-close\",\"last-close\",-2054255782),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null)], 0));\n} else {\nreturn state;\n}\n});\n/**\n * Experimental, undocumented. Allows a core.async channel to be provided\n *   instead of a cb-fn. The channel will receive values of form\n *   [<event-id>.cb <reply>].\n */\ntaoensso.sente.cb_chan_as_fn = (function taoensso$sente$cb_chan_as_fn(_QMARK_cb,ev){\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)))){\nreturn _QMARK_cb;\n} else {\nvar e_78245 = (function (){try{if(taoensso.encore.chan_QMARK_(_QMARK_cb)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e76638){if((e76638 instanceof Error)){\nvar e_78245 = e76638;\nreturn e_78245;\n} else {\nthrow e76638;\n\n}\n}})();\nif((e_78245 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",972,\"(enc/chan? ?cb)\",_QMARK_cb,e_78245,null);\n}\n\ntaoensso.sente.assert_event(ev);\n\nvar vec__76641 = ev;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76641,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76641,(1),null);\nvar cb_ch = _QMARK_cb;\nreturn (function (reply){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cb_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([taoensso.encore.as_qname(ev_id),\".cb\"].join('')),reply], null));\n});\n}\n});\ntaoensso.sente.receive_buffered_evs_BANG_ = (function taoensso$sente$receive_buffered_evs_BANG_(chs,clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,982,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-buffered-evs!: %s\",clj], null);\n}),null)),null,-1764705752,null);\n\nvar buffered_evs = ((cljs.core.vector_QMARK_(clj))?clj:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",983,\"(vector? clj)\",clj,null,null));\nvar seq__76651 = cljs.core.seq(buffered_evs);\nvar chunk__76652 = null;\nvar count__76653 = (0);\nvar i__76654 = (0);\nwhile(true){\nif((i__76654 < count__76653)){\nvar ev = chunk__76652.cljs$core$IIndexed$_nth$arity$2(null,i__76654);\ntaoensso.sente.assert_event(ev);\n\nvar vec__76682_78249 = ev;\nvar id_78250 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76682_78249,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_78250),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__78251 = seq__76651;\nvar G__78252 = chunk__76652;\nvar G__78253 = count__76653;\nvar G__78254 = (i__76654 + (1));\nseq__76651 = G__78251;\nchunk__76652 = G__78252;\ncount__76653 = G__78253;\ni__76654 = G__78254;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__76651);\nif(temp__5753__auto__){\nvar seq__76651__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__76651__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__76651__$1);\nvar G__78255 = cljs.core.chunk_rest(seq__76651__$1);\nvar G__78256 = c__4591__auto__;\nvar G__78257 = cljs.core.count(c__4591__auto__);\nvar G__78258 = (0);\nseq__76651 = G__78255;\nchunk__76652 = G__78256;\ncount__76653 = G__78257;\ni__76654 = G__78258;\ncontinue;\n} else {\nvar ev = cljs.core.first(seq__76651__$1);\ntaoensso.sente.assert_event(ev);\n\nvar vec__76689_78261 = ev;\nvar id_78262 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76689_78261,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_78262),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__78268 = cljs.core.next(seq__76651__$1);\nvar G__78269 = null;\nvar G__78270 = (0);\nvar G__78271 = (0);\nseq__76651 = G__78268;\nchunk__76652 = G__78269;\ncount__76653 = G__78270;\ni__76654 = G__78271;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ntaoensso.sente.handshake_QMARK_ = (function taoensso$sente$handshake_QMARK_(x){\nif(cljs.core.vector_QMARK_(x)){\nvar vec__76700 = x;\nvar x1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76700,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x1,new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686));\n} else {\nreturn false;\n}\n});\ntaoensso.sente.receive_handshake_BANG_ = (function taoensso$sente$receive_handshake_BANG_(chsk_type,chsk,clj){\nvar e_78272 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__76711 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__76711) : taoensso.truss.impl.set_STAR_.call(null,G__76711));\n})(),x);\n})(chsk_type)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e76709){if((e76709 instanceof Error)){\nvar e_78272 = e76709;\nreturn e_78272;\n} else {\nthrow e76709;\n\n}\n}})();\nif((e_78272 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",995,\"([:el #{:ws :ajax}] chsk-type)\",chsk_type,e_78272,null);\n}\n\nvar e_78273 = (function (){try{if(taoensso.sente.handshake_QMARK_(clj)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e76712){if((e76712 instanceof Error)){\nvar e_78273 = e76712;\nreturn e_78273;\n} else {\nthrow e76712;\n\n}\n}})();\nif((e_78273 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",996,\"(handshake? clj)\",clj,e_78273,null);\n}\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,997,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-handshake! (%s): %s\",chsk_type,clj], null);\n}),null)),null,-73997945,null);\n\nvar vec__76713 = clj;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76713,(0),null);\nvar vec__76716 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76713,(1),null);\nvar _QMARK_uid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76716,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76716,(1),null);\nvar _QMARK_handshake_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76716,(2),null);\nvar map__76719 = chsk;\nvar map__76719__$1 = cljs.core.__destructure_map(map__76719);\nvar chs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76719__$1,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120));\nvar ever_opened_QMARK__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76719__$1,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913));\nvar first_handshake_QMARK_ = cljs.core.compare_and_set_BANG_(ever_opened_QMARK__,false,true);\nvar new_state = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),chsk_type,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),true,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),_QMARK_uid,new cljs.core.Keyword(null,\"handshake-data\",\"handshake-data\",-278378864),_QMARK_handshake_data,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),first_handshake_QMARK_], null);\nvar handshake_ev = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_uid,null,_QMARK_handshake_data,first_handshake_QMARK_], null)], null);\ntaoensso.sente.assert_event(handshake_ev);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk,(function (p1__76705_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__76705_SHARP_,new_state], 0));\n}));\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(chs),handshake_ev);\n\nreturn new cljs.core.Keyword(null,\"handled\",\"handled\",1889700151);\n});\n/**\n * nnil iff the websocket npm library[1] is available.\n *   Easiest way to install:\n *     1. Add the lein-npm[2] plugin to your `project.clj`,\n *     2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n * \n *   [1] Ref. https://www.npmjs.com/package/websocket\n *   [2] Ref. https://github.com/RyanMcG/lein-npm\n */\ntaoensso.sente._QMARK_node_npm_websocket_ = (function (){var make_package_name = (function (prefix){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\"socket\"].join('');\n});\nvar require_fn = (((typeof require !== 'undefined'))?require:cljs.core.constantly(new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)));\nreturn (new cljs.core.Delay((function (){\nif(((taoensso.sente.node_target_QMARK_) && ((typeof require !== 'undefined')))){\ntry{var G__76744 = make_package_name(\"web\");\nreturn (require_fn.cljs$core$IFn$_invoke$arity$1 ? require_fn.cljs$core$IFn$_invoke$arity$1(G__76744) : require_fn.call(null,G__76744));\n}catch (e76739){var e = e76739;\nreturn null;\n}} else {\nreturn null;\n}\n}),null));\n})();\ntaoensso.sente.create_js_client_websocket_BANG_ = (function taoensso$sente$create_js_client_websocket_BANG_(p__76757){\nvar map__76760 = p__76757;\nvar map__76760__$1 = cljs.core.__destructure_map(map__76760);\nvar opts = map__76760__$1;\nvar onerror_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76760__$1,new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505));\nvar onmessage_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76760__$1,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172));\nvar onclose_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76760__$1,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785));\nvar uri_str = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76760__$1,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675));\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76760__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nvar temp__5753__auto__ = (function (){var or__4160__auto__ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"WebSocket\");\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"MozWebSocket\");\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(taoensso.sente._QMARK_node_npm_websocket_),\"w3cwebsocket\");\n}\n}\n})();\nif(cljs.core.truth_(temp__5753__auto__)){\nvar WebSocket = temp__5753__auto__;\nvar socket = (new WebSocket(uri_str));\nvar G__76778_78276 = socket;\n(G__76778_78276[\"onerror\"] = onerror_fn);\n\n(G__76778_78276[\"onmessage\"] = onmessage_fn);\n\n(G__76778_78276[\"onclose\"] = onclose_fn);\n\n\nreturn socket;\n} else {\nreturn null;\n}\n});\ntaoensso.sente.create_websocket_BANG_ = (function taoensso$sente$create_websocket_BANG_(p__76782){\nvar map__76783 = p__76782;\nvar map__76783__$1 = cljs.core.__destructure_map(map__76783);\nvar opts = map__76783__$1;\nvar onerror_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76783__$1,new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505));\nvar onmessage_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76783__$1,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172));\nvar onclose_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76783__$1,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785));\nvar uri_str = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76783__$1,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675));\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76783__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nreturn taoensso.sente.create_js_client_websocket_BANG_(opts);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChWebSocket = (function (client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.headers = headers;\nthis.packer = packer;\nthis.url = url;\nthis.ws_kalive_ms = ws_kalive_ms;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.retry_count_ = retry_count_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.cbs_waiting_ = cbs_waiting_;\nthis.socket_ = socket_;\nthis.udt_last_comms_ = udt_last_comms_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4415__auto__,k__4416__auto__){\nvar self__ = this;\nvar this__4415__auto____$1 = this;\nreturn this__4415__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4416__auto__,null);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4417__auto__,k76800,else__4418__auto__){\nvar self__ = this;\nvar this__4417__auto____$1 = this;\nvar G__76807 = k76800;\nvar G__76807__$1 = (((G__76807 instanceof cljs.core.Keyword))?G__76807.fqn:null);\nswitch (G__76807__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"headers\":\nreturn self__.headers;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"ws-kalive-ms\":\nreturn self__.ws_kalive_ms;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"retry-count_\":\nreturn self__.retry_count_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"cbs-waiting_\":\nreturn self__.cbs_waiting_;\n\nbreak;\ncase \"socket_\":\nreturn self__.socket_;\n\nbreak;\ncase \"udt-last-comms_\":\nreturn self__.udt_last_comms_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k76800,else__4418__auto__);\n\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4434__auto__,f__4435__auto__,init__4436__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4437__auto__,p__76814){\nvar vec__76815 = p__76814;\nvar k__4438__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76815,(0),null);\nvar v__4439__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76815,(1),null);\nreturn (f__4435__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4435__auto__.cljs$core$IFn$_invoke$arity$3(ret__4437__auto__,k__4438__auto__,v__4439__auto__) : f__4435__auto__.call(null,ret__4437__auto__,k__4438__auto__,v__4439__auto__));\n}),init__4436__auto__,this__4434__auto____$1);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4429__auto__,writer__4430__auto__,opts__4431__auto__){\nvar self__ = this;\nvar this__4429__auto____$1 = this;\nvar pr_pair__4432__auto__ = (function (keyval__4433__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4431__auto__,keyval__4433__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,pr_pair__4432__auto__,\"#taoensso.sente.ChWebSocket{\",\", \",\"}\",opts__4431__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__76799){\nvar self__ = this;\nvar G__76799__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__76799__$1,15,new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4413__auto__){\nvar self__ = this;\nvar this__4413__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4410__auto__){\nvar self__ = this;\nvar this__4410__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4419__auto__){\nvar self__ = this;\nvar this__4419__auto____$1 = this;\nreturn (15 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4411__auto__){\nvar self__ = this;\nvar this__4411__auto____$1 = this;\nvar h__4273__auto__ = self__.__hash;\nif((!((h__4273__auto__ == null)))){\nreturn h__4273__auto__;\n} else {\nvar h__4273__auto____$1 = (function (coll__4412__auto__){\nreturn (1998688700 ^ cljs.core.hash_unordered_coll(coll__4412__auto__));\n})(this__4411__auto____$1);\n(self__.__hash = h__4273__auto____$1);\n\nreturn h__4273__auto____$1;\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this76801,other76802){\nvar self__ = this;\nvar this76801__$1 = this;\nreturn (((!((other76802 == null)))) && ((this76801__$1.constructor === other76802.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.client_id,other76802.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.chs,other76802.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.params,other76802.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.headers,other76802.headers)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.packer,other76802.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.url,other76802.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.ws_kalive_ms,other76802.ws_kalive_ms)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.state_,other76802.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.instance_handle_,other76802.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.retry_count_,other76802.retry_count_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.ever_opened_QMARK__,other76802.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.backoff_ms_fn,other76802.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.cbs_waiting_,other76802.cbs_waiting_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.socket_,other76802.socket_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.udt_last_comms_,other76802.udt_last_comms_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76801__$1.__extmap,other76802.__extmap)));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4424__auto__,k__4425__auto__){\nvar self__ = this;\nvar this__4424__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 15, [new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),null,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4425__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4424__auto____$1),self__.__meta),k__4425__auto__);\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4425__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4422__auto__,k__4423__auto__,G__76799){\nvar self__ = this;\nvar this__4422__auto____$1 = this;\nvar pred__76882 = cljs.core.keyword_identical_QMARK_;\nvar expr__76883 = k__4423__auto__;\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(G__76799,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,G__76799,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,G__76799,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,G__76799,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,G__76799,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,G__76799,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,G__76799,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,G__76799,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,G__76799,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,G__76799,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,G__76799,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,G__76799,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__76799,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,G__76799,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__76882.cljs$core$IFn$_invoke$arity$2 ? pred__76882.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__76883) : pred__76882.call(null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__76883)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,G__76799,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4423__auto__,G__76799),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4427__auto__){\nvar self__ = this;\nvar this__4427__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4414__auto__,G__76799){\nvar self__ = this;\nvar this__4414__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,G__76799,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4420__auto__,entry__4421__auto__){\nvar self__ = this;\nvar this__4420__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4421__auto__)){\nreturn this__4420__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4421__auto__,(0)),cljs.core._nth(entry__4421__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4420__auto____$1,entry__4421__auto__);\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__76787_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__76787_SHARP_,reason);\n}));\n\nvar temp__5753__auto__ = cljs.core.deref(self__.socket_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar s = temp__5753__auto__;\nreturn s.close((1000),\"CLOSE_NORMAL\");\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__76916 = opts;\nvar map__76916__$1 = cljs.core.__destructure_map(map__76916);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76916__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76916__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76916__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar _QMARK_cb_uuid = (cljs.core.truth_(_QMARK_cb_fn)?taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6)):null);\nvar ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,_QMARK_cb_uuid);\nvar temp__5753__auto___78289 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5753__auto___78289)){\nvar cb_uuid_78290 = temp__5753__auto___78289;\ntaoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_78290], null),(function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e76917){if((e76917 instanceof Error)){\nvar e = e76917;\nreturn e;\n} else {\nthrow e76917;\n\n}\n}})();\nif((e == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1141,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\n}\n})());\n\nvar temp__5753__auto___78291__$1 = _QMARK_timeout_ms;\nif(cljs.core.truth_(temp__5753__auto___78291__$1)){\nvar timeout_ms_78292 = temp__5753__auto___78291__$1;\nvar c__65866__auto___78293 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_76932){\nvar state_val_76933 = (state_76932[(1)]);\nif((state_val_76933 === (1))){\nvar inst_76920 = cljs.core.async.timeout(timeout_ms_78292);\nvar state_76932__$1 = state_76932;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_76932__$1,(2),inst_76920);\n} else {\nif((state_val_76933 === (2))){\nvar inst_76923 = (state_76932[(7)]);\nvar inst_76922 = (state_76932[(2)]);\nvar inst_76923__$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,_QMARK_cb_uuid);\nvar state_76932__$1 = (function (){var statearr_76936 = state_76932;\n(statearr_76936[(7)] = inst_76923__$1);\n\n(statearr_76936[(8)] = inst_76922);\n\nreturn statearr_76936;\n})();\nif(cljs.core.truth_(inst_76923__$1)){\nvar statearr_76937_78298 = state_76932__$1;\n(statearr_76937_78298[(1)] = (3));\n\n} else {\nvar statearr_76938_78299 = state_76932__$1;\n(statearr_76938_78299[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76933 === (3))){\nvar inst_76923 = (state_76932[(7)]);\nvar inst_76927 = (inst_76923.cljs$core$IFn$_invoke$arity$1 ? inst_76923.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : inst_76923.call(null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\nvar state_76932__$1 = state_76932;\nvar statearr_76939_78300 = state_76932__$1;\n(statearr_76939_78300[(2)] = inst_76927);\n\n(statearr_76939_78300[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76933 === (4))){\nvar state_76932__$1 = state_76932;\nvar statearr_76940_78301 = state_76932__$1;\n(statearr_76940_78301[(2)] = null);\n\n(statearr_76940_78301[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_76933 === (5))){\nvar inst_76930 = (state_76932[(2)]);\nvar state_76932__$1 = state_76932;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76932__$1,inst_76930);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__65652__auto__ = null;\nvar taoensso$sente$state_machine__65652__auto____0 = (function (){\nvar statearr_76945 = [null,null,null,null,null,null,null,null,null];\n(statearr_76945[(0)] = taoensso$sente$state_machine__65652__auto__);\n\n(statearr_76945[(1)] = (1));\n\nreturn statearr_76945;\n});\nvar taoensso$sente$state_machine__65652__auto____1 = (function (state_76932){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_76932);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e76947){var ex__65655__auto__ = e76947;\nvar statearr_76949_78302 = state_76932;\n(statearr_76949_78302[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_76932[(4)]))){\nvar statearr_76950_78303 = state_76932;\n(statearr_76950_78303[(1)] = cljs.core.first((state_76932[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__78304 = state_76932;\nstate_76932 = G__78304;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65652__auto__ = function(state_76932){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65652__auto____1.call(this,state_76932);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65652__auto____0;\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65652__auto____1;\nreturn taoensso$sente$state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_76953 = f__65867__auto__();\n(statearr_76953[(6)] = c__65866__auto___78293);\n\nreturn statearr_76953;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\n} else {\n}\n} else {\n}\n\ntry{cljs.core.deref(self__.socket_).send(ppstr);\n\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}catch (e76954){var t = e76954;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1155,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t,\"Chsk send error\"], null);\n}),null)),null,-614933510,null);\n\nvar temp__5753__auto___78305 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5753__auto___78305)){\nvar cb_uuid_78306 = temp__5753__auto___78305;\nvar cb_fn_STAR__78307 = (function (){var or__4160__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid_78306);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e76959){if((e76959 instanceof Error)){\nvar e = e76959;\nreturn e;\n} else {\nthrow e76959;\n\n}\n}})();\nif((e == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1158,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\n}\n}\n})();\n(cb_fn_STAR__78307.cljs$core$IFn$_invoke$arity$1 ? cb_fn_STAR__78307.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : cb_fn_STAR__78307.call(null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\n} else {\n}\n\nreturn false;\n}}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});\nvar connect_fn = (function taoensso$sente$connect_fn(){\nif(have_handle_QMARK_()){\nvar retry_fn = (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.retry_count_,cljs.core.inc);\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1174,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n}),null)),null,915535651,null);\n\ngoog.global.setTimeout(taoensso$sente$connect_fn,backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__76789_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__76789_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n}));\n} else {\nreturn null;\n}\n});\nvar onerror_fn = (function (ws_ev){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1187,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WebSocket error: %s\",(function (){try{return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(ws_ev);\n}catch (e76966){var _ = e76966;\nreturn ws_ev;\n}})()], null);\n}),null)),null,-1307972531,null);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__76790_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__76790_SHARP_,new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev], null));\n}));\n});\nvar onmessage_fn = (function (ws_ev){\nvar ppstr = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"data\");\nvar vec__76974 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76974,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76974,(1),null);\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nvar or__4160__auto__ = ((taoensso.sente.handshake_QMARK_(clj))?(function (){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),chsk__$1,clj);\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nreturn new cljs.core.Keyword(null,\"handshake\",\"handshake\",68079331);\n})()\n:null);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)))?(function (){\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(self__.chs),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)], null));\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nvar temp__5751__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar cb_uuid = temp__5751__auto__;\nvar temp__5751__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid);\nif(cljs.core.truth_(temp__5751__auto____$1)){\nvar cb_fn = temp__5751__auto____$1;\nreturn (cb_fn.cljs$core$IFn$_invoke$arity$1 ? cb_fn.cljs$core$IFn$_invoke$arity$1(clj) : cb_fn.call(null,clj));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1231,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",clj], null);\n}),null)),null,-386535038,null);\n}\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});\nvar onclose_fn = (function (ws_ev){\nvar last_ws_close = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev,new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"wasClean\"),new cljs.core.Keyword(null,\"code\",\"code\",1586293142),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"code\"),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"reason\")], null);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009).cljs$core$IFn$_invoke$arity$1(last_ws_close))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,1257,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Clean WebSocket close, will not attempt reconnect\"], null);\n}),null)),null,-1960579053,null);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__76795_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__76795_SHARP_,new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n}));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__76796_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(taoensso.sente.chsk_state__GT_closed(p1__76796_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424)),new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n}));\n\nreturn retry_fn();\n}\n});\nvar _QMARK_socket = (function (){try{return taoensso.sente.create_websocket_BANG_(new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505),onerror_fn,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172),onmessage_fn,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785),onclose_fn,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675),taoensso.encore.merge_url_with_query_string(self__.url,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0)))], null));\n}catch (e76997){var t = e76997;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1280,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t,\"WebSocket error\"], null);\n}),null)),null,1117270543,null);\n\nreturn null;\n}})();\nif(cljs.core.not(_QMARK_socket)){\nreturn retry_fn();\n} else {\nvar temp__5753__auto___78327 = cljs.core.deref(self__.socket_);\nif(cljs.core.truth_(temp__5753__auto___78327)){\nvar old_socket_78328 = temp__5753__auto___78327;\nold_socket_78328.close();\n} else {\n}\n\nreturn cljs.core.reset_BANG_(self__.socket_,_QMARK_socket);\n}\n} else {\nreturn null;\n}\n});\nvar temp__5753__auto___78329 = self__.ws_kalive_ms;\nif(cljs.core.truth_(temp__5753__auto___78329)){\nvar ms_78330 = temp__5753__auto___78329;\nvar c__65866__auto___78331 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_77068){\nvar state_val_77069 = (state_77068[(1)]);\nif((state_val_77069 === (7))){\nvar inst_77041 = (state_77068[(2)]);\nvar state_77068__$1 = state_77068;\nvar statearr_77070_78336 = state_77068__$1;\n(statearr_77070_78336[(2)] = inst_77041);\n\n(statearr_77070_78336[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77069 === (1))){\nvar state_77068__$1 = state_77068;\nvar statearr_77072_78337 = state_77068__$1;\n(statearr_77072_78337[(2)] = null);\n\n(statearr_77072_78337[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77069 === (4))){\nvar inst_77021 = (state_77068[(2)]);\nvar inst_77022 = have_handle_QMARK_();\nvar state_77068__$1 = (function (){var statearr_77073 = state_77068;\n(statearr_77073[(7)] = inst_77021);\n\nreturn statearr_77073;\n})();\nif(inst_77022){\nvar statearr_77074_78338 = state_77068__$1;\n(statearr_77074_78338[(1)] = (5));\n\n} else {\nvar statearr_77075_78339 = state_77068__$1;\n(statearr_77075_78339[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77069 === (6))){\nvar state_77068__$1 = state_77068;\nvar statearr_77078_78340 = state_77068__$1;\n(statearr_77078_78340[(2)] = null);\n\n(statearr_77078_78340[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77069 === (3))){\nvar inst_77066 = (state_77068[(2)]);\nvar state_77068__$1 = state_77068;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_77068__$1,inst_77066);\n} else {\nif((state_val_77069 === (2))){\nvar inst_77017 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_77019 = cljs.core.async.timeout(ms_78330);\nvar state_77068__$1 = (function (){var statearr_77080 = state_77068;\n(statearr_77080[(8)] = inst_77017);\n\nreturn statearr_77080;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_77068__$1,(4),inst_77019);\n} else {\nif((state_val_77069 === (9))){\nvar state_77068__$1 = state_77068;\nvar statearr_77084_78342 = state_77068__$1;\n(statearr_77084_78342[(2)] = null);\n\n(statearr_77084_78342[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77069 === (5))){\nvar inst_77017 = (state_77068[(8)]);\nvar inst_77025 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_77026 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_77017,inst_77025);\nvar state_77068__$1 = state_77068;\nif(inst_77026){\nvar statearr_77087_78347 = state_77068__$1;\n(statearr_77087_78347[(1)] = (8));\n\n} else {\nvar statearr_77088_78351 = state_77068__$1;\n(statearr_77088_78351[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77069 === (10))){\nvar inst_77037 = (state_77068[(2)]);\nvar state_77068__$1 = (function (){var statearr_77090 = state_77068;\n(statearr_77090[(9)] = inst_77037);\n\nreturn statearr_77090;\n})();\nvar statearr_77092_78356 = state_77068__$1;\n(statearr_77092_78356[(2)] = null);\n\n(statearr_77092_78356[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77069 === (8))){\nvar inst_77028 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_77029 = [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)];\nvar inst_77030 = (new cljs.core.PersistentVector(null,1,(5),inst_77028,inst_77029,null));\nvar inst_77031 = [new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231)];\nvar inst_77032 = [true];\nvar inst_77033 = cljs.core.PersistentHashMap.fromArrays(inst_77031,inst_77032);\nvar inst_77034 = chsk__$1.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(null,inst_77030,inst_77033);\nvar state_77068__$1 = state_77068;\nvar statearr_77095_78359 = state_77068__$1;\n(statearr_77095_78359[(2)] = inst_77034);\n\n(statearr_77095_78359[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__65652__auto__ = null;\nvar taoensso$sente$state_machine__65652__auto____0 = (function (){\nvar statearr_77100 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_77100[(0)] = taoensso$sente$state_machine__65652__auto__);\n\n(statearr_77100[(1)] = (1));\n\nreturn statearr_77100;\n});\nvar taoensso$sente$state_machine__65652__auto____1 = (function (state_77068){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_77068);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e77102){var ex__65655__auto__ = e77102;\nvar statearr_77103_78364 = state_77068;\n(statearr_77103_78364[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_77068[(4)]))){\nvar statearr_77105_78365 = state_77068;\n(statearr_77105_78365[(1)] = cljs.core.first((state_77068[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__78366 = state_77068;\nstate_77068 = G__78366;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65652__auto__ = function(state_77068){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65652__auto____1.call(this,state_77068);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65652__auto____0;\ntaoensso$sente$state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65652__auto____1;\nreturn taoensso$sente$state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_77109 = f__65867__auto__();\n(statearr_77109[(6)] = c__65866__auto___78331);\n\nreturn statearr_77109;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\n} else {\n}\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nconnect_fn();\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChWebSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"headers\",\"headers\",805501398,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"ws-kalive-ms\",\"ws-kalive-ms\",-1212255801,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"retry-count_\",\"retry-count_\",1660769620,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"cbs-waiting_\",\"cbs-waiting_\",121502466,null),new cljs.core.Symbol(null,\"socket_\",\"socket_\",1279482619,null),new cljs.core.Symbol(null,\"udt-last-comms_\",\"udt-last-comms_\",1494731888,null)], null);\n}));\n\n(taoensso.sente.ChWebSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = (function (this__4458__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChWebSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = (function (this__4458__auto__,writer__4459__auto__){\nreturn cljs.core._write(writer__4459__auto__,\"taoensso.sente/ChWebSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChWebSocket.\n */\ntaoensso.sente.__GT_ChWebSocket = (function taoensso$sente$__GT_ChWebSocket(client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_){\nreturn (new taoensso.sente.ChWebSocket(client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChWebSocket = (function taoensso$sente$map__GT_ChWebSocket(G__76803){\nvar extmap__4454__auto__ = (function (){var G__77114 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__76803,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], 0));\nif(cljs.core.record_QMARK_(G__76803)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__77114);\n} else {\nreturn G__77114;\n}\n})();\nreturn (new taoensso.sente.ChWebSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908).cljs$core$IFn$_invoke$arity$1(G__76803),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639).cljs$core$IFn$_invoke$arity$1(G__76803),null,cljs.core.not_empty(extmap__4454__auto__),null));\n});\n\ntaoensso.sente.new_ChWebSocket = (function taoensso$sente$new_ChWebSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChWebSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n/**\n * We must set *some* client-side timeout otherwise an unpredictable (and\n *   probably too short) browser default will be used. Must be > server's\n *   :lp-timeout-ms.\n */\ntaoensso.sente.default_client_side_ajax_timeout_ms = taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(60)], 0));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAjaxSocket = (function (client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.ajax_opts = ajax_opts;\nthis.curr_xhr_ = curr_xhr_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4415__auto__,k__4416__auto__){\nvar self__ = this;\nvar this__4415__auto____$1 = this;\nreturn this__4415__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4416__auto__,null);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4417__auto__,k77123,else__4418__auto__){\nvar self__ = this;\nvar this__4417__auto____$1 = this;\nvar G__77134 = k77123;\nvar G__77134__$1 = (((G__77134 instanceof cljs.core.Keyword))?G__77134.fqn:null);\nswitch (G__77134__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"ajax-opts\":\nreturn self__.ajax_opts;\n\nbreak;\ncase \"curr-xhr_\":\nreturn self__.curr_xhr_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k77123,else__4418__auto__);\n\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4434__auto__,f__4435__auto__,init__4436__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4437__auto__,p__77136){\nvar vec__77137 = p__77136;\nvar k__4438__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77137,(0),null);\nvar v__4439__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77137,(1),null);\nreturn (f__4435__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4435__auto__.cljs$core$IFn$_invoke$arity$3(ret__4437__auto__,k__4438__auto__,v__4439__auto__) : f__4435__auto__.call(null,ret__4437__auto__,k__4438__auto__,v__4439__auto__));\n}),init__4436__auto__,this__4434__auto____$1);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4429__auto__,writer__4430__auto__,opts__4431__auto__){\nvar self__ = this;\nvar this__4429__auto____$1 = this;\nvar pr_pair__4432__auto__ = (function (keyval__4433__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4431__auto__,keyval__4433__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,pr_pair__4432__auto__,\"#taoensso.sente.ChAjaxSocket{\",\", \",\"}\",opts__4431__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__77122){\nvar self__ = this;\nvar G__77122__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__77122__$1,11,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4413__auto__){\nvar self__ = this;\nvar this__4413__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4410__auto__){\nvar self__ = this;\nvar this__4410__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4419__auto__){\nvar self__ = this;\nvar this__4419__auto____$1 = this;\nreturn (11 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4411__auto__){\nvar self__ = this;\nvar this__4411__auto____$1 = this;\nvar h__4273__auto__ = self__.__hash;\nif((!((h__4273__auto__ == null)))){\nreturn h__4273__auto__;\n} else {\nvar h__4273__auto____$1 = (function (coll__4412__auto__){\nreturn (-266770752 ^ cljs.core.hash_unordered_coll(coll__4412__auto__));\n})(this__4411__auto____$1);\n(self__.__hash = h__4273__auto____$1);\n\nreturn h__4273__auto____$1;\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this77124,other77125){\nvar self__ = this;\nvar this77124__$1 = this;\nreturn (((!((other77125 == null)))) && ((this77124__$1.constructor === other77125.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.client_id,other77125.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.chs,other77125.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.params,other77125.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.packer,other77125.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.url,other77125.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.state_,other77125.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.instance_handle_,other77125.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.ever_opened_QMARK__,other77125.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.backoff_ms_fn,other77125.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.ajax_opts,other77125.ajax_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.curr_xhr_,other77125.curr_xhr_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77124__$1.__extmap,other77125.__extmap)));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4424__auto__,k__4425__auto__){\nvar self__ = this;\nvar this__4424__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4425__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4424__auto____$1),self__.__meta),k__4425__auto__);\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4425__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4422__auto__,k__4423__auto__,G__77122){\nvar self__ = this;\nvar this__4422__auto____$1 = this;\nvar pred__77154 = cljs.core.keyword_identical_QMARK_;\nvar expr__77155 = k__4423__auto__;\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(G__77122,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,G__77122,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,G__77122,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,G__77122,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__77122,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__77122,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,G__77122,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,G__77122,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,G__77122,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__77122,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77154.cljs$core$IFn$_invoke$arity$2 ? pred__77154.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__77155) : pred__77154.call(null,new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__77155)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,G__77122,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4423__auto__,G__77122),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4427__auto__){\nvar self__ = this;\nvar this__4427__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4414__auto__,G__77122){\nvar self__ = this;\nvar this__4414__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,G__77122,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4420__auto__,entry__4421__auto__){\nvar self__ = this;\nvar this__4420__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4421__auto__)){\nreturn this__4420__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4421__auto__,(0)),cljs.core._nth(entry__4421__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4420__auto____$1,entry__4421__auto__);\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__77116_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__77116_SHARP_,reason);\n}));\n\nvar temp__5753__auto__ = cljs.core.deref(self__.curr_xhr_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar x = temp__5753__auto__;\nreturn x.abort();\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__77161 = opts;\nvar map__77161__$1 = cljs.core.__destructure_map(map__77161);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77161__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77161__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77161__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar csrf_token = new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_));\nvar G__77162_78387 = self__.url;\nvar G__77163_78388 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4160__auto__ = _QMARK_timeout_ms;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),csrf_token], null)], 0)),new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (){var ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,(cljs.core.truth_(_QMARK_cb_fn)?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):null));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252),ppstr], null)], 0));\n})()], null)], 0));\nvar G__77164_78389 = (function taoensso$sente$ajax_cb(p__77166){\nvar map__77167 = p__77166;\nvar map__77167__$1 = cljs.core.__destructure_map(map__77167);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77167__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77167__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nif(cljs.core.truth_(_QMARK_cb_fn)){\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\n} else {\nreturn null;\n}\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__77117_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__77117_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}));\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\n} else {\nreturn null;\n}\n}\n} else {\nvar content = _QMARK_content;\nvar resp_ppstr = content;\nvar vec__77168 = taoensso.sente.unpack(self__.packer,resp_ppstr);\nvar resp_clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77168,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77168,(1),null);\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(resp_clj) : _QMARK_cb_fn.call(null,resp_clj));\n} else {\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(resp_clj,new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1404,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",resp_clj], null);\n}),null)),null,-577635141,null);\n} else {\n}\n}\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__77118_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__77118_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n}));\n}\n});\n(taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__77162_78387,G__77163_78388,G__77164_78389) : taoensso.sente.ajax_lite.call(null,G__77162_78387,G__77163_78388,G__77164_78389));\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});\nvar poll_fn = (function taoensso$sente$poll_fn(retry_count){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1414,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"async-poll-for-update!\"], null);\n}),null)),null,-1419207353,null);\n\nif(have_handle_QMARK_()){\nvar retry_fn = (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = (retry_count + (1));\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1422,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n}),null)),null,-997177187,null);\n\ngoog.global.setTimeout((function (){\nreturn taoensso$sente$poll_fn(retry_count_STAR_);\n}),backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__77119_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__77119_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n}));\n} else {\nreturn null;\n}\n});\nreturn cljs.core.reset_BANG_(self__.curr_xhr_,(function (){var G__77175 = self__.url;\nvar G__77176 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"get\",\"get\",1683182755),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id], null),(cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093),true], null))], 0)),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0))], null)], 0));\nvar G__77177 = (function taoensso$sente$poll_fn_$_ajax_cb(p__77179){\nvar map__77180 = p__77179;\nvar map__77180__$1 = cljs.core.__destructure_map(map__77180);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77180__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77180__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nreturn taoensso$sente$poll_fn((0));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__77120_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__77120_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}));\n\nreturn retry_fn();\n\n}\n} else {\nvar content = _QMARK_content;\nvar ppstr = content;\nvar vec__77181 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77181,(0),null);\nvar handshake_QMARK_ = taoensso.sente.handshake_QMARK_(clj);\nif(handshake_QMARK_){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),chsk__$1,clj);\n} else {\n}\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__77121_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__77121_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n}));\n\ntaoensso$sente$poll_fn((0));\n\nif(handshake_QMARK_){\nreturn null;\n} else {\nvar or__4160__auto__ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)))?(function (){\nif(cljs.core.truth_(cljs.core.deref(taoensso.sente.debug_mode_QMARK__))){\ntaoensso.sente.receive_buffered_evs_BANG_(self__.chs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"debug\",\"timeout\",\"debug/timeout\",309499949)], null)], null));\n} else {\n}\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});\nreturn (taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__77175,G__77176,G__77177) : taoensso.sente.ajax_lite.call(null,G__77175,G__77176,G__77177));\n})());\n} else {\nreturn null;\n}\n});\npoll_fn((0));\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChAjaxSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"ajax-opts\",\"ajax-opts\",1122292418,null),new cljs.core.Symbol(null,\"curr-xhr_\",\"curr-xhr_\",321757831,null)], null);\n}));\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = (function (this__4458__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAjaxSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = (function (this__4458__auto__,writer__4459__auto__){\nreturn cljs.core._write(writer__4459__auto__,\"taoensso.sente/ChAjaxSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChAjaxSocket.\n */\ntaoensso.sente.__GT_ChAjaxSocket = (function taoensso$sente$__GT_ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_){\nreturn (new taoensso.sente.ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAjaxSocket = (function taoensso$sente$map__GT_ChAjaxSocket(G__77128){\nvar extmap__4454__auto__ = (function (){var G__77194 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__77128,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], 0));\nif(cljs.core.record_QMARK_(G__77128)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__77194);\n} else {\nreturn G__77194;\n}\n})();\nreturn (new taoensso.sente.ChAjaxSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109).cljs$core$IFn$_invoke$arity$1(G__77128),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696).cljs$core$IFn$_invoke$arity$1(G__77128),null,cljs.core.not_empty(extmap__4454__auto__),null));\n});\n\ntaoensso.sente.new_ChAjaxSocket = (function taoensso$sente$new_ChAjaxSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAjaxSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAutoSocket = (function (ws_chsk_opts,ajax_chsk_opts,state_,impl_,__meta,__extmap,__hash){\nthis.ws_chsk_opts = ws_chsk_opts;\nthis.ajax_chsk_opts = ajax_chsk_opts;\nthis.state_ = state_;\nthis.impl_ = impl_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4415__auto__,k__4416__auto__){\nvar self__ = this;\nvar this__4415__auto____$1 = this;\nreturn this__4415__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4416__auto__,null);\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4417__auto__,k77200,else__4418__auto__){\nvar self__ = this;\nvar this__4417__auto____$1 = this;\nvar G__77205 = k77200;\nvar G__77205__$1 = (((G__77205 instanceof cljs.core.Keyword))?G__77205.fqn:null);\nswitch (G__77205__$1) {\ncase \"ws-chsk-opts\":\nreturn self__.ws_chsk_opts;\n\nbreak;\ncase \"ajax-chsk-opts\":\nreturn self__.ajax_chsk_opts;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"impl_\":\nreturn self__.impl_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k77200,else__4418__auto__);\n\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4434__auto__,f__4435__auto__,init__4436__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4437__auto__,p__77206){\nvar vec__77207 = p__77206;\nvar k__4438__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77207,(0),null);\nvar v__4439__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77207,(1),null);\nreturn (f__4435__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4435__auto__.cljs$core$IFn$_invoke$arity$3(ret__4437__auto__,k__4438__auto__,v__4439__auto__) : f__4435__auto__.call(null,ret__4437__auto__,k__4438__auto__,v__4439__auto__));\n}),init__4436__auto__,this__4434__auto____$1);\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4429__auto__,writer__4430__auto__,opts__4431__auto__){\nvar self__ = this;\nvar this__4429__auto____$1 = this;\nvar pr_pair__4432__auto__ = (function (keyval__4433__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4431__auto__,keyval__4433__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,pr_pair__4432__auto__,\"#taoensso.sente.ChAutoSocket{\",\", \",\"}\",opts__4431__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__77199){\nvar self__ = this;\nvar G__77199__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__77199__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4413__auto__){\nvar self__ = this;\nvar this__4413__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4410__auto__){\nvar self__ = this;\nvar this__4410__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4419__auto__){\nvar self__ = this;\nvar this__4419__auto____$1 = this;\nreturn (4 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4411__auto__){\nvar self__ = this;\nvar this__4411__auto____$1 = this;\nvar h__4273__auto__ = self__.__hash;\nif((!((h__4273__auto__ == null)))){\nreturn h__4273__auto__;\n} else {\nvar h__4273__auto____$1 = (function (coll__4412__auto__){\nreturn (-1193508708 ^ cljs.core.hash_unordered_coll(coll__4412__auto__));\n})(this__4411__auto____$1);\n(self__.__hash = h__4273__auto____$1);\n\nreturn h__4273__auto____$1;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this77201,other77202){\nvar self__ = this;\nvar this77201__$1 = this;\nreturn (((!((other77202 == null)))) && ((this77201__$1.constructor === other77202.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77201__$1.ws_chsk_opts,other77202.ws_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77201__$1.ajax_chsk_opts,other77202.ajax_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77201__$1.state_,other77202.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77201__$1.impl_,other77202.impl_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this77201__$1.__extmap,other77202.__extmap)));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4424__auto__,k__4425__auto__){\nvar self__ = this;\nvar this__4424__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),null], null), null),k__4425__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4424__auto____$1),self__.__meta),k__4425__auto__);\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4425__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4422__auto__,k__4423__auto__,G__77199){\nvar self__ = this;\nvar this__4422__auto____$1 = this;\nvar pred__77231 = cljs.core.keyword_identical_QMARK_;\nvar expr__77232 = k__4423__auto__;\nif(cljs.core.truth_((pred__77231.cljs$core$IFn$_invoke$arity$2 ? pred__77231.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__77232) : pred__77231.call(null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__77232)))){\nreturn (new taoensso.sente.ChAutoSocket(G__77199,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77231.cljs$core$IFn$_invoke$arity$2 ? pred__77231.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__77232) : pred__77231.call(null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__77232)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,G__77199,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77231.cljs$core$IFn$_invoke$arity$2 ? pred__77231.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__77232) : pred__77231.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__77232)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,G__77199,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__77231.cljs$core$IFn$_invoke$arity$2 ? pred__77231.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__77232) : pred__77231.call(null,new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__77232)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,G__77199,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4423__auto__,G__77199),null));\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4427__auto__){\nvar self__ = this;\nvar this__4427__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4414__auto__,G__77199){\nvar self__ = this;\nvar this__4414__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,G__77199,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4420__auto__,entry__4421__auto__){\nvar self__ = this;\nvar this__4420__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4421__auto__)){\nreturn this__4420__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4421__auto__,(0)),cljs.core._nth(entry__4421__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4420__auto____$1,entry__4421__auto__);\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5753__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar impl = temp__5753__auto__;\nreturn taoensso.sente._chsk_disconnect_BANG_(impl,reason);\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5753__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar impl = temp__5753__auto__;\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5751__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar impl = temp__5751__auto__;\nreturn taoensso.sente._chsk_send_BANG_(impl,ev,opts);\n} else {\nvar map__77253 = opts;\nvar map__77253__$1 = cljs.core.__destructure_map(map__77253);\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77253__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar ajax_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ajax_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ws_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ws_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ajax_conn_BANG_ = (function (){\ncljs.core.remove_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080));\n\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\nvar ws_conn_BANG_ = (function (){\nvar downgraded_QMARK___78405 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.core.add_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080),(function (_,___$1,old_state,new_state){\nvar temp__5753__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar impl = temp__5753__auto__;\nvar temp__5753__auto____$1 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(impl);\nif(cljs.core.truth_(temp__5753__auto____$1)){\nvar ever_opened_QMARK__ = temp__5753__auto____$1;\nif(cljs.core.truth_(cljs.core.deref(ever_opened_QMARK__))){\nreturn null;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502).cljs$core$IFn$_invoke$arity$1(new_state))){\nif(cljs.core.compare_and_set_BANG_(downgraded_QMARK___78405,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1555,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Permanently downgrading :auto chsk -> :ajax\"], null);\n}),null)),null,64164104,null);\n\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720));\n\nreturn cljs.core.reset_BANG_(self__.impl_,ajax_conn_BANG_());\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}));\n\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\ncljs.core.reset_BANG_(self__.impl_,(function (){var or__4160__auto__ = ws_conn_BANG_();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn ajax_conn_BANG_();\n}\n})());\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChAutoSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-349638577,null),new cljs.core.Symbol(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",-1051844442,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"impl_\",\"impl_\",-1435617590,null)], null);\n}));\n\n(taoensso.sente.ChAutoSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrSeq = (function (this__4458__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAutoSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrWriter = (function (this__4458__auto__,writer__4459__auto__){\nreturn cljs.core._write(writer__4459__auto__,\"taoensso.sente/ChAutoSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChAutoSocket.\n */\ntaoensso.sente.__GT_ChAutoSocket = (function taoensso$sente$__GT_ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_){\nreturn (new taoensso.sente.ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAutoSocket = (function taoensso$sente$map__GT_ChAutoSocket(G__77204){\nvar extmap__4454__auto__ = (function (){var G__77272 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__77204,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], 0));\nif(cljs.core.record_QMARK_(G__77204)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__77272);\n} else {\nreturn G__77272;\n}\n})();\nreturn (new taoensso.sente.ChAutoSocket(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104).cljs$core$IFn$_invoke$arity$1(G__77204),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327).cljs$core$IFn$_invoke$arity$1(G__77204),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__77204),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179).cljs$core$IFn$_invoke$arity$1(G__77204),null,cljs.core.not_empty(extmap__4454__auto__),null));\n});\n\ntaoensso.sente.new_ChAutoSocket = (function taoensso$sente$new_ChAutoSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAutoSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\ntaoensso.sente.get_chsk_url = (function taoensso$sente$get_chsk_url(protocol,host,path,type){\nvar protocol__$1 = (function (){var G__77273 = protocol;\nvar G__77273__$1 = (((G__77273 instanceof cljs.core.Keyword))?G__77273.fqn:null);\nswitch (G__77273__$1) {\ncase \"http\":\nreturn \"http:\";\n\nbreak;\ncase \"https\":\nreturn \"https:\";\n\nbreak;\ndefault:\nreturn protocol;\n\n}\n})();\nvar protocol__$2 = (function (){var e = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__77275 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"https:\",null,\"http:\",null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__77275) : taoensso.truss.impl.set_STAR_.call(null,G__77275));\n})(),x);\n})(protocol__$1)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e77274){if((e77274 instanceof Error)){\nvar e = e77274;\nreturn e;\n} else {\nthrow e77274;\n\n}\n}})();\nif((e == null)){\nreturn protocol__$1;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1574,\"([:el #{\\\"https:\\\" \\\"http:\\\"}] protocol)\",protocol__$1,e,null);\n}\n})();\nvar protocol__$3 = (function (){var G__77276 = type;\nvar G__77276__$1 = (((G__77276 instanceof cljs.core.Keyword))?G__77276.fqn:null);\nswitch (G__77276__$1) {\ncase \"ajax\":\nreturn protocol__$2;\n\nbreak;\ncase \"ws\":\nvar G__77279 = protocol__$2;\nswitch (G__77279) {\ncase \"https:\":\nreturn \"wss:\";\n\nbreak;\ncase \"http:\":\nreturn \"ws:\";\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__77279)].join('')));\n\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__77276__$1)].join('')));\n\n}\n})();\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$3),\"//\",taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([host,path], 0))].join('');\n});\n/**\n * Returns nil on failure, or a map with keys:\n *     :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n *              ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n *     :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n *     :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n *     :chsk    ; IChSocket implementer. You can usu. ignore this.\n * \n *   Common options:\n *     :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n *     :protocol       ; Server protocol, e/o #{:http :https}.\n *     :host           ; Server host (defaults to current page's host).\n *     :port           ; Server port (defaults to current page's port).\n *     :params         ; Map of any params to incl. in chsk Ring requests (handy\n *                     ; for application-level auth, etc.).\n *     :headers        ; Map of additional headers to include in the initiating request\n *                     ; (currently only for Java clients).\n *     :packer         ; :edn (default), or an IPacker implementation.\n *     :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n *     :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n *     :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to server's :ws-kalive-ms.\n */\ntaoensso.sente.make_channel_socket_client_BANG_ = (function taoensso$sente$make_channel_socket_client_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___78412 = arguments.length;\nvar i__4772__auto___78413 = (0);\nwhile(true){\nif((i__4772__auto___78413 < len__4771__auto___78412)){\nargs__4777__auto__.push((arguments[i__4772__auto___78413]));\n\nvar G__78414 = (i__4772__auto___78413 + (1));\ni__4772__auto___78413 = G__78414;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((2) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4778__auto__);\n});\n\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (path,_QMARK_csrf_token,p__77320){\nvar vec__77329 = p__77320;\nvar map__77332 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77329,(0),null);\nvar map__77332__$1 = cljs.core.__destructure_map(map__77332);\nvar opts = map__77332__$1;\nvar ajax_opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77332__$1,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109));\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__77332__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__77332__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),(function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"client-uuid\",\"client-uuid\",-1717531965).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\n}\n})());\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77332__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__77332__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77332__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__77332__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492));\nvar port = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77332__$1,new cljs.core.Keyword(null,\"port\",\"port\",1534937262));\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77332__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77332__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__77332__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((2048)));\nvar backoff_ms_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__77332__$1,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),taoensso.encore.exp_backoff);\nvar wrap_recv_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__77332__$1,new cljs.core.Keyword(null,\"wrap-recv-evs?\",\"wrap-recv-evs?\",-1996694153),true);\nvar _deprecated_more_opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77329,(1),null);\nvar e_78417 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__77340 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__77340) : taoensso.truss.impl.set_STAR_.call(null,G__77340));\n})(),x);\n})(type)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e77333){if((e77333 instanceof Error)){\nvar e_78417 = e77333;\nreturn e_78417;\n} else {\nthrow e77333;\n\n}\n}})();\nif((e_78417 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1618,\"([:in #{:ws :ajax :auto}] type)\",type,e_78417,null);\n}\n\nvar e_78419 = (function (){try{if(taoensso.encore.nblank_str_QMARK_(client_id)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e77344){if((e77344 instanceof Error)){\nvar e_78419 = e77344;\nreturn e_78419;\n} else {\nthrow e77344;\n\n}\n}})();\nif((e_78419 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1619,\"(enc/nblank-str? client-id)\",client_id,e_78419,null);\n}\n\nif((!((_deprecated_more_opts == null)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1621,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"], null);\n}),null)),null,-1158947755,null);\n} else {\n}\n\nif(cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\"lp-timeout\",\"lp-timeout\",1149461302))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1622,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"], null);\n}),null)),null,-1986291058,null);\n} else {\n}\n\nif((((!(typeof _QMARK_csrf_token === 'string'))) || (clojure.string.blank_QMARK_(_QMARK_csrf_token)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1625,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"], null);\n}),null)),null,1439294183,null);\n} else {\n}\n\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar vec__77347 = (function (){var win_loc = taoensso.encore.get_win_loc();\nvar path__$1 = (function (){var z = (function (){try{var or__4160__auto__ = path;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n}catch (e77352){if((e77352 instanceof Error)){\nvar e = e77352;\nreturn (new taoensso.truss.impl.WrappedError(e));\n} else {\nthrow e77352;\n\n}\n}})();\nvar e = (function (){try{if((z instanceof taoensso.truss.impl.WrappedError)){\nreturn z;\n} else {\nif(taoensso.truss.impl.some_QMARK_(z)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}\n}catch (e77353){if((e77353 instanceof Error)){\nvar e = e77353;\nreturn e;\n} else {\nthrow e77353;\n\n}\n}})();\nif((e == null)){\nreturn z;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1633,\"(taoensso.truss.impl/some? (or path (:pathname win-loc)))\",z,e,null);\n}\n})();\nvar temp__5751__auto__ = new cljs.core.Keyword(null,\"chsk-url-fn\",\"chsk-url-fn\",1968894294).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar f = temp__5751__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)) : f.call(null,path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443))),(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)) : f.call(null,path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)))], null);\n} else {\nvar protocol__$1 = (function (){var or__4160__auto__ = protocol;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(win_loc);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"http\",\"http\",382524695);\n}\n}\n})();\nvar host__$1 = (cljs.core.truth_(host)?(cljs.core.truth_(port)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join(''):host):(cljs.core.truth_(port)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"hostname\",\"hostname\",2105669933).cljs$core$IFn$_invoke$arity$1(win_loc)),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join(''):new cljs.core.Keyword(null,\"host\",\"host\",-1558485167).cljs$core$IFn$_invoke$arity$1(win_loc)));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)),taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549))], null);\n}\n})();\nvar ws_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77347,(0),null);\nvar ajax_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77347,(1),null);\nvar private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((128))),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((10))),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537),(function (){var buf = cljs.core.async.sliding_buffer((512));\nif(cljs.core.truth_(wrap_recv_evs_QMARK_)){\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(buf,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"recv\",\"chsk/recv\",561097091),ev], null);\n})));\n} else {\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf);\n}\n})()], null);\nvar common_chsk_opts = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),private_chs,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),headers,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),packer__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),ws_kalive_ms], null);\nvar ws_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ws_url,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar ajax_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ajax_url,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),ajax_opts,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar auto_chsk_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),ws_chsk_opts,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),ajax_chsk_opts], null);\nvar _QMARK_chsk = taoensso.sente._chsk_connect_BANG_((function (){var G__77365 = type;\nvar G__77365__$1 = (((G__77365 instanceof cljs.core.Keyword))?G__77365.fqn:null);\nswitch (G__77365__$1) {\ncase \"ws\":\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"ajax\":\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"auto\":\nreturn taoensso.sente.new_ChAutoSocket(auto_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__77365__$1)].join('')));\n\n}\n})());\nvar temp__5751__auto__ = _QMARK_chsk;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar chsk = temp__5751__auto__;\nvar chsk_state_ = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk);\nvar internal_ch = new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs);\nvar send_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(taoensso.sente.chsk_send_BANG_,chsk);\nvar ev_ch = cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(private_chs)], null),recv_buf_or_n);\nvar ev_msg_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2((1),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\nvar vec__77375 = taoensso.sente.as_event(ev);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77375,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77375,(1),null);\nvar ev__$1 = vec__77375;\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),internal_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),chsk_state_,new cljs.core.Keyword(null,\"event\",\"event\",301435442),ev__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null);\n})));\ncljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(ev_ch,ev_msg_ch);\n\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"chsk\",\"chsk\",-863703081),chsk,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ev_msg_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk)], null);\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1727,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to create channel socket\"], null);\n}),null)),null,-59000308,null);\n}\n}));\n\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = (function (seq77288){\nvar G__77290 = cljs.core.first(seq77288);\nvar seq77288__$1 = cljs.core.next(seq77288);\nvar G__77292 = cljs.core.first(seq77288__$1);\nvar seq77288__$2 = cljs.core.next(seq77288__$1);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__77290,G__77292,seq77288__$2);\n}));\n\ntaoensso.sente._start_chsk_router_BANG_ = (function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_,ch_recv,event_msg_handler,opts){\nvar map__77389 = opts;\nvar map__77389__$1 = cljs.core.__destructure_map(map__77389);\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77389__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77389__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77389__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nvar ch_ctrl = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar execute1 = (function (f){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});\nvar c__65866__auto___78434 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__65867__auto__ = (function (){var switch__65651__auto__ = (function (state_77422){\nvar state_val_77423 = (state_77422[(1)]);\nif((state_val_77423 === (1))){\nvar state_77422__$1 = state_77422;\nvar statearr_77424_78436 = state_77422__$1;\n(statearr_77424_78436[(2)] = null);\n\n(statearr_77424_78436[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77423 === (2))){\nvar inst_77394 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_77395 = [ch_recv,ch_ctrl];\nvar inst_77396 = (new cljs.core.PersistentVector(null,2,(5),inst_77394,inst_77395,null));\nvar state_77422__$1 = state_77422;\nreturn cljs.core.async.ioc_alts_BANG_(state_77422__$1,(4),inst_77396);\n} else {\nif((state_val_77423 === (3))){\nvar inst_77420 = (state_77422[(2)]);\nvar state_77422__$1 = state_77422;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_77422__$1,inst_77420);\n} else {\nif((state_val_77423 === (4))){\nvar inst_77399 = (state_77422[(7)]);\nvar inst_77401 = (state_77422[(8)]);\nvar inst_77402 = (state_77422[(9)]);\nvar inst_77405 = (state_77422[(10)]);\nvar inst_77399__$1 = (state_77422[(2)]);\nvar inst_77401__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_77399__$1,(0),null);\nvar inst_77402__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_77399__$1,(1),null);\nvar inst_77403 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_77402__$1,ch_ctrl);\nvar inst_77404 = (inst_77401__$1 == null);\nvar inst_77405__$1 = ((inst_77403) || (inst_77404));\nvar state_77422__$1 = (function (){var statearr_77426 = state_77422;\n(statearr_77426[(7)] = inst_77399__$1);\n\n(statearr_77426[(8)] = inst_77401__$1);\n\n(statearr_77426[(9)] = inst_77402__$1);\n\n(statearr_77426[(10)] = inst_77405__$1);\n\nreturn statearr_77426;\n})();\nif(cljs.core.truth_(inst_77405__$1)){\nvar statearr_77427_78438 = state_77422__$1;\n(statearr_77427_78438[(1)] = (5));\n\n} else {\nvar statearr_77428_78439 = state_77422__$1;\n(statearr_77428_78439[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77423 === (5))){\nvar state_77422__$1 = state_77422;\nvar statearr_77429_78443 = state_77422__$1;\n(statearr_77429_78443[(2)] = null);\n\n(statearr_77429_78443[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77423 === (6))){\nvar inst_77399 = (state_77422[(7)]);\nvar inst_77401 = (state_77422[(8)]);\nvar inst_77402 = (state_77422[(9)]);\nvar inst_77405 = (state_77422[(10)]);\nvar inst_77410 = cljs.core.__destructure_map(inst_77401);\nvar inst_77411 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_77410,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar inst_77413 = (function (){var vec__77391 = inst_77399;\nvar v = inst_77401;\nvar p = inst_77402;\nvar stop_QMARK_ = inst_77405;\nvar map__77408 = inst_77410;\nvar event_msg = inst_77410;\nvar event = inst_77411;\nreturn (function (){\ntry{if(cljs.core.truth_(trace_evs_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1754,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Pre-handler event: %s\",event], null);\n}),null)),null,-716487855,null);\n} else {\n}\n\nvar G__77438 = (cljs.core.truth_(server_QMARK_)?(function (){var e = (function (){try{if(taoensso.sente.server_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e77439){if((e77439 instanceof Error)){\nvar e = e77439;\nreturn e;\n} else {\nthrow e77439;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1757,\"(server-event-msg? event-msg)\",event_msg,e,null);\n}\n})():(function (){var e = (function (){try{if(taoensso.sente.client_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e77440){if((e77440 instanceof Error)){\nvar e = e77440;\nreturn e;\n} else {\nthrow e77440;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1758,\"(client-event-msg? event-msg)\",event_msg,e,null);\n}\n})());\nreturn (event_msg_handler.cljs$core$IFn$_invoke$arity$1 ? event_msg_handler.cljs$core$IFn$_invoke$arity$1(G__77438) : event_msg_handler.call(null,G__77438));\n}catch (e77430){var e1 = e77430;\ntry{var temp__5751__auto__ = error_handler;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar eh = temp__5751__auto__;\nreturn (error_handler.cljs$core$IFn$_invoke$arity$2 ? error_handler.cljs$core$IFn$_invoke$arity$2(e1,event_msg) : error_handler.call(null,e1,event_msg));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1763,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e1,\"Chsk router `event-msg-handler` error: %s\",event], null);\n}),null)),null,-640026677,null);\n}\n}catch (e77431){var e2 = e77431;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1764,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2,\"Chsk router `error-handler` error: %s\",event], null);\n}),null)),null,1897122225,null);\n}}});\n})();\nvar inst_77414 = execute1(inst_77413);\nvar state_77422__$1 = (function (){var statearr_77442 = state_77422;\n(statearr_77442[(11)] = inst_77414);\n\nreturn statearr_77442;\n})();\nvar statearr_77445_78446 = state_77422__$1;\n(statearr_77445_78446[(2)] = null);\n\n(statearr_77445_78446[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_77423 === (7))){\nvar inst_77418 = (state_77422[(2)]);\nvar state_77422__$1 = state_77422;\nvar statearr_77447_78449 = state_77422__$1;\n(statearr_77447_78449[(2)] = inst_77418);\n\n(statearr_77447_78449[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto__ = null;\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto____0 = (function (){\nvar statearr_77448 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_77448[(0)] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto__);\n\n(statearr_77448[(1)] = (1));\n\nreturn statearr_77448;\n});\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto____1 = (function (state_77422){\nwhile(true){\nvar ret_value__65653__auto__ = (function (){try{while(true){\nvar result__65654__auto__ = switch__65651__auto__(state_77422);\nif(cljs.core.keyword_identical_QMARK_(result__65654__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65654__auto__;\n}\nbreak;\n}\n}catch (e77453){var ex__65655__auto__ = e77453;\nvar statearr_77454_78450 = state_77422;\n(statearr_77454_78450[(2)] = ex__65655__auto__);\n\n\nif(cljs.core.seq((state_77422[(4)]))){\nvar statearr_77455_78451 = state_77422;\n(statearr_77455_78451[(1)] = cljs.core.first((state_77422[(4)])));\n\n} else {\nthrow ex__65655__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65653__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__78452 = state_77422;\nstate_77422 = G__78452;\ncontinue;\n} else {\nreturn ret_value__65653__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto__ = function(state_77422){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto____1.call(this,state_77422);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto____0;\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto____1;\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__65652__auto__;\n})()\n})();\nvar state__65868__auto__ = (function (){var statearr_77485 = f__65867__auto__();\n(statearr_77485[(6)] = c__65866__auto___78434);\n\nreturn statearr_77485;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65868__auto__);\n}));\n\n\nreturn (function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_(){\nreturn cljs.core.async.close_BANG_(ch_ctrl);\n});\n});\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n * \n *   Or for simple automatic future-based threading of every request, enable\n *   the `:simple-auto-threading?` opt (disabled by default).\n */\ntaoensso.sente.start_server_chsk_router_BANG_ = (function taoensso$sente$start_server_chsk_router_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___78454 = arguments.length;\nvar i__4772__auto___78455 = (0);\nwhile(true){\nif((i__4772__auto___78455 < len__4771__auto___78454)){\nargs__4777__auto__.push((arguments[i__4772__auto___78455]));\n\nvar G__78456 = (i__4772__auto___78455 + (1));\ni__4772__auto___78455 = G__78456;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((2) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4778__auto__);\n});\n\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__77499){\nvar vec__77501 = p__77499;\nvar map__77504 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77501,(0),null);\nvar map__77504__$1 = cljs.core.__destructure_map(map__77504);\nvar opts = map__77504__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77504__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77504__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77504__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nreturn taoensso.sente._start_chsk_router_BANG_(new cljs.core.Keyword(null,\"server\",\"server\",1499190120),ch_recv,event_msg_handler,opts);\n}));\n\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = (function (seq77489){\nvar G__77491 = cljs.core.first(seq77489);\nvar seq77489__$1 = cljs.core.next(seq77489);\nvar G__77492 = cljs.core.first(seq77489__$1);\nvar seq77489__$2 = cljs.core.next(seq77489__$1);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__77491,G__77492,seq77489__$2);\n}));\n\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n */\ntaoensso.sente.start_client_chsk_router_BANG_ = (function taoensso$sente$start_client_chsk_router_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___78462 = arguments.length;\nvar i__4772__auto___78463 = (0);\nwhile(true){\nif((i__4772__auto___78463 < len__4771__auto___78462)){\nargs__4777__auto__.push((arguments[i__4772__auto___78463]));\n\nvar G__78464 = (i__4772__auto___78463 + (1));\ni__4772__auto___78463 = G__78464;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((2) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4778__auto__);\n});\n\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__77541){\nvar vec__77544 = p__77541;\nvar map__77547 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77544,(0),null);\nvar map__77547__$1 = cljs.core.__destructure_map(map__77547);\nvar opts = map__77547__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77547__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77547__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nreturn taoensso.sente._start_chsk_router_BANG_(cljs.core.not(new cljs.core.Keyword(null,\"server\",\"server\",1499190120)),ch_recv,event_msg_handler,opts);\n}));\n\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = (function (seq77522){\nvar G__77524 = cljs.core.first(seq77522);\nvar seq77522__$1 = cljs.core.next(seq77522);\nvar G__77525 = cljs.core.first(seq77522__$1);\nvar seq77522__$2 = cljs.core.next(seq77522__$1);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__77524,G__77525,seq77522__$2);\n}));\n\ntaoensso.sente.event_msg_QMARK_ = taoensso.sente.client_event_msg_QMARK_;\n/**\n * Platform-specific alias for `make-channel-socket-server!` or\n *   `make-channel-socket-client!`. Please see the appropriate aliased fn\n * docstring for details.\n */\ntaoensso.sente.make_channel_socket_BANG_ = taoensso.sente.make_channel_socket_client_BANG_;\n/**\n * Platform-specific alias for `start-server-chsk-router!` or\n *   `start-client-chsk-router!`. Please see the appropriate aliased fn\n *   docstring for details.\n */\ntaoensso.sente.start_chsk_router_BANG_ = taoensso.sente.start_client_chsk_router_BANG_;\n/**\n * DEPRECATED: Please use `start-chsk-router!` instead\n */\ntaoensso.sente.start_chsk_router_loop_BANG_ = (function taoensso$sente$start_chsk_router_loop_BANG_(event_handler,ch_recv){\nreturn taoensso.sente.start_client_chsk_router_BANG_(ch_recv,(function (ev_msg){\nvar G__77581 = new cljs.core.Keyword(null,\"event\",\"event\",301435442).cljs$core$IFn$_invoke$arity$1(ev_msg);\nvar G__77582 = new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861).cljs$core$IFn$_invoke$arity$1(ev_msg);\nreturn (event_handler.cljs$core$IFn$_invoke$arity$2 ? event_handler.cljs$core$IFn$_invoke$arity$2(G__77581,G__77582) : event_handler.call(null,G__77581,G__77582));\n}));\n});\n\n/**\n * DEPRECATED. Please use `timbre/set-level!` instead\n */\ntaoensso.sente.set_logging_level_BANG_ = taoensso.timbre.set_level_BANG_;\n\n/**\n * DEPRECATED: Please use `ajax-lite` instead\n */\ntaoensso.sente.ajax_call = taoensso.encore.ajax_lite;\n\n/**\n * DEPRECATED\n */\ntaoensso.sente.default_chsk_url_fn = (function taoensso$sente$default_chsk_url_fn(path,p__77589,websocket_QMARK_){\nvar map__77592 = p__77589;\nvar map__77592__$1 = cljs.core.__destructure_map(map__77592);\nvar location = map__77592__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77592__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77592__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar pathname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77592__$1,new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528));\nvar protocol__$1 = (cljs.core.truth_(websocket_QMARK_)?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol,\"https:\"))?\"wss:\":\"ws:\"):protocol);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$1),\"//\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4160__auto__ = path;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn pathname;\n}\n})())].join('');\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","~:file","taoensso/sente.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",["^ ","~$elide-require","~$taoensso.sente","~$warnf","~$taoensso.timbre","~$go","~$cljs.core.async.macros","~$have","~$taoensso.encore","~$go-loop","^V","~$have!","^X","~$have?","^X","~$debugf","^T","~$tracef","^T","~$infof","^T","~$errorf","^T"],"~:excludes",["~#set",[]],"~:macros",["^ "],"~:name","^R","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$timbre","^T","~$interfaces","~$taoensso.sente.interfaces","~$async","~$cljs.core.async","~$cljs.core","^1A","~$goog","^1B","^1>","^1>","^1@","^1@","~$enc","^X","^T","^T","~$str","~$clojure.string","^1E","^1E","^X","^X"],"~:seen",["^15",["~:require","~:require-macros"]],"~:uses",["^ ","~$<!","^1@","~$>!","^1@","~$put!","^1@","~$chan","^1@","~$format","^X","~$swap-in!","^X","~$reset-in!","^X","~$swapped","^X"],"^1H",["^ ","^V","^V","^1<","^T","^1?","^1@","^1A","^1A","^1@","^1@","^R","^R","^1C","^X","^T","^T","~$asyncm","^V","^X","^X","~$sente-macros","^R"],"~:form",["~#list",["~$ns","^R","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^1U",["^1G",["^1E","~:as","^1D"],["^1@","^1W","^1?","~:refer",["^1U",["^1J","^1K","^1L","^1M"]]],["^X","^1W","^1C","^1X",["^1U",["^1N","^1O","^1P","^1Q"]],"~:refer-macros",["^1U",["^W","^Z","^["]]],["^T","^1W","^1<","^1Y",["^1U",["^11","^10","^12","^S","^13"]]],["^1>","^1W","^1="]]],["^1U",["^1H",["^V","^1W","^1R","^1X",["^1U",["^U","^Y"]]],["^R","^1W","^1S","^1X",["^1U",["^Q"]]]]]]],"~:flags",["^ ","^1G",["^15",[]],"^1H",["^15",[]]],"~:js-deps",["^ "],"~:deps",["^1B","^1A","^1E","^1@","^X","^T","^1>"]],"^19","^R","~:resource-id",["~:shadow.build.classpath/resource","taoensso/sente.cljc"],"~:compiled-at",1621210456936,"~:resource-name","taoensso/sente.cljc","~:warnings",[],"~:source","(ns taoensso.sente\n  \"Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \\\"socket\\\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.\"\n\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n\n  #?(:clj\n     (:require\n      [clojure.string :as str]\n      [clojure.core.async :as async :refer (<! <!! >! >!! put! chan go go-loop)]\n      [taoensso.encore :as enc :refer (swap-in! reset-in! swapped have have! have?)]\n      [taoensso.timbre :as timbre :refer (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require\n      [clojure.string :as str]\n      [cljs.core.async :as async :refer (<! >! put! chan)]\n      [taoensso.encore :as enc :refer (format swap-in! reset-in! swapped)\n       :refer-macros (have have! have?)]\n      [taoensso.timbre :as timbre :refer-macros (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require-macros\n      [cljs.core.async.macros :as asyncm :refer (go go-loop)]\n      [taoensso.sente :as sente-macros :refer (elide-require)]))\n\n  #?(:clj\n     (:import\n      [org.java_websocket.client WebSocketClient])))\n\n(if (vector? taoensso.encore/encore-version)\n  (enc/assert-min-encore-version [2 105 0])\n  (enc/assert-min-encore-version  2.105))\n\n(def sente-version \"Useful for identifying client/server mismatch\"\n  [1 11 0])\n\n#?(:cljs (def ^:private node-target? (= *target* \"nodejs\")))\n\n;; (timbre/set-level! :trace) ; Uncomment for debugging\n(defonce debug-mode?_ (atom false))\n\n;;;; Events\n;; Clients & server both send `event`s and receive (i.e. route) `event-msg`s:\n;;   - `event`s have the same form client+server side,\n;;   - `event-msg`s have a similar but not identical form\n\n(defn- expected [expected x] {:expected expected :actual {:type (type x) :value x}})\n(defn validate-event\n  \"Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\"\n  [x]\n  (cond\n    (not (vector? x))        {:wrong-type   (expected :vector x)}\n    (not (#{1 2} (count x))) {:wrong-length (expected #{1 2}  x)}\n    :else\n    (let [[ev-id _] x]\n      (cond\n        (not (keyword? ev-id))  {:wrong-id-type   (expected :keyword            ev-id)}\n        (not (namespace ev-id)) {:unnamespaced-id (expected :namespaced-keyword ev-id)}\n        :else nil))))\n\n(defn assert-event\n  \"Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception.\"\n  [x]\n  (when-let [errs (validate-event x)]\n    (throw (ex-info \"Invalid event\" {:given x :errors errs}))))\n\n(defn event? \"Valid [ev-id ?ev-data] form?\" [x] (nil? (validate-event x)))\n(defn as-event [x]\n  (if-let [errs (validate-event x)]\n    ;; [:chsk/bad-event {:given x :errors errs}] ; Breaking change\n    [:chsk/bad-event x]\n    x))\n\n(defn client-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks>= #{:ch-recv :send-fn :state :event :id :?data} x)\n    (let [{:keys [ch-recv send-fn state event]} x]\n      (and\n        (enc/chan? ch-recv)\n        (ifn?      send-fn)\n        (enc/atom? state)\n        (event?    event)))))\n\n(defn server-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks>= #{:ch-recv :send-fn :connected-uids :send-buffers\n                :ring-req :client-id\n                :event :id :?data :?reply-fn :uid} x)\n    (let [{:keys [ch-recv send-fn connected-uids send-buffers\n                  ring-req client-id event ?reply-fn]} x]\n      (and\n        (enc/chan?       ch-recv)\n        (ifn?            send-fn)\n        (enc/atom?       connected-uids)\n        (enc/atom?       send-buffers)\n        (map?            ring-req)\n        (enc/nblank-str? client-id)\n        (event?          event)\n        (or (nil? ?reply-fn)\n            (ifn? ?reply-fn))))))\n\n(defn- put-server-event-msg>ch-recv!\n  \"All server `event-msg`s go through this\"\n  [ch-recv {:as ev-msg :keys [event ?reply-fn]}]\n  (let [[ev-id ev-?data :as valid-event] (as-event event)\n        ev-msg* (merge ev-msg {:event     valid-event\n                               :?reply-fn ?reply-fn\n                               :id        ev-id\n                               :?data     ev-?data})]\n    (if-not (server-event-msg? ev-msg*)\n      (warnf \"Bad ev-msg: %s\" ev-msg) ; Log 'n drop\n      (put! ch-recv ev-msg*))))\n\n;;; Note that cb replys need _not_ be `event` form!\n#?(:cljs (defn cb-error? [cb-reply-clj] (#{:chsk/closed :chsk/timeout :chsk/error} cb-reply-clj)))\n#?(:cljs (defn cb-success? [cb-reply-clj] (not (cb-error? cb-reply-clj))))\n\n;;;; Packing\n;; * Client<->server payloads are arbitrary Clojure vals (cb replies or events).\n;; * Payloads are packed for client<->server transit.\n;; * Packing includes ->str encoding, and may incl. wrapping to carry cb info.\n\n(defn- unpack \"prefixed-pstr->[clj ?cb-uuid]\"\n  [packer prefixed-pstr]\n  (have? string? prefixed-pstr)\n  (let [wrapped? (enc/str-starts-with? prefixed-pstr \"+\")\n        pstr     (subs prefixed-pstr 1)\n        clj\n        (try\n          (interfaces/unpack packer pstr)\n          (catch #?(:clj Throwable :cljs :default) t\n            (debugf \"Bad package: %s (%s)\" pstr t)\n            [:chsk/bad-package pstr]))\n\n        [clj ?cb-uuid] (if wrapped? clj [clj nil])\n        ?cb-uuid (if (= 0 ?cb-uuid) :ajax-cb ?cb-uuid)]\n\n    (tracef \"Unpacking: %s -> %s\" prefixed-pstr [clj ?cb-uuid])\n    [clj ?cb-uuid]))\n\n(defn- pack \"clj->prefixed-pstr\"\n  ([packer clj]\n   (let [;; \"-\" prefix => Unwrapped (has no callback)\n         pstr (str \"-\" (interfaces/pack packer clj))]\n     (tracef \"Packing (unwrapped): %s -> %s\" clj pstr)\n     pstr))\n\n  ([packer clj ?cb-uuid]\n   (let [;;; Keep wrapping as light as possible:\n         ?cb-uuid    (if (= ?cb-uuid :ajax-cb) 0 ?cb-uuid)\n         wrapped-clj (if ?cb-uuid [clj ?cb-uuid] [clj])\n         ;; \"+\" prefix => Wrapped (has callback)\n         pstr (str \"+\" (interfaces/pack packer wrapped-clj))]\n     (tracef \"Packing (wrapped): %s -> %s\" wrapped-clj pstr)\n     pstr)))\n\n(deftype EdnPacker []\n  interfaces/IPacker\n  (pack   [_ x] (enc/pr-edn   x))\n  (unpack [_ s] (enc/read-edn s)))\n\n(def ^:private default-edn-packer (EdnPacker.))\n\n(defn- coerce-packer [x]\n  (if (= x :edn)\n    default-edn-packer\n    (have #(satisfies? interfaces/IPacker %) x)))\n\n(comment\n  (do\n    (require '[taoensso.sente.packers.transit :as transit])\n    (def ^:private default-transit-json-packer (transit/get-transit-packer)))\n\n  (let [pack   interfaces/pack\n        unpack interfaces/unpack\n        data   {:a :A :b :B :c \"hello world\"}]\n\n    (enc/qb 10000\n      (let [pk default-edn-packer]          (unpack pk (pack pk data)))\n      (let [pk default-transit-json-packer] (unpack pk (pack pk data))))))\n\n;;;; Server API\n\n(def ^:private next-idx! (enc/idx-fn))\n\n(declare\n  ^:private send-buffered-server-evs>ws-clients!\n  ^:private send-buffered-server-evs>ajax-clients!\n  ^:private default-client-side-ajax-timeout-ms)\n\n(defn allow-origin?\n  \"Alpha, subject to change.\n  Returns true iff given Ring request is allowed by `allowed-origins`.\n  `allowed-origins` may be `:all` or #{<origin>}.\"\n\n  [allowed-origins ring-req]\n  (enc/cond\n    (= allowed-origins :all) true\n\n    :let\n    [headers (get ring-req :headers)\n     origin  (get headers  \"origin\" :nx)\n     have-origin? (not= origin      :nx)]\n\n    (and\n      have-origin?\n      (contains? (set allowed-origins) origin))\n    true\n\n    ;; As per OWASP CSRF Prevention Cheat Sheet\n    :let [referer (get headers \"referer\" \"\")]\n\n    (and\n      (not have-origin?)\n      (enc/rsome #(str/starts-with? referer (str % \"/\")) allowed-origins))\n    true\n\n    :else false))\n\n(comment\n  ;; good (pass)\n  (allow-origin? :all                 {:headers {\"origin\"  \"http://site.com\"}})\n  (allow-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://site.com\"}})\n  (allow-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com/\"}})\n\n  ;; bad (fail)\n  (allow-origin? #{\"http://site.com\"} {:headers nil})\n  (allow-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://attacker.com\"}})\n  (allow-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://attacker.com/\"}})\n  (allow-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com.attacker.com/\"}}))\n\n(defn make-channel-socket-server!\n  \"Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\\\"http://site.com\\\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n    :?unauthorized-fn  ; An alternative API to `authorized?-fn`+`unauthorized-fn` pair.\n                       ; ?(fn [ring-req)) -> <?rejection-resp>. I.e. when return value\n                       ; is non-nil, connection requests will be rejected with that\n                       ; non-nil value.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).\"\n\n  [web-server-ch-adapter\n   & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms\n              send-buf-ms-ajax send-buf-ms-ws\n              user-id-fn bad-csrf-fn bad-origin-fn csrf-token-fn\n              handshake-data-fn packer allowed-origins\n              authorized?-fn unauthorized-fn ?unauthorized-fn]\n\n       :or   {recv-buf-or-n    (async/sliding-buffer 1000)\n              ws-kalive-ms     (enc/ms :secs 25) ; < Heroku 55s timeout\n              lp-timeout-ms    (enc/ms :secs 20) ; < Heroku 30s timeout\n              send-buf-ms-ajax 100\n              send-buf-ms-ws   30\n              user-id-fn      (fn [ ring-req] (get-in ring-req [:session :uid]))\n              bad-csrf-fn     (fn [_ring-req] {:status 403 :body \"Bad CSRF token\"})\n              bad-origin-fn   (fn [_ring-req] {:status 403 :body \"Unauthorized origin\"})\n              unauthorized-fn (fn [_ring-req] {:status 401 :body \"Unauthorized request\"})\n              csrf-token-fn\n              (fn [ring-req]\n                (or (:anti-forgery-token ring-req)\n                  (get-in ring-req [:session :csrf-token])\n                  (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token])\n                  (get-in ring-req [:session \"__anti-forgery-token\"])\n                  #_:sente/no-reference-csrf-token\n                  ))\n\n              handshake-data-fn (fn [ring-req] nil)\n              packer :edn\n              allowed-origins :all}}]]\n\n  (have? enc/pos-int? send-buf-ms-ajax send-buf-ms-ws)\n  (have? #(satisfies? interfaces/IServerChanAdapter %) web-server-ch-adapter)\n\n  (let [max-ms default-client-side-ajax-timeout-ms]\n    (when (>= lp-timeout-ms max-ms)\n      (throw\n        (ex-info (str \":lp-timeout-ms must be < \" max-ms)\n          {:lp-timeout-ms lp-timeout-ms\n           :default-client-side-ajax-timeout-ms max-ms}))))\n\n  (let [allowed-origins (have [:or set? #{:all}] allowed-origins)\n        packer  (coerce-packer packer)\n        ch-recv (chan recv-buf-or-n)\n\n        user-id-fn\n        (fn [ring-req client-id]\n          ;; Allow uid to depend (in part or whole) on client-id. Be cautious\n          ;; of security implications.\n          (or (user-id-fn (assoc ring-req :client-id client-id)) ::nil-uid))\n\n        ;; :ws udts used for ws-kalive (to check for activity in window period)\n        ;; :ajax udts used for lp-timeout (as a way to check active conn identity)\n        conns_          (atom {:ws  {} :ajax  {}}) ; {<uid> {<client-id> [<?sch> <udt>]}}\n        send-buffers_   (atom {:ws  {} :ajax  {}}) ; {<uid> [<buffered-evs> <#{ev-uuids}>]}\n        connected-uids_ (atom {:ws #{} :ajax #{} :any #{}}) ; Public\n\n        upd-conn!\n        (fn\n          ([conn-type uid client-id] ; Update udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [[?sch _udt] ?v\n                     new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch ?sch})))))\n\n          ([conn-type uid client-id new-?sch] ; Update sch + udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [new-?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch new-?sch}))))))\n\n        connect-uid!\n        (fn [conn-type uid] {:pre [(have? uid)]}\n          (let [newly-connected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [new-m\n                          (case conn-type\n                            :ws   {:ws (conj ws uid) :ajax ajax            :any (conj any uid)}\n                            :ajax {:ws ws            :ajax (conj ajax uid) :any (conj any uid)})]\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and (not (contains? old-any uid))\n                                          (contains? new-any uid))\n                            :newly-connected))))))]\n            newly-connected?))\n\n        upd-connected-uid!\n        (fn [uid] {:pre [(have? uid)]}\n          (let [newly-disconnected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [conns' @conns_\n                          any-ws-clients?   (contains? (:ws   conns') uid)\n                          any-ajax-clients? (contains? (:ajax conns') uid)\n                          any-clients?      (or any-ws-clients?\n                                                any-ajax-clients?)\n                          new-m\n                          {:ws   (if any-ws-clients?   (conj ws   uid) (disj ws   uid))\n                           :ajax (if any-ajax-clients? (conj ajax uid) (disj ajax uid))\n                           :any  (if any-clients?      (conj any  uid) (disj any  uid))}]\n\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and     (contains? old-any uid)\n                                    (not (contains? new-any uid)))\n                            :newly-disconnected))))))]\n\n            newly-disconnected?))\n\n        send-fn ; server>user (by uid) push\n        (fn [user-id ev & [{:as opts :keys [flush?]}]]\n          (let [uid (if (= user-id :sente/all-users-without-uid) ::nil-uid user-id)\n                _   (tracef \"Chsk send: (->uid %s) %s\" uid ev)\n                _   (assert uid\n                      (str \"Support for sending to `nil` user-ids has been REMOVED. \"\n                           \"Please send to `:sente/all-users-without-uid` instead.\"))\n                _   (assert-event ev)\n\n                ev-uuid (enc/uuid-str)\n\n                flush-buffer!\n                (fn [conn-type]\n                  (when-let\n                      [pulled\n                       (swap-in! send-buffers_ [conn-type]\n                         (fn [m]\n                           ;; Don't actually flush unless the event buffered\n                           ;; with _this_ send call is still buffered (awaiting\n                           ;; flush). This means that we'll have many (go\n                           ;; block) buffer flush calls that'll noop. They're\n                           ;; cheap, and this approach is preferable to\n                           ;; alternatives like flush workers.\n                           (let [[_ ev-uuids] (get m uid)]\n                             (if (contains? ev-uuids ev-uuid)\n                               (swapped\n                                 (dissoc m uid)\n                                 (get    m uid))\n                               (swapped m nil)))))]\n\n                    (let [[buffered-evs ev-uuids] pulled]\n                      (have? vector? buffered-evs)\n                      (have? set?    ev-uuids)\n\n                      (let [buffered-evs-ppstr (pack packer buffered-evs)]\n                        (tracef \"buffered-evs-ppstr: %s\" buffered-evs-ppstr)\n                        (case conn-type\n                          :ws   (send-buffered-server-evs>ws-clients! conns_\n                                  uid buffered-evs-ppstr upd-conn!)\n                          :ajax (send-buffered-server-evs>ajax-clients! conns_\n                                  uid buffered-evs-ppstr))))))]\n\n            (if (= ev [:chsk/close]) ; Currently undocumented\n              (do\n                (debugf \"Chsk closing (client may reconnect): %s\" uid)\n                (when flush?\n                  (flush-buffer! :ws)\n                  (flush-buffer! :ajax))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ws uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch)))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ajax uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch))))\n\n              (do\n                ;; Buffer event\n                (doseq [conn-type [:ws :ajax]]\n                  (swap-in! send-buffers_ [conn-type uid]\n                    (fn [?v]\n                      (if-not ?v\n                        [[ev] #{ev-uuid}]\n                        (let [[buffered-evs ev-uuids] ?v]\n                          [(conj buffered-evs ev)\n                           (conj ev-uuids     ev-uuid)])))))\n\n                ;;; Flush event buffers after relevant timeouts:\n                ;; * May actually flush earlier due to another timeout.\n                ;; * We send to _all_ of a uid's connections.\n                ;; * Broadcasting is possible but I'd suggest doing it rarely,\n                ;;   and only to users we know/expect are actually online.\n                ;;\n                (if flush?\n                  (do\n                    (flush-buffer! :ws)\n                    (flush-buffer! :ajax))\n                  (let [ws-timeout   (async/timeout send-buf-ms-ws)\n                        ajax-timeout (async/timeout send-buf-ms-ajax)]\n                    (go\n                      (<! ws-timeout)\n                      (flush-buffer! :ws))\n                    (go\n                      (<! ajax-timeout)\n                      (flush-buffer! :ajax)))))))\n\n          ;; Server-side send is async so nothing useful to return (currently\n          ;; undefined):\n          nil)\n\n        bad-csrf?\n        (fn [ring-req]\n          (if (nil? csrf-token-fn) ; Provides a way to disable CSRF check\n            false\n            (if-let [reference-csrf-token (csrf-token-fn ring-req)]\n              (let [csrf-token-from-client\n                    (or\n                      (get-in ring-req [:params    :csrf-token])\n                      (get-in ring-req [:headers \"x-csrf-token\"])\n                      (get-in ring-req [:headers \"x-xsrf-token\"]))]\n\n                (not\n                  (enc/const-str=\n                    reference-csrf-token\n                    csrf-token-from-client)))\n\n              true ; By default fail if no CSRF token\n              )))\n\n        unauthorized?\n        (fn [ring-req]\n          (if (nil? authorized?-fn)\n            false\n            (not (authorized?-fn ring-req))))\n\n        ;; nnil if connection attempt should be rejected\n        possible-rejection-resp\n        (fn [ring-req]\n          (enc/cond\n            (bad-csrf?   ring-req)\n            (bad-csrf-fn ring-req)\n\n            (not (allow-origin? allowed-origins ring-req))\n            (bad-origin-fn                      ring-req)\n\n            (unauthorized?   ring-req)\n            (unauthorized-fn ring-req)\n\n            :if-some [unauthorized-resp (when-let [uf ?unauthorized-fn]\n                                          (uf ring-req))]\n            unauthorized-resp\n\n            :else nil))\n\n        ev-msg-const\n        {:ch-recv        ch-recv\n         :send-fn        send-fn\n         :connected-uids connected-uids_\n         :send-buffers   send-buffers_}]\n\n    {:ch-recv        ch-recv\n     :send-fn        send-fn\n     :connected-uids connected-uids_\n     :send-buffers   send-buffers_\n\n     ;; Does not participate in `conns_` (has specific req->resp)\n     :ajax-post-fn\n     (fn [ring-req]\n       (enc/cond\n         :if-let [resp (possible-rejection-resp ring-req)] resp\n         :else\n         (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n           {:on-open\n            (fn [server-ch websocket?]\n              (assert (not websocket?))\n              (let [params        (get ring-req :params)\n                    ppstr         (get params   :ppstr)\n                    client-id     (get params   :client-id)\n                    [clj has-cb?] (unpack packer ppstr)\n                    reply-fn\n                    (let [replied?_ (atom false)]\n                      (fn [resp-clj] ; Any clj form\n                        (when (compare-and-set! replied?_ false true)\n                          (tracef \"Chsk send (ajax post reply): %s\" resp-clj)\n                          (interfaces/sch-send! server-ch websocket?\n                            (pack packer resp-clj)))))]\n\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {;; Note that the client-id is provided here just for the\n                     ;; user's convenience. non-lp-POSTs don't actually need a\n                     ;; client-id for Sente's own implementation:\n                     :client-id client-id #_\"unnecessary-for-non-lp-POSTs\"\n                     :ring-req  ring-req\n                     :event     clj\n                     :uid       (user-id-fn ring-req client-id)\n                     :?reply-fn (when has-cb? reply-fn)}))\n\n                (if has-cb?\n                  (when-let [ms lp-timeout-ms]\n                    (go\n                      (<! (async/timeout ms))\n                      (reply-fn :chsk/timeout)))\n                  (reply-fn :chsk/dummy-cb-200))))})))\n\n     ;; Ajax handshake/poll, or WebSocket handshake\n     :ajax-get-or-ws-handshake-fn\n     (fn [ring-req]\n       (let [sch-uuid   (enc/uuid-str 6)\n             params     (get ring-req :params)\n             client-id  (get params   :client-id)\n             uid        (user-id-fn    ring-req client-id)\n\n             receive-event-msg! ; Partial\n             (fn self\n               ([event          ] (self event nil))\n               ([event ?reply-fn]\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {:client-id client-id\n                     :ring-req  ring-req\n                     :event     event\n                     :?reply-fn ?reply-fn\n                     :uid       uid}))))\n\n             send-handshake!\n             (fn [server-ch websocket?]\n               (tracef \"send-handshake!\")\n               (let [?handshake-data (handshake-data-fn ring-req)\n                     handshake-ev\n                     (if (nil? ?handshake-data) ; Micro optimization\n                       [:chsk/handshake [uid nil]]\n                       [:chsk/handshake [uid nil ?handshake-data]])]\n                 (interfaces/sch-send! server-ch websocket?\n                   (pack packer handshake-ev))))]\n\n         (enc/cond\n\n           (str/blank? client-id)\n           (let [err-msg \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\"]\n             (errorf (str err-msg \": %s\") ring-req) ; Careful re: % in req\n             (throw (ex-info err-msg {:ring-req ring-req})))\n\n           :if-let [resp (possible-rejection-resp ring-req)] resp\n           :else\n           (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n             {:on-open\n              (fn [server-ch websocket?]\n                (if websocket?\n\n                  ;; WebSocket handshake\n                  (let [_ (tracef \"New WebSocket channel: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ws uid client-id server-ch)\n                        udt-open     (:udt updated-conn)]\n\n                    (when (connect-uid! :ws uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (send-handshake! server-ch websocket?)\n\n                    ;; Start ws-kalive loop\n                    ;; This also works to gc ws conns that were suddenly\n                    ;; terminated (e.g. by turning on airplane mode)\n                    (when-let [ms ws-kalive-ms]\n                      (go-loop [udt-t0 udt-open]\n                        (<! (async/timeout ms))\n                        (when-let [[_sch udt-t1] (get-in @conns_ [:ws uid client-id])]\n                          (when (interfaces/sch-open? server-ch)\n                            ;; (assert (= _sch server-ch))\n                            (when (= udt-t1 udt-t0)\n                              ;; Ref. issue #230:\n                              ;; We've seen no send/recv activity on this\n                              ;; conn w/in our kalive window so send a ping\n                              ;; ->client (should auto-close conn if it's\n                              ;; gone dead).\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/ws-ping)))\n                            (recur udt-t1))))))\n\n                  ;; Ajax handshake/poll\n                  (let [_ (tracef \"New Ajax handshake/poll: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ajax uid client-id server-ch)\n                        udt-open     (:udt updated-conn)\n                        handshake?   (or (:init? updated-conn) (:handshake? params))]\n\n                    (when (connect-uid! :ajax uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (if handshake?\n                      ;; Client will immediately repoll\n                      (send-handshake! server-ch websocket?)\n\n                      (when-let [ms lp-timeout-ms]\n                        (go\n                          (<! (async/timeout ms))\n                          (when-let [[_sch udt-t1] (get-in @conns_ [:ajax uid client-id])]\n                            (when (= udt-t1 udt-open)\n                              ;; (assert (= _sch server-ch))\n                              ;; Appears to still be the active sch\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/timeout))))))))))\n\n              :on-msg\n              (fn [server-ch websocket? req-ppstr]\n                (assert websocket?)\n                (upd-conn! :ws uid client-id)\n                (let [[clj ?cb-uuid] (unpack packer req-ppstr)]\n                  (receive-event-msg! clj ; Should be ev\n                    (when ?cb-uuid\n                      (fn reply-fn [resp-clj] ; Any clj form\n                        (tracef \"Chsk send (ws reply): %s\" resp-clj)\n                        ;; true iff apparent success:\n                        (interfaces/sch-send! server-ch websocket?\n                          (pack packer resp-clj ?cb-uuid)))))))\n\n              :on-close ; We rely on `on-close` to trigger for _every_ conn!\n              (fn [server-ch websocket? _status]\n                ;; Note that `status` type varies with underlying web server\n                (let [conn-type (if websocket? :ws :ajax)\n                      _ (tracef \"%s channel closed: %s (%s)\"\n                          (if websocket? \"WebSocket\" \"Ajax\")\n                          uid sch-uuid)\n\n                      updated-conn (upd-conn! conn-type uid client-id nil)\n                      udt-close    (:udt updated-conn)]\n\n                  ;; Allow some time for possible reconnects (repoll,\n                  ;; sole window refresh, etc.):\n                  (go\n                    (<! (async/timeout 5000))\n                    (let [[_?sch udt-t1] (get-in @conns_ [conn-type uid client-id])]\n\n                      (when @debug-mode?_\n                        (debugf \"close-timeout: %s %s %s %s\" conn-type uid\n                          sch-uuid [(= udt-t1 udt-close) udt-t1 udt-close]))\n\n                      (when (= udt-t1 udt-close)\n                        (let [disconnect? ; Removed entry for client-id?\n                              (swap-in! conns_ [conn-type uid client-id]\n                                (fn [[_sch udt-t1]]\n                                  (if (= udt-t1 udt-close)\n                                    (swapped :swap/dissoc true)\n                                    (swapped [_sch udt-t1] false))))]\n\n                          (when disconnect?\n\n                            ;; Potentially remove entry for uid\n                            (swap-in! conns_ [conn-type uid]\n                              (fn [?m] (if (empty? ?m) :swap/dissoc ?m)))\n\n                            (when (upd-connected-uid! uid)\n                              (receive-event-msg! [:chsk/uidport-close uid])))))))))\n\n              :on-error\n              (fn [server-ch websocket? error]\n                (errorf \"ring-req->server-ch-resp error: %s (%s)\"\n                  error uid sch-uuid))}))))}))\n\n(defn- send-buffered-server-evs>ws-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\"\n  [conns_ uid buffered-evs-pstr upd-conn!]\n  (tracef \"send-buffered-server-evs>ws-clients!: %s\" buffered-evs-pstr)\n  (doseq [[client-id [?sch _udt]] (get-in @conns_ [:ws uid])]\n    (when-let [sch ?sch]\n      (upd-conn! :ws uid client-id)\n      (interfaces/sch-send! sch :websocket buffered-evs-pstr))))\n\n(defn- send-buffered-server-evs>ajax-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects.\"\n  [conns_ uid buffered-evs-pstr]\n  (tracef \"send-buffered-server-evs>ajax-clients!: %s\" buffered-evs-pstr)\n  (let [ms-backoffs [90 180 360 720 1440] ; Mean 2790s\n        ;; All connected/possibly-reconnecting client uuids:\n        client-ids-unsatisfied (keys (get-in @conns_ [:ajax uid]))]\n\n    (when-not (empty? client-ids-unsatisfied)\n      ;; (tracef \"client-ids-unsatisfied: %s\" client-ids-unsatisfied)\n      (go-loop [n 0 client-ids-satisfied #{}]\n        (let [?pulled ; nil or {<client-id> [<?sch> <udt>]}\n              (swap-in! conns_ [:ajax uid]\n                (fn [m] ; {<client-id> [<?sch> <udt>]}\n                  (let [ks-to-pull (remove client-ids-satisfied (keys m))]\n                    ;; (tracef \"ks-to-pull: %s\" ks-to-pull)\n                    (if (empty? ks-to-pull)\n                      (swapped m nil)\n                      (swapped\n                        (reduce\n                          (fn [m k]\n                            (let [[?sch udt] (get m k)]\n                              ;; Nb don't change udt; for Ajax conns_ we only\n                              ;; want udt updated on poll or close, not on\n                              ;; activity (as with ws conns_)\n                              (assoc m k [nil udt #_(enc/now-udt)])))\n\n                          m ks-to-pull)\n                        (select-keys m ks-to-pull))))))]\n\n          (have? [:or nil? map?] ?pulled)\n\n          (let [?newly-satisfied\n                (when ?pulled\n                  (reduce-kv\n                    (fn [s client-id [?sch _udt]]\n                      (let [sent?\n                            (when-let [sch ?sch]\n                              ;; Will noop + return false if sch already closed:\n                              (interfaces/sch-send! ?sch (not :websocket)\n                                buffered-evs-pstr))]\n\n                        (if sent? (conj s client-id) s)))\n                    #{} ?pulled))\n\n                now-satisfied (into client-ids-satisfied ?newly-satisfied)]\n\n            ;; (tracef \"now-satisfied: %s\" now-satisfied)\n            (when-let [ms-backoff (get ms-backoffs n)]\n              (when (enc/rsome (complement now-satisfied) client-ids-unsatisfied)\n                (let [ms-timeout (+ ms-backoff (rand-int ms-backoff))]\n                  ;; Allow some time for possible poller reconnects:\n                  (<! (async/timeout ms-timeout))\n                  (recur (inc n) now-satisfied))))))))))\n\n;;;; Client API\n\n#?(:cljs (def ajax-lite \"Alias of `taoensso.encore/ajax-lite`\" enc/ajax-lite))\n\n   (defprotocol IChSocket\n     (-chsk-connect!    [chsk])\n     (-chsk-disconnect! [chsk reason])\n     (-chsk-reconnect!  [chsk])\n     (-chsk-send!       [chsk ev opts]))\n\n     (defn chsk-connect!    [chsk] (-chsk-connect!    chsk))\n     (defn chsk-disconnect! [chsk] (-chsk-disconnect! chsk :requested-disconnect))\n     (defn chsk-reconnect! \"Useful for reauthenticating after login/logout, etc.\"\n       [chsk] (-chsk-reconnect! chsk))\n     (def chsk-destroy! \"Deprecated\" chsk-disconnect!)\n\n   (defn chsk-send!\n     \"Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\"\n     ([chsk ev] (chsk-send! chsk ev {}))\n     ([chsk ev ?timeout-ms ?cb] (chsk-send! chsk ev {:timeout-ms ?timeout-ms\n                                                     :cb         ?cb}))\n     ([chsk ev opts]\n      (tracef \"Chsk send: (%s) %s\" (assoc opts :cb (boolean (:cb opts))) ev)\n      (-chsk-send! chsk ev opts)))\n\n   (defn- chsk-send->closed! [?cb-fn]\n     (warnf \"Chsk send against closed chsk.\")\n     (when ?cb-fn (?cb-fn :chsk/closed))\n     false)\n\n   (defn- assert-send-args [x ?timeout-ms ?cb]\n     (assert-event x)\n     (assert (or (and (nil? ?timeout-ms) (nil? ?cb))\n                 (and (enc/nat-int? ?timeout-ms)))\n       (str \"cb requires a timeout; timeout-ms should be a +ive integer: \" ?timeout-ms))\n     (assert (or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\n       (str \"cb should be nil, an ifn, or a channel: \" (type ?cb))))\n\n   (defn- pull-unused-cb-fn! [cbs-waiting_ ?cb-uuid]\n     (when-let [cb-uuid ?cb-uuid]\n       (swap-in! cbs-waiting_ [cb-uuid]\n         (fn [?f] (swapped :swap/dissoc ?f)))))\n\n   (defn- swap-chsk-state!\n     \"Atomically swaps the value of chk's :state_ atom.\"\n     [chsk f]\n     (let [[old-state new-state]\n           (swap-in! (:state_ chsk)\n             (fn [old-state]\n               (let [new-state (f old-state)\n                     new-state\n                     (if (:first-open? old-state)\n                       (assoc new-state :first-open? false)\n                       new-state)\n\n                     new-state\n                     (if (:open? new-state)\n                       (dissoc new-state :udt-next-reconnect)\n                       new-state)]\n\n                 (swapped new-state [old-state new-state]))))]\n\n       (when (not= old-state new-state)\n         (let [output [old-state new-state]]\n           ;; (debugf \"Chsk state change: %s\" output)\n           (put! (get-in chsk [:chs :state]) [:chsk/state output])\n           output))))\n\n   (defn- chsk-state->closed [state reason]\n     (have? map? state)\n     (have? [:el #{:requested-disconnect\n                   :requested-reconnect\n                   :downgrading-ws-to-ajax\n                   :unexpected}] reason)\n     (if (or (:open? state) (not= reason :unexpected))\n       (-> state\n         (dissoc :udt-next-reconnect)\n         (assoc\n           :open? false\n           :last-close {:udt (enc/now-udt) :reason reason}))\n       state))\n\n   (defn- cb-chan-as-fn\n     \"Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>].\"\n     [?cb ev]\n     (if (or (nil? ?cb) (ifn? ?cb))\n       ?cb\n       (do\n         (have? enc/chan? ?cb)\n         (assert-event ev)\n         (let [[ev-id _] ev\n               cb-ch ?cb]\n           (fn [reply]\n             (put! cb-ch\n               [(keyword (str (enc/as-qname ev-id) \".cb\"))\n                reply]))))))\n\n   (defn- receive-buffered-evs! [chs clj]\n     (tracef \"receive-buffered-evs!: %s\" clj)\n     (let [buffered-evs (have vector? clj)]\n       (doseq [ev buffered-evs]\n         (assert-event ev)\n         ;; Should never receive :chsk/* events from server here:\n         (let [[id] ev] (assert (not= (namespace id) \"chsk\")))\n         (put! (:<server chs) ev))))\n\n   (defn- handshake? [x]\n     (and (vector? x) ; Nb support arb input (e.g. cb replies)\n       (let [[x1] x] (= x1 :chsk/handshake))))\n\n   (defn- receive-handshake! [chsk-type chsk clj]\n     (have? [:el #{:ws :ajax}] chsk-type)\n     (have? handshake? clj)\n     (tracef \"receive-handshake! (%s): %s\" chsk-type clj)\n     (let [[_ [?uid _ ?handshake-data]] clj\n           {:keys [chs ever-opened?_]} chsk\n           first-handshake? (compare-and-set! ever-opened?_ false true)\n           new-state\n           {:type           chsk-type ; :auto -> e/o #{:ws :ajax}, etc.\n            :open?          true\n            :ever-opened?   true\n            :uid            ?uid\n            :handshake-data ?handshake-data\n            :first-open?    first-handshake?}\n\n           handshake-ev\n           [:chsk/handshake\n            [?uid nil ?handshake-data first-handshake?]]]\n\n       (assert-event handshake-ev)\n       (swap-chsk-state! chsk #(merge % new-state))\n       (put! (:internal chs) handshake-ev)\n\n       :handled))\n\n#?(:clj\n   (defmacro ^:private elide-require\n     \"Experimental. The presence of `js/require` calls can cause issues with\n    React Native, even if they never execute. Currently no other known\n    workarounds. Ref. https://github.com/ptaoussanis/sente/issues/247.\"\n     [& body]\n     (when-not (enc/get-sys-val \"SENTE_ELIDE_JS_REQUIRE\")\n       `(do ~@body))))\n\n#?(:cljs\n   (def ^:private ?node-npm-websocket_\n     \"nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \\\"1.0.23\\\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm\"\n\n     ;; This `let` silliness intended to work around React Native's\n     ;; static analysis tool, to prevent it from detecting a\n     ;; missing package.\n     ;;\n     ;; Ref. https://github.com/ptaoussanis/sente/issues/247#issuecomment-555219121\n     ;;\n     (let [make-package-name (fn [prefix] (str prefix \"socket\"))\n           require-fn\n           (if (exists? js/require)\n             js/require\n             (constantly :no-op))]\n\n       (delay ; Eager eval causes issues with React Native, Ref. #247,\n         (elide-require ; TODO is this now safe to remove?\n           (when (and node-target? (exists? js/require))\n             (try\n               (require-fn (make-package-name \"web\"))\n               ;; In particular, catch 'UnableToResolveError'\n               (catch :default e\n                 ;; (errorf e \"Unable to load npm websocket lib\")\n                 nil))))))))\n\n#?(:clj\n   (defn- create-java-client-websocket!\n     [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n     (let [uri (java.net.URI. uri-str)\n\n           ;; headers\n           ;; (ImmutableMap/of\n           ;;   \"Origin\"  \"http://localhost:3200\"\n           ;;   \"Referer\" \"http://localhost:3200\"\n           ;;   \"Sec-WebSocket-Extensions\" \"permessage-deflate; client_max_window_bits\"\n           ;;   )\n\n           ws-client\n           (proxy [WebSocketClient] [^java.net.URI uri ^java.util.Map headers]\n             (onOpen    [^org.java_websocket.handshake.ServerHandshake handshakedata] nil)\n             (onError   [ex]                 (onerror-fn   ex))\n             (onMessage [^String message]    (onmessage-fn message))\n             (onClose   [code reason remote] (onclose-fn   code reason remote)))]\n\n       ;; JS client attempts to connect right away at construction time.\n       ;; Java client doesn't need to, but we'll do anyway for consistency.\n       (.connect ws-client)\n       (do       ws-client))))\n\n#?(:cljs\n   (defn- create-js-client-websocket!\n     [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n     (when-let [WebSocket\n                (or\n                  (enc/oget goog/global           \"WebSocket\")\n                  (enc/oget goog/global           \"MozWebSocket\")\n                  (enc/oget @?node-npm-websocket_ \"w3cwebsocket\"))]\n\n       (let [socket (WebSocket. uri-str)]\n         (doto socket\n           (aset \"onerror\"   onerror-fn)\n           (aset \"onmessage\" onmessage-fn) ; Nb receives both push & cb evs!\n           ;; Fires repeatedly (on each connection attempt) while server is down:\n           (aset \"onclose\"   onclose-fn))\n         socket))))\n\n(defn- create-websocket! [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n  #?(:cljs (create-js-client-websocket!   opts)\n     :clj  (create-java-client-websocket! opts)))\n\n(defrecord ChWebSocket\n    ;; WebSocket-only IChSocket implementation\n    ;; Handles (re)connections, cbs, etc.\n\n    [client-id chs params headers packer url ws-kalive-ms\n     state_ ; {:type _ :open? _ :uid _ :csrf-token _ ...}\n     instance-handle_ retry-count_ ever-opened?_\n     backoff-ms-fn ; (fn [nattempt]) -> msecs\n     cbs-waiting_ ; {<cb-uuid> <fn> ...}\n     socket_\n     udt-last-comms_]\n\n  IChSocket\n  (-chsk-disconnect! [chsk reason]\n    (reset! instance-handle_ nil) ; Disable auto retry\n    (swap-chsk-state! chsk #(chsk-state->closed % reason))\n    (when-let [s @socket_]\n      #?(:clj  (.closeBlocking ^WebSocketClient s)\n         :cljs (.close s 1000 \"CLOSE_NORMAL\"))))\n\n  (-chsk-reconnect! [chsk]\n    (-chsk-disconnect! chsk :requested-reconnect)\n    (-chsk-connect!    chsk))\n\n  (-chsk-send! [chsk ev opts]\n    (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n          _ (assert-send-args ev ?timeout-ms ?cb)\n          ?cb-fn (cb-chan-as-fn ?cb ev)]\n      (if-not (:open? @state_) ; Definitely closed\n        (chsk-send->closed! ?cb-fn)\n\n        ;; TODO Buffer before sending (but honor `:flush?`)\n        (let [?cb-uuid (when ?cb-fn (enc/uuid-str 6))\n              ppstr (pack packer ev ?cb-uuid)]\n\n          (when-let [cb-uuid ?cb-uuid]\n            (reset-in! cbs-waiting_ [cb-uuid] (have ?cb-fn))\n            (when-let [timeout-ms ?timeout-ms]\n              (go\n                (<! (async/timeout timeout-ms))\n                (when-let [cb-fn* (pull-unused-cb-fn! cbs-waiting_ ?cb-uuid)]\n                  (cb-fn* :chsk/timeout)))))\n\n          (try\n            #?(:cljs (.send                  @socket_         ppstr)\n               :clj  (.send ^WebSocketClient @socket_ ^String ppstr))\n\n            (reset! udt-last-comms_ (enc/now-udt))\n            :apparent-success\n            (catch #?(:clj Throwable :cljs :default) t\n              (errorf t \"Chsk send error\")\n              (when-let [cb-uuid ?cb-uuid]\n                (let [cb-fn* (or (pull-unused-cb-fn! cbs-waiting_ cb-uuid)\n                                 (have ?cb-fn))]\n                  (cb-fn* :chsk/error)))\n              false))))))\n\n  (-chsk-connect! [chsk]\n    (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n          have-handle? (fn [] (= @instance-handle_ instance-handle))\n          connect-fn\n          (fn connect-fn []\n            (when (have-handle?)\n              (let [retry-fn\n                    (fn [] ; Backoff then recur\n                      (when (have-handle?)\n                        (let [retry-count* (swap! retry-count_ inc)\n                              backoff-ms (backoff-ms-fn retry-count*)\n                              udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                          (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                            retry-count* backoff-ms)\n                          #?(:cljs (.setTimeout goog/global connect-fn backoff-ms)\n                             :clj  (go\n                                     (<! (async/timeout backoff-ms))\n                                     (connect-fn)))\n\n                          (swap-chsk-state! chsk\n                            #(assoc % :udt-next-reconnect udt-next-reconnect)))))\n\n                    onerror-fn\n                    #?(:cljs\n                       (fn [ws-ev]\n                         (errorf ; ^:meta {:raw-console? true}\n                           \"WebSocket error: %s\"\n                           (try\n                             (js->clj          ws-ev)\n                             (catch :default _ ws-ev)))\n\n                         (swap-chsk-state! chsk\n                           #(assoc % :last-ws-error\n                              {:udt (enc/now-udt), :ev ws-ev})))\n\n                       :clj\n                       (fn [ex]\n                         (errorf ex \"WebSocket error\")\n                         (swap-chsk-state! chsk\n                           #(assoc % :last-ws-error\n                              {:udt (enc/now-udt), :ex ex}))))\n\n                    onmessage-fn ; Nb receives both push & cb evs!\n                    (fn #?(:cljs [ws-ev] :clj [ppstr])\n                      (let [ppstr #?(:clj            ppstr\n                                     :cljs (enc/oget ws-ev \"data\"))\n\n                            ;; `clj` may/not satisfy `event?` since\n                            ;; we also receive cb replies here. This\n                            ;; is why we prefix pstrs to indicate\n                            ;; whether they're wrapped or not\n                            [clj ?cb-uuid] (unpack packer ppstr)]\n\n                        (reset! udt-last-comms_ (enc/now-udt))\n\n                        (or\n                          (when (handshake? clj)\n                            (receive-handshake! :ws chsk clj)\n                            (reset! retry-count_ 0)\n                            :handshake)\n\n                          (when (= clj :chsk/ws-ping)\n                            (put! (:<server chs) [:chsk/ws-ping])\n                            :noop)\n\n                          (if-let [cb-uuid ?cb-uuid]\n                            (if-let [cb-fn (pull-unused-cb-fn! cbs-waiting_\n                                             cb-uuid)]\n                              (cb-fn clj)\n                              (warnf \"Cb reply w/o local cb-fn: %s\" clj))\n                            (let [buffered-evs clj]\n                              (receive-buffered-evs! chs buffered-evs))))))\n\n                    ;; Fires repeatedly (on each connection attempt) while\n                    ;; server is down:\n                    onclose-fn\n                    (fn #?(:cljs [ws-ev] :clj [code reason remote])\n                      (let [last-ws-close\n                            #?(:clj\n                               {:udt    (enc/now-udt)\n                                :clean? (= code org.java_websocket.framing.CloseFrame/NORMAL)\n                                :code   code\n                                :reason reason}\n\n                               :cljs\n                               {:udt    (enc/now-udt)\n                                :ev     ws-ev\n                                :clean? (enc/oget ws-ev \"wasClean\")\n                                :code   (enc/oget ws-ev \"code\")\n                                :reason (enc/oget ws-ev \"reason\")})]\n\n                        ;; Firefox calls \"onclose\" while unloading,\n                        ;; Ref. http://goo.gl/G5BYbn:\n                        (if (:clean? last-ws-close)\n                          (do\n                            (debugf \"Clean WebSocket close, will not attempt reconnect\")\n                            (swap-chsk-state! chsk\n                              #(assoc % :last-ws-close last-ws-close)))\n                          (do\n                            (swap-chsk-state! chsk\n                              #(assoc (chsk-state->closed % :unexpected)\n                                 :last-ws-close last-ws-close))\n                            (retry-fn)))))\n\n                    ?socket\n                    (try\n                      (create-websocket!\n                        {:onerror-fn   onerror-fn\n                         :onmessage-fn onmessage-fn\n                         :onclose-fn   onclose-fn\n                         :headers      headers\n                         :uri-str\n                         (enc/merge-url-with-query-string url\n                           (merge params ; 1st (don't clobber impl.):\n                             {:client-id client-id\n                              :csrf-token (:csrf-token @state_)}))})\n\n                      (catch #?(:clj Throwable :cljs :default) t\n                        (errorf t \"WebSocket error\")\n                        nil))]\n\n                (if-not ?socket\n                  (retry-fn) ; Couldn't even get a socket\n                  (do\n                    ;; Clean up the old socket if any exists\n                    (when-let [old-socket @socket_]\n                      #?(:clj  (.close ^WebSocketClient old-socket)\n                         :cljs (.close                  old-socket)))\n\n                    (reset! socket_ ?socket))))))]\n\n      (when-let [ms ws-kalive-ms]\n        (go-loop []\n          (let [udt-t0 @udt-last-comms_]\n            (<! (async/timeout ms))\n            (when (have-handle?)\n              (let [udt-t1 @udt-last-comms_]\n                (when (= udt-t0 udt-t1)\n                  ;; Ref. issue #259:\n                  ;; We've seen no send/recv activity on this\n                  ;; conn w/in our kalive window so send a ping\n                  ;; ->server (should auto-close conn if it's\n                  ;; gone dead). The server generally sends pings so\n                  ;; this should be rare. Mostly here to help clients\n                  ;; identify conns that were suddenly dropped.\n\n                  (-chsk-send! chsk [:chsk/ws-ping] {:flush? true})))\n              (recur)))))\n\n      (reset! retry-count_ 0)\n      (connect-fn)\n      chsk)))\n\n(defn- new-ChWebSocket [opts csrf-token]\n  (map->ChWebSocket\n    (merge\n      {:state_ (atom {:type :ws :open? false :ever-opened? false :csrf-token csrf-token})\n       :instance-handle_ (atom nil)\n       :retry-count_     (atom 0)\n       :ever-opened?_    (atom false)\n       :cbs-waiting_     (atom {})\n       :socket_          (atom nil)\n       :udt-last-comms_  (atom nil)}\n      opts)))\n\n(def ^:private default-client-side-ajax-timeout-ms\n  \"We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms.\"\n  (enc/ms :secs 60))\n\n#?(:cljs\n   (defrecord ChAjaxSocket\n       ;; Ajax-only IChSocket implementation\n       ;; Handles (re)polling, etc.\n\n       [client-id chs params packer url state_\n        instance-handle_ ever-opened?_\n        backoff-ms-fn\n        ajax-opts curr-xhr_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [x @curr-xhr_] (.abort x)))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [csrf-token (:csrf-token @state_)]\n             (ajax-lite url\n               (merge ajax-opts\n                 {:method     :post\n                  :timeout-ms (or ?timeout-ms (:timeout-ms ajax-opts)\n                                  default-client-side-ajax-timeout-ms)\n                  :resp-type  :text ; We'll do our own pstr decoding\n                  :headers\n                  (merge\n                    (:headers ajax-opts) ; 1st (don't clobber impl.)\n                    {:X-CSRF-Token csrf-token})\n\n                  :params\n                  (let [ppstr (pack packer ev (when ?cb-fn :ajax-cb))]\n                    (merge params ; 1st (don't clobber impl.):\n                      {:udt        (enc/now-udt) ; Force uncached resp\n\n                       ;; A duplicate of X-CSRF-Token for user's convenience\n                       ;; and for back compatibility with earlier CSRF docs:\n                       :csrf-token csrf-token\n\n                       ;; Just for user's convenience here. non-lp-POSTs\n                       ;; don't actually need a client-id for Sente's own\n                       ;; implementation:\n                       :client-id  client-id\n\n                       :ppstr      ppstr}))})\n\n               (fn ajax-cb [{:keys [?error ?content]}]\n                 (if ?error\n                   (if (= ?error :timeout)\n                     (when ?cb-fn (?cb-fn :chsk/timeout))\n                     (do\n                       (swap-chsk-state! chsk\n                         #(chsk-state->closed % :unexpected))\n                       (when ?cb-fn (?cb-fn :chsk/error))))\n\n                   (let [content ?content\n                         resp-ppstr content\n                         [resp-clj _] (unpack packer resp-ppstr)]\n                     (if ?cb-fn\n                       (?cb-fn resp-clj)\n                       (when (not= resp-clj :chsk/dummy-cb-200)\n                         (warnf \"Cb reply w/o local cb-fn: %s\" resp-clj)))\n                     (swap-chsk-state! chsk #(assoc % :open? true))))))\n\n             :apparent-success))))\n\n     (-chsk-connect! [chsk]\n       (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n             have-handle? (fn [] (= @instance-handle_ instance-handle))\n             poll-fn ; async-poll-for-update-fn\n             (fn poll-fn [retry-count]\n               (tracef \"async-poll-for-update!\")\n               (when (have-handle?)\n                 (let [retry-fn\n                       (fn [] ; Backoff then recur\n                         (when (have-handle?)\n                           (let [retry-count* (inc retry-count)\n                                 backoff-ms (backoff-ms-fn retry-count*)\n                                 udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                             (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                               retry-count* backoff-ms)\n                             (.setTimeout goog/global\n                               (fn [] (poll-fn retry-count*))\n                               backoff-ms)\n                             (swap-chsk-state! chsk\n                               #(assoc % :udt-next-reconnect udt-next-reconnect)))))]\n\n                   (reset! curr-xhr_\n                     (ajax-lite url\n                       (merge ajax-opts\n                         {:method     :get ; :timeout-ms timeout-ms\n                          :timeout-ms (or (:timeout-ms ajax-opts)\n                                        default-client-side-ajax-timeout-ms)\n                          :resp-type  :text ; Prefer to do our own pstr reading\n                          :params\n                          (merge\n                            ;; Note that user params here are actually POST\n                            ;; params for convenience. Contrast: WebSocket\n                            ;; params sent as query params since there's no\n                            ;; other choice there.\n                            params ; 1st (don't clobber impl.):\n\n                            {:udt       (enc/now-udt) ; Force uncached resp\n                             :client-id client-id}\n\n                            ;; A truthy :handshake? param will prompt server to\n                            ;; reply immediately with a handshake response,\n                            ;; letting us confirm that our client<->server comms\n                            ;; are working:\n                            (when-not (:open? @state_) {:handshake? true}))\n\n                          :headers\n                          (merge\n                            (:headers ajax-opts) ; 1st (don't clobber impl.)\n                            {:X-CSRF-Token (:csrf-token @state_)})})\n\n                       (fn ajax-cb [{:keys [?error ?content]}]\n                         (if ?error\n                           (cond\n                             (= ?error :timeout) (poll-fn 0)\n                             ;; (= ?error :abort) ; Abort => intentional, not an error\n                             :else\n                             (do\n                               (swap-chsk-state! chsk\n                                 #(chsk-state->closed % :unexpected))\n                               (retry-fn)))\n\n                           ;; The Ajax long-poller is used only for events, never cbs:\n                           (let [content ?content\n                                 ppstr content\n                                 [clj] (unpack packer ppstr)\n                                 handshake? (handshake? clj)]\n\n                             (when handshake?\n                               (receive-handshake! :ajax chsk clj))\n\n                             (swap-chsk-state! chsk #(assoc % :open? true))\n                             (poll-fn 0) ; Repoll asap\n\n                             (when-not handshake?\n                               (or\n                                 (when (= clj :chsk/timeout)\n                                   (when @debug-mode?_\n                                     (receive-buffered-evs! chs [[:debug/timeout]]))\n                                   :noop)\n\n                                 (let [buffered-evs clj] ; An application reply\n                                   (receive-buffered-evs! chs buffered-evs))))))))))))]\n\n         (poll-fn 0)\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAjaxSocket [opts csrf-token]\n     (map->ChAjaxSocket\n       (merge\n         {:state_           (atom {:type :ajax :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :ever-opened?_    (atom false)\n          :curr-xhr_        (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defrecord ChAutoSocket\n       ;; Dynamic WebSocket/Ajax IChSocket implementation\n       ;; Wraps a swappable ChWebSocket/ChAjaxSocket\n\n       [ws-chsk-opts ajax-chsk-opts state_\n        impl_ ; ChWebSocket or ChAjaxSocket\n        ]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl reason)))\n\n     ;; Possibly reset impl type:\n     (-chsk-reconnect! [chsk]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl :requested-reconnect)\n         (-chsk-connect!    chsk)))\n\n     (-chsk-send! [chsk ev opts]\n       (if-let [impl @impl_]\n         (-chsk-send! impl ev opts)\n         (let [{?cb :cb} opts\n               ?cb-fn (cb-chan-as-fn ?cb ev)]\n           (chsk-send->closed! ?cb-fn))))\n\n     (-chsk-connect! [chsk]\n       ;; Starting with a simple downgrade-only strategy here as a proof of concept\n       ;; TODO Later consider smarter downgrade or downgrade+upgrade strategies?\n       (let [ajax-chsk-opts (assoc ajax-chsk-opts :state_ state_)\n             ws-chsk-opts (assoc   ws-chsk-opts :state_ state_)\n\n             ajax-conn!\n             (fn []\n               ;; Remove :auto->:ajax downgrade watch\n               (remove-watch state_ :chsk/auto-ajax-downgrade)\n               (-chsk-connect! (new-ChAjaxSocket ajax-chsk-opts (:csrf-token @state_))))\n\n             ws-conn!\n             (fn []\n               ;; Configure :auto->:ajax downgrade watch\n               (let [downgraded?_ (atom false)]\n                 (add-watch state_ :chsk/auto-ajax-downgrade\n                   (fn [_ _ old-state new-state]\n                     (when-let [impl @impl_]\n                       (when-let [ever-opened?_ (:ever-opened?_ impl)]\n                         (when-not @ever-opened?_\n                           (when (:last-ws-error new-state)\n                             (when (compare-and-set! downgraded?_ false true)\n                               (warnf \"Permanently downgrading :auto chsk -> :ajax\")\n                               (-chsk-disconnect! impl :downgrading-ws-to-ajax)\n                               (reset! impl_ (ajax-conn!))))))))))\n\n               (-chsk-connect! (new-ChWebSocket ws-chsk-opts (:csrf-token @state_))))]\n\n         (reset! impl_ (or (ws-conn!) (ajax-conn!)))\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAutoSocket [opts csrf-token]\n     (map->ChAutoSocket\n       (merge\n         {:state_ (atom {:type :auto :open? false :ever-opened? false :csrf-token csrf-token})\n          :impl_  (atom nil)}\n         opts))))\n\n   (defn- get-chsk-url [protocol host path type]\n     (let [protocol (case protocol :http \"http:\" :https \"https:\" protocol)\n           protocol (have [:el #{\"http:\" \"https:\"}] protocol)\n           protocol (case type\n                      :ajax     protocol\n                      :ws (case protocol \"https:\" \"wss:\" \"http:\" \"ws:\"))]\n       (str protocol \"//\" (enc/path host path))))\n\n   (defn make-channel-socket-client!\n     \"Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.\"\n\n     [path ?csrf-token &\n      [{:keys [type protocol host port params headers recv-buf-or-n packer ws-kalive-ms\n               client-id ajax-opts wrap-recv-evs? backoff-ms-fn]\n        :as   opts\n        :or   {type           :auto\n               recv-buf-or-n  (async/sliding-buffer 2048) ; Mostly for buffered-evs\n               packer         :edn\n               client-id      (or (:client-uuid opts) ; Backwards compatibility\n                                  (enc/uuid-str))\n               wrap-recv-evs? true\n               backoff-ms-fn  enc/exp-backoff\n               ws-kalive-ms   (enc/ms :secs 20)}}\n\n       _deprecated-more-opts]]\n\n     (have? [:in #{:ajax :ws :auto}] type)\n     (have? enc/nblank-str? client-id)\n\n     (when (not (nil? _deprecated-more-opts)) (warnf \"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"))\n     (when (contains? opts :lp-timeout) (warnf \":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"))\n\n     (when (or (not (string? ?csrf-token)) (str/blank? ?csrf-token))\n       (warnf \"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"))\n\n     (let [packer (coerce-packer packer)\n\n           [ws-url ajax-url]\n           (let [;; Not available with React Native, etc.\n                 ;; Must always provide explicit path for Java client.\n                 win-loc  #?(:clj nil :cljs (enc/get-win-loc))\n                 path     (have (or path (:pathname win-loc)))]\n\n             (if-let [f (:chsk-url-fn opts)] ; Deprecated\n               [(f path win-loc :ws)\n                (f path win-loc :ajax)]\n\n               (let [protocol (or protocol (:protocol win-loc) :http)\n                     host\n                     (if host\n                       (if port (str host \":\" port) host)\n                       (if port\n                         (str (:hostname win-loc) \":\" port)\n                         (do  (:host     win-loc))))]\n\n                 [(get-chsk-url protocol host path :ws)\n                  (get-chsk-url protocol host path :ajax)])))\n\n           private-chs\n           {:internal (chan (async/sliding-buffer 128))\n            :state    (chan (async/sliding-buffer 10))\n            :<server\n            (let [;; Nb must be >= max expected buffered-evs size:\n                  buf (async/sliding-buffer 512)]\n              (if wrap-recv-evs?\n                (chan buf (map (fn [ev] [:chsk/recv ev])))\n                (chan buf)))}\n\n           common-chsk-opts\n           {:client-id    client-id\n            :chs          private-chs\n            :params       params\n            :headers      headers\n            :packer       packer\n            :ws-kalive-ms ws-kalive-ms}\n\n           ws-chsk-opts\n           (merge common-chsk-opts\n             {:url           ws-url\n              :backoff-ms-fn backoff-ms-fn})\n\n           ajax-chsk-opts\n           (merge common-chsk-opts\n             {:url           ajax-url\n              :ajax-opts     ajax-opts\n              :backoff-ms-fn backoff-ms-fn})\n\n           auto-chsk-opts\n           {:ws-chsk-opts   ws-chsk-opts\n            :ajax-chsk-opts ajax-chsk-opts}\n\n           ?chsk\n           (-chsk-connect!\n             (case type\n               :ws      (new-ChWebSocket    ws-chsk-opts ?csrf-token)\n               :ajax\n               #?(:cljs (new-ChAjaxSocket ajax-chsk-opts ?csrf-token)\n                  :clj  (throw (UnsupportedOperationException.\n                                 \"Only :ws channel socket type supported for clj\")))\n               :auto\n               #?(:cljs (new-ChAutoSocket auto-chsk-opts ?csrf-token)\n                  :clj  (throw (UnsupportedOperationException.\n                                 \"Only :ws channel socket type supported for clj\")))))]\n\n       (if-let [chsk ?chsk]\n         (let [chsk-state_ (:state_ chsk)\n               internal-ch (:internal private-chs)\n               send-fn (partial chsk-send! chsk)\n               ev-ch\n               (async/merge\n                 [(:internal private-chs)\n                  (:state    private-chs)\n                  (:<server  private-chs)]\n                 recv-buf-or-n)\n\n               ev-msg-ch\n               (async/chan 1\n                 (map\n                   (fn [ev]\n                     (let [[ev-id ev-?data :as ev] (as-event ev)]\n                       {;; Allow client to inject into router for handler:\n                        :ch-recv internal-ch\n                        :send-fn send-fn\n                        :state   chsk-state_\n                        :event   ev\n                        :id      ev-id\n                        :?data   ev-?data}))))]\n\n           (async/pipe ev-ch ev-msg-ch)\n\n           {:chsk    chsk\n            :ch-recv ev-msg-ch\n            :send-fn send-fn\n            :state   (:state_ chsk)})\n\n         (warnf \"Failed to create channel socket\"))))\n\n;;;; Event-msg routers (handler loops)\n\n(defn- -start-chsk-router!\n  [server? ch-recv event-msg-handler opts]\n  (let [{:keys [trace-evs? error-handler simple-auto-threading?]} opts\n        ch-ctrl (chan)\n\n        execute1\n        #?(:cljs (fn [f] (f))\n           :clj\n           (if simple-auto-threading?\n             (fn [f] (future-call f))\n             (fn [f] (f))))]\n\n    (go-loop []\n      (let [[v p] (async/alts! [ch-recv ch-ctrl])\n            stop? (or (= p ch-ctrl) (nil? v))]\n\n        (when-not stop?\n          (let [{:as event-msg :keys [event]} v]\n\n            (execute1\n              (fn []\n                (enc/catching\n                  (do\n                    (when trace-evs? (tracef \"Pre-handler event: %s\" event))\n                    (event-msg-handler\n                      (if server?\n                        (have! server-event-msg? event-msg)\n                        (have! client-event-msg? event-msg))))\n                  e1\n                  (enc/catching\n                    (if-let [eh error-handler]\n                      (error-handler e1 event-msg)\n                      (errorf e1 \"Chsk router `event-msg-handler` error: %s\" event))\n                    e2 (errorf e2 \"Chsk router `error-handler` error: %s\"     event)))))\n\n            (recur)))))\n\n    (fn stop! [] (async/close! ch-ctrl))))\n\n(defn start-server-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler simple-auto-threading?]}]]\n  (-start-chsk-router! :server ch-recv event-msg-handler opts))\n\n(defn start-client-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler]}]]\n  (-start-chsk-router! (not :server) ch-recv event-msg-handler opts))\n\n;;;; Platform aliases\n\n(def event-msg? #?(:clj server-event-msg? :cljs client-event-msg?))\n\n(def make-channel-socket!\n  \"Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details.\"\n  #?(:clj  make-channel-socket-server!\n     :cljs make-channel-socket-client!))\n\n(def start-chsk-router!\n  \"Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details.\"\n  #?(:clj  start-server-chsk-router!\n     :cljs start-client-chsk-router!))\n\n;;;; Deprecated\n\n(enc/deprecated\n  #?(:clj\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-msg-handler ch-recv]\n       (start-server-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev-msg ch-recv])\n         (fn [ev-msg] (event-msg-handler ev-msg (:ch-recv ev-msg))))))\n\n  #?(:cljs\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-handler ch-recv]\n       (start-client-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev ch-recv])\n         (fn [ev-msg] (event-handler (:event ev-msg) (:ch-recv ev-msg))))))\n\n  (def set-logging-level! \"DEPRECATED. Please use `timbre/set-level!` instead\" timbre/set-level!)\n\n  #?(:cljs (def ajax-call \"DEPRECATED: Please use `ajax-lite` instead\" enc/ajax-lite))\n  #?(:cljs\n     (def default-chsk-url-fn \"DEPRECATED\"\n       (fn [path {:as location :keys [protocol host pathname]} websocket?]\n         (let [protocol\n               (if websocket?\n                 (if (= protocol \"https:\") \"wss:\" \"ws:\")\n                 protocol)]\n           (str protocol \"//\" host (or path pathname)))))))\n","~:reader-features",["^15",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/vector?","taoensso.encore/encore-version","taoensso.encore/assert-min-encore-version","taoensso.sente/sente-version","taoensso.sente/node-target?","cljs.core._EQ_","cljs.core/*target*","js/taoensso","js/taoensso.sente","js/taoensso.sente.debug-mode?_","taoensso.sente/debug-mode?_","cljs.core.atom","taoensso.sente/expected","expected","x","cljs.core/type","taoensso.sente/validate-event","cljs.core/not","G__75657","fexpr__75656","cljs.core/count","vec__75659","cljs.core.nth","ev-id","_","cljs.core/Keyword","cljs.core/namespace","taoensso.sente/assert-event","temp__5753__auto__","errs","cljs.core.ex_info","taoensso.sente/event?","taoensso.sente/as-event","temp__5751__auto__","taoensso.sente/client-event-msg?","cljs.core/map?","taoensso.encore/ks>=","map__75668","cljs.core/--destructure-map","cljs.core.get","ch-recv","send-fn","state","event","taoensso.encore/chan?","cljs.core/ifn?","taoensso.encore/atom?","taoensso.sente/server-event-msg?","map__75705","connected-uids","send-buffers","ring-req","client-id","?reply-fn","taoensso.encore/nblank-str?","p__75719","map__75720","taoensso.sente/put-server-event-msg>ch-recv!","ev-msg","vec__75721","ev-?data","valid-event","ev-msg*","cljs.core.merge","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.async.put_BANG_","taoensso.sente/cb-error?","cb-reply-clj","fexpr__75740","taoensso.sente/cb-success?","taoensso.sente/unpack","packer","prefixed-pstr","taoensso.truss.impl/-invar-violation!","vec__75756","wrapped?","taoensso.encore/str-starts-with?","pstr","cljs.core.subs","clj","e75759","taoensso.sente.interfaces/unpack","t","?cb-uuid","var_args","G__75774","taoensso.sente/pack","js/Error","taoensso.sente.interfaces/pack","wrapped-clj","cljs.core/PROTOCOL_SENTINEL","this__4404__auto__","writer__4405__auto__","opt__4406__auto__","cljs.core/-write","taoensso.sente/EdnPacker","taoensso.sente/->EdnPacker","taoensso.encore.pr_edn","s","taoensso.encore.read_edn","taoensso.sente/default-edn-packer","taoensso.sente/coerce-packer","e","p1__75793#","taoensso.truss.impl/-dummy-error","e75804","cljs.core/native-satisfies?","taoensso.sente.interfaces/IPacker","taoensso.sente/next-idx!","taoensso.encore/idx-fn","taoensso.sente/allow-origin?","allowed-origins","headers","origin","have-origin?","cljs.core.not_EQ_","cljs.core/contains?","cljs.core/set","referer","p1__75813#","taoensso.encore/rsome","clojure.string/starts-with?","args__4777__auto__","len__4771__auto__","i__4772__auto__","argseq__4778__auto__","cljs.core/IndexedSeq","taoensso.sente/make-channel-socket-server!","p__75842","vec__75843","map__75846","seq75836","G__75837","cljs.core/first","cljs.core/next","self__4758__auto__","web-server-ch-adapter","recv-buf-or-n","ws-kalive-ms","lp-timeout-ms","send-buf-ms-ajax","send-buf-ms-ws","user-id-fn","bad-csrf-fn","bad-origin-fn","csrf-token-fn","handshake-data-fn","authorized?-fn","unauthorized-fn","?unauthorized-fn","cljs.core.async/sliding-buffer","taoensso.encore.ms","cljs.core.get_in","_ring-req","or__4160__auto__","e75868","e75869","taoensso.encore/pos-int?","p1__75821#","e75871","taoensso.sente.interfaces/IServerChanAdapter","max-ms","taoensso.sente/default-client-side-ajax-timeout-ms","fexpr__75884","cljs.core/set?","cljs.core.async.chan","G__75888","cljs.core.assoc","conns_","send-buffers_","connected-uids_","upd-conn!","conn-type","uid","taoensso.encore.swap_in_BANG_","?v","vec__75894","?sch","_udt","new-udt","taoensso.encore/now-udt","taoensso.encore/swapped","new-?sch","connect-uid!","taoensso.truss.impl/some?","e75899","newly-connected?","p__75901","map__75902","ws","ajax","any","old-m","new-m","G__75905","cljs.core.conj","old-any","new-any","upd-connected-uid!","e75909","newly-disconnected?","p__75910","map__75911","cljs.core/deref","conns'","any-ws-clients?","any-ajax-clients?","any-clients?","cljs.core.disj","p__75921","vec__75922","map__75925","user-id","ev","opts","flush?","ev-uuid","taoensso.encore.uuid_str","flush-buffer!","pulled","m","vec__75928","ev-uuids","cljs.core.dissoc","vec__75931","buffered-evs","buffered-evs-ppstr","taoensso.sente.pack","G__75939","taoensso.sente/send-buffered-server-evs>ws-clients!","taoensso.sente/send-buffered-server-evs>ajax-clients!","seq__75940","cljs.core/seq","chunk__75941","count__75942","i__75943","vec__75953","cljs.core/chunked-seq?","c__4591__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__75958","cljs.core/vals","sch","taoensso.sente.interfaces/sch-close!","seq__75963","chunk__75965","count__75966","i__75967","vec__75979","vec__75986","seq__75989","chunk__75990","count__75991","i__75992","vec__76003","vec__76011","ws-timeout","cljs.core.async/timeout","ajax-timeout","c__65866__auto__","cljs.core.async.impl.dispatch/run","f__65867__auto__","switch__65651__auto__","state_76021","state_val_76022","cljs.core.async.impl.ioc-helpers/take!","inst_76018","inst_76019","statearr-76025","cljs.core.async.impl.ioc-helpers/return-chan","statearr-76028","state-machine__65652__auto__","ret-value__65653__auto__","result__65654__auto__","cljs.core/keyword-identical?","ex__65655__auto__","e76029","statearr-76030","statearr-76033","state__65868__auto__","statearr-76035","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_76042","state_val_76043","inst_76038","inst_76039","statearr-76045","statearr-76046","e76047","statearr-76048","statearr-76049","statearr-76050","bad-csrf?","reference-csrf-token","csrf-token-from-client","taoensso.encore/const-str=","unauthorized?","possible-rejection-resp","b2__904__auto__","unauthorized-resp","uf","ev-msg-const","b2__895__auto__","resp","taoensso.sente.interfaces/ring-req->server-ch-resp","server-ch","websocket?","vec__76061","params","ppstr","has-cb?","reply-fn","replied?_","resp-clj","cljs.core/compare-and-set!","taoensso.sente.interfaces/sch-send!","ms","state_76075","state_val_76076","inst_76068","inst_76071","inst_76072","statearr-76079","statearr-76081","e76082","statearr-76083","statearr-76084","statearr-76086","sch-uuid","receive-event-msg!","taoensso$sente$self","send-handshake!","?handshake-data","handshake-ev","clojure.string/blank?","err-msg","updated-conn","udt-open","state_76140","state_val_76141","inst_76136","statearr-76144","inst_76100","inst_76101","statearr-76145","statearr-76146","inst_76113","inst_76105","inst_76108","inst_76110","cljs.core/PersistentVector","inst_76111","inst_76112","statearr-76147","statearr-76148","statearr-76150","inst_76120","inst_76129","statearr-76151","statearr-76152","statearr-76154","inst_76138","statearr-76155","inst_76103","inst_76125","inst_76126","statearr-76157","statearr-76158","inst_76119","inst_76121","statearr-76161","statearr-76162","statearr-76163","inst_76133","statearr-76165","inst_76123","statearr-76167","statearr-76171","statearr-76173","e76174","statearr-76175","statearr-76176","statearr-76178","taoensso.sente.interfaces/sch-open?","handshake?","state_76208","state_val_76210","inst_76183","inst_76190","inst_76185","inst_76186","inst_76187","inst_76188","inst_76189","statearr-76215","statearr-76216","statearr-76217","inst_76195","inst_76196","inst_76197","statearr-76219","statearr-76223","statearr-76224","statearr-76226","inst_76206","inst_76199","inst_76200","statearr-76227","statearr-76229","inst_76203","statearr-76234","statearr-76236","e76237","statearr-76238","statearr-76239","statearr-76244","req-ppstr","vec__76246","_status","udt-close","state_76319","state_val_76320","statearr-76322","inst_76259","statearr-76327","statearr-76329","inst_76270","inst_76269","inst_76292","inst_76271","inst_76287","inst_76288","inst_76289","inst_76291","vec__76262","statearr-76338","statearr-76339","statearr-76340","inst_76275","inst_76276","inst_76277","statearr-76342","inst_76301","inst_76302","inst_76303","inst_76304","statearr-76347","inst_76261","inst_76265","inst_76266","inst_76267","inst_76268","inst_76272","statearr-76349","statearr-76350","statearr-76351","inst_76310","statearr-76353","inst_76294","inst_76295","inst_76296","inst_76297","inst_76298","inst_76299","statearr-76358","statearr-76359","statearr-76360","inst_76280","inst_76281","statearr-76362","statearr-76366","statearr-76367","inst_76307","statearr-76369","statearr-76373","inst_76313","statearr-76376","e76378","statearr-76379","statearr-76380","statearr-76382","_?sch","udt-t1","disconnect?","p__76290","vec__76331","_sch","?m","cljs.core/empty?","error","buffered-evs-pstr","seq__76390","chunk__76391","count__76392","i__76393","vec__76420","vec__76423","vec__76428","vec__76431","ms-backoffs","client-ids-unsatisfied","cljs.core/keys","state_76498","state_val_76499","inst_76449","inst_76458","inst_76448","inst_76469","inst_76470","cljs.core/PersistentHashSet","inst_76471","statearr-76506","inst_76447","statearr-76507","statearr-76508","statearr-76509","inst_76491","statearr-76510","inst_76476","inst_76481","inst_76482","inst_76483","inst_76466","statearr-76511","statearr-76512","statearr-76513","inst_76496","inst_76494","statearr-76514","inst_76452","inst_76453","inst_76454","inst_76457","inst_76460","taoensso.truss.impl/non-throwing","inst_76461","statearr-76522","statearr-76523","statearr-76524","statearr-76526","inst_76474","inst_76475","statearr-76528","statearr-76533","statearr-76534","inst_76464","statearr-76538","statearr-76539","inst_76485","inst_76486","statearr-76541","statearr-76542","inst_76478","inst_76479","statearr-76543","statearr-76544","statearr-76545","statearr-76546","e76547","statearr-76548","statearr-76549","statearr-76550","n","client-ids-satisfied","?pulled","ks-to-pull","cljs.core.remove","cljs.core.reduce","k","vec__76519","udt","cljs.core/select-keys","cljs.core/reduce-kv","p__76468","vec__76503","sent?","cljs.core.into","cljs.core/complement","cljs.core/rand-int","taoensso.sente/ajax-lite","taoensso.encore/ajax-lite","taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn","x__4463__auto__","m__4464__auto__","taoensso.sente/-chsk-connect!","goog/typeOf","m__4461__auto__","cljs.core/missing-protocol","taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn","taoensso.sente/-chsk-disconnect!","taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn","taoensso.sente/-chsk-reconnect!","taoensso$sente$IChSocket$_chsk_send_BANG_$dyn","taoensso.sente/-chsk-send!","taoensso.sente/IChSocket","chsk","reason","taoensso.sente/chsk-connect!","taoensso.sente/chsk-disconnect!","taoensso.sente/chsk-reconnect!","taoensso.sente/chsk-destroy!","G__76588","taoensso.sente/chsk-send!","taoensso.sente.chsk_send_BANG_","?timeout-ms","?cb","cljs.core/boolean","taoensso.sente/chsk-send->closed!","?cb-fn","taoensso.sente/assert-send-args","taoensso.encore/nat-int?","taoensso.sente/pull-unused-cb-fn!","cbs-waiting_","cb-uuid","?f","taoensso.sente/swap-chsk-state!","f","vec__76611","old-state","new-state","output","taoensso.sente/chsk-state->closed","e76625","G__76631","taoensso.truss.impl/set*","e76630","taoensso.sente/cb-chan-as-fn","e76638","vec__76641","cb-ch","reply","cljs.core.keyword","taoensso.encore/as-qname","taoensso.sente/receive-buffered-evs!","chs","seq__76651","chunk__76652","count__76653","i__76654","vec__76682","vec__76689","id","taoensso.sente/handshake?","vec__76700","x1","taoensso.sente/receive-handshake!","chsk-type","G__76711","e76709","e76712","vec__76713","vec__76716","map__76719","?uid","ever-opened?_","first-handshake?","p1__76705#","taoensso.sente/?node-npm-websocket_","make-package-name","prefix","require-fn","js/require","cljs.core/constantly","e76739","G__76744","p__76757","map__76760","taoensso.sente/create-js-client-websocket!","onerror-fn","onmessage-fn","onclose-fn","uri-str","WebSocket","taoensso.encore.oget","goog/global","socket","G__76778","p__76782","map__76783","taoensso.sente/create-websocket!","this__4415__auto__","k__4416__auto__","this__4417__auto__","k76800","else__4418__auto__","G__76807","url","state_","instance-handle_","retry-count_","backoff-ms-fn","socket_","udt-last-comms_","__extmap","this__4434__auto__","f__4435__auto__","init__4436__auto__","ret__4437__auto__","p__76814","vec__76815","k__4438__auto__","v__4439__auto__","this__4429__auto__","writer__4430__auto__","opts__4431__auto__","pr-pair__4432__auto__","keyval__4433__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","G__76799","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4413__auto__","__meta","this__4410__auto__","__hash","this__4419__auto__","this__4411__auto__","h__4273__auto__","coll__4412__auto__","cljs.core/hash-unordered-coll","this76801","other76802","this__4424__auto__","k__4425__auto__","cljs.core/-with-meta","cljs.core/not-empty","this__4422__auto__","k__4423__auto__","pred__76882","expr__76883","this__4427__auto__","cljs.core/MapEntry","this__4414__auto__","this__4420__auto__","entry__4421__auto__","cljs.core/-nth","cljs.core/-conj","taoensso.sente/ChWebSocket","this__4458__auto__","cljs.core/List","writer__4459__auto__","G__76803","extmap__4454__auto__","G__77114","cljs.core/record?","taoensso.sente/->ChWebSocket","taoensso.sente/map->ChWebSocket","cljs.core/reset!","p1__76787#","map__76916","taoensso.encore.reset_in_BANG_","e76917","timeout-ms","state_76932","state_val_76933","inst_76920","inst_76923","inst_76922","statearr-76936","statearr-76937","statearr-76938","inst_76927","statearr-76939","statearr-76940","inst_76930","statearr-76945","e76947","statearr-76949","statearr-76950","statearr-76953","e76954","cb-fn*","e76959","instance-handle","have-handle?","connect-fn","retry-fn","retry-count*","cljs.core.swap_BANG_","cljs.core/inc","backoff-ms","udt-next-reconnect","p1__76789#","ws-ev","e76966","cljs.core.js__GT_clj","p1__76790#","vec__76974","cb-fn","last-ws-close","p1__76795#","p1__76796#","?socket","e76997","taoensso.encore/merge-url-with-query-string","old-socket","state_77068","state_val_77069","inst_77041","statearr-77070","statearr-77072","inst_77021","inst_77022","statearr-77073","statearr-77074","statearr-77075","statearr-77078","inst_77066","inst_77017","inst_77019","statearr-77080","statearr-77084","inst_77025","inst_77026","statearr-77087","statearr-77088","inst_77037","statearr-77090","statearr-77092","inst_77028","inst_77029","inst_77030","inst_77031","inst_77032","inst_77033","cljs.core/PersistentHashMap","inst_77034","statearr-77095","statearr-77100","e77102","statearr-77103","statearr-77105","statearr-77109","taoensso.sente/new-ChWebSocket","csrf-token","k77123","G__77134","ajax-opts","curr-xhr_","p__77136","vec__77137","G__77122","this77124","other77125","pred__77154","expr__77155","taoensso.sente/ChAjaxSocket","G__77128","G__77194","taoensso.sente/->ChAjaxSocket","taoensso.sente/map->ChAjaxSocket","p1__77116#","map__77161","G__77162","G__77163","G__77164","p__77166","map__77167","?error","?content","p1__77117#","vec__77168","content","resp-ppstr","p1__77118#","poll-fn","retry-count","p1__77119#","G__77175","G__77176","G__77177","p__77179","map__77180","p1__77120#","vec__77181","p1__77121#","taoensso.sente/new-ChAjaxSocket","k77200","G__77205","ws-chsk-opts","ajax-chsk-opts","impl_","p__77206","vec__77207","G__77199","this77201","other77202","pred__77231","expr__77232","taoensso.sente/ChAutoSocket","G__77204","G__77272","taoensso.sente/->ChAutoSocket","taoensso.sente/map->ChAutoSocket","impl","map__77253","ajax-conn!","cljs.core/remove-watch","ws-conn!","downgraded?_","cljs.core/add-watch","taoensso.sente/new-ChAutoSocket","taoensso.sente/get-chsk-url","protocol","host","path","type","G__77273","G__77275","e77274","G__77276","G__77279","taoensso.encore.path","taoensso.sente/make-channel-socket-client!","p__77320","vec__77329","map__77332","seq77288","G__77290","G__77292","?csrf-token","port","wrap-recv-evs?","taoensso.encore/exp-backoff","_deprecated-more-opts","G__77340","e77333","e77344","vec__77347","ws-url","ajax-url","win-loc","taoensso.encore/get-win-loc","z","e77352","taoensso.truss.impl/WrappedError","e77353","private-chs","buf","cljs.core.map","common-chsk-opts","auto-chsk-opts","?chsk","G__77365","chsk-state_","internal-ch","cljs.core.partial","ev-ch","cljs.core.async.merge","ev-msg-ch","vec__77375","cljs.core.async.pipe","taoensso.sente/-start-chsk-router!","server?","event-msg-handler","map__77389","trace-evs?","error-handler","simple-auto-threading?","ch-ctrl","execute1","state_77422","state_val_77423","statearr-77424","inst_77394","inst_77395","inst_77396","cljs.core.async/ioc-alts!","inst_77420","inst_77399","inst_77401","inst_77402","inst_77405","inst_77403","inst_77404","statearr-77426","statearr-77427","statearr-77428","statearr-77429","inst_77410","inst_77411","inst_77413","vec__77391","map__77408","inst_77414","statearr-77442","statearr-77445","inst_77418","statearr-77447","statearr-77448","e77453","statearr-77454","statearr-77455","statearr-77485","v","p","stop?","event-msg","e77430","G__77438","e77439","e77440","e1","e77431","eh","e2","cljs.core.async/close!","taoensso.sente/start-server-chsk-router!","p__77499","vec__77501","map__77504","seq77489","G__77491","G__77492","taoensso.sente/start-client-chsk-router!","p__77541","vec__77544","map__77547","seq77522","G__77524","G__77525","taoensso.sente/event-msg?","taoensso.sente/make-channel-socket!","taoensso.sente/start-chsk-router!","taoensso.sente/start-chsk-router-loop!","event-handler","G__77581","G__77582","taoensso.sente/set-logging-level!","taoensso.timbre/set-level!","taoensso.sente/ajax-call","taoensso.sente/default-chsk-url-fn","p__77589","map__77592","location","pathname"]],"~:used-vars",["^15",["~$taoensso.sente/-chsk-send!","~$taoensso.encore/idx-fn","~$taoensso.sente/get-chsk-url","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/keyword","~$taoensso.encore/read-edn","~$clojure.string/starts-with?","~$taoensso.sente/->EdnPacker","~$taoensso.sente/as-event","~$taoensso.sente/pack","~$taoensso.sente/chsk-state->closed","~$cljs.core/pr-sequential-writer","~$taoensso.sente/map->ChAjaxSocket","~$taoensso.sente/receive-handshake!","~$cljs.core/vector?","~$taoensso.sente/sente-version","~$clojure.string/blank?","~$cljs.core/=","~$taoensso.sente/server-event-msg?","~$taoensso.sente/chsk-destroy!","~$taoensso.sente.interfaces/sch-send!","~$cljs.core/ifn?","~$cljs.core/-assoc","~$taoensso.truss.impl/-invar-violation!","~$taoensso.sente/node-target?","~$cljs.core/-write","~$taoensso.sente/ajax-lite","~$taoensso.timbre/-log!","~$taoensso.sente/make-channel-socket!","~$cljs.core/-iterator","~$taoensso.encore/rsome","~$cljs.core/count","~$taoensso.encore/as-qname","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","~$taoensso.encore/pr-edn","~$cljs.core/Keyword","~$taoensso.sente/-chsk-disconnect!","~$taoensso.sente/event?","~$taoensso.sente/create-websocket!","~$taoensso.sente/ChWebSocket","~$cljs.core/not=","~$taoensso.sente/send-buffered-server-evs>ws-clients!","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$taoensso.sente/chsk-send!","~$cljs.core/Delay","~$cljs.core.async/put!","~$cljs.core/chunk-rest","~$cljs.core/atom","~$taoensso.sente/validate-event","~$cljs.core/-with-meta","~$cljs.core/concat","~$taoensso.encore/nat-int?","~$taoensso.sente/-chsk-reconnect!","~$taoensso.sente/ChAjaxSocket","~$taoensso.sente/-chsk-connect!","~$taoensso.sente/pull-unused-cb-fn!","~$js/taoensso.sente","~$taoensso.sente/put-server-event-msg>ch-recv!","~$taoensso.sente/make-channel-socket-server!","~$taoensso.sente/assert-event","~$cljs.core/set","~$js/taoensso","~$taoensso.sente/chsk-connect!","~$cljs.core/empty?","~$js/taoensso.sente.debug-mode?_","~$cljs.core/contains?","~$taoensso.sente/allow-origin?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$taoensso.encore/ks>=","~$taoensso.timbre/*config*","~$taoensso.encore/nblank-str?","~$cljs.core/-conj","~$cljs.core/namespace","~$taoensso.sente/start-chsk-router!","~$taoensso.sente/default-edn-packer","~$cljs.core.async.impl.dispatch/run","~$taoensso.encore/assert-min-encore-version","~$taoensso.sente/create-js-client-websocket!","~$cljs.core.async/pipe","~$taoensso.sente/assert-send-args","~$taoensso.sente/ajax-call","~$cljs.core/PersistentVector","~$cljs.core/get-in","~$cljs.core/List","~$taoensso.sente/coerce-packer","~$taoensso.encore/swap-in!","~$taoensso.sente/expected","~$cljs.core/get","~$taoensso.sente/handshake?","~$taoensso.sente/start-server-chsk-router!","~$taoensso.sente/receive-buffered-evs!","~$taoensso.sente/unpack","~$taoensso.encore/atom?","~$cljs.core/-nth","~$cljs.core.async/close!","~$taoensso.sente/next-idx!","~$taoensso.sente/-start-chsk-router!","~$cljs.core/not-empty","~$taoensso.sente/new-ChAjaxSocket","~$taoensso.encore/ajax-lite","~$taoensso.sente/default-chsk-url-fn","~$taoensso.sente/cb-error?","~$taoensso.sente/start-chsk-router-loop!","~$taoensso.encore/ms","~$taoensso.sente/chsk-send->closed!","~$taoensso.sente/EdnPacker","~$taoensso.sente/ChAutoSocket","~$taoensso.sente/->ChAutoSocket","~$cljs.core/-lookup","~$taoensso.encore/path","~$cljs.core/ex-info","~$taoensso.encore/chan?","~$cljs.core/nil-iter","~$taoensso.sente/send-buffered-server-evs>ajax-clients!","~$taoensso.sente/default-client-side-ajax-timeout-ms","~$taoensso.sente/set-logging-level!","~$taoensso.encore/encore-version","~$cljs.core/*target*","~$taoensso.encore/now-udt","~$cljs.core/next","~$taoensso.sente/swap-chsk-state!","~$taoensso.sente/->ChAjaxSocket","~$cljs.core/RecordIter","~$taoensso.encore/swapped","~$taoensso.sente/event-msg?","~$cljs.core/not","~$taoensso.encore/reset-in!","~$taoensso.sente/new-ChWebSocket","~$cljs.core/assoc","~$taoensso.sente/chsk-reconnect!","~$taoensso.timbre/set-level!","~$taoensso.sente/client-event-msg?","~$taoensso.sente/start-client-chsk-router!","~$js/require","~$taoensso.sente/new-ChAutoSocket","~$taoensso.sente/make-channel-socket-client!","~$cljs.core/merge","~$taoensso.sente/map->ChAutoSocket","~$taoensso.sente/debug-mode?_","~$taoensso.sente/IChSocket","~$js/Error","~$taoensso.sente/chsk-disconnect!","~$taoensso.sente/map->ChWebSocket","~$taoensso.sente/cb-success?","~$taoensso.sente/->ChWebSocket","~$cljs.core/boolean","~$taoensso.sente.interfaces/ring-req->server-ch-resp","~$cljs.core/type","~$taoensso.sente/cb-chan-as-fn","~$taoensso.sente/?node-npm-websocket_","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^22","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^15",[]],"~:deps-syms",["^1B","~$goog.dom.HtmlElement"]]],["^22","goog/async/freelist.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","cljs/core/async/impl/ioc_helpers.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","~$cljs.core.async.impl.protocols"]]],["^22","goog/i18n/datetimesymbols.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/labs/useragent/platform.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.labs.userAgent.util","~$goog.string"]]],["^22","taoensso/sente/interfaces.cljc"],["cf98f817d6f80d15a79f7d5c163db9aea6d3ac4d","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^X"]]],["^22","cljs/core/async.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^62","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^22","goog/timer/timer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.Promise","~$goog.events.EventTarget","~$goog.Thenable"]]],["^22","cljs/tools/reader/impl/utils.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^1E","^64"]]],["^22","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","~$goog.asserts"]]],["^22","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/string/stringformat.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^64"]]],["^22","goog/events/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^22","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^63","~$goog.object","~$goog.string.internal"]]],["^22","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^6B"]]],["^22","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>"]]],["^22","goog/useragent/useragent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^63","~$goog.reflect","^64"]]],["^22","goog/structs/prioritypool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^22","goog/async/run.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^22","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/async/workqueue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.async.FreeList"]]],["^22","goog/events/events.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^6?","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","~$goog.events.EventId","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^22","goog/promise/resolver.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6;"]]],["^22","goog/events/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6@"]]],["^22","cljs/tools/reader/edn.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","~$cljs.tools.reader.impl.errors","^G","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^64","~$goog.string.StringBuffer"]]],["^22","goog/structs/priorityqueue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.structs.Heap"]]],["^22","goog/net/xhrio.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.Timer","^6:","^6>","^6S","^6<","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^6A","^64","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^6@","~$goog.Uri","^6W","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^22","goog/promise/thenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6;"]]],["^22","taoensso/sente.cljc"],["cf98f817d6f80d15a79f7d5c163db9aea6d3ac4d","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^1E","^1@","^X","^T","^1>"]]],["^22","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","cljs/tools/reader/impl/inspect.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A"]]],["^22","cljs/tools/reader.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^G","^72","^73","^71","^6:","^64","^75"]]],["^22","taoensso/timbre.cljc"],["3e3c831bd3add911782b6db41dc04e62be6a0cbc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^1E","~$goog.i18n.DateTimeFormat","^X","~$taoensso.timbre.appenders.core"]]],["^22","goog/net/wrapperxmlhttpfactory.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7B","^7C"]]],["^22","goog/events/eventtarget.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.Disposable","^6>","~$goog.events","~$goog.events.Event","^6U","^6V","^6A","^6X","^6Y","^6["]]],["^22","goog/disposable/disposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.disposable.IDisposable"]]],["^22","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>"]]],["^22","taoensso/encore.cljc"],["4b603a620dcf2c2e49020f12f88ed76d04549837","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^1E","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^6A","^6:","^64","~$goog.string.format","^75","^7G","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^7;","^7:","~$taoensso.truss"]]],["^22","goog/structs/set.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7>","~$goog.structs.Collection","^7?","~$goog.iter.Iterator"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^22","taoensso/timbre/appenders/core.cljc"],["3e3c831bd3add911782b6db41dc04e62be6a0cbc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^1E","^X"]]],["^22","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","^6L"]]],["^22","goog/events/listener.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6[","^6U"]]],["^22","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.fs.blob","^6C","~$goog.html.SafeScript","~$goog.html.trustedtypes","^6E","^6F","^6G","^6H"]]],["^22","goog/debug/tracer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^6>","~$goog.debug","~$goog.debug.Logger","~$goog.iter","^79","^7?","~$goog.structs.SimplePool"]]],["^22","cljs/core/async/impl/channels.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^62","^68","^66"]]],["^22","goog/events/listenermap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^70","^6A","^6X","^6U","^6["]]],["^22","goog/events/eventid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","~$taoensso.truss.impl"]]],["^22","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/events/eventwrapper.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^22","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","cljs/core/async/impl/dispatch.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^66","^6P"]]],["^22","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^6>","~$goog.html.SafeUrl","^6G","^6H","^6B"]]],["^22","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^7V","~$goog.html.SafeStyle","^83","^6D","~$goog.html.uncheckedconversions","^6G","^6B"]]],["^22","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^7J"]]],["^22","cljs/core/async/impl/protocols.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A"]]],["^22","goog/net/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7S","~$goog.iter.StopIteration"]]],["^22","goog/net/xhriopool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7N","~$goog.structs.PriorityPool","^7?"]]],["^22","goog/date/date.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.i18n.DateTimeSymbols","^64"]]],["^22","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^6>","~$goog.dom.TagName","~$goog.dom.tags","^7V","^87","~$goog.html.SafeStyleSheet","^83","^6D","^7W","^6E","^6F","^6I","^6A","^6G","^6H","^6B"]]],["^22","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6A"]]],["^22","goog/math/size.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/structs/queue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:"]]],["^22","goog/labs/useragent/engine.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^63","^64"]]],["^22","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:"]]],["^22","cljs/reader.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^6A","^74","^7L","^75"]]],["^22","goog/dom/dom.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^6>","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^8<","~$goog.dom.safe","^86","^88","~$goog.math.Coordinate","~$goog.math.Size","^6A","^64","^6G","~$goog.string.Unicode","^6@"]]],["^22","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.debug.Error","^8@"]]],["^22","cljs/core/async/impl/buffers.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^62"]]],["^22","goog/i18n/timezone.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","~$goog.date.DateLike","^6A","^64"]]],["^22","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^6>","^64","^7>","^7?","^7@","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^22","goog/net/errorcode.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/debug/errorhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7F","^6>","^7X","~$goog.debug.EntryPointMonitor","^8E","~$goog.debug.Trace"]]],["^22","goog/disposable/idisposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/promise/promise.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6=","^6>","^6R","~$goog.async.run","^6Q","^8E","~$goog.promise.Resolver"]]],["^22","cljs/core/async/impl/timers.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^62","^65","^68"]]],["^22","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",[]]],["^22","goog/json/hybrid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.json"]]],["^22","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^6A"]]],["^22","cljs/tools/reader/impl/errors.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^G","^1E","~$cljs.tools.reader.impl.inspect"]]],["^22","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^64","^75"]]],["^22","goog/structs/pool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7F","~$goog.structs.Queue","~$goog.structs.Set"]]],["^22","goog/net/httpstatus.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/i18n/datetimeformat.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.date","^8;","~$goog.i18n.TimeZone","^64","~$goog.i18n.DateTimeSymbolsType"]]],["^22","goog/structs/heap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^6A","~$goog.structs.Node"]]],["^22","goog/debug/entrypointregistry.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>"]]],["^22","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^8A","^88","^6G","^6B"]]],["^22","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6B"]]],["^22","goog/debug/debug.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","~$goog.debug.errorcontext","^6@"]]],["^22","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/math/coordinate.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.math"]]],["^22","goog/debug/errorcontext.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","cljs/tools/reader/reader_types.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^72","^64","^75"]]],["^22","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6:","^6>","^85","^8V"]]],["^22","goog/async/nexttick.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6S","~$goog.dom","^8<","^85","^6I","^6J"]]],["^22","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","^86","^7V","^87","^8>","^83","^6D","^6G","^6B","^6E"]]],["^22","goog/debug/logger.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7X","^79","~$goog.log.Level","~$goog.log.LogRecord","~$goog.log.Logger"]]],["^22","goog/events/event.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7F","^6X"]]],["^22","cljs/tools/reader/impl/commons.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A","^71","^G","^72"]]],["^22","goog/events/eventhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7F","^7G","^6A","^7H","^6X","^6<","^6Z"]]],["^22","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","~$goog.math.Long","~$goog.math.Integer","^64","^6A","^6:","^7A","^75"]]],["^22","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6G","^6H","^7W","^6>"]]],["^22","goog/log/log.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","^7X"]]],["^22","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6G","^87","^6H","^6:","^6A","^6>","^6B"]]],["^22","goog/structs/collection.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/events/browserevent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7X","^6?","^7H","~$goog.events.EventType","^6L","^6@"]]],["^22","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6L"]]],["^22","goog/structs/node.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/structs/simplepool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7F"]]],["^22","goog/dom/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6@"]]],["^22","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^1A"]]],["^22","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","^64"]]],["^22","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","^6H"]]],["^22","goog/json/json.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]],["^22","goog/events/listenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6X","^6Y"]]],["^22","goog/net/xmlhttpfactory.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^7B"]]],["^22","goog/net/xmlhttp.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B","^6>","~$goog.net.WrapperXmlHttpFactory","^7C","^7B"]]],["^22","goog/net/xhrlike.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5Y",["^ ","^5Z",null,"^5[",["^15",[]],"^60",["^1B"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer.clj",1617405125000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/cljs/core/async/macros.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/cljs/core/async/impl/ioc_macros.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/dispatch.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1617405356000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/timers.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/utils.clj",1617405125000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/reader.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1617405354000,"jar:file:/home/andreas/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1617405354000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/ast.clj",1617405125000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/com/taoensso/timbre/5.1.2/timbre-5.1.2.jar!/taoensso/timbre/appenders/core.cljc",1617405356000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1617405354000,"jar:file:/home/andreas/.m2/repository/com/taoensso/encore/3.19.0/encore-3.19.0.jar!/taoensso/encore.cljc",1618721135000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/env.clj",1617405125000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/exec/threadpool.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/mutex.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/concurrent.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/cljs/core/async.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/protocols.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/buffers.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/com/taoensso/sente/1.16.2/sente-1.16.2.jar!/taoensso/sente/interfaces.cljc",1618191591000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1617405124000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/cljs/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1617405356000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm.clj",1617405124000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/com/taoensso/sente/1.16.2/sente-1.16.2.jar!/taoensso/sente.cljc",1618191591000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/ioc_macros.clj",1619500487000,"jar:file:/home/andreas/.m2/repository/com/taoensso/timbre/5.1.2/timbre-5.1.2.jar!/taoensso/timbre.cljc",1617405356000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/edn.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/channels.clj",1619500487000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","^8","taoensso/sente.cljc","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O"],"~:shadow/protocol-prefixes",["^15",["taoensso$sente$IChSocket$"]],"^P",["^ ","^Q","^R","^S","^T","^U","^V","^W","^X","^Y","^V","^Z","^X","^[","^X","^10","^T","^11","^T","^12","^T","^13","^T"],"^14",["^15",[]],"^16",["^ "],"^17","^R","^1:",null,"^1;",["^ ","^1<","^T","^1=","^1>","^1?","^1@","^1A","^1A","^1B","^1B","^1>","^1>","^1@","^1@","^1C","^X","^T","^T","^1D","^1E","^1E","^1E","^X","^X"],"^1F",["^15",["^1G","^1H"]],"~:shadow/js-access-global",["^15",["require","Error"]],"^1I",["^ ","^1J","^1@","^1K","^1@","^1L","^1@","^1M","^1@","^1N","^X","^1O","^X","^1P","^X","^1Q","^X"],"~:defs",["^ ","~$chsk-state->closed",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",950,"^:",11,"^;",950,"^<",29,"~:private",true,"~:arglists",["^1U",["~$quote",["^1U",[["~$state","~$reason"]]]]]],"^:K",true,"^17","^2H","^8","taoensso/sente.cljc","^<",29,"~:method-params",["^1U",[["^:N","^:O"]]],"~:protocol-impl",null,"~:arglists-meta",["^1U",[null,null]],"^:",4,"~:variadic?",false,"^9",950,"~:ret-tag",["^15",[null,"~$clj","~$any"]],"^;",950,"~:max-fixed-arity",2,"~:fn-var",true,"^:L",["^1U",["^:M",["^1U",[["^:N","^:O"]]]]]],"~$assert-send-args",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",912,"^:",11,"^;",912,"^<",27,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$x","~$?timeout-ms","~$?cb"]]]]]],"^:K",true,"^17","^4;","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["~$x","^:Z","^:["]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",912,"^:T","~$clj-nil","^;",912,"^:W",3,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x","^:Z","^:["]]]]]],"~$map->ChAjaxSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"~:internal-ctor",true,"~:factory","~:map","^9",1334,"^;",1334,"^:L",["^1U",["^:M",["^1U",[["~$G__77128"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"^17","^2J","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^;5"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^;2",true,"^:S",false,"^;3","^;4","^9",1334,"^:T","^3K","^;",1334,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;5"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"~$sente-version",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",113,"^:",6,"^;",113,"^<",19],"^17","^2M","^8","taoensso/sente.cljc","^<",19,"^:",1,"^9",113,"^;",113,"~:tag","~$cljs.core/IVector","^7","Useful for identifying client/server mismatch"],"~$->EdnPacker",["^ ","^:J",null,"^5",["^ ","~:protocols",["^15",["~$taoensso.sente.interfaces/IPacker"]],"^8","taoensso/sente.cljc","^<",19,"^:",10,"^;3","~:positional","^9",240,"^;",240,"^:L",["^1U",["^:M",["^1U",[[]]]]],"~:skip-protocol-flag",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"^;:",["^15",["^;;"]],"^17","^2E","^8","taoensso/sente.cljc","^<",19,"^:P",["^1U",[[]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^;3","^;<","^9",240,"^:T","^4U","^;",240,"^:W",0,"^:X",true,"^:L",["^1U",["^:M",["^1U",[[]]]]],"^;=",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"~$as-event",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",149,"^:",7,"^;",149,"^<",15,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"^17","^2F","^8","taoensso/sente.cljc","^<",15,"^:P",["^1U",[["~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",149,"^:T",["^15",[null,"^;8"]],"^;",149,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"~$server-event-msg?",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",166,"^:",7,"^;",166,"^<",24,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"^17","^2P","^8","taoensso/sente.cljc","^<",24,"^:P",["^1U",[["~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",166,"^:T","~$boolean","^;",166,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"~$send-buffered-server-evs>ws-clients!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",817,"^:",8,"^;",817,"^<",44,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$conns_","~$uid","~$buffered-evs-pstr","~$upd-conn!"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"^:K",true,"^17","^3>","^8","taoensso/sente.cljc","^<",44,"^:P",["^1U",[["^;B","^;C","^;D","^;E"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",817,"^:T","^;0","^;",817,"^:W",4,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;B","^;C","^;D","^;E"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"~$pack",["^ ","^:J",null,"^5",["^ ","^:K",true,"^8","taoensso/sente.cljc","^<",12,"~:top-fn",["^ ","^:S",false,"~:fixed-arity",3,"^:W",3,"^:P",[["~$packer","^:U"],["^;I","^:U","~$?cb-uuid"]],"^:L",["^1U",[["^;I","^:U"],["^;I","^:U","^;J"]]],"^:R",["^1U",[null,null]]],"^:",8,"^9",224,"^;",224,"^:L",["^1U",["^:M",["^1U",[["^;I","^:U"],["^;I","^:U","^;J"]]]]],"^7","clj->prefixed-pstr"],"^:K",true,"^17","^2G","^8","taoensso/sente.cljc","^<",12,"^;G",["^ ","^:S",false,"^;H",3,"^:W",3,"^:P",[["^;I","^:U"],["^;I","^:U","^;J"]],"^:L",["^1U",[["^;I","^:U"],["^;I","^:U","^;J"]]],"^:R",["^1U",[null,null]]],"^:P",[["^;I","^:U"],["^;I","^:U","^;J"]],"^:Q",null,"^;H",3,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"~:methods",[["^ ","^;H",2,"^:S",false,"^;7","~$string"],["^ ","^;H",3,"^:S",false,"^;7","^;L"]],"^9",224,"^;",224,"^:W",3,"^:X",true,"^:L",["^1U",[["^;I","^:U"],["^;I","^:U","^;J"]]],"^7","clj->prefixed-pstr"],"~$chsk-send!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",898,"^:",10,"^;",898,"^<",20,"^:L",["^1U",["^:M",["^1U",[["~$chsk","~$ev"],["^;N","^;O","^:Z","^:["],["^;N","^;O","~$opts"]]]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success.","^;G",["^ ","^:S",false,"^;H",4,"^:W",4,"^:P",[["^;N","^;O"],["^;N","^;O","^:Z","^:["],["^;N","^;O","^;P"]],"^:L",["^1U",[["^;N","^;O"],["^;N","^;O","^:Z","^:["],["^;N","^;O","^;P"]]],"^:R",["^1U",[null,null,null]]]],"^17","^3A","^8","taoensso/sente.cljc","^<",20,"^;G",["^ ","^:S",false,"^;H",4,"^:W",4,"^:P",[["^;N","^;O"],["^;N","^;O","^:Z","^:["],["^;N","^;O","^;P"]],"^:L",["^1U",[["^;N","^;O"],["^;N","^;O","^:Z","^:["],["^;N","^;O","^;P"]]],"^:R",["^1U",[null,null,null]]],"^:P",[["^;N","^;O"],["^;N","^;O","^:Z","^:["],["^;N","^;O","^;P"]],"^:Q",null,"^;H",4,"^:R",["^1U",[null,null,null]],"^:",4,"^:S",false,"^;K",[["^ ","^;H",2,"^:S",false,"^;7","^:V"],["^ ","^;H",4,"^:S",false,"^;7","^:V"],["^ ","^;H",3,"^:S",false,"^;7","^:V"]],"^9",898,"^;",898,"^:W",4,"^:X",true,"^:L",["^1U",[["^;N","^;O"],["^;N","^;O","^:Z","^:["],["^;N","^;O","^;P"]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success."],"~$validate-event",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",127,"^:",7,"^;",127,"^<",21,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"^17","^3F","^8","taoensso/sente.cljc","^<",21,"^:P",["^1U",[["~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",127,"^:T",["^15",["~$cljs.core/IMap","^;0"]],"^;",127,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"~$event?",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",148,"^:",7,"^;",148,"^<",13,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"^17","^3:","^8","taoensso/sente.cljc","^<",13,"^:P",["^1U",[["~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",148,"^:T","^;@","^;",148,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"~$event-msg?",["^ ","^17","^5<","^8","taoensso/sente.cljc","^9",1803,"^:",1,"^;",1803,"^<",16,"^5",["^ ","^8","taoensso/sente.cljc","^9",1803,"^:",6,"^;",1803,"^<",16]],"~$make-channel-socket!",["^ ","^17","^2Z","^8","taoensso/sente.cljc","^9",1805,"^:",1,"^;",1805,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1805,"^:",6,"^;",1805,"^<",26],"^7","Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details."],"~$create-websocket!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1101,"^:",8,"^;",1101,"^<",25,"^:K",true,"^:L",["^1U",["^:M",["^1U",[[["^ ","^1W","^;P","~:keys",["~$onerror-fn","~$onmessage-fn","~$onclose-fn","~$uri-str","~$headers"]]]]]]]],"^:K",true,"^17","^3;","^8","taoensso/sente.cljc","^<",25,"^:P",["^1U",[["~$p__76782"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",1101,"^:T",["^15",["~$WebSocket","^;0"]],"^;",1101,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[[["^ ","^1W","^;P","^;W",["^;X","^;Y","^;Z","^;[","^<0"]]]]]]]],"~$make-channel-socket-server!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",315,"^:",7,"^;",315,"^<",34,"^:L",["^1U",["^:M",["^1U",[["~$web-server-ch-adapter","~$&",[["^ ","^;W",["~$recv-buf-or-n","~$ws-kalive-ms","~$lp-timeout-ms","~$send-buf-ms-ajax","~$send-buf-ms-ws","~$user-id-fn","~$bad-csrf-fn","~$bad-origin-fn","~$csrf-token-fn","~$handshake-data-fn","^;I","~$allowed-origins","~$authorized?-fn","~$unauthorized-fn","~$?unauthorized-fn"],"~:or",["^ ","^<6",["^1U",["~$enc/ms","~:secs",25]],"^<9",30,"^<?","~:all","^<7",["^1U",["^<D","^<E",20]],"^<=",["^1U",["~$fn",["~$ring-req"],["^1U",["~$or",["^1U",["~:anti-forgery-token","^<H"]],["^1U",["~$get-in","^<H",["~:session","~:csrf-token"]]],["^1U",["^<K","^<H",["^<L","~:ring.middleware.anti-forgery/anti-forgery-token"]]],["^1U",["^<K","^<H",["^<L","__anti-forgery-token"]]]]]]],"^;I","~:edn","^<A",["^1U",["^<G",["~$_ring-req"],["^ ","~:status",401,"~:body","Unauthorized request"]]],"^<8",100,"^<<",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Unauthorized origin"]]],"^<>",["^1U",["^<G",["^<H"],null]],"^<:",["^1U",["^<G",["^<H"],["^1U",["^<K","^<H",["^<L","~:uid"]]]]],"^<5",["^1U",["~$async/sliding-buffer",1000]],"^<;",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Bad CSRF token"]]]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n    :?unauthorized-fn  ; An alternative API to `authorized?-fn`+`unauthorized-fn` pair.\n                       ; ?(fn [ring-req)) -> <?rejection-resp>. I.e. when return value\n                       ; is non-nil, connection requests will be rejected with that\n                       ; non-nil value.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).","^;G",["^ ","^:S",true,"^;H",1,"^:W",1,"^:P",[["^1U",["^<4",[["^ ","^;W",["^<5","^<6","^<7","^<8","^<9","^<:","^<;","^<<","^<=","^<>","^;I","^<?","^<@","^<A","^<B"],"^<C",["^ ","^<6",["^1U",["^<D","^<E",25]],"^<9",30,"^<?","^<F","^<7",["^1U",["^<D","^<E",20]],"^<=",["^1U",["^<G",["^<H"],["^1U",["^<I",["^1U",["^<J","^<H"]],["^1U",["^<K","^<H",["^<L","^<M"]]],["^1U",["^<K","^<H",["^<L","^<N"]]],["^1U",["^<K","^<H",["^<L","__anti-forgery-token"]]]]]]],"^;I","^<O","^<A",["^1U",["^<G",["^<P"],["^ ","^<Q",401,"^<R","Unauthorized request"]]],"^<8",100,"^<<",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Unauthorized origin"]]],"^<>",["^1U",["^<G",["^<H"],null]],"^<:",["^1U",["^<G",["^<H"],["^1U",["^<K","^<H",["^<L","^<S"]]]]],"^<5",["^1U",["^<T",1000]],"^<;",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Bad CSRF token"]]]]]]]]],"^:L",["^1U",[["^<4","~$&",[["^ ","^;W",["^<5","^<6","^<7","^<8","^<9","^<:","^<;","^<<","^<=","^<>","^;I","^<?","^<@","^<A","^<B"],"^<C",["^ ","^<6",["^1U",["^<D","^<E",25]],"^<9",30,"^<?","^<F","^<7",["^1U",["^<D","^<E",20]],"^<=",["^1U",["^<G",["^<H"],["^1U",["^<I",["^1U",["^<J","^<H"]],["^1U",["^<K","^<H",["^<L","^<M"]]],["^1U",["^<K","^<H",["^<L","^<N"]]],["^1U",["^<K","^<H",["^<L","__anti-forgery-token"]]]]]]],"^;I","^<O","^<A",["^1U",["^<G",["^<P"],["^ ","^<Q",401,"^<R","Unauthorized request"]]],"^<8",100,"^<<",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Unauthorized origin"]]],"^<>",["^1U",["^<G",["^<H"],null]],"^<:",["^1U",["^<G",["^<H"],["^1U",["^<K","^<H",["^<L","^<S"]]]]],"^<5",["^1U",["^<T",1000]],"^<;",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Bad CSRF token"]]]]]]]]],"^:R",["^1U",[null]]]],"^17","^3P","^8","taoensso/sente.cljc","^<",34,"^;G",["^ ","^:S",true,"^;H",1,"^:W",1,"^:P",[["^1U",["^<4",[["^ ","^;W",["^<5","^<6","^<7","^<8","^<9","^<:","^<;","^<<","^<=","^<>","^;I","^<?","^<@","^<A","^<B"],"^<C",["^ ","^<6",["^1U",["^<D","^<E",25]],"^<9",30,"^<?","^<F","^<7",["^1U",["^<D","^<E",20]],"^<=",["^1U",["^<G",["^<H"],["^1U",["^<I",["^1U",["^<J","^<H"]],["^1U",["^<K","^<H",["^<L","^<M"]]],["^1U",["^<K","^<H",["^<L","^<N"]]],["^1U",["^<K","^<H",["^<L","__anti-forgery-token"]]]]]]],"^;I","^<O","^<A",["^1U",["^<G",["^<P"],["^ ","^<Q",401,"^<R","Unauthorized request"]]],"^<8",100,"^<<",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Unauthorized origin"]]],"^<>",["^1U",["^<G",["^<H"],null]],"^<:",["^1U",["^<G",["^<H"],["^1U",["^<K","^<H",["^<L","^<S"]]]]],"^<5",["^1U",["^<T",1000]],"^<;",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Bad CSRF token"]]]]]]]]],"^:L",["^1U",[["^<4","~$&",[["^ ","^;W",["^<5","^<6","^<7","^<8","^<9","^<:","^<;","^<<","^<=","^<>","^;I","^<?","^<@","^<A","^<B"],"^<C",["^ ","^<6",["^1U",["^<D","^<E",25]],"^<9",30,"^<?","^<F","^<7",["^1U",["^<D","^<E",20]],"^<=",["^1U",["^<G",["^<H"],["^1U",["^<I",["^1U",["^<J","^<H"]],["^1U",["^<K","^<H",["^<L","^<M"]]],["^1U",["^<K","^<H",["^<L","^<N"]]],["^1U",["^<K","^<H",["^<L","__anti-forgery-token"]]]]]]],"^;I","^<O","^<A",["^1U",["^<G",["^<P"],["^ ","^<Q",401,"^<R","Unauthorized request"]]],"^<8",100,"^<<",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Unauthorized origin"]]],"^<>",["^1U",["^<G",["^<H"],null]],"^<:",["^1U",["^<G",["^<H"],["^1U",["^<K","^<H",["^<L","^<S"]]]]],"^<5",["^1U",["^<T",1000]],"^<;",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Bad CSRF token"]]]]]]]]],"^:R",["^1U",[null]]],"^:P",[["^1U",["^<4",[["^ ","^;W",["^<5","^<6","^<7","^<8","^<9","^<:","^<;","^<<","^<=","^<>","^;I","^<?","^<@","^<A","^<B"],"^<C",["^ ","^<6",["^1U",["^<D","^<E",25]],"^<9",30,"^<?","^<F","^<7",["^1U",["^<D","^<E",20]],"^<=",["^1U",["^<G",["^<H"],["^1U",["^<I",["^1U",["^<J","^<H"]],["^1U",["^<K","^<H",["^<L","^<M"]]],["^1U",["^<K","^<H",["^<L","^<N"]]],["^1U",["^<K","^<H",["^<L","__anti-forgery-token"]]]]]]],"^;I","^<O","^<A",["^1U",["^<G",["^<P"],["^ ","^<Q",401,"^<R","Unauthorized request"]]],"^<8",100,"^<<",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Unauthorized origin"]]],"^<>",["^1U",["^<G",["^<H"],null]],"^<:",["^1U",["^<G",["^<H"],["^1U",["^<K","^<H",["^<L","^<S"]]]]],"^<5",["^1U",["^<T",1000]],"^<;",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Bad CSRF token"]]]]]]]]],"^:Q",null,"^;H",1,"^:R",["^1U",[null]],"^:",1,"^:S",true,"^;K",[["^ ","^;H",1,"^:S",true,"^;7","^;R"]],"^9",315,"^:T","^:V","^;",315,"^:W",1,"^:X",true,"^:L",["^1U",[["^<4","~$&",[["^ ","^;W",["^<5","^<6","^<7","^<8","^<9","^<:","^<;","^<<","^<=","^<>","^;I","^<?","^<@","^<A","^<B"],"^<C",["^ ","^<6",["^1U",["^<D","^<E",25]],"^<9",30,"^<?","^<F","^<7",["^1U",["^<D","^<E",20]],"^<=",["^1U",["^<G",["^<H"],["^1U",["^<I",["^1U",["^<J","^<H"]],["^1U",["^<K","^<H",["^<L","^<M"]]],["^1U",["^<K","^<H",["^<L","^<N"]]],["^1U",["^<K","^<H",["^<L","__anti-forgery-token"]]]]]]],"^;I","^<O","^<A",["^1U",["^<G",["^<P"],["^ ","^<Q",401,"^<R","Unauthorized request"]]],"^<8",100,"^<<",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Unauthorized origin"]]],"^<>",["^1U",["^<G",["^<H"],null]],"^<:",["^1U",["^<G",["^<H"],["^1U",["^<K","^<H",["^<L","^<S"]]]]],"^<5",["^1U",["^<T",1000]],"^<;",["^1U",["^<G",["^<P"],["^ ","^<Q",403,"^<R","Bad CSRF token"]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n    :?unauthorized-fn  ; An alternative API to `authorized?-fn`+`unauthorized-fn` pair.\n                       ; ?(fn [ring-req)) -> <?rejection-resp>. I.e. when return value\n                       ; is non-nil, connection requests will be rejected with that\n                       ; non-nil value.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."],"~$node-target?",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",116,"^:",25,"^;",116,"^<",37,"^:K",true],"^:K",true,"^17","^2V","^8","taoensso/sente.cljc","^<",37,"^:",10,"^9",116,"^;",116,"^;7","^;@"],"~$ajax-lite",["^ ","^17","^2X","^8","taoensso/sente.cljc","^9",884,"^:",10,"^;",884,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",884,"^:",15,"^;",884,"^<",24],"^7","Alias of `taoensso.encore/ajax-lite`"],"~$get-chsk-url",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1572,"^:",11,"^;",1572,"^<",23,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$protocol","~$host","~$path","~$type"]]]]]],"^:K",true,"^17","^2@","^8","taoensso/sente.cljc","^<",23,"^:P",["^1U",[["^<X","^<Y","^<Z","^<["]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",1572,"^:T","^;L","^;",1572,"^:W",4,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^<X","^<Y","^<Z","^<["]]]]]],"~$-chsk-send!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",890,"^:",7,"^;",890,"^<",18,"~:protocol","^5K","^7",null,"^:L",["^1U",["^:M",["^1U",[["^;N","^;O","^;P"]]]]]],"^=1","^5K","^17","^2>","^8","taoensso/sente.cljc","^<",18,"^:P",["^1U",[["^;N","^;O","^;P"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",886,"^:T","^:V","^;",890,"^:W",3,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;N","^;O","^;P"]]]]],"^7",null],"~$-chsk-reconnect!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",889,"^:",7,"^;",889,"^<",23,"^=1","^5K","^7",null,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]]],"^=1","^5K","^17","^3J","^8","taoensso/sente.cljc","^<",23,"^:P",["^1U",[["^;N"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",886,"^:T","^:V","^;",889,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]],"^7",null],"~$receive-handshake!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",994,"^:",11,"^;",994,"^<",29,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$chsk-type","^;N","^:U"]]]]]],"^:K",true,"^17","^2K","^8","taoensso/sente.cljc","^<",29,"^:P",["^1U",[["^=4","^;N","^:U"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",994,"^:T","^38","^;",994,"^:W",3,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^=4","^;N","^:U"]]]]]],"~$start-client-chsk-router!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1787,"^:",7,"^;",1787,"^<",32,"^:L",["^1U",["^:M",["^1U",[["~$ch-recv","~$event-msg-handler","~$&",[["^ ","^1W","^;P","^;W",["~$trace-evs?","~$error-handler"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.","^;G",["^ ","^:S",true,"^;H",2,"^:W",2,"^:P",[["^1U",["^=6","^=7",[["^ ","^1W","^;P","^;W",["^=8","^=9"]]]]]],"^:L",["^1U",[["^=6","^=7","~$&",[["^ ","^1W","^;P","^;W",["^=8","^=9"]]]]]],"^:R",["^1U",[null]]]],"^17","^5D","^8","taoensso/sente.cljc","^<",32,"^;G",["^ ","^:S",true,"^;H",2,"^:W",2,"^:P",[["^1U",["^=6","^=7",[["^ ","^1W","^;P","^;W",["^=8","^=9"]]]]]],"^:L",["^1U",[["^=6","^=7","~$&",[["^ ","^1W","^;P","^;W",["^=8","^=9"]]]]]],"^:R",["^1U",[null]]],"^:P",[["^1U",["^=6","^=7",[["^ ","^1W","^;P","^;W",["^=8","^=9"]]]]]],"^:Q",null,"^;H",2,"^:R",["^1U",[null]],"^:",1,"^:S",true,"^;K",[["^ ","^;H",2,"^:S",true,"^;7","~$function"]],"^9",1787,"^:T","^:V","^;",1787,"^:W",2,"^:X",true,"^:L",["^1U",[["^=6","^=7","~$&",[["^ ","^1W","^;P","^;W",["^=8","^=9"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate."],"~$chsk-destroy!",["^ ","^17","^2Q","^8","taoensso/sente.cljc","^9",896,"^:",6,"^;",896,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",896,"^:",11,"^;",896,"^<",24],"^7","Deprecated"],"~$->ChAjaxSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^;2",true,"^;3","^;<","^9",1334,"^;",1334,"^:L",["^1U",["^:M",["^1U",[["~$client-id","~$chs","~$params","^;I","~$url","~$state_","~$instance-handle_","~$ever-opened?_","~$backoff-ms-fn","~$ajax-opts","~$curr-xhr_"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"^17","^59","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^==","^=>","^=?","^;I","^=@","^=A","^=B","^=C","^=D","^=E","^=F"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^;2",true,"^:S",false,"^;3","^;<","^9",1334,"^:T","^3K","^;",1334,"^:W",11,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^==","^=>","^=?","^;I","^=@","^=A","^=B","^=C","^=D","^=E","^=F"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"~$send-buffered-server-evs>ajax-clients!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",826,"^:",8,"^;",826,"^<",46,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^;B","^;C","^;D"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"^:K",true,"^17","^51","^8","taoensso/sente.cljc","^<",46,"^:P",["^1U",[["^;B","^;C","^;D"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",826,"^:T",["^15",["^:V","^;0"]],"^;",826,"^:W",3,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;B","^;C","^;D"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"~$default-client-side-ajax-timeout-ms",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1327,"^:",16,"^;",1327,"^<",51,"^:K",true],"^:K",true,"^17","^52","^8","taoensso/sente.cljc","^<",51,"^:",1,"^9",1327,"^;",1327,"^;7","^:V","^7","We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."],"~$ChAjaxSocket",["^ ","~:num-fields",11,"^;:",["^15",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^5K","^;R","~$cljs.core/ILookup"]],"^17","^3K","^8","taoensso/sente.cljc","^<",27,"~:type",true,"^:",15,"^;2",true,"^9",1334,"~:record",true,"^;",1334,"^;7","^=:","^;=",["^15",["^=K","^=L","^=M","^=N","^=O","^=P","^=Q","^=R","^=S","^=T","^=U","^=V","^=W","^;R","^=X"]]],"~$set-logging-level!",["^ ","^17","^53","^8","taoensso/sente.cljc","^9",1838,"^:",3,"^;",1838,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1838,"^:",8,"^;",1838,"^<",26],"^7","DEPRECATED. Please use `timbre/set-level!` instead"],"~$->ChAutoSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^;2",true,"^;3","^;<","^9",1506,"^;",1506,"^:L",["^1U",["^:M",["^1U",[["~$ws-chsk-opts","~$ajax-chsk-opts","^=A","~$impl_"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"^17","^4W","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^>1","^>2","^=A","^>3"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^;2",true,"^:S",false,"^;3","^;<","^9",1506,"^:T","^4V","^;",1506,"^:W",4,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^>1","^>2","^=A","^>3"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"~$create-js-client-websocket!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1085,"^:",11,"^;",1085,"^<",38,"^:K",true,"^:L",["^1U",["^:M",["^1U",[[["^ ","^1W","^;P","^;W",["^;X","^;Y","^;Z","^;[","^<0"]]]]]]]],"^:K",true,"^17","^49","^8","taoensso/sente.cljc","^<",38,"^:P",["^1U",[["~$p__76757"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",1085,"^:T",["^15",["^<2","^;0"]],"^;",1085,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[[["^ ","^1W","^;P","^;W",["^;X","^;Y","^;Z","^;[","^<0"]]]]]]]],"~$-chsk-disconnect!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",888,"^:",7,"^;",888,"^<",24,"^=1","^5K","^7",null,"^:L",["^1U",["^:M",["^1U",[["^;N","^:O"]]]]]],"^=1","^5K","^17","^39","^8","taoensso/sente.cljc","^<",24,"^:P",["^1U",[["^;N","^:O"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",886,"^:T","^:V","^;",888,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;N","^:O"]]]]],"^7",null],"~$start-chsk-router!",["^ ","^17","^45","^8","taoensso/sente.cljc","^9",1812,"^:",1,"^;",1812,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",1812,"^:",6,"^;",1812,"^<",24],"^7","Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details."],"~$put-server-event-msg>ch-recv!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",185,"^:",8,"^;",185,"^<",37,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^=6",["^ ","^1W","~$ev-msg","^;W",["~$event","~$?reply-fn"]]]]]]],"^7","All server `event-msg`s go through this"],"^:K",true,"^17","^3O","^8","taoensso/sente.cljc","^<",37,"^:P",["^1U",[["^=6","~$p__75719"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",185,"^:T",["^15",["^;@","^:V","^;0"]],"^;",185,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^=6",["^ ","^1W","^>9","^;W",["^>:","^>;"]]]]]]],"^7","All server `event-msg`s go through this"],"~$coerce-packer",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",247,"^:",8,"^;",247,"^<",21,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"^:K",true,"^17","^4@","^8","taoensso/sente.cljc","^<",21,"^:P",["^1U",[["~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",247,"^:T",["^15",[null,"^:V","^4U","^;0"]],"^;",247,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"~$-chsk-connect!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",887,"^:",7,"^;",887,"^<",21,"^=1","^5K","^7",null,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]]],"^=1","^5K","^17","^3L","^8","taoensso/sente.cljc","^<",21,"^:P",["^1U",[["^;N"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",886,"^:T","^:V","^;",887,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]],"^7",null],"~$default-edn-packer",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",245,"^:",16,"^;",245,"^<",34,"^:K",true],"^:K",true,"^17","^46","^8","taoensso/sente.cljc","^<",34,"^:",1,"^9",245,"^;",245,"^;7","^4U"],"~$allow-origin?",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",274,"^:",7,"^;",274,"^<",20,"^:L",["^1U",["^:M",["^1U",[["^<?","^<H"]]]]],"^7","Alpha, subject to change.\n  Returns true iff given Ring request is allowed by `allowed-origins`.\n  `allowed-origins` may be `:all` or #{<origin>}."],"^17","^3X","^8","taoensso/sente.cljc","^<",20,"^:P",["^1U",[["^<?","^<H"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",274,"^:T","^;@","^;",274,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^<?","^<H"]]]]],"^7","Alpha, subject to change.\n  Returns true iff given Ring request is allowed by `allowed-origins`.\n  `allowed-origins` may be `:all` or #{<origin>}."],"~$new-ChAjaxSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1496,"^:",11,"^;",1496,"^<",27,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^;P","~$csrf-token"]]]]]],"^:K",true,"^17","^4N","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^;P","^>B"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",1496,"^:T","^3K","^;",1496,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;P","^>B"]]]]]],"~$receive-buffered-evs!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",981,"^:",11,"^;",981,"^<",32,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^=>","^:U"]]]]]],"^:K",true,"^17","^4F","^8","taoensso/sente.cljc","^<",32,"^:P",["^1U",[["^=>","^:U"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",981,"^:T","^;0","^;",981,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^=>","^:U"]]]]]],"~$chsk-connect!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",892,"^:",12,"^;",892,"^<",25,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]]],"^17","^3T","^8","taoensso/sente.cljc","^<",25,"^:P",["^1U",[["^;N"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",6,"^:S",false,"^9",892,"^:T","^:V","^;",892,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]]],"~$-start-chsk-router!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1731,"^:",8,"^;",1731,"^<",27,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$server?","^=6","^=7","^;P"]]]]]],"^:K",true,"^17","^4L","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^>F","^=6","^=7","^;P"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",1731,"^:T","^=:","^;",1731,"^:W",4,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^>F","^=6","^=7","^;P"]]]]]],"~$EdnPacker",["^ ","^=J",0,"^;:",["^15",["^;;"]],"^17","^4U","^8","taoensso/sente.cljc","^<",19,"^=Y",true,"^:",10,"^9",240,"^=Z",false,"^;",240,"^;7","^=:","^;=",null],"~$ChAutoSocket",["^ ","^=J",4,"^;:",["^15",["^=K","^=L","^=M","^=N","^=O","^=P","^=Q","^=R","^=S","^=T","^=U","^=V","^=W","^5K","^;R","^=X"]],"^17","^4V","^8","taoensso/sente.cljc","^<",27,"^=Y",true,"^:",15,"^;2",true,"^9",1506,"^=Z",true,"^;",1506,"^;7","^=:","^;=",["^15",["^=K","^=L","^=M","^=N","^=O","^=P","^=Q","^=R","^=S","^=T","^=U","^=V","^=W","^;R","^=X"]]],"~$cb-error?",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",198,"^:",16,"^;",198,"^<",25,"^:L",["^1U",["^:M",["^1U",[["~$cb-reply-clj"]]]]]],"^17","^4Q","^8","taoensso/sente.cljc","^<",25,"^:P",["^1U",[["^>J"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",10,"^:S",false,"^9",198,"^:T","^:V","^;",198,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^>J"]]]]]],"~$unpack",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",206,"^:",8,"^;",206,"^<",14,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^;I","~$prefixed-pstr"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"^:K",true,"^17","^4G","^8","taoensso/sente.cljc","^<",14,"^:P",["^1U",[["^;I","^>L"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",206,"^:T","^;8","^;",206,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;I","^>L"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"~$chsk-disconnect!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",893,"^:",12,"^;",893,"^<",28,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]]],"^17","^5M","^8","taoensso/sente.cljc","^<",28,"^:P",["^1U",[["^;N"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",6,"^:S",false,"^9",893,"^:T","^:V","^;",893,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]]],"~$default-chsk-url-fn",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1842,"^:",11,"^;",1842,"^<",30],"^17","^4P","^8","taoensso/sente.cljc","^<",30,"^:P",["^1U",[["^<Z","~$p__77589","~$websocket?"]]],"^:Q",null,"^:R",["^1U",[]],"^:",6,"^:S",false,"^9",1842,"^:T","^;L","^;",1842,"^:W",3,"^:X",true,"^:L",null,"^7","DEPRECATED"],"~$start-chsk-router-loop!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1831,"^:",12,"^;",1831,"^<",35,"^:L",["^1U",["^:M",["^1U",[["~$event-handler","^=6"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"^17","^4R","^8","taoensso/sente.cljc","^<",35,"^:P",["^1U",[["^>R","^=6"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",6,"^:S",false,"^9",1831,"^:T","^=:","^;",1831,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^>R","^=6"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"~$chsk-send->closed!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",907,"^:",11,"^;",907,"^<",29,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$?cb-fn"]]]]]],"^:K",true,"^17","^4T","^8","taoensso/sente.cljc","^<",29,"^:P",["^1U",[["^>T"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",907,"^:T","^;@","^;",907,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^>T"]]]]]],"~$new-ChAutoSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1565,"^:",11,"^;",1565,"^<",27,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^;P","^>B"]]]]]],"^:K",true,"^17","^5F","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^;P","^>B"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",1565,"^:T","^4V","^;",1565,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;P","^>B"]]]]]],"~$swap-chsk-state!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",925,"^:",11,"^;",925,"^<",27,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^;N","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"^:K",true,"^17","^58","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^;N","~$f"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",925,"^:T",["^15",["^;8","^;0"]],"^;",925,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;N","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"~$handshake?",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",990,"^:",11,"^;",990,"^<",21,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"^:K",true,"^17","^4D","^8","taoensso/sente.cljc","^<",21,"^:P",["^1U",[["~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",990,"^:T","^;@","^;",990,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"~$ajax-call",["^ ","^17","^4<","^8","taoensso/sente.cljc","^9",1840,"^:",12,"^;",1840,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1840,"^:",17,"^;",1840,"^<",26],"^7","DEPRECATED: Please use `ajax-lite` instead"],"~$new-ChWebSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1315,"^:",8,"^;",1315,"^<",23,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^;P","^>B"]]]]]],"^:K",true,"^17","^5?","^8","taoensso/sente.cljc","^<",23,"^:P",["^1U",[["^;P","^>B"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",1315,"^:T","^3<","^;",1315,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;P","^>B"]]]]]],"~$ChWebSocket",["^ ","^=J",15,"^;:",["^15",["^=K","^=L","^=M","^=N","^=O","^=P","^=Q","^=R","^=S","^=T","^=U","^=V","^=W","^5K","^;R","^=X"]],"^17","^3<","^8","taoensso/sente.cljc","^<",23,"^=Y",true,"^:",12,"^;2",true,"^9",1105,"^=Z",true,"^;",1105,"^;7","^=:","^;=",["^15",["^=K","^=L","^=M","^=N","^=O","^=P","^=Q","^=R","^=S","^=T","^=U","^=V","^=W","^;R","^=X"]]],"~$pull-unused-cb-fn!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",920,"^:",11,"^;",920,"^<",29,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["~$cbs-waiting_","^;J"]]]]]],"^:K",true,"^17","^3M","^8","taoensso/sente.cljc","^<",29,"^:P",["^1U",[["^?0","^;J"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",920,"^:T",["^15",["^:V","^;0"]],"^;",920,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^?0","^;J"]]]]]],"~$assert-event",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",141,"^:",7,"^;",141,"^<",19,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"^17","^3Q","^8","taoensso/sente.cljc","^<",19,"^:P",["^1U",[["~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",141,"^:T","^;0","^;",141,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"~$chsk-reconnect!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",894,"^:",12,"^;",894,"^<",27,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"^17","^5A","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^;N"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",6,"^:S",false,"^9",894,"^:T","^:V","^;",894,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^;N"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"~$make-channel-socket-client!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1580,"^:",10,"^;",1580,"^<",37,"^:L",["^1U",["^:M",["^1U",[["^<Z","~$?csrf-token","~$&",[["^ ","^;W",["^<[","^<X","^<Y","~$port","^=?","^<0","^<5","^;I","^<6","^==","^=E","~$wrap-recv-evs?","^=D"],"^1W","^;P","^<C",["^ ","^<[","~:auto","^<5",["^1U",["^<T",2048]],"^;I","^<O","^==",["^1U",["^<I",["^1U",["~:client-uuid","^;P"]],["^1U",["~$enc/uuid-str"]]]],"^?6",true,"^=D","~$enc/exp-backoff","^<6",["^1U",["^<D","^<E",20]]]],"~$_deprecated-more-opts"]]]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.","^;G",["^ ","^:S",true,"^;H",2,"^:W",2,"^:P",[["^1U",["^<Z","^?4",[["^ ","^;W",["^<[","^<X","^<Y","^?5","^=?","^<0","^<5","^;I","^<6","^==","^=E","^?6","^=D"],"^1W","^;P","^<C",["^ ","^<[","^?7","^<5",["^1U",["^<T",2048]],"^;I","^<O","^==",["^1U",["^<I",["^1U",["^?8","^;P"]],["^1U",["^?9"]]]],"^?6",true,"^=D","^?:","^<6",["^1U",["^<D","^<E",20]]]],"^?;"]]]],"^:L",["^1U",[["^<Z","^?4","~$&",[["^ ","^;W",["^<[","^<X","^<Y","^?5","^=?","^<0","^<5","^;I","^<6","^==","^=E","^?6","^=D"],"^1W","^;P","^<C",["^ ","^<[","^?7","^<5",["^1U",["^<T",2048]],"^;I","^<O","^==",["^1U",["^<I",["^1U",["^?8","^;P"]],["^1U",["^?9"]]]],"^?6",true,"^=D","^?:","^<6",["^1U",["^<D","^<E",20]]]],"^?;"]]]],"^:R",["^1U",[null]]]],"^17","^5G","^8","taoensso/sente.cljc","^<",37,"^;G",["^ ","^:S",true,"^;H",2,"^:W",2,"^:P",[["^1U",["^<Z","^?4",[["^ ","^;W",["^<[","^<X","^<Y","^?5","^=?","^<0","^<5","^;I","^<6","^==","^=E","^?6","^=D"],"^1W","^;P","^<C",["^ ","^<[","^?7","^<5",["^1U",["^<T",2048]],"^;I","^<O","^==",["^1U",["^<I",["^1U",["^?8","^;P"]],["^1U",["^?9"]]]],"^?6",true,"^=D","^?:","^<6",["^1U",["^<D","^<E",20]]]],"^?;"]]]],"^:L",["^1U",[["^<Z","^?4","~$&",[["^ ","^;W",["^<[","^<X","^<Y","^?5","^=?","^<0","^<5","^;I","^<6","^==","^=E","^?6","^=D"],"^1W","^;P","^<C",["^ ","^<[","^?7","^<5",["^1U",["^<T",2048]],"^;I","^<O","^==",["^1U",["^<I",["^1U",["^?8","^;P"]],["^1U",["^?9"]]]],"^?6",true,"^=D","^?:","^<6",["^1U",["^<D","^<E",20]]]],"^?;"]]]],"^:R",["^1U",[null]]],"^:P",[["^1U",["^<Z","^?4",[["^ ","^;W",["^<[","^<X","^<Y","^?5","^=?","^<0","^<5","^;I","^<6","^==","^=E","^?6","^=D"],"^1W","^;P","^<C",["^ ","^<[","^?7","^<5",["^1U",["^<T",2048]],"^;I","^<O","^==",["^1U",["^<I",["^1U",["^?8","^;P"]],["^1U",["^?9"]]]],"^?6",true,"^=D","^?:","^<6",["^1U",["^<D","^<E",20]]]],"^?;"]]]],"^:Q",null,"^;H",2,"^:R",["^1U",[null]],"^:",4,"^:S",true,"^;K",[["^ ","^;H",2,"^:S",true,"^;7",["^15",["^;R","^;0"]]]],"^9",1580,"^:T","^:V","^;",1580,"^:W",2,"^:X",true,"^:L",["^1U",[["^<Z","^?4","~$&",[["^ ","^;W",["^<[","^<X","^<Y","^?5","^=?","^<0","^<5","^;I","^<6","^==","^=E","^?6","^=D"],"^1W","^;P","^<C",["^ ","^<[","^?7","^<5",["^1U",["^<T",2048]],"^;I","^<O","^==",["^1U",["^<I",["^1U",["^?8","^;P"]],["^1U",["^?9"]]]],"^?6",true,"^=D","^?:","^<6",["^1U",["^<D","^<E",20]]]],"^?;"]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms."],"~$cb-chan-as-fn",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",964,"^:",11,"^;",964,"^<",24,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^:[","^;O"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"^:K",true,"^17","^5T","^8","taoensso/sente.cljc","^<",24,"^:P",["^1U",[["^:[","^;O"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^:S",false,"^9",964,"^:T",["^15",[null,"^=:"]],"^;",964,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^:[","^;O"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"~$map->ChAutoSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^;2",true,"^;3","^;4","^9",1506,"^;",1506,"^:L",["^1U",["^:M",["^1U",[["~$G__77204"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"^17","^5I","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^?>"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",4,"^;2",true,"^:S",false,"^;3","^;4","^9",1506,"^:T","^4V","^;",1506,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^?>"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"~$IChSocket",["^ ","^5",["^ ","~:protocol-symbol",true,"^8","taoensso/sente.cljc","^<",26,"^:",17,"^9",886,"~:protocol-info",["^ ","^;K",["^ ","^>>",[["^;N"]],"^>6",[["^;N","^:O"]],"^=2",[["^;N"]],"^=0",[["^;N","^;O","^;P"]]]],"^;",886,"~:sigs",["^ ","~:-chsk-connect!",["^ ","^17","^>>","^:L",["^1U",[["^;N"]]],"^7",null],"~:-chsk-disconnect!",["^ ","^17","^>6","^:L",["^1U",[["^;N","^:O"]]],"^7",null],"~:-chsk-reconnect!",["^ ","^17","^=2","^:L",["^1U",[["^;N"]]],"^7",null],"~:-chsk-send!",["^ ","^17","^=0","^:L",["^1U",[["^;N","^;O","^;P"]]],"^7",null]],"~:jsdoc",["^1U",["@interface"]]],"^?@",true,"^17","^5K","^8","taoensso/sente.cljc","^<",26,"^:",4,"^9",886,"^?A",["^ ","^;K",["^ ","^>>",[["^;N"]],"^>6",[["^;N","^:O"]],"^=2",[["^;N"]],"^=0",[["^;N","^;O","^;P"]]]],"~:info",null,"^;",886,"^;7","^:V","^?B",["^ ","^?C",["^ ","^17","^>>","^:L",["^1U",[["^;N"]]],"^7",null],"^?D",["^ ","^17","^>6","^:L",["^1U",[["^;N","^:O"]]],"^7",null],"^?E",["^ ","^17","^=2","^:L",["^1U",[["^;N"]]],"^7",null],"^?F",["^ ","^17","^=0","^:L",["^1U",[["^;N","^;O","^;P"]]],"^7",null]],"~:impls",["^15",["^3<","^3K","^4V"]],"^?G",["^1U",["@interface"]]],"~$debug-mode?_",["^ ","^17","^5J","^8","taoensso/sente.cljc","^9",119,"^:",1,"^;",119,"^<",22,"^5",["^ ","^8","taoensso/sente.cljc","^9",119,"^:",10,"^;",119,"^<",22],"^;7","~$cljs.core/Atom"],"~$cb-success?",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",199,"^:",16,"^;",199,"^<",27,"^:L",["^1U",["^:M",["^1U",[["^>J"]]]]]],"^17","^5O","^8","taoensso/sente.cljc","^<",27,"^:P",["^1U",[["^>J"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",10,"^:S",false,"^9",199,"^:T","^;@","^;",199,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^>J"]]]]]],"~$->ChWebSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",23,"^:",12,"^;2",true,"^;3","^;<","^9",1105,"^;",1105,"^:L",["^1U",["^:M",["^1U",[["^==","^=>","^=?","^<0","^;I","^=@","^<6","^=A","^=B","~$retry-count_","^=C","^=D","^?0","~$socket_","~$udt-last-comms_"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"^17","^5P","^8","taoensso/sente.cljc","^<",23,"^:P",["^1U",[["^==","^=>","^=?","^<0","^;I","^=@","^<6","^=A","^=B","^?N","^=C","^=D","^?0","^?O","^?P"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^;2",true,"^:S",false,"^;3","^;<","^9",1105,"^:T","^3<","^;",1105,"^:W",15,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^==","^=>","^=?","^<0","^;I","^=@","^<6","^=A","^=B","^?N","^=C","^=D","^?0","^?O","^?P"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"~$expected",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",126,"^:",8,"^;",126,"^<",16,"^:K",true,"^:L",["^1U",["^:M",["^1U",[["^?Q","~$x"]]]]]],"^:K",true,"^17","^4B","^8","taoensso/sente.cljc","^<",16,"^:P",["^1U",[["^?Q","~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",126,"^:T","^;R","^;",126,"^:W",2,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^?Q","~$x"]]]]]],"~$?node-npm-websocket_",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1029,"^:",19,"^;",1029,"^<",39,"^:K",true],"^:K",true,"^17","^5U","^8","taoensso/sente.cljc","^<",39,"^:",4,"^9",1029,"^;",1029,"^;7","^3B","^7","nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm"],"~$start-server-chsk-router!",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1770,"^:",7,"^;",1770,"^<",32,"^:L",["^1U",["^:M",["^1U",[["^=6","^=7","~$&",[["^ ","^1W","^;P","^;W",["^=8","^=9","~$simple-auto-threading?"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).","^;G",["^ ","^:S",true,"^;H",2,"^:W",2,"^:P",[["^1U",["^=6","^=7",[["^ ","^1W","^;P","^;W",["^=8","^=9","^?T"]]]]]],"^:L",["^1U",[["^=6","^=7","~$&",[["^ ","^1W","^;P","^;W",["^=8","^=9","^?T"]]]]]],"^:R",["^1U",[null]]]],"^17","^4E","^8","taoensso/sente.cljc","^<",32,"^;G",["^ ","^:S",true,"^;H",2,"^:W",2,"^:P",[["^1U",["^=6","^=7",[["^ ","^1W","^;P","^;W",["^=8","^=9","^?T"]]]]]],"^:L",["^1U",[["^=6","^=7","~$&",[["^ ","^1W","^;P","^;W",["^=8","^=9","^?T"]]]]]],"^:R",["^1U",[null]]],"^:P",[["^1U",["^=6","^=7",[["^ ","^1W","^;P","^;W",["^=8","^=9","^?T"]]]]]],"^:Q",null,"^;H",2,"^:R",["^1U",[null]],"^:",1,"^:S",true,"^;K",[["^ ","^;H",2,"^:S",true,"^;7","^=:"]],"^9",1770,"^:T","^:V","^;",1770,"^:W",2,"^:X",true,"^:L",["^1U",[["^=6","^=7","~$&",[["^ ","^1W","^;P","^;W",["^=8","^=9","^?T"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default)."],"~$client-event-msg?",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",155,"^:",7,"^;",155,"^<",24,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"^17","^5C","^8","taoensso/sente.cljc","^<",24,"^:P",["^1U",[["~$x"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^:S",false,"^9",155,"^:T","^;@","^;",155,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["~$x"]]]]]],"~$map->ChWebSocket",["^ ","^:J",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",23,"^:",12,"^;2",true,"^;3","^;4","^9",1105,"^;",1105,"^:L",["^1U",["^:M",["^1U",[["~$G__76803"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"^17","^5N","^8","taoensso/sente.cljc","^<",23,"^:P",["^1U",[["^?W"]]],"^:Q",null,"^:R",["^1U",[null,null]],"^:",1,"^;2",true,"^:S",false,"^;3","^;4","^9",1105,"^:T","^3<","^;",1105,"^:W",1,"^:X",true,"^:L",["^1U",["^:M",["^1U",[["^?W"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"~$next-idx!",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",267,"^:",16,"^;",267,"^<",25,"^:K",true],"^:K",true,"^17","^4K","^8","taoensso/sente.cljc","^<",25,"^:",1,"^9",267,"^;",267,"^;7","^:V"]],"^1H",["^ ","^V","^V","^1<","^T","^1?","^1@","^1A","^1A","^1@","^1@","^R","^R","^1C","^X","^T","^T","^1R","^V","^X","^X","^1S","^R"],"~:cljs.analyzer/constants",["^ ","^1F",["^15",["~:curr-xhr_","~:chsk/closed","~:?unauthorized-fn","~:?reply-fn","~:ws-kalive-ms","~:ajax-post-fn","~:ever-opened?_","~:requested-disconnect","~:on-msg","~:flush?","~:cb","~:errors","~:send-buf-ms-ws","~:first-open?","~:taoensso.sente/nil-uid","~:default-client-side-ajax-timeout-ms","~:given","^=E","^?0","~:ws","~:impl_","~:get","~:lp-timeout-ms","~:websocket","~:chsk/recv","~:allowed-origins","~:uri-str","^?8","~:handshake","~:ch-recv","~:client-id","~:ev","^=A","~:X-CSRF-Token","^>2","~:csrf-token-fn","~:?content","~:noop","~:else","~:on-close","~:sente/all-users-without-uid","^=1","~:wrong-id-type","~:newly-connected","~:connected-uids","^<6","^=F","~:method","~:simple-auto-threading?","~:pathname","~:ws-chsk-opts","^=C","^<S","~:trace-evs?","~:packer","~:chs","~:warn","~:server","~:chsk/ws-ping","~:trace","~:udt-last-comms_","~:value","~:last-ws-error","~:chsk/uidport-open","~:?sch","~:swap/dissoc","^>3","^==","^<E","~:unauthorized-fn","~:handshake?","~:params","~:udt-next-reconnect","~:chsk/close","~:recur","^=Y","~:chsk/state","~:unnamespaced-id","~:onmessage-fn","~:debug","~:debug/timeout","~:state","~:hostname","~:ajax","~:send-buf-ms-ajax","~:retry-count_","~:chsk/bad-event","~:port","~:vector","^<F","^>1","~:udt","^;I","^=>","~:chsk/bad-package","~:no-op","~:ajax-get-or-ws-handshake-fn","~:bad-origin-fn","~:headers","~:internal","^?P","~:error-handler","~:downgrading-ws-to-ajax","~:handshake-data","~:chsk/auto-ajax-downgrade","~:chsk/error","~:handshake-data-fn","~:reason","~:host","^=?","~:nx","~:event","~:authorized?-fn","~:backoff-ms-fn","~:wrong-type","~:user-id-fn","~:recv-buf-or-n","~:keyword","^<Q","~:socket_","^?N","~:ever-opened?","~:ppstr","~:id","~:open?","~:send-buffers","~:expected","^<O","~:chsk/uidport-close","~:chsk-url-fn","~:url","~:code","^<0","~:lp-timeout","~:ring-req","~:chsk/timeout","~:http","~:handled","~:onclose-fn","~:wrap-recv-evs?","~:?data","~:post","~:instance-handle_","~:chsk","^<M","~:f","~:bad-csrf-fn","~:error","~:unexpected","~:onerror-fn","~:send-fn","~:wrong-length","^<J","~:on-error","~:timeout","~:resp-type","^=D","~:last-close","~:requested-reconnect","~:ajax-opts","~:cbs-waiting_","~:actual","^<R","~:init?","^?O","^<N","~:last-ws-close","^?7","~:on-open","^=@","~:timeout-ms","~:chsk/handshake","^=B","~:apparent-success","~:?error","~:newly-disconnected","~:state_","~:ajax-cb","~:any","~:chsk/dummy-cb-200","~:<server","^<L","~:ajax-chsk-opts","~:text","~:clean?","~:namespaced-keyword"]],"~:order",["^B>","^B[","^=Y","^A5","^B4","^AL","^BS","^@O","^@R","^B7","^AA","^C@","^@>","^@9","^AJ","^@H","^AE","^B1","^B;","^BJ","^BR","^@1","^@I","^@T","^<S","^B=","^BD","^A0","~:f~:ns-specs",["^ "],"~:ns-spec-vars",["^15",[]],"~:compiler-options",["^5X",[["^CD","~:static-fns"],true,["^CD","~:shadow-tweaks"],null,["^CD","~:source-map-inline"],null,["^CD","~:elide-asserts"],false,["^CD","~:optimize-constants"],null,["^CD","^25"],null,["^CD","~:external-config"],null,["^CD","~:tooling-config"],null,["^CD","~:emit-constants"],null,["^CD","~:load-tests"],null,["^CD","~:form-size-threshold"],null,["^CD","~:data-readers"],null,["^CD","~:infer-externs"],"^?7",["^CD","^27"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^CD","~:fn-invoke-direct"],null,["^CD","~:source-map"],"/dev/null"]]]