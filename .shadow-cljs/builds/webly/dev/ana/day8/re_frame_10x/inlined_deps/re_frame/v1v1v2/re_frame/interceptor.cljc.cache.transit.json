["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor');\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"after\",\"after\",594996914),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),null], null), null);\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.interceptor_QMARK_ = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$interceptor_QMARK_(m){\nreturn ((cljs.core.map_QMARK_(m)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys,cljs.core.set(cljs.core.keys(m)))));\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$__GT_interceptor(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___81774 = arguments.length;\nvar i__4772__auto___81775 = (0);\nwhile(true){\nif((i__4772__auto___81775 < len__4771__auto___81774)){\nargs__4777__auto__.push((arguments[i__4772__auto___81775]));\n\nvar G__81776 = (i__4772__auto___81775 + (1));\ni__4772__auto___81775 = G__81776;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((0) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((0)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(argseq__4778__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic = (function (p__81712){\nvar map__81717 = p__81712;\nvar map__81717__$1 = cljs.core.__destructure_map(map__81717);\nvar m = map__81717__$1;\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81717__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nvar before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81717__$1,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388));\nvar after = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81717__$1,new cljs.core.Keyword(null,\"after\",\"after\",594996914));\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.debug_enabled_QMARK_){\nvar temp__5751__auto___81777 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(m)),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys));\nif(temp__5751__auto___81777){\nvar unknown_keys_81778 = temp__5751__auto___81777;\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ->interceptor\",m,\"has unknown keys:\",unknown_keys_81778], 0));\n} else {\n}\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),(function (){var or__4160__auto__ = id;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"unnamed\",\"unnamed\",-26044928);\n}\n})(),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),before,new cljs.core.Keyword(null,\"after\",\"after\",594996914),after], null);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$lang$applyTo = (function (seq81699){\nvar self__4759__auto__ = this;\nreturn self__4759__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq81699));\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$get_effect(var_args){\nvar G__81741 = arguments.length;\nswitch (G__81741) {\ncase 1:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null));\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),not_found);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$lang$maxFixedArity = 3);\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$assoc_effect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),value);\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$update_effect(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___81786 = arguments.length;\nvar i__4772__auto___81787 = (0);\nwhile(true){\nif((i__4772__auto___81787 < len__4771__auto___81786)){\nargs__4777__auto__.push((arguments[i__4772__auto___81787]));\n\nvar G__81788 = (i__4772__auto___81787 + (1));\ni__4772__auto___81787 = G__81788;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((3) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((3)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4778__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$core$IFn$_invoke$arity$variadic = (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),f,args);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$lang$applyTo = (function (seq81744){\nvar G__81745 = cljs.core.first(seq81744);\nvar seq81744__$1 = cljs.core.next(seq81744);\nvar G__81746 = cljs.core.first(seq81744__$1);\nvar seq81744__$2 = cljs.core.next(seq81744__$1);\nvar G__81747 = cljs.core.first(seq81744__$2);\nvar seq81744__$3 = cljs.core.next(seq81744__$2);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__81745,G__81746,G__81747,seq81744__$3);\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$get_coeffect(var_args){\nvar G__81750 = arguments.length;\nswitch (G__81750) {\ncase 1:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985).cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null));\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),not_found);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$lang$maxFixedArity = 3);\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$assoc_coeffect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),value);\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$update_coeffect(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___81800 = arguments.length;\nvar i__4772__auto___81801 = (0);\nwhile(true){\nif((i__4772__auto___81801 < len__4771__auto___81800)){\nargs__4777__auto__.push((arguments[i__4772__auto___81801]));\n\nvar G__81802 = (i__4772__auto___81801 + (1));\ni__4772__auto___81801 = G__81802;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((3) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((3)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4778__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic = (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),f,args);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$lang$applyTo = (function (seq81756){\nvar G__81757 = cljs.core.first(seq81756);\nvar seq81756__$1 = cljs.core.next(seq81756);\nvar G__81758 = cljs.core.first(seq81756__$1);\nvar seq81756__$2 = cljs.core.next(seq81756__$1);\nvar G__81759 = cljs.core.first(seq81756__$2);\nvar seq81756__$3 = cljs.core.next(seq81756__$2);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__81757,G__81758,G__81759,seq81756__$3);\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptor_fn = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$invoke_interceptor_fn(context,interceptor,direction){\nvar temp__5751__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(interceptor,direction);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar f = temp__5751__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(context) : f.call(null,context));\n} else {\nreturn context;\n}\n});\n/**\n * Loop over all interceptors, calling `direction` function on each,\n *   threading the value of `context` through every call.\n * \n *   `direction` is one of `:before` or `:after`.\n * \n *   Each iteration, the next interceptor to process is obtained from\n *   context's `:queue`. After they are processed, interceptors are popped\n *   from `:queue` and added to `:stack`.\n * \n *   After sufficient iteration, `:queue` will be empty, and `:stack` will\n *   contain all interceptors processed.\n * \n *   Returns updated `context`. Ie. the `context` which has been threaded\n *   through all interceptor functions.\n * \n *   Generally speaking, an interceptor's `:before` function will (if present)\n *   add to a `context's` `:coeffects`, while it's `:after` function\n *   will modify the `context`'s `:effects`.  Very approximately.\n * \n *   But because all interceptor functions are given `context`, and can\n *   return a modified version of it, the way is clear for an interceptor\n *   to introspect the stack or queue, or even modify the queue\n *   (add new interceptors via `enqueue`?). This is a very fluid arrangement.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$invoke_interceptors(context,direction){\nvar context__$1 = context;\nwhile(true){\nvar queue = new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879).cljs$core$IFn$_invoke$arity$1(context__$1);\nif(cljs.core.empty_QMARK_(queue)){\nreturn context__$1;\n} else {\nvar interceptor = cljs.core.peek(queue);\nvar stack = new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context__$1);\nvar G__81811 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptor_fn(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(context__$1,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.pop(queue),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,interceptor)], 0)),interceptor,direction);\ncontext__$1 = G__81811;\ncontinue;\n}\nbreak;\n}\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$enqueue(context,interceptors){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.empty_queue),interceptors);\n});\n/**\n * Create a fresh context\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$context(var_args){\nvar G__81766 = arguments.length;\nswitch (G__81766) {\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2 = (function (event,interceptors){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event),new cljs.core.Keyword(null,\"original-event\",\"original-event\",2121330403),event),interceptors);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3 = (function (event,interceptors,db){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event,interceptors),new cljs.core.Keyword(null,\"db\",\"db\",993250759),db);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$lang$maxFixedArity = 3);\n\n/**\n * Called on completion of `:before` processing, this function prepares/modifies\n * `context` for the backwards sweep of processing in which an interceptor\n * chain's `:after` fns are called.\n * \n *   At this point in processing, the `:queue` is empty and `:stack` holds all\n *   the previously run interceptors. So this function enables the backwards walk\n *   by priming `:queue` with what's currently in `:stack`\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.change_direction = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$change_direction(context){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context));\n});\n/**\n * Executes the given chain (coll) of interceptors.\n * \n * Each interceptor has this form:\n *     {:before  (fn [context] ...)     ;; returns possibly modified context\n *      :after   (fn [context] ...)}    ;; `identity` would be a noop\n * \n * Walks the queue of interceptors from beginning to end, calling the\n * `:before` fn on each, then reverse direction and walk backwards,\n * calling the `:after` fn on each.\n * \n * The last interceptor in the chain presumably wraps an event\n * handler fn. So the overall goal of the process is to \"handle\n * the given event\".\n * \n * Thread a `context` through all calls. `context` has this form:\n * \n *   {:coeffects {:event [:a-query-id :some-param]\n *                :db    <original contents of app-db>}\n *    :effects   {:db    <new value for app-db>\n *                :dispatch  [:an-event-id :param1]}\n *    :queue     <a collection of further interceptors>\n *    :stack     <a collection of interceptors already walked>}\n * \n * `context` has `:coeffects` and `:effects` which, if this was a web\n * server, would be somewhat analogous to `request` and `response`\n * respectively.\n * \n * `coeffects` will contain data like `event` and the initial\n * state of `db` -  the inputs required by the event handler\n * (sitting presumably on the end of the chain), while handler-returned\n * side effects are put into `:effects` including, but not limited to,\n * new values for `db`.\n * \n * The first few interceptors in a chain will likely have `:before`\n * functions which \"prime\" the `context` by adding the event, and\n * the current state of app-db into `:coeffects`. But interceptors can\n * add whatever they want to `:coeffects` - perhaps the event handler needs\n * some information from localstore, or a random number, or access to\n * a DataScript connection.\n * \n * Equally, some interceptors in the chain will have `:after` fn\n * which can process the side effects accumulated into `:effects`\n * including but, not limited to, updates to app-db.\n * \n * Through both stages (before and after), `context` contains a `:queue`\n * of interceptors yet to be processed, and a `:stack` of interceptors\n * already done.  In advanced cases, these values can be modified by the\n * functions through which the context is threaded.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.execute = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$execute(event_v,interceptors){\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__81634__auto___81826 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951),interceptors], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951),interceptors], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = new_trace__81634__auto___81826);\n\n} else {\n}\n\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.change_direction(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event_v,interceptors),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388))),new cljs.core.Keyword(null,\"after\",\"after\",594996914));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","~:line",1,"~:column",33,"~:end-line",1,"~:end-column",100,"~:mranderson/inlined",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers","^X","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop","^Y","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace","^Z","~$trace","^Z","~$clojure.set","^10","~$set","^10","~$cljs.core","^12","~$goog","^13"],"~:seen",["^Q",["~:require"]],"~:uses",["^ ","~$console","^X","~$empty-queue","^Y","~$debug-enabled?","^Y"],"~:require-macros",["^ ","^Z","^Z","^[","^Z","^12","^12"],"~:form",["~#list",["~$ns","^S",["^1<",["^15",["^X","~:refer",["^17"]],["^Y","^1>",["^18","^19"]],["^Z","~:as","^[","~:include-macros",true],["^10","^1?","^11"]]]]],"~:flags",["^ ","^15",["^Q",[]]],"~:js-deps",["^ "],"~:deps",["^13","^12","^X","^Y","^Z","^10"]],"^U","^S","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc"],"~:compiled-at",1621210458716,"~:resource-name","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","~:warnings",[],"~:source","(ns ^{:mranderson/inlined true} day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers :refer [console]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop :refer [empty-queue debug-enabled?]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace :as trace :include-macros true]\n    [clojure.set :as set]))\n\n\n(def mandatory-interceptor-keys #{:id :after :before})\n\n(defn interceptor?\n  [m]\n  (and (map? m)\n       (= mandatory-interceptor-keys (-> m keys set))))\n\n\n(defn ->interceptor\n  [& {:as m :keys [id before after]}]\n  (when debug-enabled?\n    (if-let [unknown-keys (seq (set/difference\n                                (-> m keys set)\n                                mandatory-interceptor-keys))]\n      (console :error \"re-frame: ->interceptor\" m \"has unknown keys:\" unknown-keys)))\n  {:id     (or id :unnamed)\n   :before before\n   :after  after})\n\n;; -- Effect Helpers  -----------------------------------------------------------------------------\n\n(defn get-effect\n  ([context]\n   (:effects context))\n  ([context key]\n   (get-in context [:effects key]))\n  ([context key not-found]\n   (get-in context [:effects key] not-found)))\n\n(defn assoc-effect\n  [context key value]\n  (assoc-in context [:effects key] value))\n\n(defn update-effect\n  [context key f & args]\n  (apply update-in context [:effects key] f args))\n\n;; -- CoEffect Helpers  ---------------------------------------------------------------------------\n\n(defn get-coeffect\n  ([context]\n   (:coeffects context))\n  ([context key]\n   (get-in context [:coeffects key]))\n  ([context key not-found]\n   (get-in context [:coeffects key] not-found)))\n\n(defn assoc-coeffect\n  [context key value]\n  (assoc-in context [:coeffects key] value))\n\n(defn update-coeffect\n  [context key f & args]\n  (apply update-in context [:coeffects key] f args))\n\n;; -- Execute Interceptor Chain  ------------------------------------------------------------------\n\n\n(defn- invoke-interceptor-fn\n  [context interceptor direction]\n  (if-let [f (get interceptor direction)]\n    (f context)\n    context))\n\n\n(defn- invoke-interceptors\n  \"Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement.\"\n  ([context direction]\n   (loop [context context]\n     (let [queue (:queue context)]        ;; future interceptors\n       (if (empty? queue)\n         context\n         (let [interceptor (peek queue)   ;; next interceptor to call\n               stack (:stack context)]    ;; already completed interceptors\n           (recur (-> context\n                      (assoc :queue (pop queue)\n                             :stack (conj stack interceptor))\n                      (invoke-interceptor-fn interceptor direction)))))))))\n\n\n(defn enqueue\n  [context interceptors]\n  (update context :queue\n          (fnil into empty-queue)\n          interceptors))\n\n\n(defn- context\n  \"Create a fresh context\"\n  ([event interceptors]\n   (-> {}\n      (assoc-coeffect :event event)\n      ;; Some interceptors, like `trim-v` and `unwrap`, alter event so capture\n      ;; the original for use cases such as tracing.\n      (assoc-coeffect :original-event event)\n      (enqueue interceptors)))\n  ([event interceptors db]      ;; only used in tests, probably a hack, remove ?  XXX\n   (-> (context event interceptors)\n       (assoc-coeffect :db db))))\n\n\n(defn- change-direction\n  \"Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`\"\n  [context]\n  (-> context\n      (dissoc :queue)\n      (enqueue (:stack context))))\n\n\n(defn execute\n  \"Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \\\"handle\n   the given event\\\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \\\"prime\\\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded.\"\n  [event-v interceptors]\n  (trace/merge-trace!\n    {:tags {:interceptors interceptors}})\n  (-> (context event-v interceptors)\n      (invoke-interceptors :before)\n      change-direction\n      (invoke-interceptors :after)))\n","~:reader-features",["^Q",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/mandatory-interceptor-keys","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/interceptor?","m","cljs.core/map?","cljs.core._EQ_","cljs.core/keys","cljs.core/set","var_args","args__4777__auto__","len__4771__auto__","i__4772__auto__","argseq__4778__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/->interceptor","p__81712","map__81717","cljs.core/--destructure-map","cljs.core.get","seq81699","self__4759__auto__","cljs.core/seq","id","before","after","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/debug-enabled?","temp__5751__auto__","unknown-keys","clojure.set.difference","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console","or__4160__auto__","G__81741","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-effect","js/Error","context","key","cljs.core.get_in","not-found","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-effect","value","cljs.core/assoc-in","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-effect","seq81744","G__81745","cljs.core/first","cljs.core/next","G__81746","G__81747","self__4758__auto__","f","args","cljs.core.apply","cljs.core/update-in","G__81750","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-coeffect","seq81756","G__81757","G__81758","G__81759","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptor-fn","interceptor","direction","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptors","queue","cljs.core/empty?","cljs.core/peek","stack","cljs.core.assoc","cljs.core/pop","cljs.core.conj","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/enqueue","interceptors","cljs.core.update","cljs.core.fnil","cljs.core/into","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/empty-queue","G__81766","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/context","event","db","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/change-direction","cljs.core.dissoc","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/execute","event-v","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/is-trace-enabled?","new-trace__81634__auto__","cljs.core.merge","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/*current-trace*","cljs.core/merge"]],"~:used-vars",["^Q",["~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/change-direction","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptor-fn","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/empty-queue","~$cljs.core/=","~$cljs.core/keys","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/is-trace-enabled?","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-effect","~$cljs.core/seq","~$cljs.core/apply","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/debug-enabled?","~$cljs.core/dissoc","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/execute","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/mandatory-interceptor-keys","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/*current-trace*","~$cljs.core/pop","~$cljs.core/set","~$cljs.core/empty?","~$cljs.core/fnil","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/interceptor?","~$cljs.core/into","~$cljs.core/map?","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-coeffect","~$cljs.core/conj","~$cljs.core/update","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-coeffect","~$cljs.core/get-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers/console","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/context","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-effect","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/enqueue","~$cljs.core/assoc","~$cljs.core/assoc-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/->interceptor","~$cljs.core/update-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptors","~$js/Error","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-effect"]]],"~:cache-keys",["~#cmap",[["^1E","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Q",[]],"~:deps-syms",["^13","~$goog.dom.HtmlElement"]]],["^1E","goog/labs/useragent/platform.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.labs.userAgent.util","~$goog.string"]]],["^1E","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.array","~$goog.asserts"]]],["^1E","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/events/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1E","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2R","~$goog.object","~$goog.string.internal"]]],["^1E","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2Y"]]],["^1E","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U"]]],["^1E","goog/useragent/useragent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2R","~$goog.reflect","^2S"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/ratom.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.util","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.debug","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.batching","^10","^2X"]]],["^1E","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/events/events.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2V","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","~$goog.events.EventId","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1E","goog/events/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2W"]]],["^1E","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/protocols.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12"]]],["^1E","goog/events/eventtarget.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.Disposable","^2U","~$goog.events","~$goog.events.Event","^3=","^3>","^2X","^3@","^3A","^3C"]]],["^1E","goog/disposable/disposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.disposable.IDisposable"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/input.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.component","^3:","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.protocols"]]],["^1E","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1E","shadow/js.js"],["e789e354d6afe7fd62e5f7505a5a195575db182b","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^3K","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^3L","~$module$node_modules$object_assign$index"]]],["^1E","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","^37"]]],["^1E","goog/events/listener.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3C","^3="]]],["^1E","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","~$goog.fs.blob","^2Z","~$goog.html.SafeScript","~$goog.html.trustedtypes","^30","^31","^32","^33"]]],["^1E","goog/debug/tracer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2U","~$goog.debug","~$goog.debug.Logger","~$goog.iter","~$goog.log","~$goog.structs.Map","~$goog.structs.SimplePool"]]],["^1E","goog/events/listenermap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^3D","^2X","^3@","^3=","^3C"]]],["^1E","goog/events/eventid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/events/eventwrapper.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/template.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^D","~$clojure.string","^38","^3I","^3:","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.input","^3J","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.ratom","^39","^2X"]]],["^1E","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2U","~$goog.html.SafeUrl","^32","^33","^2Y"]]],["^1E","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3R","~$goog.html.SafeStyle","^43","^2[","~$goog.html.uncheckedconversions","^32","^2Y"]]],["^1E","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12"]]],["^1E","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1E","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2U","~$goog.dom.TagName","~$goog.dom.tags","^3R","^47","~$goog.html.SafeStyleSheet","^43","^2[","^3S","^30","^31","^34","^2X","^32","^33","^2Y"]]],["^1E","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2X"]]],["^1E","goog/math/size.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^X","^Y","^Z","^10"]]],["^1E","goog/labs/useragent/engine.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2R","^2S"]]],["^1E","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T"]]],["^1E","goog/dom/dom.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2U","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4;","~$goog.dom.safe","^46","^48","~$goog.math.Coordinate","~$goog.math.Size","^2X","^2S","^32","~$goog.string.Unicode","^2W"]]],["^1E","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.debug.Error","^4?"]]],["^1E","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/loggers.cljc"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^10"]]],["^1E","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interop.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","~$goog.async.nextTick","^3F","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.core","^42"]]],["^1E","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2U","^2S","~$goog.structs","^3X","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/core.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^D","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.template","^3I","^38","^3:","^3J","^42","^39"]]],["^1E","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^3K","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","519ffd5a4c91b67302cc9947b794966d629860cd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^3L"]]],["^1E","goog/debug/errorhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3E","^2U","^3T","~$goog.debug.EntryPointMonitor","^4D","~$goog.debug.Trace"]]],["^1E","goog/disposable/idisposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",[]]],["^1E","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2X"]]],["^1E","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^2S","~$goog.string.StringBuffer"]]],["^3K","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","6093d43b27c84de58b9ce55e3a930469339c9e54","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^3L","^3P"]]],["^1E","goog/debug/entrypointregistry.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U"]]],["^1E","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^4@","^48","^32","^2Y"]]],["^1E","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2Y"]]],["^1E","goog/debug/debug.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","~$goog.debug.errorcontext","^2W"]]],["^1E","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/math/coordinate.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.math"]]],["^1E","goog/debug/errorcontext.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2T","^2U","^45","^4P"]]],["^1E","goog/async/nexttick.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3;","~$goog.dom","^4;","^45","^34","^35"]]],["^1E","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","^46","^3R","^47","^4=","^43","^2[","^32","^2Y","^30"]]],["^1E","goog/debug/logger.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3T","^3W","~$goog.log.Level","~$goog.log.LogRecord","~$goog.log.Logger"]]],["^1E","goog/events/event.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3E","^3@"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/debug.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12"]]],["^1E","goog/events/eventhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3E","^3F","^2X","^3G","^3@","~$goog.events.EventTarget","^3B"]]],["^1E","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13"]]],["^1E","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","~$goog.math.Long","~$goog.math.Integer","^2S","^2X","^2T","~$goog.Uri","^4N"]]],["^1E","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^32","^33","^3S","^2U"]]],["^1E","goog/log/log.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","^3T"]]],["^1E","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/trace.cljc"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^Y","^X","^45"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/component.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^2X","^D","^38","^3:","^3J","^42","^39"]]],["^1E","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^32","^47","^33","^2T","^2X","^2U","^2Y"]]],["^1E","goog/events/browserevent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3T","^2V","^3G","~$goog.events.EventType","^37","^2W"]]],["^1E","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^37"]]],["^1E","goog/structs/simplepool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3E"]]],["^1E","goog/dom/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2W"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/batching.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^39","^38"]]],["^1E","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12"]]],["^1E","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","^2S"]]],["^1E","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^2U","^33"]]],["^1E","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/util.cljs"],["281476450c8e1c16801f45e6a8b5a3ec76c62afd","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^12","^40","~$clojure.walk","^2X","^39"]]],["^1E","goog/events/listenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2M",["^ ","^2N",null,"^2O",["^Q",[]],"^2P",["^13","^3@","^3A"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/day8/re-frame/re-frame-10x/1.0.2/re-frame-10x-1.0.2.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/interop.clj",1618720435000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1617405365000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/day8/re-frame/re-frame-10x/1.0.2/re-frame-10x-1.0.2.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/ratom.clj",1618720435000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/day8/re-frame/re-frame-10x/1.0.2/re-frame-10x-1.0.2.jar!/day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/trace.cljc",1618720435000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/day8/re-frame/re-frame-10x/1.0.2/re-frame-10x-1.0.2.jar!/day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interop.clj",1618720435000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/day8/re-frame/re-frame-10x/1.0.2/re-frame-10x-1.0.2.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/core.clj",1618720435000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/day8/re-frame/re-frame-10x/1.0.2/re-frame-10x-1.0.2.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/debug.clj",1618720435000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",1,"^8",33,"^9",1,"^:",100,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N"],"^O",null,"^P",["^Q",[]],"^R","^S","^V",null,"^W",["^ ","^X","^X","^Y","^Y","^Z","^Z","^[","^Z","^10","^10","^11","^10","^12","^12","^13","^13"],"^14",["^Q",["^15"]],"~:shadow/js-access-global",["^Q",["Error"]],"^16",["^ ","^17","^X","^18","^Y","^19","^Y"],"~:defs",["^ ","~$update-effect",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",42,"^8",7,"^9",42,"^:",20,"~:arglists",["^1<",["~$quote",["^1<",[["~$context","~$key","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",3,"~:max-fixed-arity",3,"~:method-params",[["^1<",["^5Y","^5Z","~$f","^5["]]],"^5W",["^1<",[["^5Y","^5Z","~$f","~$&","^5["]]],"~:arglists-meta",["^1<",[null]]]],"^R","^2J","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",20,"^60",["^ ","^61",true,"^62",3,"^63",3,"^64",[["^1<",["^5Y","^5Z","~$f","^5["]]],"^5W",["^1<",[["^5Y","^5Z","~$f","~$&","^5["]]],"^65",["^1<",[null]]],"^64",[["^1<",["^5Y","^5Z","~$f","^5["]]],"~:protocol-impl",null,"^62",3,"^65",["^1<",[null]],"^8",1,"^61",true,"~:methods",[["^ ","^62",3,"^61",true,"~:tag","~$any"]],"^7",42,"~:ret-tag","^69","^9",42,"^63",3,"~:fn-var",true,"^5W",["^1<",[["^5Y","^5Z","~$f","~$&","^5["]]]],"~$invoke-interceptors",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",74,"^8",8,"^9",74,"^:",27,"~:private",true,"^5W",["^1<",["^5X",["^1<",[["^5Y","~$direction"]]]]],"~:doc","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"^6=",true,"^R","^2H","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",27,"^64",["^1<",[["^5Y","^6>"]]],"^66",null,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^7",74,"^9",74,"^63",2,"^6;",true,"^5W",["^1<",["^5X",["^1<",[["^5Y","^6>"]]]]],"^6?","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"~$assoc-coeffect",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",56,"^8",7,"^9",56,"^:",21,"^5W",["^1<",["^5X",["^1<",[["^5Y","^5Z","~$value"]]]]]],"^R","^2>","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",21,"^64",["^1<",[["^5Y","^5Z","^6A"]]],"^66",null,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^7",56,"^6:",["^Q",["~$clj","^69"]],"^9",56,"^63",3,"^6;",true,"^5W",["^1<",["^5X",["^1<",[["^5Y","^5Z","^6A"]]]]]],"~$update-coeffect",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",60,"^8",7,"^9",60,"^:",22,"^5W",["^1<",["^5X",["^1<",[["^5Y","^5Z","~$f","~$&","^5["]]]]],"^60",["^ ","^61",true,"^62",3,"^63",3,"^64",[["^1<",["^5Y","^5Z","~$f","^5["]]],"^5W",["^1<",[["^5Y","^5Z","~$f","~$&","^5["]]],"^65",["^1<",[null]]]],"^R","^2;","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",22,"^60",["^ ","^61",true,"^62",3,"^63",3,"^64",[["^1<",["^5Y","^5Z","~$f","^5["]]],"^5W",["^1<",[["^5Y","^5Z","~$f","~$&","^5["]]],"^65",["^1<",[null]]],"^64",[["^1<",["^5Y","^5Z","~$f","^5["]]],"^66",null,"^62",3,"^65",["^1<",[null]],"^8",1,"^61",true,"^67",[["^ ","^62",3,"^61",true,"^68","^69"]],"^7",60,"^6:","^69","^9",60,"^63",3,"^6;",true,"^5W",["^1<",[["^5Y","^5Z","~$f","~$&","^5["]]]],"~$invoke-interceptor-fn",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",67,"^8",8,"^9",67,"^:",29,"^6=",true,"^5W",["^1<",["^5X",["^1<",[["^5Y","~$interceptor","^6>"]]]]]],"^6=",true,"^R","^1R","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",29,"^64",["^1<",[["^5Y","^6E","^6>"]]],"^66",null,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^7",67,"^6:",["^Q",[null,"^69"]],"^9",67,"^63",3,"^6;",true,"^5W",["^1<",["^5X",["^1<",[["^5Y","^6E","^6>"]]]]]],"~$get-effect",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",30,"^8",7,"^9",30,"^:",17,"^5W",["^1<",["^5X",["^1<",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","~$not-found"]]]]],"^60",["^ ","^61",false,"^62",3,"^63",3,"^64",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]],"^5W",["^1<",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]]],"^65",["^1<",[null,null,null]]]],"^R","^2B","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",17,"^60",["^ ","^61",false,"^62",3,"^63",3,"^64",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]],"^5W",["^1<",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]]],"^65",["^1<",[null,null,null]]],"^64",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]],"^66",null,"^62",3,"^65",["^1<",[null,null,null]],"^8",1,"^61",false,"^67",[["^ ","^62",1,"^61",false,"^68","^69"],["^ ","^62",2,"^61",false,"^68",["^Q",[null,"^69"]]],["^ ","^62",3,"^61",false,"^68",["^Q",[null,"^69"]]]],"^7",30,"^9",30,"^63",3,"^6;",true,"^5W",["^1<",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]]]],"~$->interceptor",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",17,"^8",7,"^9",17,"^:",20,"^5W",["^1<",["^5X",["^1<",[["~$&",["^ ","^1?","~$m","~:keys",["~$id","~$before","~$after"]]]]]]],"^60",["^ ","^61",true,"^62",0,"^63",0,"^64",[["^1<",[["^ ","^1?","~$m","^6I",["^6J","^6K","^6L"]]]]],"^5W",["^1<",[["~$&",["^ ","^1?","~$m","^6I",["^6J","^6K","^6L"]]]]],"^65",["^1<",[null]]]],"^R","^2F","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",20,"^60",["^ ","^61",true,"^62",0,"^63",0,"^64",[["^1<",[["^ ","^1?","~$m","^6I",["^6J","^6K","^6L"]]]]],"^5W",["^1<",[["~$&",["^ ","^1?","~$m","^6I",["^6J","^6K","^6L"]]]]],"^65",["^1<",[null]]],"^64",[["^1<",[["^ ","^1?","~$m","^6I",["^6J","^6K","^6L"]]]]],"^66",null,"^62",0,"^65",["^1<",[null]],"^8",1,"^61",true,"^67",[["^ ","^62",0,"^61",true,"^68","~$cljs.core/IMap"]],"^7",17,"^6:","^69","^9",17,"^63",0,"^6;",true,"^5W",["^1<",[["~$&",["^ ","^1?","~$m","^6I",["^6J","^6K","^6L"]]]]]],"~$get-coeffect",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",48,"^8",7,"^9",48,"^:",19,"^5W",["^1<",["^5X",["^1<",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]]]]],"^60",["^ ","^61",false,"^62",3,"^63",3,"^64",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]],"^5W",["^1<",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]]],"^65",["^1<",[null,null,null]]]],"^R","^1S","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^60",["^ ","^61",false,"^62",3,"^63",3,"^64",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]],"^5W",["^1<",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]]],"^65",["^1<",[null,null,null]]],"^64",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]],"^66",null,"^62",3,"^65",["^1<",[null,null,null]],"^8",1,"^61",false,"^67",[["^ ","^62",1,"^61",false,"^68","^69"],["^ ","^62",2,"^61",false,"^68",["^Q",[null,"^69"]]],["^ ","^62",3,"^61",false,"^68",["^Q",[null,"^69"]]]],"^7",48,"^9",48,"^63",3,"^6;",true,"^5W",["^1<",[["^5Y"],["^5Y","^5Z"],["^5Y","^5Z","^6G"]]]],"~$execute",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",146,"^8",7,"^9",146,"^:",14,"^5W",["^1<",["^5X",["^1<",[["~$event-v","~$interceptors"]]]]],"^6?","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"^R","^21","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",14,"^64",["^1<",[["^6P","^6Q"]]],"^66",null,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^7",146,"^6:","^69","^9",146,"^63",2,"^6;",true,"^5W",["^1<",["^5X",["^1<",[["^6P","^6Q"]]]]],"^6?","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"~$assoc-effect",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",38,"^8",7,"^9",38,"^:",19,"^5W",["^1<",["^5X",["^1<",[["^5Y","^5Z","^6A"]]]]]],"^R","^1X","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^64",["^1<",[["^5Y","^5Z","^6A"]]],"^66",null,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^7",38,"^6:",["^Q",["^6B","^69"]],"^9",38,"^63",3,"^6;",true,"^5W",["^1<",["^5X",["^1<",[["^5Y","^5Z","^6A"]]]]]],"~$enqueue",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",111,"^8",7,"^9",111,"^:",14,"^5W",["^1<",["^5X",["^1<",[["^5Y","^6Q"]]]]]],"^R","^2C","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",14,"^64",["^1<",[["^5Y","^6Q"]]],"^66",null,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^7",111,"^6:",["^Q",["^6B","^69"]],"^9",111,"^63",2,"^6;",true,"^5W",["^1<",["^5X",["^1<",[["^5Y","^6Q"]]]]]],"~$mandatory-interceptor-keys",["^ ","^R","^22","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",9,"^8",1,"^9",9,"^:",32,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",9,"^8",6,"^9",9,"^:",32],"^68","~$cljs.core/ISet"],"~$interceptor?",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",11,"^8",7,"^9",11,"^:",19,"^5W",["^1<",["^5X",["^1<",[["~$m"]]]]]],"^R","^28","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^64",["^1<",[["~$m"]]],"^66",null,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^7",11,"^6:","~$boolean","^9",11,"^63",1,"^6;",true,"^5W",["^1<",["^5X",["^1<",[["~$m"]]]]]],"~$change-direction",["^ ","^5V",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",132,"^8",8,"^9",132,"^:",24,"^6=",true,"^5W",["^1<",["^5X",["^1<",[["^5Y"]]]]],"^6?","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^6=",true,"^R","^1Q","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",24,"^64",["^1<",[["^5Y"]]],"^66",null,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^7",132,"^6:",["^Q",["^6B","^69"]],"^9",132,"^63",1,"^6;",true,"^5W",["^1<",["^5X",["^1<",[["^5Y"]]]]],"^6?","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^5Y",["^ ","^5V",null,"^5",["^ ","^6=",true,"^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",15,"^60",["^ ","^61",false,"^62",3,"^63",3,"^64",[["~$event","^6Q"],["^6Y","^6Q","~$db"]],"^5W",["^1<",[["^6Y","^6Q"],["^6Y","^6Q","^6Z"]]],"^65",["^1<",[null,null]]],"^8",8,"^7",118,"^9",118,"^5W",["^1<",["^5X",["^1<",[["^6Y","^6Q"],["^6Y","^6Q","^6Z"]]]]],"^6?","Create a fresh context"],"^6=",true,"^R","^2A","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",15,"^60",["^ ","^61",false,"^62",3,"^63",3,"^64",[["^6Y","^6Q"],["^6Y","^6Q","^6Z"]],"^5W",["^1<",[["^6Y","^6Q"],["^6Y","^6Q","^6Z"]]],"^65",["^1<",[null,null]]],"^64",[["^6Y","^6Q"],["^6Y","^6Q","^6Z"]],"^66",null,"^62",3,"^65",["^1<",[null,null]],"^8",1,"^61",false,"^67",[["^ ","^62",2,"^61",false,"^68",["^Q",["^6B","^69"]]],["^ ","^62",3,"^61",false,"^68",["^Q",["^6B","^69"]]]],"^7",118,"^9",118,"^63",3,"^6;",true,"^5W",["^1<",[["^6Y","^6Q"],["^6Y","^6Q","^6Z"]]],"^6?","Create a fresh context"]],"^1:",["^ ","^Z","^Z","^[","^Z","^12","^12"],"~:cljs.analyzer/constants",["^ ","^14",["^Q",["~:unnamed","~:tags","~:original-event","~:db","~:queue","~:event","~:after","~:id","~:effects","~:stack","~:error","~:coeffects","~:interceptors","~:before"]],"~:order",["^76","^77","^7=","^7:","^70","^78","^7;","^74","^79","^75","^72","^73","^71","^7<"]],"^1A",["^ ","^15",["^Q",[]]],"^1B",["^ "],"^1C",["^13","^12","^X","^Y","^Z","^10"]],"^U","^S","~:ns-specs",["^ "],"~:ns-spec-vars",["^Q",[]],"~:compiler-options",["^2L",[["^7A","~:static-fns"],true,["^7A","~:shadow-tweaks"],null,["^7A","~:source-map-inline"],null,["^7A","~:elide-asserts"],false,["^7A","~:optimize-constants"],null,["^7A","^1H"],null,["^7A","~:external-config"],null,["^7A","~:tooling-config"],null,["^7A","~:emit-constants"],null,["^7A","~:load-tests"],null,["^7A","~:form-size-threshold"],null,["^7A","~:data-readers"],null,["^7A","~:infer-externs"],"~:auto",["^7A","^1J"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7A","~:fn-invoke-direct"],null,["^7A","~:source-map"],"/dev/null"]]]