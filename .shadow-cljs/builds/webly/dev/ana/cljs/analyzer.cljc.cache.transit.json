["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer');\ncljs.analyzer._STAR_cljs_ns_STAR_ = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\ncljs.analyzer._STAR_cljs_file_STAR_ = null;\ncljs.analyzer._STAR_checked_arrays_STAR_ = false;\ncljs.analyzer._STAR_check_alias_dupes_STAR_ = true;\ncljs.analyzer._STAR_cljs_static_fns_STAR_ = false;\ncljs.analyzer._STAR_fn_invoke_direct_STAR_ = false;\ncljs.analyzer._STAR_cljs_macros_path_STAR_ = \"/cljs/core\";\ncljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = true;\ncljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558),cljs.core.PersistentVector.EMPTY], null));\ncljs.analyzer._STAR_analyze_deps_STAR_ = true;\ncljs.analyzer._STAR_load_tests_STAR_ = true;\ncljs.analyzer._STAR_load_macros_STAR_ = true;\ncljs.analyzer._STAR_reload_macros_STAR_ = false;\ncljs.analyzer._STAR_macro_infer_STAR_ = true;\ncljs.analyzer._STAR_passes_STAR_ = null;\ncljs.analyzer._STAR_file_defs_STAR_ = null;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = false;\n/**\n * The namespace of the constants table as a symbol.\n */\ncljs.analyzer.constants_ns_sym = new cljs.core.Symbol(null,\"cljs.core.constants\",\"cljs.core.constants\",2057417066,null);\ncljs.analyzer._STAR_verbose_STAR_ = false;\ncljs.analyzer._cljs_macros_loaded = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217)],[true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);\ncljs.analyzer.unchecked_arrays_QMARK_ = (function cljs$analyzer$unchecked_arrays_QMARK_(){\nreturn cljs.core._STAR_unchecked_arrays_STAR_;\n});\ncljs.analyzer.compiler_options = (function cljs$analyzer$compiler_options(){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"options\",\"options\",99638489));\n});\ncljs.analyzer.get_externs = (function cljs$analyzer$get_externs(){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n});\n/**\n * Returns false-y, :warn, or :error based on configuration and the\n * current value of *unchecked-arrays*.\n */\ncljs.analyzer.checked_arrays = (function cljs$analyzer$checked_arrays(){\nif(((cljs.core.not(new cljs.core.Keyword(null,\"advanced\",\"advanced\",-451287892).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.compiler_options()))) && ((!(cljs.core._STAR_unchecked_arrays_STAR_))))){\nreturn cljs.analyzer._STAR_checked_arrays_STAR_;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 63, [\"typeof\",null,\"float\",null,\"implements\",null,\"else\",null,\"boolean\",null,\"abstract\",null,\"int\",null,\"static\",null,\"package\",null,\"this\",null,\"await\",null,\"yield\",null,\"interface\",null,\"void\",null,\"delete\",null,\"class\",null,\"export\",null,\"var\",null,\"try\",null,\"long\",null,\"null\",null,\"return\",null,\"methods\",null,\"native\",null,\"private\",null,\"new\",null,\"for\",null,\"catch\",null,\"extends\",null,\"short\",null,\"protected\",null,\"throws\",null,\"synchronized\",null,\"transient\",null,\"super\",null,\"if\",null,\"let\",null,\"import\",null,\"char\",null,\"switch\",null,\"const\",null,\"case\",null,\"break\",null,\"volatile\",null,\"function\",null,\"continue\",null,\"final\",null,\"do\",null,\"double\",null,\"while\",null,\"public\",null,\"arguments\",null,\"debugger\",null,\"with\",null,\"instanceof\",null,\"default\",null,\"throw\",null,\"goto\",null,\"finally\",null,\"byte\",null,\"constructor\",null,\"in\",null,\"enum\",null], null), null);\ncljs.analyzer.es5_allowed = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"default\",null], null), null);\ncljs.analyzer.SENTINEL = ({});\ncljs.analyzer.gets = (function cljs$analyzer$gets(var_args){\nvar G__74051 = arguments.length;\nswitch (G__74051) {\ncase 3:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = (function (m,k0,k1){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k1);\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = (function (m,k0,k1,k2){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$2,k2);\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = (function (m,k0,k1,k2,k3){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$3 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2,k2,cljs.analyzer.SENTINEL);\nif((m__$3 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$3,k3);\n}\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$lang$maxFixedArity = 5);\n\ncljs.analyzer.munge_path = (function cljs$analyzer$munge_path(ss){\nreturn cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ss));\n});\n/**\n * Given a namespace as a symbol return the relative path. May optionally\n *   provide the file extension, defaults to :cljs.\n */\ncljs.analyzer.ns__GT_relpath = (function cljs$analyzer$ns__GT_relpath(var_args){\nvar G__74056 = arguments.length;\nswitch (G__74056) {\ncase 1:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629));\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = (function (ns,ext){\nreturn [clojure.string.replace(cljs.analyzer.munge_path(ns),\".\",\"/\"),\".\",cljs.core.name(ext)].join('');\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.topo_sort = (function cljs$analyzer$topo_sort(var_args){\nvar G__74060 = arguments.length;\nswitch (G__74060) {\ncase 2:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = (function (x,get_deps){\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(x,(0),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.sorted_map()),cljs.core.memoize(get_deps));\n}));\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = (function (x,depth,state,memo_get_deps){\nvar deps = (memo_get_deps.cljs$core$IFn$_invoke$arity$1 ? memo_get_deps.cljs$core$IFn$_invoke$arity$1(x) : memo_get_deps.call(null,x));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [depth], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\nvar seq__74061_75474 = cljs.core.seq(deps);\nvar chunk__74062_75475 = null;\nvar count__74063_75476 = (0);\nvar i__74064_75477 = (0);\nwhile(true){\nif((i__74064_75477 < count__74063_75476)){\nvar dep_75479 = chunk__74062_75475.cljs$core$IIndexed$_nth$arity$2(null,i__74064_75477);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_75479,(depth + (1)),state,memo_get_deps);\n\n\nvar G__75481 = seq__74061_75474;\nvar G__75482 = chunk__74062_75475;\nvar G__75483 = count__74063_75476;\nvar G__75484 = (i__74064_75477 + (1));\nseq__74061_75474 = G__75481;\nchunk__74062_75475 = G__75482;\ncount__74063_75476 = G__75483;\ni__74064_75477 = G__75484;\ncontinue;\n} else {\nvar temp__5753__auto___75485 = cljs.core.seq(seq__74061_75474);\nif(temp__5753__auto___75485){\nvar seq__74061_75486__$1 = temp__5753__auto___75485;\nif(cljs.core.chunked_seq_QMARK_(seq__74061_75486__$1)){\nvar c__4591__auto___75487 = cljs.core.chunk_first(seq__74061_75486__$1);\nvar G__75488 = cljs.core.chunk_rest(seq__74061_75486__$1);\nvar G__75489 = c__4591__auto___75487;\nvar G__75490 = cljs.core.count(c__4591__auto___75487);\nvar G__75491 = (0);\nseq__74061_75474 = G__75488;\nchunk__74062_75475 = G__75489;\ncount__74063_75476 = G__75490;\ni__74064_75477 = G__75491;\ncontinue;\n} else {\nvar dep_75492 = cljs.core.first(seq__74061_75486__$1);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_75492,(depth + (1)),state,memo_get_deps);\n\n\nvar G__75493 = cljs.core.next(seq__74061_75486__$1);\nvar G__75494 = null;\nvar G__75495 = (0);\nvar G__75496 = (0);\nseq__74061_75474 = G__75493;\nchunk__74062_75475 = G__75494;\ncount__74063_75476 = G__75495;\ni__74064_75477 = G__75496;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__74073_75497 = cljs.core.seq(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(state),cljs.core._LT_,depth));\nvar chunk__74074_75498 = null;\nvar count__74075_75499 = (0);\nvar i__74076_75500 = (0);\nwhile(true){\nif((i__74076_75500 < count__74075_75499)){\nvar vec__74087_75501 = chunk__74074_75498.cljs$core$IIndexed$_nth$arity$2(null,i__74076_75500);\nvar _LT_depth_75502 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74087_75501,(0),null);\nvar __75503 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74087_75501,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_75502], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__75504 = seq__74073_75497;\nvar G__75505 = chunk__74074_75498;\nvar G__75506 = count__74075_75499;\nvar G__75507 = (i__74076_75500 + (1));\nseq__74073_75497 = G__75504;\nchunk__74074_75498 = G__75505;\ncount__74075_75499 = G__75506;\ni__74076_75500 = G__75507;\ncontinue;\n} else {\nvar temp__5753__auto___75508 = cljs.core.seq(seq__74073_75497);\nif(temp__5753__auto___75508){\nvar seq__74073_75510__$1 = temp__5753__auto___75508;\nif(cljs.core.chunked_seq_QMARK_(seq__74073_75510__$1)){\nvar c__4591__auto___75511 = cljs.core.chunk_first(seq__74073_75510__$1);\nvar G__75512 = cljs.core.chunk_rest(seq__74073_75510__$1);\nvar G__75513 = c__4591__auto___75511;\nvar G__75514 = cljs.core.count(c__4591__auto___75511);\nvar G__75515 = (0);\nseq__74073_75497 = G__75512;\nchunk__74074_75498 = G__75513;\ncount__74075_75499 = G__75514;\ni__74076_75500 = G__75515;\ncontinue;\n} else {\nvar vec__74094_75517 = cljs.core.first(seq__74073_75510__$1);\nvar _LT_depth_75518 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74094_75517,(0),null);\nvar __75519 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74094_75517,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_75518], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__75520 = cljs.core.next(seq__74073_75510__$1);\nvar G__75521 = null;\nvar G__75522 = (0);\nvar G__75523 = (0);\nseq__74073_75497 = G__75520;\nchunk__74074_75498 = G__75521;\ncount__74075_75499 = G__75522;\ni__74076_75500 = G__75523;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth,(0))){\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.vals(cljs.core.deref(state))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4);\n\n\ncljs.analyzer.ast_QMARK_ = (function cljs$analyzer$ast_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && (cljs.core.contains_QMARK_(x,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955))));\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.error_message !== 'undefined')){\n} else {\ncljs.analyzer.error_message = (function (){var method_table__4654__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4655__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4656__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4657__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4658__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__74102 = cljs.core.get_global_hierarchy;\nreturn (fexpr__74102.cljs$core$IFn$_invoke$arity$0 ? fexpr__74102.cljs$core$IFn$_invoke$arity$0() : fexpr__74102.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"error-message\"),(function() { \nvar G__75528__delegate = function (warning_type,_){\nreturn warning_type;\n};\nvar G__75528 = function (warning_type,var_args){\nvar _ = null;\nif (arguments.length > 1) {\nvar G__75529__i = 0, G__75529__a = new Array(arguments.length -  1);\nwhile (G__75529__i < G__75529__a.length) {G__75529__a[G__75529__i] = arguments[G__75529__i + 1]; ++G__75529__i;}\n  _ = new cljs.core.IndexedSeq(G__75529__a,0,null);\n} \nreturn G__75528__delegate.call(this,warning_type,_);};\nG__75528.cljs$lang$maxFixedArity = 1;\nG__75528.cljs$lang$applyTo = (function (arglist__75530){\nvar warning_type = cljs.core.first(arglist__75530);\nvar _ = cljs.core.rest(arglist__75530);\nreturn G__75528__delegate(warning_type,_);\n});\nG__75528.cljs$core$IFn$_invoke$arity$variadic = G__75528__delegate;\nreturn G__75528;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4658__auto__,method_table__4654__auto__,prefer_table__4655__auto__,method_cache__4656__auto__,cached_hierarchy__4657__auto__));\n})();\n}\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),(function (warning_type,info){\nreturn [\"Preamble resource file not found: \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"missing\",\"missing\",362507769).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),(function (warning_type,info){\nreturn [\"Required namespace not provided for \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),(function (warning_type,info){\nreturn [(cljs.core.truth_(new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205).cljs$core$IFn$_invoke$arity$1(info))?\"Can't take value of macro \":\"Use of undeclared Var \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),(function (warning_type,info){\nreturn [\"var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" is not public\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),(function (warning_type,p__74113){\nvar map__74114 = p__74113;\nvar map__74114__$1 = cljs.core.__destructure_map(map__74114);\nvar info = map__74114__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74114__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74114__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629)),\", \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583)),\", or JavaScript source providing \\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(js_provide),\"\\\"\",((clojure.string.includes_QMARK_(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(ns_sym),\"_\"))?\" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\":null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-macros-ns\",\"undeclared-macros-ns\",-438029430),(function (warning_type,p__74117){\nvar map__74118 = p__74117;\nvar map__74118__$1 = cljs.core.__destructure_map(map__74118);\nvar info = map__74118__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74118__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74118__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such macros namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"clj\",\"clj\",-660495428)),\" or \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" not declared ^:dynamic\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" already refers to: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" being replaced by: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info))))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(info)),\" is being replaced\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" no longer fn, references are stale\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),(function (warning_type,info){\nreturn [\"Wrong number of args (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519).cljs$core$IFn$_invoke$arity$1(info)),\") passed to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info);\n}\n})())].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" declared arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(info)),\" mismatch defined arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),(function (warning_type,info){\nreturn [\"Invalid :refer, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"lib\",\"lib\",191808726).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" does not exist\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),(function (warning_type,info){\nreturn [\"Can't resolve protocol symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),(function (warning_type,info){\nreturn [\"Symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is not a protocol\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),(function (warning_type,info){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"no-such-method\",\"no-such-method\",1087422840).cljs$core$IFn$_invoke$arity$1(info))){\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare method called \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n} else {\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare arity \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"invalid-arity\",\"invalid-arity\",1335461949).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),(function (warning_type,info){\nreturn [\"Duplicated methods in protocol implementation \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implemented multiple times\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" declares method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),(function (warning_type,info){\nvar overwritten_protocol = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"existing\",\"existing\",-340796094).cljs$core$IFn$_invoke$arity$1(info));\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is overwriting \",(cljs.core.truth_(overwritten_protocol)?\"method\":\"function\"),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),(cljs.core.truth_(overwritten_protocol)?[\" of protocol \",cljs.core.name(overwritten_protocol)].join(''):null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implements method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),(function (warning_type,info){\nreturn [\"Ignoring target object \\\"\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(info)], 0)),\"\\\" passed in recur to protocol method head\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have more than 1 variadic overload\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have fixed arity function with more params than variadic function\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have 2 overloads with same arity\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),(function (warning_type,info){\nreturn [\"Extending an existing JavaScript type - use a different symbol name \",\"instead of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"current-symbol\",\"current-symbol\",-932381075).cljs$core$IFn$_invoke$arity$1(info)),\" e.g \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suggested-symbol\",\"suggested-symbol\",-1329631875).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(info)),\", all arguments must be numbers, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"types\",\"types\",590030639).cljs$core$IFn$_invoke$arity$1(info)),\" instead\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),(function (warning_type,p__74164){\nvar map__74165 = p__74164;\nvar map__74165__$1 = cljs.core.__destructure_map(map__74165);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74165__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar types = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74165__$1,new cljs.core.Keyword(null,\"types\",\"types\",590030639));\nvar G__74166 = name;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),G__74166)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),G__74166)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),G__74166)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),G__74166)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__74166)].join('')));\n\n}\n}\n}\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),(function (warning_type,info){\nreturn [\"Cannot invoke type constructor \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" as function \"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" is a single segment namespace\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),(function (warning_type,p__74192){\nvar map__74193 = p__74192;\nvar map__74193__$1 = cljs.core.__destructure_map(map__74193);\nvar info = map__74193__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74193__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar munged = cljs.core.munge(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74191_SHARP_){\nif(cljs.core.truth_((cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1(p1__74191_SHARP_) : cljs.analyzer.js_reserved.call(null,p1__74191_SHARP_)))){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__74191_SHARP_),\"$\"].join('');\n} else {\nreturn p1__74191_SHARP_;\n}\n}),clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name),/\\./))));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" contains a reserved JavaScript keyword,\",\" the corresponding Google Closure namespace will be munged to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),(function (warning_type,p__74197){\nvar map__74198 = p__74197;\nvar map__74198__$1 = cljs.core.__destructure_map(map__74198);\nvar info = map__74198__$1;\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74198__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74198__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\" clashes with var \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),(function (warning_type,p__74200){\nvar map__74201 = p__74200;\nvar map__74201__$1 = cljs.core.__destructure_map(map__74201);\nvar info = map__74201__$1;\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74201__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" not declared dynamic and thus is not dynamically rebindable, but its name \",\"suggests otherwise. Please either indicate ^:dynamic \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" or change the name\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),(function (warning_type,p__74202){\nvar map__74203 = p__74202;\nvar map__74203__$1 = cljs.core.__destructure_map(map__74203);\nvar info = map__74203__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74203__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74203__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nreturn [\"Bad extend-type method shape for protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol),\" method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method),\", method arities must be grouped together\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),(function (warning_type,p__74206){\nvar map__74207 = p__74206;\nvar map__74207__$1 = cljs.core.__destructure_map(map__74207);\nvar info = map__74207__$1;\nvar module_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74207__$1,new cljs.core.Keyword(null,\"module-type\",\"module-type\",1392760304));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74207__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported JavaScript module type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(module_type),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),(function (warning_type,p__74211){\nvar map__74212 = p__74211;\nvar map__74212__$1 = cljs.core.__destructure_map(map__74212);\nvar preprocess = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74212__$1,new cljs.core.Keyword(null,\"preprocess\",\"preprocess\",1208285012));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74212__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported preprocess value \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(preprocess),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),(function (warning_type,p__74214){\nvar map__74215 = p__74214;\nvar map__74215__$1 = cljs.core.__destructure_map(map__74215);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74215__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" is shadowed by a local\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),(function (warning_type,p__74216){\nvar map__74217 = p__74216;\nvar map__74217__$1 = cljs.core.__destructure_map(map__74217);\nvar warn_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74217__$1,new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74217__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74217__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar property = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74217__$1,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232));\nvar G__74218 = warn_type;\nvar G__74218__$1 = (((G__74218 instanceof cljs.core.Keyword))?G__74218.fqn:null);\nswitch (G__74218__$1) {\ncase \"target\":\nreturn [\"Cannot infer target type in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form),\"\"].join('');\n\nbreak;\ncase \"property\":\nreturn [\"Cannot resolve property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" for inferred type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(type),\" in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ncase \"object\":\nreturn [\"Adding extern to Object for property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" due to \",\"ambiguous expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__74218__$1)].join('')));\n\n}\n}));\ncljs.analyzer.default_warning_handler = (function cljs$analyzer$default_warning_handler(warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nvar temp__5753__auto__ = cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warning_type,extra);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar s = temp__5753__auto__;\nvar _STAR_print_fn_STAR__orig_val__74221 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_fn_STAR__temp_val__74222 = cljs.core._STAR_print_err_fn_STAR_;\n(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__74222);\n\ntry{return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__74223 = env;\nvar G__74224 = [\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join('');\nreturn (cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2(G__74223,G__74224) : cljs.analyzer.message.call(null,G__74223,G__74224));\n})()], 0));\n}finally {(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__74221);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);\ncljs.analyzer.repeat_char = (function cljs$analyzer$repeat_char(c,n){\nvar ret = c;\nvar n__$1 = n;\nwhile(true){\nif((n__$1 > (0))){\nvar G__75558 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret),cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join('');\nvar G__75559 = (n__$1 - (1));\nret = G__75558;\nn__$1 = G__75559;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n});\ncljs.analyzer.hex_format = (function cljs$analyzer$hex_format(s,pad){\nvar hex = s.charCodeAt((0)).toString((16));\nvar len = hex.length;\nvar hex__$1 = (((len < pad))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.repeat_char(\"0\",(pad - len))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex)].join(''):hex);\nreturn [\"_u\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex__$1),\"_\"].join('');\n});\ncljs.analyzer.gen_constant_id = (function cljs$analyzer$gen_constant_id(value){\nvar prefix = (((value instanceof cljs.core.Keyword))?\"cst$kw$\":(((value instanceof cljs.core.Symbol))?\"cst$sym$\":(function(){throw (new Error([\"constant type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(value)),\" not supported\"].join('')))})()\n));\nvar name = (((value instanceof cljs.core.Keyword))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(value),(1)):cljs.core.str.cljs$core$IFn$_invoke$arity$1(value));\nvar name__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\".\",name))?\"_DOT_\":clojure.string.replace(clojure.string.replace(cljs.core.munge(clojure.string.replace(name,\"-\",\"_DASH_\")),\".\",\"$\"),/[^a-z0-9$_]/i,(function (p1__74229_SHARP_){\nreturn cljs.analyzer.hex_format(p1__74229_SHARP_,(4));\n})));\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([prefix,name__$1].join(''));\n});\ncljs.analyzer.register_constant_BANG_ = (function cljs$analyzer$register_constant_BANG_(var_args){\nvar G__74242 = arguments.length;\nswitch (G__74242) {\ncase 1:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (val){\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(null,val);\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (env,val){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (cenv){\nvar G__74245 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"constant-table\",\"cljs.analyzer/constant-table\",-114131889)], null),(function (table){\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(table,val))){\nreturn table;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(table,val,cljs.analyzer.gen_constant_id(val));\n}\n}));\nif(cljs.core.truth_(env)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__74245,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(\"cljs.analyzer\",\"constants\",\"cljs.analyzer/constants\",1697083770)], null),(function (p__74248){\nvar map__74249 = p__74248;\nvar map__74249__$1 = cljs.core.__destructure_map(map__74249);\nvar constants = map__74249__$1;\nvar seen = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__74249__$1,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.PersistentHashSet.EMPTY);\nvar order = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__74249__$1,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.PersistentVector.EMPTY);\nvar G__74251 = constants;\nif((!(cljs.core.contains_QMARK_(seen,val)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__74251,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen,val),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(order,val)], 0));\n} else {\nreturn G__74251;\n}\n}));\n} else {\nreturn G__74245;\n}\n}));\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null)], null);\ncljs.analyzer.namespaces = (function (){\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.t_cljs$analyzer74253 !== 'undefined')){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.analyzer.t_cljs$analyzer74253 = (function (meta74254){\nthis.meta74254 = meta74254;\nthis.cljs$lang$protocol_mask$partition0$ = 425984;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(cljs.analyzer.t_cljs$analyzer74253.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_74255,meta74254__$1){\nvar self__ = this;\nvar _74255__$1 = this;\nreturn (new cljs.analyzer.t_cljs$analyzer74253(meta74254__$1));\n}));\n\n(cljs.analyzer.t_cljs$analyzer74253.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_74255){\nvar self__ = this;\nvar _74255__$1 = this;\nreturn self__.meta74254;\n}));\n\n(cljs.analyzer.t_cljs$analyzer74253.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nif((!((cljs.env._STAR_compiler_STAR_ == null)))){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n} else {\nreturn cljs.analyzer.default_namespaces;\n}\n}));\n\n(cljs.analyzer.t_cljs$analyzer74253.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"meta74254\",\"meta74254\",54700546,null)], null);\n}));\n\n(cljs.analyzer.t_cljs$analyzer74253.cljs$lang$type = true);\n\n(cljs.analyzer.t_cljs$analyzer74253.cljs$lang$ctorStr = \"cljs.analyzer/t_cljs$analyzer74253\");\n\n(cljs.analyzer.t_cljs$analyzer74253.cljs$lang$ctorPrWriter = (function (this__4404__auto__,writer__4405__auto__,opt__4406__auto__){\nreturn cljs.core._write(writer__4405__auto__,\"cljs.analyzer/t_cljs$analyzer74253\");\n}));\n\n/**\n * Positional factory function for cljs.analyzer/t_cljs$analyzer74253.\n */\ncljs.analyzer.__GT_t_cljs$analyzer74253 = (function cljs$analyzer$__GT_t_cljs$analyzer74253(meta74254){\nreturn (new cljs.analyzer.t_cljs$analyzer74253(meta74254));\n});\n\n}\n\nreturn (new cljs.analyzer.t_cljs$analyzer74253(cljs.core.PersistentArrayMap.EMPTY));\n})()\n;\ncljs.analyzer.get_namespace = (function cljs$analyzer$get_namespace(var_args){\nvar G__74272 = arguments.length;\nswitch (G__74272) {\ncase 1:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = (function (key){\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,key);\n}));\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = (function (cenv,key){\nvar temp__5755__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cenv),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),key], null));\nif((temp__5755__auto__ == null)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),key)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null);\n} else {\nreturn null;\n}\n} else {\nvar ns = temp__5755__auto__;\nreturn ns;\n}\n}));\n\n(cljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.get_line = (function cljs$analyzer$get_line(x,env){\nvar or__4160__auto__ = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\ncljs.analyzer.get_col = (function cljs$analyzer$get_col(x,env){\nvar or__4160__auto__ = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\n/**\n * Given a Clojure namespace intern all macros into the ambient ClojureScript\n * analysis environment.\n */\ncljs.analyzer.intern_macros = (function cljs$analyzer$intern_macros(var_args){\nvar G__74286 = arguments.length;\nswitch (G__74286) {\ncase 1:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(ns,false);\n}));\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = (function (ns,reload){\nif(cljs.core.truth_((function (){var or__4160__auto__ = (cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)) == null);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nreturn reload;\n}\n})())){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__74296){\nvar vec__74297 = p__74296;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74297,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74297,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(function (){var vm = cljs.core.meta(v);\nvar ns__$1 = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(vm).getName();\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(vm,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)),new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404),true], 0));\n})()], null);\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__74304){\nvar vec__74306 = p__74304;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74306,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74306,(1),null);\nreturn v.isMacro();\n}),cljs.core.ns_interns_STAR_(ns)))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2);\n\n/**\n * Construct an empty analysis environment. Required to analyze forms.\n */\ncljs.analyzer.empty_env = (function cljs$analyzer$empty_env(){\nvar val__73946__auto__ = cljs.env._STAR_compiler_STAR_;\nif((val__73946__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0());\n} else {\n}\n\ntry{return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74313_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__74313_SHARP_,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),p1__74313_SHARP_,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null)],null));\n}),cljs.core.list(new cljs.core.Symbol(null,\"alert\",\"alert\",1068580947,null),new cljs.core.Symbol(null,\"window\",\"window\",-1929916235,null),new cljs.core.Symbol(null,\"document\",\"document\",311342840,null),new cljs.core.Symbol(null,\"console\",\"console\",-1426363712,null),new cljs.core.Symbol(null,\"escape\",\"escape\",648929575,null),new cljs.core.Symbol(null,\"unescape\",\"unescape\",-2037730561,null),new cljs.core.Symbol(null,\"screen\",\"screen\",-664376021,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"navigator\",\"navigator\",-604431588,null),new cljs.core.Symbol(null,\"history\",\"history\",1393136307,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"global\",\"global\",1734126574,null),new cljs.core.Symbol(null,\"process\",\"process\",-1011242831,null),new cljs.core.Symbol(null,\"require\",\"require\",1172530194,null),new cljs.core.Symbol(null,\"module\",\"module\",-1229817578,null),new cljs.core.Symbol(null,\"exports\",\"exports\",895523255,null))))], null);\n}finally {if((val__73946__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = null);\n} else {\n}\n}});\ncljs.analyzer.source_info__GT_error_data = (function cljs$analyzer$source_info__GT_error_data(p__74315){\nvar map__74317 = p__74315;\nvar map__74317__$1 = cljs.core.__destructure_map(map__74317);\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74317__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74317__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74317__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"clojure.error\",\"source\",\"clojure.error/source\",-2011936397),file,new cljs.core.Keyword(\"clojure.error\",\"line\",\"clojure.error/line\",-1816287471),line,new cljs.core.Keyword(\"clojure.error\",\"column\",\"clojure.error/column\",304721553),column], null);\n});\ncljs.analyzer.source_info = (function cljs$analyzer$source_info(var_args){\nvar G__74319 = arguments.length;\nswitch (G__74319) {\ncase 1:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = (function (env){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(null,env);\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = (function (name,env){\nvar G__74323 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)))?\"cljs/core.cljs\":cljs.analyzer._STAR_cljs_file_STAR_),new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(name,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(name,env)], null);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([G__74323,cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912)], null))], 0));\n} else {\nreturn G__74323;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.message = (function cljs$analyzer$message(env,s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))?[\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):(cljs.core.truth_(cljs.analyzer._STAR_cljs_file_STAR_)?[\" in file \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):null))].join('');\n});\ncljs.analyzer.warning = (function cljs$analyzer$warning(warning_type,env,extra){\nvar seq__74327 = cljs.core.seq(cljs.analyzer._STAR_cljs_warning_handlers_STAR_);\nvar chunk__74328 = null;\nvar count__74329 = (0);\nvar i__74330 = (0);\nwhile(true){\nif((i__74330 < count__74329)){\nvar handler = chunk__74328.cljs$core$IIndexed$_nth$arity$2(null,i__74330);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__75575 = seq__74327;\nvar G__75576 = chunk__74328;\nvar G__75577 = count__74329;\nvar G__75578 = (i__74330 + (1));\nseq__74327 = G__75575;\nchunk__74328 = G__75576;\ncount__74329 = G__75577;\ni__74330 = G__75578;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__74327);\nif(temp__5753__auto__){\nvar seq__74327__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__74327__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__74327__$1);\nvar G__75581 = cljs.core.chunk_rest(seq__74327__$1);\nvar G__75582 = c__4591__auto__;\nvar G__75583 = cljs.core.count(c__4591__auto__);\nvar G__75584 = (0);\nseq__74327 = G__75581;\nchunk__74328 = G__75582;\ncount__74329 = G__75583;\ni__74330 = G__75584;\ncontinue;\n} else {\nvar handler = cljs.core.first(seq__74327__$1);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__75585 = cljs.core.next(seq__74327__$1);\nvar G__75586 = null;\nvar G__75587 = (0);\nvar G__75588 = (0);\nseq__74327 = G__75585;\nchunk__74328 = G__75586;\ncount__74329 = G__75587;\ni__74330 = G__75588;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.accumulating_warning_handler = (function cljs$analyzer$accumulating_warning_handler(warn_acc){\nreturn (function (warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(warn_acc,cljs.core.conj,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [warning_type,env,extra], null));\n} else {\nreturn null;\n}\n});\n});\ncljs.analyzer.replay_accumulated_warnings = (function cljs$analyzer$replay_accumulated_warnings(warn_acc){\nreturn cljs.core.run_BANG_((function (p1__74361_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.warning,p1__74361_SHARP_);\n}),cljs.core.deref(warn_acc));\n});\ncljs.analyzer.error_data = (function cljs$analyzer$error_data(var_args){\nvar G__74366 = arguments.length;\nswitch (G__74366) {\ncase 2:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2 = (function (env,phase){\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,phase,null);\n}));\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3 = (function (env,phase,symbol){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.source_info__GT_error_data(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358),phase], null),(cljs.core.truth_(symbol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"symbol\",\"clojure.error/symbol\",1544821994),symbol], null):null)], 0));\n}));\n\n(cljs.analyzer.error_data.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.compile_syntax_error = (function cljs$analyzer$compile_syntax_error(env,msg,symbol){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"compile-syntax-check\",\"compile-syntax-check\",-1865080468),symbol),(new Error(msg)));\n});\ncljs.analyzer.error = (function cljs$analyzer$error(var_args){\nvar G__74377 = arguments.length;\nswitch (G__74377) {\ncase 2:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = (function (env,msg){\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,msg,null);\n}));\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = (function (env,msg,cause){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.message(env,msg),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349)),cause);\n}));\n\n(cljs.analyzer.error.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.analysis_error_QMARK_ = (function cljs$analyzer$analysis_error_QMARK_(ex){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(ex)));\n});\ncljs.analyzer.has_error_data_QMARK_ = (function cljs$analyzer$has_error_data_QMARK_(ex){\nreturn cljs.core.contains_QMARK_(cljs.core.ex_data(ex),new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358));\n});\ncljs.analyzer.implicit_nses = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),\"null\",new cljs.core.Symbol(null,\"goog.string\",\"goog.string\",-2055533048,null),\"null\",new cljs.core.Symbol(null,\"goog\",\"goog\",-70603925,null),\"null\",new cljs.core.Symbol(null,\"goog.object\",\"goog.object\",678593132,null),\"null\",new cljs.core.Symbol(null,\"Math\",\"Math\",2033287572,null),\"null\",new cljs.core.Symbol(null,\"goog.array\",\"goog.array\",-671977860,null),\"null\"], null), null);\ncljs.analyzer.implicit_import_QMARK_ = (function cljs$analyzer$implicit_import_QMARK_(env,prefix,suffix){\nreturn cljs.core.contains_QMARK_(cljs.analyzer.implicit_nses,prefix);\n});\ncljs.analyzer.confirm_var_exist_warning = (function cljs$analyzer$confirm_var_exist_warning(env,prefix,suffix){\nreturn (function (env__$1,prefix__$1,suffix__$1){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),env__$1,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),prefix__$1,new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057),suffix__$1,new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205),(!(((function (){var G__74390 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1));\nvar G__74391 = env__$1;\nreturn (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(G__74390,G__74391) : cljs.analyzer.get_expander.call(null,G__74390,G__74391));\n})() == null)))], null));\n});\n});\n/**\n * If a library name has the form foo$bar, return a vector of the library and\n * the sublibrary property.\n */\ncljs.analyzer.lib_AMPERSAND_sublib = (function cljs$analyzer$lib_AMPERSAND_sublib(lib){\nvar temp__5751__auto__ = cljs.core.re_matches(/(.*)\\$(.*)/,cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib));\nif(cljs.core.truth_(temp__5751__auto__)){\nvar xs = temp__5751__auto__;\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),xs);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib,null], null);\n}\n});\n/**\n * Check if a JavaScript namespace has been loaded. JavaScript vars are\n *   not currently checked.\n */\ncljs.analyzer.loaded_js_ns_QMARK_ = (function cljs$analyzer$loaded_js_ns_QMARK_(env,prefix){\nif(cljs.core.truth_(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix))){\nreturn null;\n} else {\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env);\nreturn (((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))) || ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))));\n}\n});\ncljs.analyzer.internal_js_module_exists_QMARK_ = (function cljs$analyzer$internal_js_module_exists_QMARK_(js_module_index,module){\nreturn cljs.core.contains_QMARK_(cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (p__74402){\nvar vec__74403 = p__74402;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74403,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74403,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(v)], null);\n})),js_module_index),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module));\n});\ncljs.analyzer.js_module_exists_QMARK__STAR_ = cljs.core.memoize(cljs.analyzer.internal_js_module_exists_QMARK_);\ncljs.analyzer.js_module_exists_QMARK_ = (function cljs$analyzer$js_module_exists_QMARK_(module){\nreturn cljs.analyzer.js_module_exists_QMARK__STAR_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931)], null)),module);\n});\ncljs.analyzer.node_module_dep_QMARK_ = (function cljs$analyzer$node_module_dep_QMARK_(module){\ntry{return ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\")) && (cljs.core.boolean$((function (){var or__4160__auto__ = require.resolve(cljs.core.str.cljs$core$IFn$_invoke$arity$1(module));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn require.resolve(cljs.core.first(cljs.analyzer.lib_AMPERSAND_sublib(module)));\n}\n})())));\n}catch (e74408){var _ = e74408;\nreturn false;\n}});\ncljs.analyzer.dep_has_global_exports_QMARK_ = (function cljs$analyzer$dep_has_global_exports_QMARK_(module){\nvar vec__74413 = cljs.analyzer.lib_AMPERSAND_sublib(module);\nvar module__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74413,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74413,(1),null);\nvar global_exports = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module__$1),new cljs.core.Keyword(null,\"global-exports\",\"global-exports\",-1644865592)], null));\nreturn ((cljs.core.contains_QMARK_(global_exports,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(module__$1))) || (cljs.core.contains_QMARK_(global_exports,cljs.core.name(module__$1))));\n});\ncljs.analyzer.confirm_var_exists = (function cljs$analyzer$confirm_var_exists(var_args){\nvar G__74419 = arguments.length;\nswitch (G__74419) {\ncase 3:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = (function (env,prefix,suffix){\nvar warn = cljs.analyzer.confirm_var_exist_warning(env,prefix,suffix);\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,warn);\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = (function (env,prefix,suffix,missing_fn){\nvar sufstr = cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix);\nvar suffix_str = (((((!((\"..\" === sufstr)))) && (/\\./.test(sufstr))))?cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2(sufstr,/\\./)):suffix);\nvar suffix__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix_str);\nif((((!(cljs.analyzer.implicit_import_QMARK_(env,prefix,suffix__$1)))) && ((!(cljs.analyzer.loaded_js_ns_QMARK_(env,prefix)))) && ((!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),prefix)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"unquote\",\"unquote\",-1004694737,null),suffix__$1)))))) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),suffix__$1) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(prefix))))){\nreturn (missing_fn.cljs$core$IFn$_invoke$arity$3 ? missing_fn.cljs$core$IFn$_invoke$arity$3(env,prefix,suffix__$1) : missing_fn.call(null,env,prefix,suffix__$1));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.confirm_var_exists_throw = (function cljs$analyzer$confirm_var_exists_throw(){\nreturn (function (env,prefix,suffix){\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,(function (env__$1,prefix__$1,suffix__$1){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,[\"Unable to resolve var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1),\" in this context\"].join(''));\n}));\n});\n});\ncljs.analyzer.resolve_ns_alias = (function cljs$analyzer$resolve_ns_alias(var_args){\nvar G__74425 = arguments.length;\nswitch (G__74425) {\ncase 2:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.resolve_macro_ns_alias = (function cljs$analyzer$resolve_macro_ns_alias(var_args){\nvar G__74430 = arguments.length;\nswitch (G__74430) {\ncase 2:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$lang$maxFixedArity = 3);\n\n/**\n * Given env, an analysis environment, and ns-sym, a symbol identifying a\n * namespace, confirm that the namespace exists. Warn if not found.\n */\ncljs.analyzer.confirm_ns = (function cljs$analyzer$confirm_ns(env,ns_sym){\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns_sym)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.implicit_nses,ns_sym) == null)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),ns_sym) == null)) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_sym) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(ns_sym))))){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),ns_sym,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),ns_sym], null));\n} else {\nreturn null;\n}\n});\n/**\n * Is sym visible from core in the current compilation namespace?\n */\ncljs.analyzer.core_name_QMARK_ = (function cljs$analyzer$core_name_QMARK_(env,sym){\nif((function (){var or__4160__auto__ = (!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)));\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar temp__5755__auto__ = (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(sym,env) : cljs.analyzer.get_expander.call(null,sym,env));\nif((temp__5755__auto__ == null)){\nreturn false;\n} else {\nvar mac = temp__5755__auto__;\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns.getName(),new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null));\n}\n}\n})()){\nreturn (!(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym)));\n} else {\nreturn false;\n}\n});\n/**\n * Is sym public?\n */\ncljs.analyzer.public_name_QMARK_ = (function cljs$analyzer$public_name_QMARK_(ns,sym){\nvar var_ast = (function (){var or__4160__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(ns),\"$macros\"].join('')),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\n}\n})();\nreturn (((!((var_ast == null)))) && (cljs.core.not((function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(var_ast);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"anonymous\",\"anonymous\",447897231).cljs$core$IFn$_invoke$arity$1(var_ast);\n}\n})())));\n});\ncljs.analyzer.js_tag_QMARK_ = (function cljs$analyzer$js_tag_QMARK_(x){\nreturn (((x instanceof cljs.core.Symbol)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.namespace(x))))));\n});\ncljs.analyzer.normalize_js_tag = (function cljs$analyzer$normalize_js_tag(x){\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)))){\nreturn cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(x),/\\./))),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null))], null));\n} else {\nreturn x;\n}\n});\n/**\n * Ensures that a type tag is a set.\n */\ncljs.analyzer.__GT_type_set = (function cljs$analyzer$__GT_type_set(t){\nif(cljs.analyzer.impl.cljs_set_QMARK_(t)){\nreturn t;\n} else {\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc([t]);\n}\n});\ncljs.analyzer.canonicalize_type = (function cljs$analyzer$canonicalize_type(t){\n\nif((t instanceof cljs.core.Symbol)){\nreturn t;\n} else {\nif(cljs.core.empty_QMARK_(t)){\nreturn null;\n} else {\nif(((1) === cljs.core.count(t))){\nreturn cljs.core.first(t);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null))){\nvar res = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(t,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null));\nif(((1) === cljs.core.count(res))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nreturn res;\n}\n} else {\nreturn t;\n\n}\n}\n}\n}\n}\n});\n/**\n * Produces a union of types.\n */\ncljs.analyzer.add_types = (function cljs$analyzer$add_types(var_args){\nvar G__74451 = arguments.length;\nswitch (G__74451) {\ncase 0:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4792__auto__ = [];\nvar len__4771__auto___75621 = arguments.length;\nvar i__4772__auto___75622 = (0);\nwhile(true){\nif((i__4772__auto___75622 < len__4771__auto___75621)){\nargs_arr__4792__auto__.push((arguments[i__4772__auto___75622]));\n\nvar G__75623 = (i__4772__auto___75622 + (1));\ni__4772__auto___75622 = G__75623;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4793__auto__ = (new cljs.core.IndexedSeq(args_arr__4792__auto__.slice((2)),(0),null));\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4793__auto__);\n\n}\n});\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1 = (function (t1){\nreturn t1;\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2 = (function (t1,t2){\nif((((t1 == null)) || ((t2 == null)))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.canonicalize_type(clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.__GT_type_set(t1),cljs.analyzer.__GT_type_set(t2)));\n}\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic = (function (t1,t2,ts){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.add_types,cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(t1,t2),ts);\n}));\n\n/** @this {Function} */\n(cljs.analyzer.add_types.cljs$lang$applyTo = (function (seq74448){\nvar G__74449 = cljs.core.first(seq74448);\nvar seq74448__$1 = cljs.core.next(seq74448);\nvar G__74450 = cljs.core.first(seq74448__$1);\nvar seq74448__$2 = cljs.core.next(seq74448__$1);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__74449,G__74450,seq74448__$2);\n}));\n\n(cljs.analyzer.add_types.cljs$lang$maxFixedArity = (2));\n\ncljs.analyzer.alias__GT_type = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"Array\",\"Array\",-423496279,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"Boolean\",\"Boolean\",1661141587,null),new cljs.core.Symbol(null,\"symbol\",\"symbol\",601958831,null),new cljs.core.Symbol(null,\"Symbol\",\"Symbol\",716452869,null)], null);\ncljs.analyzer.has_extern_QMARK__STAR_ = (function cljs$analyzer$has_extern_QMARK__STAR_(var_args){\nvar G__74459 = arguments.length;\nswitch (G__74459) {\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar pre__$1 = (function (){var temp__5755__auto__ = cljs.core.find(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null)),cljs.core.first(pre));\nif((temp__5755__auto__ == null)){\nreturn pre;\n} else {\nvar me = temp__5755__auto__;\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.first(me)));\nif((temp__5755__auto____$1 == null)){\nreturn pre;\n} else {\nvar tag = temp__5755__auto____$1;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre));\n}\n}\n})();\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(pre__$1,externs,externs);\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3 = (function (pre,externs,top){\nwhile(true){\nif(cljs.core.empty_QMARK_(pre)){\nreturn true;\n} else {\nvar x = cljs.core.first(pre);\nvar me = cljs.core.find(externs,x);\nif(cljs.core.not(me)){\nreturn false;\n} else {\nvar vec__74463 = me;\nvar x_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74463,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74463,(1),null);\nvar xmeta = cljs.core.meta(x_SINGLEQUOTE_);\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(xmeta)))?new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(xmeta):false))){\nvar or__4160__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.next(pre),externs_SINGLEQUOTE_,top);\n}\n} else {\nvar G__75632 = cljs.core.next(pre);\nvar G__75633 = externs_SINGLEQUOTE_;\nvar G__75634 = top;\npre = G__75632;\nexterns = G__75633;\ntop = G__75634;\ncontinue;\n}\n\n}\n\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.has_extern_QMARK_ = (function cljs$analyzer$has_extern_QMARK_(var_args){\nvar G__74467 = arguments.length;\nswitch (G__74467) {\ncase 1:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2(pre,cljs.analyzer.get_externs());\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar or__4160__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(pre,externs);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(pre)))?(function (){var x = cljs.core.first(pre);\nvar or__4160__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),x));\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null)], null),x));\n}\n})():null);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(pre)),\"cljs$\");\n}\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.js_tag = (function cljs$analyzer$js_tag(var_args){\nvar G__74470 = arguments.length;\nswitch (G__74470) {\ncase 1:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2 = (function (pre,tag_type){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3(pre,tag_type,cljs.analyzer.get_externs());\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3 = (function (pre,tag_type,externs){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(pre,tag_type,externs,externs);\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4 = (function (pre,tag_type,externs,top){\nvar temp__5753__auto__ = cljs.core.find(externs,cljs.core.first(pre));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar vec__74471 = temp__5753__auto__;\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74471,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74471,(1),null);\nvar me = vec__74471;\nvar tag = (function (){var G__74474 = cljs.core.meta(p);\nreturn (tag_type.cljs$core$IFn$_invoke$arity$1 ? tag_type.cljs$core$IFn$_invoke$arity$1(G__74474) : tag_type.call(null,G__74474));\n})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre),(1))){\nif(cljs.core.truth_(tag)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2(tag,tag) : cljs.analyzer.alias__GT_type.call(null,tag,tag))));\n} else {\nreturn null;\n}\n} else {\nvar or__4160__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.next(pre),tag_type,externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(top,tag),top);\n}\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.js_tag.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.dotted_symbol_QMARK_ = (function cljs$analyzer$dotted_symbol_QMARK_(sym){\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nreturn ((goog.string.contains(s,\".\")) && ((!(goog.string.contains(s,\"..\")))));\n});\ncljs.analyzer.munge_node_lib = (function cljs$analyzer$munge_node_lib(name){\nreturn [\"node$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\ncljs.analyzer.munge_global_export = (function cljs$analyzer$munge_global_export(name){\nreturn [\"global$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\n/**\n * Takes a namespace and an unqualified symbol and potentially returns a new\n *   symbol to be used in lieu of the original.\n */\ncljs.analyzer.resolve_alias = (function cljs$analyzer$resolve_alias(ns,sym){\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns))?(function (){var and__4149__auto__ = (function (){var fexpr__74479 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),\"null\",new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),\"null\"], null), null);\nreturn (fexpr__74479.cljs$core$IFn$_invoke$arity$1 ? fexpr__74479.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__74479.call(null,sym));\n})();\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.analyzer.checked_arrays();\n} else {\nreturn and__4149__auto__;\n}\n})():false))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget\",\"checked-aget\",950823006,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset\",\"checked-aset\",1556136760,null)], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget'\",\"checked-aget'\",212330530,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset'\",\"checked-aset'\",-510930777,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.checked_arrays(),sym], null));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.ns__GT_module_type = (function cljs$analyzer$ns__GT_module_type(ns){\nif(cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK_(ns))){\nreturn new cljs.core.Keyword(null,\"js\",\"js\",1768080579);\n} else {\nif(cljs.analyzer.node_module_dep_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"node\",\"node\",581201198);\n} else {\nif(cljs.analyzer.dep_has_global_exports_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"global\",\"global\",93595047);\n} else {\nreturn null;\n}\n}\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.resolve_STAR_ !== 'undefined')){\n} else {\ncljs.analyzer.resolve_STAR_ = (function (){var method_table__4654__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4655__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4656__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4657__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4658__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__74481 = cljs.core.get_global_hierarchy;\nreturn (fexpr__74481.cljs$core$IFn$_invoke$arity$0 ? fexpr__74481.cljs$core$IFn$_invoke$arity$0() : fexpr__74481.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"resolve*\"),(function (env,sym,full_ns,current_ns){\nreturn cljs.analyzer.ns__GT_module_type(full_ns);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4658__auto__,method_table__4654__auto__,prefer_table__4655__auto__,method_cache__4656__auto__,cached_hierarchy__4657__auto__));\n})();\n}\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null);\n}));\ncljs.analyzer.extern_pre = (function cljs$analyzer$extern_pre(sym,current_ns){\nvar pre = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null),cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./))));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n\nreturn pre;\n});\ncljs.analyzer.node_like_QMARK_ = (function cljs$analyzer$node_like_QMARK_(var_args){\nvar G__74484 = arguments.length;\nswitch (G__74484) {\ncase 0:\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.compiler_options());\n}));\n\n(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (opts){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"nodejs\",\"nodejs\",321212524),new cljs.core.Keyword(null,\"target\",\"target\",253001721).cljs$core$IFn$_invoke$arity$1(opts))) && (new cljs.core.Keyword(null,\"nodejs-rt\",\"nodejs-rt\",-512437071).cljs$core$IFn$_invoke$arity$1(opts) === false));\n}));\n\n(cljs.analyzer.node_like_QMARK_.cljs$lang$maxFixedArity = 1);\n\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"node\",\"node\",581201198),(function (env,sym,full_ns,current_ns){\nif(cljs.core.truth_(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0())){\nvar pre = cljs.analyzer.extern_pre(sym,current_ns);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null)),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"global\",\"global\",93595047),(function (env,sym,full_ns,current_ns){\nvar pre = cljs.analyzer.extern_pre(sym,current_ns);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_global_export(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null)),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}));\n/**\n * Specially-treated symbols for which we don't trigger :private-var-access warnings.\n */\ncljs.analyzer.private_var_access_exceptions = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),\"null\"], null), null);\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (env,sym,full_ns,current_ns){\nvar sym_ast = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),full_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\nvar sym_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym));\nif(cljs.core.truth_(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns))?(function (){var and__4149__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(sym_ast);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn ((cljs.core.not(cljs.analyzer._STAR_private_var_access_nowarn_STAR_)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.private_var_access_exceptions,sym_name)))));\n} else {\nreturn and__4149__auto__;\n}\n})():false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_name], null));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym_ast,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym_name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null)], 0));\n}));\ncljs.analyzer.required_QMARK_ = (function cljs$analyzer$required_QMARK_(ns,env){\nreturn ((cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)))),ns)) || (cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)))),ns)));\n});\n/**\n * Returns true if ns is a required namespace and a JavaScript module that\n * might be invokeable as a function.\n */\ncljs.analyzer.invokeable_ns_QMARK_ = (function cljs$analyzer$invokeable_ns_QMARK_(ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nif(cljs.analyzer.required_QMARK_(ns__$1,env)){\nvar or__4160__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn ((cljs.analyzer.node_module_dep_QMARK_(ns__$1)) || (cljs.analyzer.dep_has_global_exports_QMARK_(ns__$1)));\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.resolve_invokeable_ns = (function cljs$analyzer$resolve_invokeable_ns(ns,current_ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nvar module_type = cljs.analyzer.ns__GT_module_type(ns__$1);\nvar G__74490 = module_type;\nvar G__74490__$1 = (((G__74490 instanceof cljs.core.Keyword))?G__74490.fqn:null);\nswitch (G__74490__$1) {\ncase \"js\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((function (){var or__4160__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1);\n}\n})()),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null);\n\nbreak;\ncase \"node\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_node_lib(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ncase \"global\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_global_export(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__74490__$1)].join('')));\n\n}\n});\ncljs.analyzer.handle_symbol_local = (function cljs$analyzer$handle_symbol_local(sym,lb){\nif((lb instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null);\n} else {\nreturn lb;\n}\n});\n/**\n * Resolve a var. Accepts a side-effecting confirm fn for producing\n * warnings about unresolved vars.\n */\ncljs.analyzer.resolve_var = (function cljs$analyzer$resolve_var(var_args){\nvar G__74494 = arguments.length;\nswitch (G__74494) {\ncase 2:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = (function (env,sym){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,null);\n}));\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = (function (env,sym,confirm){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4(env,sym,confirm,true);\n}));\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4 = (function (env,sym,confirm,default_QMARK_){\nwhile(true){\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nif((\"js\" === cljs.core.namespace(sym))){\nvar symn = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar shadowed_by_local = cljs.analyzer.handle_symbol_local(symn,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,symn));\nif((!((shadowed_by_local == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(shadowed_by_local,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nvar pre = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./)));\nif(((cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))) && (cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta((function (){var or__4160__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1(pre);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null))], null),(function (){var temp__5753__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ret_tag = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358),true,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag], null);\n} else {\nreturn null;\n}\n})()], 0));\n\n}\n} else {\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nvar lb = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,sym));\nvar current_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nif((!((lb == null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lb,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns = cljs.core.namespace(sym);\nvar ns__$1 = (((\"clojure.core\" === ns))?\"cljs.core\":ns);\nvar full_ns = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,ns__$1,(function (){var or__4160__auto__ = (function (){var and__4149__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\n} else {\nreturn and__4149__auto__;\n}\n})();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ns__$1);\n}\n})());\nif((!((confirm == null)))){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns)){\ncljs.analyzer.confirm_ns(env,full_ns);\n} else {\n}\n\nvar G__74501_75729 = env;\nvar G__74502_75730 = full_ns;\nvar G__74503_75731 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__74501_75729,G__74502_75730,G__74503_75731) : confirm.call(null,G__74501_75729,G__74502_75730,G__74503_75731));\n} else {\n}\n\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns);\n} else {\nif(cljs.analyzer.dotted_symbol_QMARK_(sym)){\nvar idx = s.indexOf(\".\");\nvar prefix = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx));\nvar suffix = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1)));\nvar temp__5751__auto__ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4(env,prefix,null,false);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar resolved = temp__5751__auto__;\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(resolved,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),((function (env,sym,confirm,default_QMARK_,resolved,temp__5751__auto__,idx,prefix,suffix,s,lb,current_ns,locals){\nreturn (function (p1__74492_SHARP_){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__74492_SHARP_),\".\",suffix].join(''));\n});})(env,sym,confirm,default_QMARK_,resolved,temp__5751__auto__,idx,prefix,suffix,s,lb,current_ns,locals))\n);\n} else {\nvar idx__$1 = s.lastIndexOf(\".\");\nvar pre = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx__$1);\nvar suf = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx__$1 + (1)));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(pre,suf),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(pre)], null);\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym) == null)))){\nvar full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym);\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns);\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym);\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym__$1,full_ns,current_ns);\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym) == null)))){\nvar G__75770 = env;\nvar G__75771 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym);\nvar G__75772 = confirm;\nvar G__75773 = default_QMARK_;\nenv = G__75770;\nsym = G__75771;\nconfirm = G__75772;\ndefault_QMARK_ = G__75773;\ncontinue;\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)))){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nif(cljs.analyzer.core_name_QMARK_(env,sym)){\nif((!((confirm == null)))){\nvar G__74510_75778 = env;\nvar G__74511_75779 = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\nvar G__74512_75780 = sym;\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__74510_75778,G__74511_75779,G__74512_75780) : confirm.call(null,G__74510_75778,G__74511_75779,G__74512_75780));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null)], 0));\n} else {\nif(cljs.core.truth_(cljs.analyzer.invokeable_ns_QMARK_(s,env))){\nreturn cljs.analyzer.resolve_invokeable_ns(s,current_ns,env);\n} else {\nif(cljs.core.truth_(default_QMARK_)){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nreturn null;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n * Emits a warning if no such var exists.\n */\ncljs.analyzer.resolve_existing_var = (function cljs$analyzer$resolve_existing_var(env,sym){\nif(cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists);\n} else {\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,sym);\n}\n});\n/**\n * Given env, an analysis environment env, and names, a list of symbols, confirm\n * that all correspond to declared dynamic vars.\n */\ncljs.analyzer.confirm_bindings = (function cljs$analyzer$confirm_bindings(env,names){\nvar seq__74516 = cljs.core.seq(names);\nvar chunk__74517 = null;\nvar count__74518 = (0);\nvar i__74519 = (0);\nwhile(true){\nif((i__74519 < count__74518)){\nvar name = chunk__74517.cljs$core$IIndexed$_nth$arity$2(null,i__74519);\nvar env_75786__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_75787 = cljs.analyzer.resolve_existing_var(env_75786__$1,name);\nif(cljs.core.truth_((function (){var and__4149__auto__ = ev_75787;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_75787));\n} else {\nreturn and__4149__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_75786__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_75787,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_75787)], null));\n} else {\n}\n\n\nvar G__75789 = seq__74516;\nvar G__75790 = chunk__74517;\nvar G__75791 = count__74518;\nvar G__75792 = (i__74519 + (1));\nseq__74516 = G__75789;\nchunk__74517 = G__75790;\ncount__74518 = G__75791;\ni__74519 = G__75792;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__74516);\nif(temp__5753__auto__){\nvar seq__74516__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__74516__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__74516__$1);\nvar G__75796 = cljs.core.chunk_rest(seq__74516__$1);\nvar G__75797 = c__4591__auto__;\nvar G__75798 = cljs.core.count(c__4591__auto__);\nvar G__75799 = (0);\nseq__74516 = G__75796;\nchunk__74517 = G__75797;\ncount__74518 = G__75798;\ni__74519 = G__75799;\ncontinue;\n} else {\nvar name = cljs.core.first(seq__74516__$1);\nvar env_75802__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_75803 = cljs.analyzer.resolve_existing_var(env_75802__$1,name);\nif(cljs.core.truth_((function (){var and__4149__auto__ = ev_75803;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_75803));\n} else {\nreturn and__4149__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_75802__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_75803,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_75803)], null));\n} else {\n}\n\n\nvar G__75807 = cljs.core.next(seq__74516__$1);\nvar G__75808 = null;\nvar G__75809 = (0);\nvar G__75810 = (0);\nseq__74516 = G__75807;\nchunk__74517 = G__75808;\ncount__74518 = G__75809;\ni__74519 = G__75810;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve a macro.\n */\ncljs.analyzer.resolve_macro_var = (function cljs$analyzer$resolve_macro_var(env,sym){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927));\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns__$1 = cljs.core.namespace(sym);\nvar ns__$2 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure.core\",ns__$1))?\"cljs.core\":ns__$1);\nvar full_ns = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$2);\nvar full_ns__$1 = (((!(clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"].join('')):full_ns);\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null)) == null)))){\nvar full_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null)) == null)))){\nvar qualified_symbol = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null));\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym__$1], null));\n} else {\nvar ns__$1 = (((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null)) == null))))?ns:((cljs.analyzer.core_name_QMARK_(env,sym))?cljs.analyzer.impl.CLJS_CORE_MACROS_SYM:null));\nif((!((ns__$1 == null)))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\n} else {\nreturn null;\n}\n\n}\n}\n}\n});\n\n\ncljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\",new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),\"null\",new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),\"null\",new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),\"null\",new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),\"null\",new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),\"null\",new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),\"null\",new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),\"null\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),\"null\",new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),\"null\",new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),\"null\",new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),\"null\",new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),\"null\",new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),\"null\",new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),\"null\",new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),\"null\",new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),\"null\",new cljs.core.Symbol(null,\".\",\".\",1975675962,null),\"null\",new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),\"null\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),\"null\",new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),\"null\",new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),\"null\"], null), null);\ncljs.analyzer._STAR_recur_frames_STAR_ = null;\ncljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;\ncljs.analyzer._STAR_allow_redef_STAR_ = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = true;\ncljs.analyzer.analyze_keyword = (function cljs$analyzer$analyze_keyword(env,sym){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null)], null);\n});\ncljs.analyzer.get_tag = (function cljs$analyzer$get_tag(e){\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e)));\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5755__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e));\n} else {\nvar tag = temp__5755__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.find_matching_method = (function cljs$analyzer$find_matching_method(f,params){\nvar methods$ = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(f);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(f));\n}\n})();\nvar c = cljs.core.count(params);\nreturn cljs.core.some((function (m){\nvar and__4149__auto__ = (function (){var or__4160__auto__ = (new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869).cljs$core$IFn$_invoke$arity$1(m) === c);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(m);\n}\n})();\nif(cljs.core.truth_(and__4149__auto__)){\nreturn m;\n} else {\nreturn and__4149__auto__;\n}\n}),methods$);\n});\ncljs.analyzer.type_QMARK_ = (function cljs$analyzer$type_QMARK_(env,t){\nif((((!((t == null)))) && ((t instanceof cljs.core.Symbol)))){\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,t);\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(var$));\nif((temp__5755__auto____$1 == null)){\nvar temp__5755__auto____$2 = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5755__auto____$2 == null)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"PersistentHashMap\",\"cljs.core/PersistentHashMap\",-454120575,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"List\",\"cljs.core/List\",1708954352,null),\"null\"], null), null),t);\n} else {\nvar proto = temp__5755__auto____$2;\nreturn proto;\n}\n} else {\nvar type = temp__5755__auto____$1;\nreturn type;\n}\n} else {\nvar type = temp__5755__auto__;\nreturn type;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.unwrap_quote = (function cljs$analyzer$unwrap_quote(p__74535){\nvar map__74536 = p__74535;\nvar map__74536__$1 = cljs.core.__destructure_map(map__74536);\nvar expr = map__74536__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74536__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif(cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245))){\nreturn new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(expr);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_if = (function cljs$analyzer$infer_if(env,e){\nvar map__74537 = cljs.analyzer.unwrap_quote(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(e));\nvar map__74537__$1 = cljs.core.__destructure_map(map__74537);\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74537__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74537__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar then_tag = (function (){var G__74538 = env;\nvar G__74539 = new cljs.core.Keyword(null,\"then\",\"then\",460598070).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74538,G__74539) : cljs.analyzer.infer_tag.call(null,G__74538,G__74539));\n})();\nif(((cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"const\",\"const\",1709929842))) && ((!((form == null)))) && ((!(form === false))))){\nreturn then_tag;\n} else {\nvar else_tag = (function (){var G__74540 = env;\nvar G__74541 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74540,G__74541) : cljs.analyzer.infer_tag.call(null,G__74540,G__74541));\n})();\nif(((cljs.core.symbol_identical_QMARK_(then_tag,else_tag)) || (cljs.core.symbol_identical_QMARK_(else_tag,cljs.analyzer.impl.IGNORE_SYM)))){\nreturn then_tag;\n} else {\nif(cljs.core.symbol_identical_QMARK_(then_tag,cljs.analyzer.impl.IGNORE_SYM)){\nreturn else_tag;\n} else {\nif((((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.impl.NOT_NATIVE,then_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,then_tag)))) && ((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.impl.NOT_NATIVE,else_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,else_tag)))))){\nreturn new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null);\n} else {\nif((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.impl.BOOLEAN_OR_SEQ,then_tag) == null)))) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.impl.BOOLEAN_OR_SEQ,else_tag) == null)))))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nvar then_tag__$1 = ((cljs.analyzer.impl.cljs_set_QMARK_(then_tag))?then_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([then_tag]));\nvar else_tag__$1 = ((cljs.analyzer.impl.cljs_set_QMARK_(else_tag))?else_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([else_tag]));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(then_tag__$1,else_tag__$1);\n}\n\n}\n}\n}\n}\n});\ncljs.analyzer.infer_invoke = (function cljs$analyzer$infer_invoke(env,p__74543){\nvar map__74544 = p__74543;\nvar map__74544__$1 = cljs.core.__destructure_map(map__74544);\nvar e = map__74544__$1;\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74544__$1,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74544__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar me = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.find_matching_method(f,args),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839));\nvar temp__5755__auto__ = (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,me) : cljs.analyzer.infer_tag.call(null,env,me));\nif((temp__5755__auto__ == null)){\nvar map__74548 = f;\nvar map__74548__$1 = cljs.core.__destructure_map(map__74548);\nvar info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74548__$1,new cljs.core.Keyword(null,\"info\",\"info\",-317069002));\nvar temp__5755__auto____$1 = ((((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(info) === true) || (new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(info) === true)))?new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(info):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)))?new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null):null));\nif((temp__5755__auto____$1 == null)){\nreturn cljs.analyzer.impl.ANY_SYM;\n} else {\nvar ret_tag = temp__5755__auto____$1;\nreturn ret_tag;\n}\n} else {\nvar ret_tag = temp__5755__auto__;\nreturn ret_tag;\n}\n});\n/**\n * Given env, an analysis environment, and e, an AST node, return the inferred\n * type of the node\n */\ncljs.analyzer.infer_tag = (function cljs$analyzer$infer_tag(env,e){\nvar temp__5755__auto__ = cljs.analyzer.get_tag(e);\nif((temp__5755__auto__ == null)){\nvar G__74554 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(e);\nvar G__74554__$1 = (((G__74554 instanceof cljs.core.Keyword))?G__74554.fqn:null);\nswitch (G__74554__$1) {\ncase \"recur\":\nreturn cljs.analyzer.impl.IGNORE_SYM;\n\nbreak;\ncase \"throw\":\nreturn cljs.analyzer.impl.IGNORE_SYM;\n\nbreak;\ncase \"let\":\nvar G__74555 = env;\nvar G__74556 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74555,G__74556) : cljs.analyzer.infer_tag.call(null,G__74555,G__74556));\n\nbreak;\ncase \"loop\":\nvar G__74557 = env;\nvar G__74558 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74557,G__74558) : cljs.analyzer.infer_tag.call(null,G__74557,G__74558));\n\nbreak;\ncase \"do\":\nvar G__74560 = env;\nvar G__74561 = new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74560,G__74561) : cljs.analyzer.infer_tag.call(null,G__74560,G__74561));\n\nbreak;\ncase \"fn-method\":\nvar G__74563 = env;\nvar G__74564 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74563,G__74564) : cljs.analyzer.infer_tag.call(null,G__74563,G__74564));\n\nbreak;\ncase \"def\":\nvar G__74566 = env;\nvar G__74567 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74566,G__74567) : cljs.analyzer.infer_tag.call(null,G__74566,G__74567));\n\nbreak;\ncase \"invoke\":\nreturn cljs.analyzer.infer_invoke(env,e);\n\nbreak;\ncase \"if\":\nreturn cljs.analyzer.infer_if(env,e);\n\nbreak;\ncase \"const\":\nvar G__74568 = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,G__74568)){\nreturn cljs.analyzer.impl.BOOLEAN_SYM;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false,G__74568)){\nreturn cljs.analyzer.impl.BOOLEAN_SYM;\n} else {\nreturn cljs.analyzer.impl.ANY_SYM;\n\n}\n}\n\nbreak;\ncase \"quote\":\nvar G__74569 = env;\nvar G__74570 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74569,G__74570) : cljs.analyzer.infer_tag.call(null,G__74569,G__74570));\n\nbreak;\ncase \"var\":\ncase \"local\":\ncase \"js-var\":\ncase \"binding\":\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5755__auto____$1 == null)){\nvar G__74571 = env;\nvar G__74572 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__74571,G__74572) : cljs.analyzer.infer_tag.call(null,G__74571,G__74572));\n} else {\nvar init = temp__5755__auto____$1;\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.infer_tag.call(null,env,init));\n}\n\nbreak;\ncase \"host-field\":\ncase \"host-call\":\nreturn cljs.analyzer.impl.ANY_SYM;\n\nbreak;\ncase \"js\":\nreturn cljs.analyzer.impl.ANY_SYM;\n\nbreak;\ndefault:\nreturn null;\n\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.parse !== 'undefined')){\n} else {\ncljs.analyzer.parse = (function (){var method_table__4654__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4655__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4656__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4657__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4658__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__74576 = cljs.core.get_global_hierarchy;\nreturn (fexpr__74576.cljs$core$IFn$_invoke$arity$0 ? fexpr__74576.cljs$core$IFn$_invoke$arity$0() : fexpr__74576.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"parse\"),(function() { \nvar G__75873__delegate = function (op,rest){\nreturn op;\n};\nvar G__75873 = function (op,var_args){\nvar rest = null;\nif (arguments.length > 1) {\nvar G__75874__i = 0, G__75874__a = new Array(arguments.length -  1);\nwhile (G__75874__i < G__75874__a.length) {G__75874__a[G__75874__i] = arguments[G__75874__i + 1]; ++G__75874__i;}\n  rest = new cljs.core.IndexedSeq(G__75874__a,0,null);\n} \nreturn G__75873__delegate.call(this,op,rest);};\nG__75873.cljs$lang$maxFixedArity = 1;\nG__75873.cljs$lang$applyTo = (function (arglist__75875){\nvar op = cljs.core.first(arglist__75875);\nvar rest = cljs.core.rest(arglist__75875);\nreturn G__75873__delegate(op,rest);\n});\nG__75873.cljs$core$IFn$_invoke$arity$variadic = G__75873__delegate;\nreturn G__75873;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4658__auto__,method_table__4654__auto__,prefer_table__4655__auto__,method_cache__4656__auto__,cached_hierarchy__4657__auto__));\n})();\n}\ncljs.analyzer.var_meta = (function cljs$analyzer$var_meta(var_args){\nvar G__74582 = arguments.length;\nswitch (G__74582) {\ncase 1:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1 = (function (var$){\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,null);\n}));\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2 = (function (var$,expr_env){\nvar sym = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$);\nvar ks = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095)], null);\nvar m = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var user_meta = new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(var$);\nvar uks = cljs.core.keys(user_meta);\nreturn cljs.core.zipmap(uks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74577_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(user_meta,p1__74577_SHARP_),null,(1),null)),(2),null));\n}),uks));\n})(),cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.zipmap(ks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74578_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(var$,p1__74578_SHARP_),null,(1),null)),(2),null));\n}),ks)),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null))))),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"test\",\"test\",577538877),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$test\",\".-cljs$lang$test\",718963148,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))], 0)))),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),(function (){var arglists = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(var$);\nvar arglists_SINGLEQUOTE_ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(arglists)))?cljs.core.second(arglists):arglists);\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta,arglists_SINGLEQUOTE_,new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)),(2),null));\n})()], 0))], 0));\nif(cljs.core.truth_(expr_env)){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,m) : cljs.analyzer.analyze.call(null,expr_env,m));\n} else {\nreturn m;\n}\n}));\n\n(cljs.analyzer.var_meta.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.var_ast = (function cljs$analyzer$var_ast(env,sym){\nvar _STAR_private_var_access_nowarn_STAR__orig_val__74584 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__74585 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__74585);\n\ntry{var env__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env__$1,sym,cljs.analyzer.confirm_var_exists_throw());\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar temp__5757__auto__ = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar var_ns = temp__5757__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym)),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),(function (){var G__74586 = expr_env;\nvar G__74587 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(var_ns),cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74586,G__74587) : cljs.analyzer.analyze.call(null,G__74586,G__74587));\n})(),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,expr_env)], null);\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__74584);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),(function (op,env,p__74589,_,___$1){\nvar vec__74590 = p__74589;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74590,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74590,(1),null);\nvar form = vec__74590;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to var\");\n} else {\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Argument to var must be symbol\");\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"the-var\",\"the-var\",1428415613),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964)], null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),cljs.analyzer.var_ast(env,sym)], 0));\n}));\ncljs.analyzer.predicate__GT_tag = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(\"cljs.core\",\"array?\",\"cljs.core/array?\",-1655912448,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),new cljs.core.Symbol(\"cljs.core\",\"char?\",\"cljs.core/char?\",416405281,null),new cljs.core.Symbol(\"cljs.core\",\"sequential?\",\"cljs.core/sequential?\",1777854658,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-symbol?\",\"cljs.core/qualified-symbol?\",1570873476,null),new cljs.core.Symbol(\"cljs.core\",\"var?\",\"cljs.core/var?\",1711182854,null),new cljs.core.Symbol(\"cljs.core\",\"map-entry?\",\"cljs.core/map-entry?\",465406728,null),new cljs.core.Symbol(\"cljs.core\",\"double?\",\"cljs.core/double?\",1757455529,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-ident?\",\"cljs.core/qualified-ident?\",-1863492566,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),new cljs.core.Symbol(\"cljs.core\",\"inst?\",\"cljs.core/inst?\",1216133710,null),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),new cljs.core.Symbol(\"cljs.core\",\"true?\",\"cljs.core/true?\",-77973136,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),new cljs.core.Symbol(\"cljs.core\",\"volatile?\",\"cljs.core/volatile?\",-1122186415,null),new cljs.core.Symbol(\"cljs.core\",\"integer?\",\"cljs.core/integer?\",1710697810,null),new cljs.core.Symbol(\"cljs.core\",\"infinite?\",\"cljs.core/infinite?\",-1069503726,null),new cljs.core.Symbol(\"cljs.core\",\"undefined?\",\"cljs.core/undefined?\",-1206515693,null),new cljs.core.Symbol(\"cljs.core\",\"uuid?\",\"cljs.core/uuid?\",-15131116,null),new cljs.core.Symbol(\"cljs.core\",\"record?\",\"cljs.core/record?\",1307655860,null),new cljs.core.Symbol(\"cljs.core\",\"reduced?\",\"cljs.core/reduced?\",-1192491371,null),new cljs.core.Symbol(\"cljs.core\",\"tagged-literal?\",\"cljs.core/tagged-literal?\",-1159666987,null),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Symbol(\"cljs.core\",\"zero?\",\"cljs.core/zero?\",-341242858,null),new cljs.core.Symbol(\"cljs.core\",\"false?\",\"cljs.core/false?\",-1660815306,null),new cljs.core.Symbol(\"cljs.core\",\"list?\",\"cljs.core/list?\",-684796618,null),new cljs.core.Symbol(\"cljs.core\",\"simple-ident?\",\"cljs.core/simple-ident?\",1674885558,null),new cljs.core.Symbol(\"cljs.core\",\"simple-keyword?\",\"cljs.core/simple-keyword?\",39474330,null),new cljs.core.Symbol(\"cljs.core\",\"seqable?\",\"cljs.core/seqable?\",-745394886,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"delay?\",\"cljs.core/delay?\",2099859324,null),new cljs.core.Symbol(\"cljs.core\",\"regexp?\",\"cljs.core/regexp?\",-348418979,null),new cljs.core.Symbol(\"cljs.core\",\"ident?\",\"cljs.core/ident?\",1567441535,null),new cljs.core.Symbol(\"cljs.core\",\"chunked-seq?\",\"cljs.core/chunked-seq?\",-712922369,null)],[new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"cljs.core\",\"ISequential\",\"cljs.core/ISequential\",-950981796,null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Var\",\"cljs.core/Var\",2071014443,null),new cljs.core.Symbol(\"cljs.core\",\"IMapEntry\",\"cljs.core/IMapEntry\",535941300,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Inst\",\"cljs.core/Inst\",959205835,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"cljs.core\",\"Volatile\",\"cljs.core/Volatile\",-1098692185,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(\"cljs.core\",\"IUUID\",\"cljs.core/IUUID\",-1606521379,null),new cljs.core.Symbol(\"cljs.core\",\"IRecord\",\"cljs.core/IRecord\",635852000,null),new cljs.core.Symbol(\"cljs.core\",\"Reduced\",\"cljs.core/Reduced\",971663396,null),new cljs.core.Symbol(\"cljs.core\",\"ITaggedLiteral\",\"cljs.core/ITaggedLiteral\",-1236965094,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(\"cljs.core\",\"ISeqable\",\"cljs.core/ISeqable\",137437203,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),new cljs.core.Symbol(\"cljs.core\",\"Delay\",\"cljs.core/Delay\",-21574999,null),new cljs.core.Symbol(\"js\",\"RegExp\",\"js/RegExp\",1778210562,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"IChunkedSeq\",\"cljs.core/IChunkedSeq\",-892943716,null)]);\n/**\n * Look for a predicate-induced tag when the test expression is a simple\n * application of a predicate to a local, as in (string? x).\n */\ncljs.analyzer.simple_predicate_induced_tag = (function cljs$analyzer$simple_predicate_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((2) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__74618 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__74619 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__74619);\n\ntry{var G__74620 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74621 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74620,G__74621) : cljs.analyzer.analyze.call(null,G__74620,G__74621));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__74618);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nvar temp__5753__auto__ = (function (){var G__74622 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nreturn (cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1(G__74622) : cljs.analyzer.predicate__GT_tag.call(null,G__74622));\n})();\nif(cljs.core.truth_(temp__5753__auto__)){\nvar tag = temp__5753__auto__;\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_((((cljs.core.namespace(sym) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null)):false))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Look for a type-check-induced tag when the test expression is the use of\n *   instance? on a local, as in (instance? UUID x) or implements? on a local, as\n *   in (implements? ICounted x).\n */\ncljs.analyzer.type_check_induced_tag = (function cljs$analyzer$type_check_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((3) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.specials,cljs.core.first(test))))))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__74624 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__74625 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__74625);\n\ntry{var G__74626 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74627 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74626,G__74627) : cljs.analyzer.analyze.call(null,G__74626,G__74627));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__74624);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nif(cljs.core.truth_((function (){var G__74629 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nvar fexpr__74628 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"implements?\",\"cljs.core/implements?\",-251485149,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),\"null\"], null), null);\nreturn (fexpr__74628.cljs$core$IFn$_invoke$arity$1 ? fexpr__74628.cljs$core$IFn$_invoke$arity$1(G__74629) : fexpr__74628.call(null,G__74629));\n})())){\nvar analyzed_type = (function (){var _STAR_cljs_warnings_STAR__orig_val__74630 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__74631 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__74631);\n\ntry{var G__74633 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74634 = cljs.core.second(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74633,G__74634) : cljs.analyzer.analyze.call(null,G__74633,G__74634));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__74630);\n}})();\nvar tag = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_type);\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_type)))?(((cljs.core.namespace(sym) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null)):false):false))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Refine a tag to exclude clj-nil if the test is a local.\n */\ncljs.analyzer.truth_induced_tag = (function cljs$analyzer$truth_induced_tag(env,test){\nif(cljs.core.truth_((((test instanceof cljs.core.Symbol))?(((cljs.core.namespace(test) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),test], null)):false):false))){\nvar analyzed_symbol = (function (){var _STAR_cljs_warnings_STAR__orig_val__74635 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__74636 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__74636);\n\ntry{var G__74637 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74638 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74637,G__74638) : cljs.analyzer.analyze.call(null,G__74637,G__74638));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__74635);\n}})();\nvar temp__5753__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(analyzed_symbol);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar tag = temp__5753__auto__;\nif(((cljs.core.set_QMARK_(tag)) && (cljs.core.contains_QMARK_(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [test,cljs.analyzer.canonicalize_type(cljs.core.disj.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null)))], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Looks at the test and sets any tags which are induced by virtue\n *   of the test being truthy. For example in (if (string? x) x :bar)\n *   the local x in the then branch must be of string type.\n */\ncljs.analyzer.set_test_induced_tags = (function cljs$analyzer$set_test_induced_tags(env,test){\nvar vec__74640 = (function (){var or__4160__auto__ = cljs.analyzer.simple_predicate_induced_tag(env,test);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = cljs.analyzer.type_check_induced_tag(env,test);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.analyzer.truth_induced_tag(env,test);\n}\n}\n})();\nvar local = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74640,(0),null);\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74640,(1),null);\nvar G__74643 = env;\nif(cljs.core.truth_(local)){\nreturn cljs.core.assoc_in(G__74643,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),local,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null),tag);\n} else {\nreturn G__74643;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),(function (op,env,p__74645,name,_){\nvar vec__74646 = p__74645;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74646,(0),null);\nvar test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74646,(1),null);\nvar then = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74646,(2),null);\nvar else$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74646,(3),null);\nvar form = vec__74646;\nif((cljs.core.count(form) < (3))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too few arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too many arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nvar test_expr = (function (){var _STAR_recur_frames_STAR__orig_val__74649 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74650 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74650);\n\ntry{var G__74651 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74652 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74651,G__74652) : cljs.analyzer.analyze.call(null,G__74651,G__74652));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74649);\n}})();\nvar then_expr = (function (){var _STAR_allow_redef_STAR__orig_val__74653 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__74654 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__74654);\n\ntry{var G__74655 = cljs.analyzer.set_test_induced_tags(env,test);\nvar G__74656 = then;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74655,G__74656) : cljs.analyzer.analyze.call(null,G__74655,G__74656));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__74653);\n}})();\nvar else_expr = (function (){var _STAR_allow_redef_STAR__orig_val__74657 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__74658 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__74658);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,else$) : cljs.analyzer.analyze.call(null,env,else$));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__74657);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"if\",\"if\",-458814265),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test_expr,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then_expr,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),else_expr,new cljs.core.Keyword(null,\"unchecked\",\"unchecked\",924418378),cljs.core._STAR_unchecked_if_STAR_,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.Keyword(null,\"else\",\"else\",-1508377146)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),(function (op,env,p__74663,name,_){\nvar vec__74664 = p__74663;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74664,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74664,(1),null);\nvar tests = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74664,(2),null);\nvar thens = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74664,(3),null);\nvar default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74664,(4),null);\nvar form = vec__74664;\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* must switch on symbol\",\"\\n\",\"(symbol? sym)\"].join('')));\n}\n\nif(cljs.core.every_QMARK_(cljs.core.vector_QMARK_,tests)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be grouped in vectors\",\"\\n\",\"(every? vector? tests)\"].join('')));\n}\n\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar v = (function (){var _STAR_recur_frames_STAR__orig_val__74670 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74671 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74671);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74670);\n}})();\nvar tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__74659_SHARP_){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (t){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,t) : cljs.analyzer.analyze.call(null,expr_env,t));\n}),p1__74659_SHARP_);\n}),tests);\nvar thens__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__74660_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,p1__74660_SHARP_) : cljs.analyzer.analyze.call(null,env,p1__74660_SHARP_));\n}),thens);\nvar nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tests__$2,then){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-node\",\"case-node\",1016946320),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (test){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-test\",\"case-test\",-213512472),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(test),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),expr_env,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877)], null)], null);\n}),tests__$2),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-then\",\"case-then\",2107591745),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(then),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null);\n}),tests__$1,thens__$1);\nvar default$__$1 = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,default$) : cljs.analyzer.analyze.call(null,env,default$));\nif(cljs.core.every_QMARK_((function (t){\nvar or__4160__auto__ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(t));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(t))){\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(cljs.core.number_QMARK_,cljs.core.string_QMARK_,cljs.core.char_QMARK_)(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(t));\n} else {\nreturn false;\n}\n}\n}),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,tests__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be numbers, strings, or constants\",\"\\n\",\"(every? (fn [t] (or (-> t :info :const) (and (= :const (:op t)) ((some-fn number? string? char?) (:form t))))) (apply concat tests))\"].join('')));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case\",\"case\",1143702196),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),v,new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),nodes,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),default$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),(function (op,env,p__74672,name,_){\nvar vec__74673 = p__74672;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74673,(0),null);\nvar throw_form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74673,(1),null);\nvar form = vec__74673;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too few arguments to throw, throw expects a single Error instance\");\n} else {\nif(((2) < cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to throw, throw expects a single Error instance\");\n} else {\n}\n}\n\nvar throw_expr = (function (){var _STAR_recur_frames_STAR__orig_val__74678 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74679 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74679);\n\ntry{var G__74680 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74681 = throw_form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74680,G__74681) : cljs.analyzer.analyze.call(null,G__74680,G__74681));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74678);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"throw\",\"throw\",-1044625833),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),throw_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),(function (op,env,p__74687,name,_){\nvar vec__74688 = p__74687;\nvar seq__74689 = cljs.core.seq(vec__74688);\nvar first__74690 = cljs.core.first(seq__74689);\nvar seq__74689__$1 = cljs.core.next(seq__74689);\nvar ___$1 = first__74690;\nvar body = seq__74689__$1;\nvar form = vec__74688;\nvar catchenv = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),(function (p1__74682_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),p1__74682_SHARP_)){\nreturn new cljs.core.Keyword(null,\"return\",\"return\",-1891502105);\n} else {\nreturn p1__74682_SHARP_;\n}\n}));\nvar catch_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__74683_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__74683_SHARP_),new cljs.core.Symbol(null,\"catch\",\"catch\",-1616370245,null));\n}));\nvar default_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(catch_QMARK_,(function (p1__74684_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__74684_SHARP_),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328));\n}));\nvar finally_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__74685_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__74685_SHARP_),new cljs.core.Symbol(null,\"finally\",\"finally\",-1065347064,null));\n}));\nvar map__74691 = (function (){var parser = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"start\",\"start\",-355208981),new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),body,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),null,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),null], null);\nwhile(true){\nif(cljs.core.seq_QMARK_(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser))){\nvar vec__74699 = new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser);\nvar seq__74700 = cljs.core.seq(vec__74699);\nvar first__74701 = cljs.core.first(seq__74700);\nvar seq__74700__$1 = cljs.core.next(seq__74700);\nvar form__$1 = first__74701;\nvar forms_STAR_ = seq__74700__$1;\nvar parser_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),forms_STAR_);\nvar G__74702 = new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(parser);\nvar G__74702__$1 = (((G__74702 instanceof cljs.core.Keyword))?G__74702.fqn:null);\nswitch (G__74702__$1) {\ncase \"start\":\nif(cljs.core.truth_(catch_QMARK_(form__$1))){\nvar G__76009 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"catches\",\"catches\",-1478797617));\nparser = G__76009;\ncontinue;\n} else {\nif(cljs.core.truth_(finally_QMARK_(form__$1))){\nvar G__76010 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__76010;\ncontinue;\n} else {\nvar G__76014 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),cljs.core.conj,form__$1);\nparser = G__76014;\ncontinue;\n\n}\n}\n\nbreak;\ncase \"catches\":\nif(cljs.core.truth_(default_QMARK_(form__$1))){\nvar G__76015 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], 0));\nparser = G__76015;\ncontinue;\n} else {\nif(cljs.core.truth_(catch_QMARK_(form__$1))){\nvar G__76016 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138)], null),cljs.core.conj,form__$1);\nparser = G__76016;\ncontinue;\n} else {\nif(cljs.core.truth_(finally_QMARK_(form__$1))){\nvar G__76023 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__76023;\ncontinue;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid try form\");\n\n}\n}\n}\n\nbreak;\ncase \"finally\":\nvar G__76024 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"done\",\"done\",-889844188)], 0));\nparser = G__76024;\ncontinue;\n\nbreak;\ncase \"done\":\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Unexpected form after finally\");\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__74702__$1)].join('')));\n\n}\n} else {\nreturn parser;\n}\nbreak;\n}\n})();\nvar map__74691__$1 = cljs.core.__destructure_map(map__74691);\nvar body__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74691__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar cblocks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74691__$1,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138));\nvar dblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74691__$1,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381));\nvar fblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74691__$1,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426));\nvar finally$ = ((cljs.core.seq(fblock))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var _STAR_recur_frames_STAR__orig_val__74703 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74704 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74704);\n\ntry{var G__74706 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__74707 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),cljs.core.rest(fblock))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74706,G__74707) : cljs.analyzer.analyze.call(null,G__74706,G__74707));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74703);\n}})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true):null);\nvar e = (cljs.core.truth_((function (){var or__4160__auto__ = cljs.core.seq(cblocks);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nreturn dblock;\n}\n})())?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"e\"):null);\nvar default$ = (function (){var temp__5751__auto__ = dblock;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar vec__74710 = temp__5751__auto__;\nvar seq__74711 = cljs.core.seq(vec__74710);\nvar first__74712 = cljs.core.first(seq__74711);\nvar seq__74711__$1 = cljs.core.next(seq__74711);\nvar ___$2 = first__74712;\nvar first__74712__$1 = cljs.core.first(seq__74711__$1);\nvar seq__74711__$2 = cljs.core.next(seq__74711__$1);\nvar ___$3 = first__74712__$1;\nvar first__74712__$2 = cljs.core.first(seq__74711__$2);\nvar seq__74711__$3 = cljs.core.next(seq__74711__$2);\nvar name__$1 = first__74712__$2;\nvar cb = seq__74711__$3;\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0))));\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))));\n}\n})();\nvar cblock = ((cljs.core.seq(cblocks))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"cond\",\"cljs.core/cond\",2005388338,null),null,(1),null)),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p__74717){\nvar vec__74718 = p__74717;\nvar seq__74719 = cljs.core.seq(vec__74718);\nvar first__74720 = cljs.core.first(seq__74719);\nvar seq__74719__$1 = cljs.core.next(seq__74719);\nvar ___$2 = first__74720;\nvar first__74720__$1 = cljs.core.first(seq__74719__$1);\nvar seq__74719__$2 = cljs.core.next(seq__74719__$1);\nvar type = first__74720__$1;\nvar first__74720__$2 = cljs.core.first(seq__74719__$2);\nvar seq__74719__$3 = cljs.core.next(seq__74719__$2);\nvar name__$1 = first__74720__$2;\nvar cb = seq__74719__$3;\nif(cljs.core.truth_(name__$1)){\nif(cljs.core.not(cljs.core.namespace(name__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Can't qualify symbol in catch\",\"\\n\",\"(not (namespace name))\"].join('')));\n}\n} else {\n}\n\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),null,(1),null)),(new cljs.core.List(null,type,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,e,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0)))),null,(1),null))))));\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cblocks], 0)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),null,(1),null)),(new cljs.core.List(null,default$,null,(1),null))], 0)))):default$);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(catchenv);\nvar locals__$1 = (cljs.core.truth_(e)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,e,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(e,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(e,env)], null)):locals);\nvar catch$ = (cljs.core.truth_(cblock)?(function (){var _STAR_recur_frames_STAR__orig_val__74725 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74726 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74726);\n\ntry{var G__74727 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(catchenv,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1);\nvar G__74728 = cblock;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74727,G__74728) : cljs.analyzer.analyze.call(null,G__74727,G__74728));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74725);\n}})():null);\nvar try$ = (function (){var _STAR_recur_frames_STAR__orig_val__74729 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74730 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74730);\n\ntry{var G__74731 = (cljs.core.truth_((function (){var or__4160__auto__ = e;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn finally$;\n}\n})())?catchenv:env);\nvar G__74732 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body__$1)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74731,G__74732) : cljs.analyzer.analyze.call(null,G__74731,G__74732));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74729);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"try\",\"try\",1380742522),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(try$,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705),finally$,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524),catch$,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),(cljs.core.truth_(catch$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524)], null):null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(finally$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], null):null)], 0)))], null);\n}));\ncljs.analyzer.valid_proto = (function cljs$analyzer$valid_proto(x){\nif((x instanceof cljs.core.Symbol)){\nreturn x;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.elide_env = (function cljs$analyzer$elide_env(env,ast,opts){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235));\n});\ncljs.analyzer.replace_env_pass = (function cljs$analyzer$replace_env_pass(new_env){\nreturn (function (env,ast,opts){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new_env);\n});\n});\ncljs.analyzer.ast_children = (function cljs$analyzer$ast_children(ast){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (c){\nvar g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ast,c);\nif(cljs.core.vector_QMARK_(g)){\nreturn g;\n} else {\nif(cljs.core.truth_(g)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null);\n} else {\nreturn null;\n}\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast)], 0));\n});\ncljs.analyzer.constant_value_QMARK_ = (function cljs$analyzer$constant_value_QMARK_(p__74733){\nvar map__74734 = p__74733;\nvar map__74734__$1 = cljs.core.__destructure_map(map__74734);\nvar ast = map__74734__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74734__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar or__4160__auto__ = (function (){var fexpr__74736 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"const\",\"const\",1709929842),null,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),null], null), null);\nreturn (fexpr__74736.cljs$core$IFn$_invoke$arity$1 ? fexpr__74736.cljs$core$IFn$_invoke$arity$1(op) : fexpr__74736.call(null,op));\n})();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar and__4149__auto__ = (function (){var fexpr__74739 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),null,new cljs.core.Keyword(null,\"set\",\"set\",304602554),null,new cljs.core.Keyword(null,\"map\",\"map\",1371690461),null], null), null);\nreturn (fexpr__74739.cljs$core$IFn$_invoke$arity$1 ? fexpr__74739.cljs$core$IFn$_invoke$arity$1(op) : fexpr__74739.call(null,op));\n})();\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.every_QMARK_(cljs.analyzer.constant_value_QMARK_,cljs.analyzer.ast_children(ast));\n} else {\nreturn and__4149__auto__;\n}\n}\n});\ncljs.analyzer.const_expr__GT_constant_value = (function cljs$analyzer$const_expr__GT_constant_value(p__74740){\nvar map__74741 = p__74740;\nvar map__74741__$1 = cljs.core.__destructure_map(map__74741);\nvar e = map__74741__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74741__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__74742 = op;\nvar G__74742__$1 = (((G__74742 instanceof cljs.core.Keyword))?G__74742.fqn:null);\nswitch (G__74742__$1) {\ncase \"quote\":\nvar G__74743 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1(G__74743) : cljs.analyzer.const_expr__GT_constant_value.call(null,G__74743));\n\nbreak;\ncase \"const\":\nreturn new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(e);\n\nbreak;\ncase \"map\":\nreturn cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698).cljs$core$IFn$_invoke$arity$1(e)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"set\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"vector\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__74742__$1)].join('')));\n\n}\n});\ncljs.analyzer.earmuffed_QMARK_ = (function cljs$analyzer$earmuffed_QMARK_(sym){\nvar s = cljs.core.name(sym);\nreturn (((((s).length) > (2))) && (clojure.string.starts_with_QMARK_(s,\"*\")) && (clojure.string.ends_with_QMARK_(s,\"*\")));\n});\ncljs.analyzer.core_ns_QMARK_ = (function cljs$analyzer$core_ns_QMARK_(ns_sym){\nvar s = cljs.core.name(ns_sym);\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),ns_sym)) && (((clojure.string.starts_with_QMARK_(s,\"cljs.\")) || (clojure.string.starts_with_QMARK_(s,\"clojure.\")))));\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),(function (op,env,form,_,___$1){\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n} else {\n}\n\nvar pfn = (function() {\nvar G__76085 = null;\nvar G__76085__2 = (function (___$2,sym){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\n});\nvar G__76085__3 = (function (___$2,sym,init){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nvar G__76085__4 = (function (___$2,sym,doc,init){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nG__76085 = function(___$2,sym,doc,init){\nswitch(arguments.length){\ncase 2:\nreturn G__76085__2.call(this,___$2,sym);\ncase 3:\nreturn G__76085__3.call(this,___$2,sym,doc);\ncase 4:\nreturn G__76085__4.call(this,___$2,sym,doc,init);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__76085.cljs$core$IFn$_invoke$arity$2 = G__76085__2;\nG__76085.cljs$core$IFn$_invoke$arity$3 = G__76085__3;\nG__76085.cljs$core$IFn$_invoke$arity$4 = G__76085__4;\nreturn G__76085;\n})()\n;\nvar args = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(pfn,form);\nvar sym = new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(args);\nvar const_QMARK_ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar sym_meta = cljs.core.meta(sym);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar protocol = cljs.analyzer.valid_proto(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)));\nvar dynamic = new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar clash_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(''));\nvar sym_ns = cljs.core.namespace(sym);\nvar sym__$1 = (cljs.core.truth_((function (){var and__4149__auto__ = sym_ns;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn (!(cljs.core.symbol_identical_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(sym_ns),ns_name)));\n} else {\nreturn and__4149__auto__;\n}\n})())?(function(){throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't def ns-qualified name in namespace \",sym_ns].join(''))})():(((!((sym_ns == null))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)):sym\n));\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns], null)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)].join('')),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1))], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't redefine a constant\");\n} else {\n}\n\nvar temp__5757__auto___76091 = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif((temp__5757__auto___76091 == null)){\n} else {\nvar doc_76093 = temp__5757__auto___76091;\nif(typeof doc_76093 === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n}\n}\n\nif(((cljs.core.not(dynamic)) && (cljs.analyzer.earmuffed_QMARK_(sym__$1)) && ((!(cljs.analyzer.core_ns_QMARK_(ns_name)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)], null));\n} else {\n}\n\nvar temp__5757__auto___76095 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5757__auto___76095 == null)){\n} else {\nvar v_76098 = temp__5757__auto___76095;\nif(cljs.core.truth_(((cljs.core.not(cljs.analyzer._STAR_allow_redef_STAR_))?((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_76098)))?((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta)))?(function (){var and__4149__auto__ = cljs.analyzer._STAR_file_defs_STAR_;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.analyzer._STAR_file_defs_STAR_),sym__$1);\n} else {\nreturn and__4149__auto__;\n}\n})():false):false):false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(v_76098)], null));\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4149__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_76098);\nif(cljs.core.truth_(and__4149__auto__)){\nvar and__4149__auto____$1 = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_76098);\nif(cljs.core.truth_(and__4149__auto____$1)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_76098),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta));\n} else {\nreturn and__4149__auto____$1;\n}\n} else {\nreturn and__4149__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_76098)),new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null));\n} else {\n}\n}\n\nvar env__$1 = ((((((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ns_name,new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))) && (cljs.analyzer.core_name_QMARK_(env,sym__$1)))) || ((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym__$1], null)) == null))))))?(function (){var ev = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),cljs.core.with_meta(sym__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017),true], null)));\nvar conj_to_set = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY);\nif(cljs.analyzer.public_name_QMARK_(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),sym__$1)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name], null));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym__$1], 0));\n\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,sym__$1);\n})():env);\nvar var_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1));\nvar init_expr = ((cljs.core.contains_QMARK_(args,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)))?(function (){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),sym_meta,((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1)], 0)));\n\nvar _STAR_recur_frames_STAR__orig_val__74752 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74753 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74753);\n\ntry{var _STAR_allow_ns_STAR__orig_val__74754 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__74755 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__74755);\n\ntry{var G__74757 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74758 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nvar G__74759 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(G__74757,G__74758,G__74759) : cljs.analyzer.analyze.call(null,G__74757,G__74758,G__74759));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__74754);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74752);\n}})()\n:null);\nvar fn_var_QMARK_ = (((!((init_expr == null)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204))));\nvar tag__$1 = ((fn_var_QMARK_)?(function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(init_expr);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = tag;\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347).cljs$core$IFn$_invoke$arity$1(init_expr);\n}\n}\n})():(cljs.core.truth_(tag)?tag:(cljs.core.truth_(dynamic)?cljs.analyzer.impl.ANY_SYM:new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr)\n)));\nvar export_as = (function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"export\",\"export\",214356590).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar export_val = temp__5753__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,export_val)){\nreturn var_name;\n} else {\nreturn export_val;\n}\n} else {\nreturn null;\n}\n})();\nvar doc = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\n}\n})();\nvar temp__5757__auto___76160 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5757__auto___76160 == null)){\n} else {\nvar v_76164 = temp__5757__auto___76160;\nif(((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1)))) && (((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(v_76164) === true) && ((!(fn_var_QMARK_))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),env__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1], null));\n} else {\n}\n}\n\nif((((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null)) == null)) || (cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta))))){\nif(cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_file_defs_STAR_,cljs.core.conj,sym__$1);\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),(function (){var G__74760 = sym_meta;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__74760,new cljs.core.Keyword(null,\"test\",\"test\",577538877),true);\n} else {\nreturn G__74760;\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(sym_meta,new cljs.core.Keyword(null,\"test\",\"test\",577538877)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878)], null),(function (f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$1)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))){\nreturn \"cljs/core.cljs\";\n} else {\nreturn f;\n}\n}))], null),(cljs.core.truth_(doc)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc], null):null),(cljs.core.truth_(const_QMARK_)?(function (){var const_expr = (function (){var _STAR_passes_STAR__orig_val__74761 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__74762 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__74762);\n\ntry{var G__74763 = env__$1;\nvar G__74764 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74763,G__74764) : cljs.analyzer.analyze.call(null,G__74763,G__74764));\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__74761);\n}})();\nif(cljs.core.truth_(cljs.analyzer.constant_value_QMARK_(const_expr))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})():null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1),(cljs.core.truth_(protocol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),protocol], null):null),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar protocol_symbol = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198),protocol_symbol,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"protocol-info\",\"protocol-info\",1471745843).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(protocol_symbol)),new cljs.core.Keyword(null,\"impls\",\"impls\",-1314014853),cljs.core.PersistentHashSet.EMPTY], null);\n} else {\nreturn null;\n}\n})(),((fn_var_QMARK_)?(function (){var params = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74746_SHARP_){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(p1__74746_SHARP_)));\n}),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),cljs.core.not(new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(sym_meta)),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556).cljs$core$IFn$_invoke$arity$1(init_expr)], null),(function (){var temp__5755__auto__ = new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),params,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta)))], null);\n} else {\nvar top_fn_meta = temp__5755__auto__;\nreturn top_fn_meta;\n}\n})()], 0));\n})():null),(cljs.core.truth_((function (){var and__4149__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta);\n} else {\nreturn and__4149__auto__;\n}\n})())?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),true,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null):null),((((fn_var_QMARK_) && ((!((tag__$1 == null))))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):(cljs.core.truth_(tag__$1)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null):null))], 0)));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"def\",\"def\",-1043430536),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns_name,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__74766 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)),new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377),true);\nvar G__74767 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74766,G__74767) : cljs.analyzer.analyze.call(null,G__74766,G__74767));\n})(),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797)),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516).cljs$core$IFn$_invoke$arity$1(sym_meta)], null),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"goog-define\",\"goog-define\",-1048305441).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar goog_type = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"goog-define\",\"goog-define\",-1048305441),goog_type], null);\n} else {\nreturn null;\n}\n})(),((new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env__$1) === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var-ast\",\"var-ast\",1200379319),cljs.analyzer.var_ast(env__$1,sym__$1)], null):null),(function (){var temp__5757__auto__ = new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar test = temp__5757__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),(function (){var G__74769 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74770 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74769,G__74770) : cljs.analyzer.analyze.call(null,G__74769,G__74770));\n})()], null);\n}\n})(),(((!((tag__$1 == null))))?((fn_var_QMARK_)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null)):null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),(((!((export_as == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"export\",\"export\",214356590),export_as], null):null),(((!((init_expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797)], null)], null))], 0));\n}));\ncljs.analyzer.analyze_fn_method_param = (function cljs$analyzer$analyze_fn_method_param(env){\nreturn (function (p__74772,p__74773){\nvar vec__74775 = p__74772;\nvar locals = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74775,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74775,(1),null);\nvar vec__74778 = p__74773;\nvar arg_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74778,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74778,(1),null);\nif(cljs.core.truth_(cljs.core.namespace(name))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't use qualified name as parameter: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar line = cljs.analyzer.get_line(name,env);\nvar column = cljs.analyzer.get_col(name,env);\nvar nmeta = cljs.core.meta(name);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(nmeta);\nvar shadow__$1 = (((!((locals == null))))?cljs.analyzer.handle_symbol_local(name,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(name) : locals.call(null,name))):null);\nvar env__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null)], 0));\nvar param = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),env__$1,column,line,arg_id,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),tag,shadow__$1,new cljs.core.Keyword(null,\"arg\",\"arg\",-1747261837)]);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name,param),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(params,param)], null);\n});\n});\ncljs.analyzer.analyze_fn_method_body = (function cljs$analyzer$analyze_fn_method_body(env,form,recur_frames){\nvar _STAR_recur_frames_STAR__orig_val__74781 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74782 = recur_frames;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74782);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze.call(null,env,form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74781);\n}});\ncljs.analyzer.analyze_fn_method = (function cljs$analyzer$analyze_fn_method(env,locals,form,type,analyze_body_QMARK_){\nvar param_names = cljs.core.first(form);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar param_names__$1 = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar body = cljs.core.next(form);\nvar step = cljs.analyzer.analyze_fn_method_param(env);\nvar step_init = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [locals,cljs.core.PersistentVector.EMPTY], null);\nvar vec__74783 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,step_init,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,param_names__$1));\nvar locals__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74783,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74783,(1),null);\nvar params_SINGLEQUOTE_ = ((variadic === true)?cljs.core.butlast(params):params);\nvar fixed_arity = cljs.core.count(params_SINGLEQUOTE_);\nvar recur_frame = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY)], null);\nvar recur_frames = cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_);\nvar body_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1], 0));\nvar body_form = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body)));\nvar expr = (cljs.core.truth_(analyze_body_QMARK_)?cljs.analyzer.analyze_fn_method_body(body_env,body_form,recur_frames):null);\nvar recurs = cljs.core.deref(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(recur_frame));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),variadic,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),fixed_arity,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"recurs\",\"recurs\",-1959309309),recurs], null),(((!((expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null)], null))], 0));\n});\ncljs.analyzer.fn_name_var = (function cljs$analyzer$fn_name_var(env,locals,name){\nif((!((name == null)))){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,name));\nvar shadow__$2 = (((shadow__$1 == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),name], null)):null);\nvar fn_scope = new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"fn-self-name\",\"fn-self-name\",1461143531),true,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),fn_scope,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$2], null)], null);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nvar ret_tag = (((!((tag == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag], null):null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([name_var,ret_tag], 0));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_fn_methods_pass2_STAR_ = (function cljs$analyzer$analyze_fn_methods_pass2_STAR_(menv,locals,type,meths){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__74792_SHARP_){\nreturn cljs.analyzer.analyze_fn_method(menv,locals,p1__74792_SHARP_,type,true);\n}),meths);\n});\ncljs.analyzer.analyze_fn_methods_pass2 = (function cljs$analyzer$analyze_fn_methods_pass2(menv,locals,type,meths){\nreturn cljs.analyzer.analyze_fn_methods_pass2_STAR_(menv,locals,type,meths);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(function (op,env,p__74798,name,_){\nvar vec__74799 = p__74798;\nvar seq__74800 = cljs.core.seq(vec__74799);\nvar first__74801 = cljs.core.first(seq__74800);\nvar seq__74800__$1 = cljs.core.next(seq__74800);\nvar ___$1 = first__74801;\nvar args = seq__74800__$1;\nvar form = vec__74799;\nvar named_fn_QMARK_ = (cljs.core.first(args) instanceof cljs.core.Symbol);\nvar vec__74802 = ((named_fn_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args),cljs.core.next(args)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,cljs.core.seq(args)], null));\nvar name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74802,(0),null);\nvar meths = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74802,(1),null);\nvar meths__$1 = ((cljs.core.vector_QMARK_(cljs.core.first(meths)))?(new cljs.core.List(null,meths,null,(1),null)):meths);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = cljs.analyzer.fn_name_var(env,locals,name__$1);\nvar env__$1 = (((!((name__$1 == null))))?cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859)], null),cljs.core.conj,name_var):env);\nvar locals__$1 = (((((!((locals == null)))) && (named_fn_QMARK_)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name__$1,name_var):locals);\nvar form_meta = cljs.core.meta(form);\nvar type = new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_impl = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_inline = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar menv = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((function (){var G__74809 = env__$1;\nif((cljs.core.count(meths__$1) > (1))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__74809,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\n} else {\nreturn G__74809;\n}\n})(),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),proto_impl,new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),proto_inline], null)], 0));\nvar methods$ = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74794_SHARP_){\nvar _STAR_allow_ns_STAR__orig_val__74810 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__74811 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__74811);\n\ntry{return cljs.analyzer.analyze_fn_method(menv,locals__$1,p1__74794_SHARP_,type,(name__$1 == null));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__74810);\n}}),meths__$1);\nvar mfa = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869)),cljs.core.max,(0),methods$);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),methods$));\nvar locals__$2 = ((named_fn_QMARK_)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(locals__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null),cljs.core.assoc,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([variadic,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),mfa,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),methods$)], 0)):locals__$1);\nvar methods$__$1 = (((!((name__$1 == null))))?(function (){var _STAR_allow_ns_STAR__orig_val__74812 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__74813 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__74813);\n\ntry{return cljs.analyzer.analyze_fn_methods_pass2(menv,locals__$2,type,meths__$1);\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__74812);\n}})():cljs.core.vec(methods$));\nvar form__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(form,cljs.core.dissoc,new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409),new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026),new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742));\nvar js_doc = ((variadic === true)?\"@param {...*} var_args\":null);\nvar children = (((!((name_var == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null));\nvar inferred_ret_tag = (function (){var inferred_tags = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.infer_tag,env__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),methods$__$1));\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,inferred_tags))){\nreturn cljs.core.first(inferred_tags);\n} else {\nreturn null;\n}\n})();\nvar ast = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"loop-lets\",\"loop-lets\",2036794185),new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),new cljs.core.Keyword(null,\"recur-frames\",\"recur-frames\",-307205196),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516)],[children,proto_inline,name_var,cljs.analyzer._STAR_loop_lets_STAR_,inferred_ret_tag,proto_impl,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),env__$1,variadic,methods$__$1,cljs.analyzer._STAR_recur_frames_STAR_,mfa,form__$1,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246).cljs$core$IFn$_invoke$arity$1(env__$1),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_doc], null)]),(((!((name_var == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),name_var], null):null)], 0));\nvar variadic_methods_76370 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)),cljs.core.take.cljs$core$IFn$_invoke$arity$1((1))),methods$__$1);\nvar variadic_params_76371 = (((cljs.core.count(variadic_methods_76370) > (0)))?cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(variadic_methods_76370,(0)))):(0));\nvar param_counts_76372 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count,new cljs.core.Keyword(null,\"params\",\"params\",710516235))),methods$__$1);\nif(((1) < cljs.core.count(variadic_methods_76370))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif((!((((variadic_params_76371 === (0))) || ((variadic_params_76371 === ((1) + mfa))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(param_counts_76372),param_counts_76372)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(ast) : cljs.analyzer.analyze_wrap_meta.call(null,ast));\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),(function (op,env,p__74822,name,_){\nvar vec__74823 = p__74822;\nvar seq__74824 = cljs.core.seq(vec__74823);\nvar first__74825 = cljs.core.first(seq__74824);\nvar seq__74824__$1 = cljs.core.next(seq__74824);\nvar ___$1 = first__74825;\nvar first__74825__$1 = cljs.core.first(seq__74824__$1);\nvar seq__74824__$2 = cljs.core.next(seq__74824__$1);\nvar bindings = first__74825__$1;\nvar exprs = seq__74824__$2;\nvar form = vec__74823;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"bindings must be vector of even number of elements\");\n}\n\nvar n__GT_fexpr = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.second),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings)));\nvar names = cljs.core.keys(n__GT_fexpr);\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar vec__74826 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__74832,n){\nvar vec__74834 = p__74832;\nvar map__74837 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74834,(0),null);\nvar map__74837__$1 = cljs.core.__destructure_map(map__74837);\nvar env__$1 = map__74837__$1;\nvar locals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74837__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74834,(1),null);\nvar ret_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(n));\nvar fexpr = (function (){var _STAR_cljs_warnings_STAR__orig_val__74840 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__74841 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__74841);\n\ntry{var G__74843 = env__$1;\nvar G__74844 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(n) : n__GT_fexpr.call(null,n));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74843,G__74844) : cljs.analyzer.analyze.call(null,G__74843,G__74844));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__74840);\n}})();\nvar be = (function (){var G__74845 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[n,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr)),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),cljs.analyzer.get_col(n,env__$1),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),cljs.analyzer.get_line(n,env__$1),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),true,cljs.analyzer.handle_symbol_local(n,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(n) : locals.call(null,n))),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354)]);\nif(cljs.core.truth_(ret_tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__74845,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag);\n} else {\nreturn G__74845;\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),n], null),be),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env,cljs.core.PersistentVector.EMPTY], null),names);\nvar meth_env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74826,(0),null);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74826,(1),null);\nvar meth_env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar vec__74829 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__74846,p__74847){\nvar vec__74848 = p__74846;\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74848,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74848,(1),null);\nvar map__74851 = p__74847;\nvar map__74851__$1 = cljs.core.__destructure_map(map__74851);\nvar be = map__74851__$1;\nvar name__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74851__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar shadow__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74851__$1,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803));\nvar env__$1 = cljs.core.assoc_in(meth_env__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),shadow__$1);\nvar fexpr = (function (){var G__74852 = env__$1;\nvar G__74853 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(name__$1) : n__GT_fexpr.call(null,name__$1));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74852,G__74853) : cljs.analyzer.analyze.call(null,G__74852,G__74853));\n})();\nvar be_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(be,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),fexpr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),be_SINGLEQUOTE_),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes__$1,be_SINGLEQUOTE_)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meth_env__$1,cljs.core.PersistentVector.EMPTY], null),bes);\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74829,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74829,(1),null);\nvar expr = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__74858 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env__$2,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__74859 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74858,G__74859) : cljs.analyzer.analyze.call(null,G__74858,G__74859));\n})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),expr,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null);\n}));\ncljs.analyzer.analyze_do_statements_STAR_ = (function cljs$analyzer$analyze_do_statements_STAR_(env,exprs){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__74860_SHARP_){\nvar G__74861 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__74862 = p1__74860_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74861,G__74862) : cljs.analyzer.analyze.call(null,G__74861,G__74862));\n}),cljs.core.butlast(exprs));\n});\ncljs.analyzer.analyze_do_statements = (function cljs$analyzer$analyze_do_statements(env,exprs){\nvar _STAR_recur_frames_STAR__orig_val__74863 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74864 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74864);\n\ntry{return cljs.analyzer.analyze_do_statements_STAR_(env,exprs);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74863);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),(function (op,env,p__74869,_,___$1){\nvar vec__74870 = p__74869;\nvar seq__74871 = cljs.core.seq(vec__74870);\nvar first__74872 = cljs.core.first(seq__74871);\nvar seq__74871__$1 = cljs.core.next(seq__74871);\nvar ___$2 = first__74872;\nvar exprs = seq__74871__$1;\nvar form = vec__74870;\nvar statements = cljs.analyzer.analyze_do_statements(env,exprs);\nif((cljs.core.count(exprs) <= (1))){\nvar ret = (function (){var G__74873 = env;\nvar G__74874 = cljs.core.first(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74873,G__74874) : cljs.analyzer.analyze.call(null,G__74873,G__74874));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n} else {\nvar ret_env = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863)):cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105)));\nvar ret = (function (){var G__74875 = ret_env;\nvar G__74876 = cljs.core.last(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74875,G__74876) : cljs.analyzer.analyze.call(null,G__74875,G__74876));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\n}));\ncljs.analyzer.analyze_let_binding_init = (function cljs$analyzer$analyze_let_binding_init(env,init,loop_lets){\nvar _STAR_loop_lets_STAR__orig_val__74881 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_loop_lets_STAR__temp_val__74882 = loop_lets;\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__74882);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.analyze.call(null,env,init));\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__74881);\n}});\ncljs.analyzer.get_let_tag = (function cljs$analyzer$get_let_tag(name,init_expr){\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr);\nif((temp__5755__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(init_expr));\n} else {\nvar tag = temp__5755__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.analyze_let_bindings_STAR_ = (function cljs$analyzer$analyze_let_bindings_STAR_(encl_env,bindings,op){\nvar bes = cljs.core.PersistentVector.EMPTY;\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(encl_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar bindings__$1 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings));\nwhile(true){\nvar temp__5755__auto__ = cljs.core.first(bindings__$1);\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bes,env], null);\n} else {\nvar vec__74895 = temp__5755__auto__;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74895,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74895,(1),null);\nif((((!((cljs.core.namespace(name) == null)))) || (goog.string.contains(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\".\")))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,[\"Invalid local name: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar init_expr = cljs.analyzer.analyze_let_binding_init(env,init,cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_));\nvar line = cljs.analyzer.get_line(name,env);\nvar col = cljs.analyzer.get_col(name,env);\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null)));\nvar be = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[init_expr,name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col], null),col,line,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),cljs.analyzer.get_let_tag(name,init_expr),shadow__$1,op]);\nvar be__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([be,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__74895,name,init,temp__5755__auto__){\nreturn (function (p1__74885_SHARP_){\nreturn cljs.core.select_keys(p1__74885_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null));\n});})(bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__74895,name,init,temp__5755__auto__))\n,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))], null)], 0)):be);\nvar G__76500 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be__$1);\nvar G__76501 = cljs.core.assoc_in(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null),be__$1);\nvar G__76502 = cljs.core.next(bindings__$1);\nbes = G__76500;\nenv = G__76501;\nbindings__$1 = G__76502;\ncontinue;\n}\nbreak;\n}\n});\ncljs.analyzer.analyze_let_bindings = (function cljs$analyzer$analyze_let_bindings(encl_env,bindings,op){\nvar _STAR_recur_frames_STAR__orig_val__74902 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74903 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74903);\n\ntry{return cljs.analyzer.analyze_let_bindings_STAR_(encl_env,bindings,op);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74902);\n}});\ncljs.analyzer.analyze_let_body_STAR_ = (function cljs$analyzer$analyze_let_body_STAR_(env,context,exprs){\nvar G__74905 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__74906 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74905,G__74906) : cljs.analyzer.analyze.call(null,G__74905,G__74906));\n});\ncljs.analyzer.analyze_let_body = (function cljs$analyzer$analyze_let_body(env,context,exprs,recur_frames,loop_lets){\nvar _STAR_recur_frames_STAR__orig_val__74910 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_loop_lets_STAR__orig_val__74911 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74912 = recur_frames;\nvar _STAR_loop_lets_STAR__temp_val__74913 = loop_lets;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74912);\n\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__74913);\n\ntry{return cljs.analyzer.analyze_let_body_STAR_(env,context,exprs);\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__74911);\n\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74910);\n}});\ncljs.analyzer.analyze_let = (function cljs$analyzer$analyze_let(encl_env,p__74914,is_loop,widened_tags){\nwhile(true){\nvar vec__74915 = p__74914;\nvar seq__74916 = cljs.core.seq(vec__74915);\nvar first__74917 = cljs.core.first(seq__74916);\nvar seq__74916__$1 = cljs.core.next(seq__74916);\nvar _ = first__74917;\nvar first__74917__$1 = cljs.core.first(seq__74916__$1);\nvar seq__74916__$2 = cljs.core.next(seq__74916__$1);\nvar bindings = first__74917__$1;\nvar exprs = seq__74916__$2;\nvar form = vec__74915;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,\"bindings must be vector of even number of elements\");\n}\n\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(encl_env);\nvar op = ((is_loop === true)?new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849):new cljs.core.Keyword(null,\"let\",\"let\",-1282412701));\nvar bindings__$1 = (cljs.core.truth_(widened_tags)?cljs.core.vec(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (encl_env,p__74914,is_loop,widened_tags,context,op,vec__74915,seq__74916,first__74917,seq__74916__$1,_,first__74917__$1,seq__74916__$2,bindings,exprs,form){\nreturn (function (p__74924,widened_tag){\nvar vec__74925 = p__74924;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74925,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74925,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(name,cljs.core.assoc,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),widened_tag),init], null);\n});})(encl_env,p__74914,is_loop,widened_tags,context,op,vec__74915,seq__74916,first__74917,seq__74916__$1,_,first__74917__$1,seq__74916__$2,bindings,exprs,form))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings),widened_tags], 0))):bindings);\nvar vec__74920 = cljs.analyzer.analyze_let_bindings((function (){var G__74931 = encl_env;\nif(is_loop === true){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__74931,new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),true);\n} else {\nreturn G__74931;\n}\n})(),bindings__$1,op);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74920,(0),null);\nvar env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74920,(1),null);\nvar recur_frame = ((is_loop === true)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),bes))], null):null);\nvar recur_frames = (cljs.core.truth_(recur_frame)?cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_):cljs.analyzer._STAR_recur_frames_STAR_);\nvar loop_lets = ((is_loop === true)?cljs.analyzer._STAR_loop_lets_STAR_:(((!((cljs.analyzer._STAR_loop_lets_STAR_ == null))))?cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_):null));\nvar warn_acc = (cljs.core.truth_((function (){var and__4149__auto__ = is_loop;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.not(widened_tags);\n} else {\nreturn and__4149__auto__;\n}\n})())?cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY):null);\nvar expr = (cljs.core.truth_(warn_acc)?(function (){var _STAR_cljs_warning_handlers_STAR__orig_val__74932 = cljs.analyzer._STAR_cljs_warning_handlers_STAR_;\nvar _STAR_cljs_warning_handlers_STAR__temp_val__74933 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.accumulating_warning_handler(warn_acc)], null);\n(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__temp_val__74933);\n\ntry{return cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets);\n}finally {(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__orig_val__74932);\n}})():cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets));\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null);\nvar nil__GT_any = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(cljs.core.truth_((function (){var and__4149__auto__ = is_loop;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn ((cljs.core.not(widened_tags)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(nil__GT_any,cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame))),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(nil__GT_any,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),bes))));\n} else {\nreturn and__4149__auto__;\n}\n})())){\nvar G__76529 = encl_env;\nvar G__76530 = form;\nvar G__76531 = is_loop;\nvar G__76532 = cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame));\nencl_env = G__76529;\np__74914 = G__76530;\nis_loop = G__76531;\nwidened_tags = G__76532;\ncontinue;\n} else {\nif(cljs.core.truth_(warn_acc)){\ncljs.analyzer.replay_accumulated_warnings(warn_acc);\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),op,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),encl_env,new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,false,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,true,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),(function (op,env,p__74938,_,___$1){\nvar vec__74939 = p__74938;\nvar seq__74940 = cljs.core.seq(vec__74939);\nvar first__74941 = cljs.core.first(seq__74940);\nvar seq__74940__$1 = cljs.core.next(seq__74940);\nvar ___$2 = first__74941;\nvar exprs = seq__74940__$1;\nvar form = vec__74939;\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar frame = cljs.core.first(cljs.analyzer._STAR_recur_frames_STAR_);\nvar add_implicit_target_object_QMARK_ = (function (){var and__4149__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs),(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)) - (1)));\n} else {\nreturn and__4149__auto__;\n}\n})();\nvar exprs__$1 = (function (){var G__74943 = exprs;\nif(cljs.core.truth_(add_implicit_target_object_QMARK_)){\nreturn cljs.core.cons(null,G__74943);\n} else {\nreturn G__74943;\n}\n})();\nvar exprs__$2 = (function (){var _STAR_recur_frames_STAR__orig_val__74944 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74945 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74945);\n\ntry{return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74937_SHARP_){\nvar G__74946 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74947 = p1__74937_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74946,G__74947) : cljs.analyzer.analyze.call(null,G__74946,G__74947));\n}),exprs__$1));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74944);\n}})();\nif(cljs.core.truth_(frame)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't recur here\");\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs__$2),cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"recur argument count mismatch, expected: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame))),\" args, got: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(exprs__$2))].join(''));\n}\n\nif(cljs.core.truth_((function (){var and__4149__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.not(add_implicit_target_object_QMARK_);\n} else {\nreturn and__4149__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(cljs.core.first(exprs__$2))], null));\n} else {\n}\n\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(frame),true);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(frame),(function (tags){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tag,expr){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724).cljs$core$IFn$_invoke$arity$1(expr))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr));\n}\n}),tags,exprs__$2);\n}));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),frame,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094),exprs__$2,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094)], null)], 0));\n}));\ncljs.analyzer.analyze_const = (function cljs$analyzer$analyze_const(env,form){\nvar map__74954 = (function (){var G__74955 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621),true);\nvar G__74956 = form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74955,G__74956) : cljs.analyzer.analyze.call(null,G__74955,G__74956));\n})();\nvar map__74954__$1 = cljs.core.__destructure_map(map__74954);\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74954__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"literal?\",\"literal?\",352485871),true,new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(function (_,env,p__74958,___$1,___$2){\nvar vec__74959 = p__74958;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74959,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74959,(1),null);\nvar form = vec__74959;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to quote\");\n} else {\n}\n\nvar expr = cljs.analyzer.analyze_const(env,x);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),(function (_,env,p__74964,___$1,___$2){\nvar vec__74966 = p__74964;\nvar seq__74967 = cljs.core.seq(vec__74966);\nvar first__74968 = cljs.core.first(seq__74967);\nvar seq__74967__$1 = cljs.core.next(seq__74967);\nvar ___$3 = first__74968;\nvar first__74968__$1 = cljs.core.first(seq__74967__$1);\nvar seq__74967__$2 = cljs.core.next(seq__74967__$1);\nvar ctor = first__74968__$1;\nvar args = seq__74967__$2;\nvar form = vec__74966;\nvar _STAR_recur_frames_STAR__orig_val__74971 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74972 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74972);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ctorexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,ctor) : cljs.analyzer.analyze.call(null,enve,ctor));\nvar ctor_var = (cljs.core.truth_((function (){var G__74974 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ctorexpr);\nvar fexpr__74973 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),null,new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),null,new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),null], null), null);\nreturn (fexpr__74973.cljs$core$IFn$_invoke$arity$1 ? fexpr__74973.cljs$core$IFn$_invoke$arity$1(G__74974) : fexpr__74973.call(null,G__74974));\n})())?cljs.analyzer.resolve_existing_var(env,ctor):null);\nvar record_args = (cljs.core.truth_((function (){var and__4149__auto__ = new cljs.core.Keyword(null,\"record\",\"record\",-779106859).cljs$core$IFn$_invoke$arity$1(ctor_var);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));\n} else {\nreturn and__4149__auto__;\n}\n})())?cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((3),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,null) : cljs.analyzer.analyze.call(null,enve,null))):null);\nvar argexprs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74962_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__74962_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__74962_SHARP_));\n}),args)),record_args);\nvar known_num_fields = new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024).cljs$core$IFn$_invoke$arity$1(ctor_var);\nvar argc = cljs.core.count(args);\nif(((cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)))) && ((!((known_num_fields == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(known_num_fields,argc)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802),ctor], null));\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),ctorexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),(function (){var name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(ctorexpr));\nvar or__4160__auto__ = (function (){var fexpr__74976 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(\"js\",\"Object\",\"js/Object\",61215323,null),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(\"js\",\"String\",\"js/String\",-2070054036,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"js\",\"Array\",\"js/Array\",-423508366,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(\"js\",\"Number\",\"js/Number\",-508133572,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"js\",\"Function\",\"js/Function\",-749892063,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(\"js\",\"Boolean\",\"js/Boolean\",1661145260,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null);\nreturn (fexpr__74976.cljs$core$IFn$_invoke$arity$1 ? fexpr__74976.cljs$core$IFn$_invoke$arity$1(name) : fexpr__74976.call(null,name));\n})();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn name;\n}\n})()], null);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74971);\n}}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),(function (_,env,p__74977,___$1,___$2){\nvar vec__74978 = p__74977;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74978,(0),null);\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74978,(1),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74978,(2),null);\nvar alt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74978,(3),null);\nvar form = vec__74978;\nvar vec__74981 = (cljs.core.truth_(alt)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,target,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,val,null,(1),null))], 0)))),alt], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,val], null));\nvar target__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74981,(0),null);\nvar val__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74981,(1),null);\nvar _STAR_recur_frames_STAR__orig_val__74985 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74986 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74986);\n\ntry{var _STAR_private_var_access_nowarn_STAR__orig_val__74987 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__74988 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__74988);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar texpr = (((target__$1 instanceof cljs.core.Symbol))?(function (){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null))) && (((val__$1 === true) || (val__$1 === false))))){\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),val__$1));\n} else {\n}\n}\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),target__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! a constant\");\n} else {\n}\n\nvar local_76606 = cljs.analyzer.handle_symbol_local(target__$1,(function (){var G__74995 = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nreturn (target__$1.cljs$core$IFn$_invoke$arity$1 ? target__$1.cljs$core$IFn$_invoke$arity$1(G__74995) : target__$1.call(null,G__74995));\n})());\nif(cljs.core.truth_((function (){var or__4160__auto__ = (local_76606 == null);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar and__4149__auto__ = new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(local_76606);\nif(cljs.core.truth_(and__4149__auto__)){\nvar or__4160__auto____$1 = new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(local_76606);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nvar or__4160__auto____$2 = new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(local_76606);\nif(cljs.core.truth_(or__4160__auto____$2)){\nreturn or__4160__auto____$2;\n} else {\nreturn new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(local_76606);\n}\n}\n} else {\nreturn and__4149__auto__;\n}\n}\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! local var or non-mutable field\");\n}\n\nreturn (cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze_symbol.call(null,enve,target__$1));\n})()\n:((cljs.core.seq_QMARK_(target__$1))?(function (){var texpr = (cljs.core.truth_(new cljs.core.Keyword(null,\"extend-type\",\"extend-type\",-517175606).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(target__$1)))?(function (){var _STAR_cljs_warnings_STAR__orig_val__75001 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__75002 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),false);\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__75002);\n\ntry{return (cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__75001);\n}})():(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null)));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(texpr))){\nreturn texpr;\n} else {\nreturn null;\n}\n})():null)\n);\nvar vexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,val__$1) : cljs.analyzer.analyze.call(null,enve,val__$1));\nif(cljs.core.seq_QMARK_(target__$1)){\nvar sym_76618 = (function (){var G__75003 = target__$1;\nif((G__75003 == null)){\nreturn null;\n} else {\nreturn cljs.core.second(G__75003);\n}\n})();\nvar meta_76619 = cljs.core.meta(sym_76618);\nvar temp__5753__auto___76622 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(vexpr)))?new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(meta_76619):false);\nif(cljs.core.truth_(temp__5753__auto___76622)){\nvar info_76623 = temp__5753__auto___76622;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym_76618,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(info_76623,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null)),cljs.core.select_keys(cljs.core.first(new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(vexpr)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0))], 0));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(texpr)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"set! target must be a field or a symbol naming a var\");\n}\n\nif(((cljs.core.not(new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env))) && ((!(((function (){var fexpr__75005 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null),\"null\"], null), null);\nreturn (fexpr__75005.cljs$core$IFn$_invoke$arity$1 ? fexpr__75005.cljs$core$IFn$_invoke$arity$1(target__$1) : fexpr__75005.call(null,target__$1));\n})() == null)))))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set!\",\"set!\",-1389817006),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),texpr,new cljs.core.Keyword(null,\"val\",\"val\",128701612),vexpr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"val\",\"val\",128701612)], null)], null);\n\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__74987);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74985);\n}}));\ncljs.analyzer.foreign_dep_QMARK_ = (function cljs$analyzer$foreign_dep_QMARK_(dep){\nvar js_index = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\nvar temp__5755__auto__ = cljs.core.find(js_index,cljs.core.name(cljs.core.first(cljs.analyzer.lib_AMPERSAND_sublib(dep))));\nif((temp__5755__auto__ == null)){\nreturn false;\n} else {\nvar vec__75009 = temp__5755__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75009,(0),null);\nvar map__75012 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75009,(1),null);\nvar map__75012__$1 = cljs.core.__destructure_map(map__75012);\nvar foreign = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75012__$1,new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149));\nreturn foreign;\n}\n});\n/**\n * Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n * and opts, compiler options - analyze all of the dependencies. Required to\n * correctly analyze usage of other namespaces.\n */\ncljs.analyzer.analyze_deps = (function cljs$analyzer$analyze_deps(var_args){\nvar G__75018 = arguments.length;\nswitch (G__75018) {\ncase 3:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = (function (lib,deps,env){\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(lib,deps,env,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = (function (lib,deps,env,opts){\nvar compiler = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar _STAR_cljs_dep_set_STAR__orig_val__75020 = cljs.analyzer._STAR_cljs_dep_set_STAR_;\nvar _STAR_cljs_dep_set_STAR__temp_val__75021 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_cljs_dep_set_STAR_,lib),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558)], null),cljs.core.conj,lib);\n(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__temp_val__75021);\n\ntry{if(cljs.core.every_QMARK_((function (p1__75013_SHARP_){\nreturn (!(cljs.core.contains_QMARK_(cljs.analyzer._STAR_cljs_dep_set_STAR_,p1__75013_SHARP_)));\n}),deps)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Circular dependency detected, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\" -> \",cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.analyzer._STAR_cljs_dep_set_STAR_)),cljs.core.some(cljs.analyzer._STAR_cljs_dep_set_STAR_,deps)))))].join(''),\"\\n\",\"(every? (fn* [p1__75013#] (not (contains? *cljs-dep-set* p1__75013#))) deps)\"].join('')));\n}\n\nvar seq__75024 = cljs.core.seq(deps);\nvar chunk__75025 = null;\nvar count__75026 = (0);\nvar i__75027 = (0);\nwhile(true){\nif((i__75027 < count__75026)){\nvar dep = chunk__75025.cljs$core$IIndexed$_nth$arity$2(null,i__75027);\nif(cljs.core.truth_((function (){var or__4160__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4160__auto____$1){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nvar idx_76648 = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler);\nvar dep_76649__$1 = cljs.core.first(cljs.analyzer.lib_AMPERSAND_sublib(dep));\nif(cljs.core.contains_QMARK_(idx_76648,cljs.core.name(dep_76649__$1))){\nvar dep_name_76650 = cljs.core.name(dep_76649__$1);\nif(clojure.string.starts_with_QMARK_(dep_name_76650,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep_76649__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep_76649__$1)], null)));\n}\n}\n\n\nvar G__76655 = seq__75024;\nvar G__76656 = chunk__75025;\nvar G__76657 = count__75026;\nvar G__76658 = (i__75027 + (1));\nseq__75024 = G__76655;\nchunk__75025 = G__76656;\ncount__75026 = G__76657;\ni__75027 = G__76658;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__75024);\nif(temp__5753__auto__){\nvar seq__75024__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__75024__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__75024__$1);\nvar G__76666 = cljs.core.chunk_rest(seq__75024__$1);\nvar G__76667 = c__4591__auto__;\nvar G__76668 = cljs.core.count(c__4591__auto__);\nvar G__76669 = (0);\nseq__75024 = G__76666;\nchunk__75025 = G__76667;\ncount__75026 = G__76668;\ni__75027 = G__76669;\ncontinue;\n} else {\nvar dep = cljs.core.first(seq__75024__$1);\nif(cljs.core.truth_((function (){var or__4160__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4160__auto____$1){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nvar idx_76670 = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler);\nvar dep_76671__$1 = cljs.core.first(cljs.analyzer.lib_AMPERSAND_sublib(dep));\nif(cljs.core.contains_QMARK_(idx_76670,cljs.core.name(dep_76671__$1))){\nvar dep_name_76673 = cljs.core.name(dep_76671__$1);\nif(clojure.string.starts_with_QMARK_(dep_name_76673,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep_76671__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep_76671__$1)], null)));\n}\n}\n\n\nvar G__76677 = cljs.core.next(seq__75024__$1);\nvar G__76678 = null;\nvar G__76679 = (0);\nvar G__76680 = (0);\nseq__75024 = G__76677;\nchunk__75025 = G__76678;\ncount__75026 = G__76679;\ni__75027 = G__76680;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__orig_val__75020);\n}}));\n\n(cljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.missing_use_QMARK_ = (function cljs$analyzer$missing_use_QMARK_(lib,sym,cenv){\nvar js_lib = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cenv,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.name(lib)], null));\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),lib,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150)),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150))) && ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"group\",\"group\",582596132)),new cljs.core.Keyword(null,\"goog\",\"goog\",-1711135452))))) && (cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"closure-lib\",\"closure-lib\",2105917916)))) && ((!(cljs.analyzer.node_module_dep_QMARK_(lib)))) && ((!(cljs.analyzer.dep_has_global_exports_QMARK_(lib)))));\n});\ncljs.analyzer.missing_rename_QMARK_ = (function cljs$analyzer$missing_rename_QMARK_(sym,cenv){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym__$1,cenv);\n});\ncljs.analyzer.missing_use_macro_QMARK_ = (function cljs$analyzer$missing_use_macro_QMARK_(lib,sym){\nif((lib instanceof cljs.core.Symbol)){\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym) == null)));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.missing_rename_macro_QMARK_ = (function cljs$analyzer$missing_rename_macro_QMARK_(sym){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym__$1) == null)));\n});\ncljs.analyzer.missing_uses = (function cljs$analyzer$missing_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__75046){\nvar vec__75047 = p__75046;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75047,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75047,(1),null);\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym,cenv);\n}),uses));\n});\ncljs.analyzer.missing_renames = (function cljs$analyzer$missing_renames(renames,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__75050){\nvar vec__75051 = p__75050;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75051,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75051,(1),null);\nreturn cljs.analyzer.missing_rename_QMARK_(qualified_sym,cenv);\n}),renames));\n});\ncljs.analyzer.missing_use_macros = (function cljs$analyzer$missing_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__75057){\nvar vec__75058 = p__75057;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75058,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75058,(1),null);\nreturn cljs.analyzer.missing_use_macro_QMARK_(lib,sym);\n}),use_macros));\n});\ncljs.analyzer.inferred_use_macros = (function cljs$analyzer$inferred_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__75061){\nvar vec__75062 = p__75061;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75062,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75062,(1),null);\nreturn cljs.core.not(cljs.analyzer.missing_use_macro_QMARK_(lib,sym));\n}),use_macros));\n});\ncljs.analyzer.inferred_rename_macros = (function cljs$analyzer$inferred_rename_macros(rename_macros,env){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__75065){\nvar vec__75066 = p__75065;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75066,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75066,(1),null);\nreturn (!(cljs.analyzer.missing_rename_macro_QMARK_(qualified_sym)));\n}),rename_macros));\n});\ncljs.analyzer.check_uses = (function cljs$analyzer$check_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__75069 = cljs.core.seq(uses);\nvar chunk__75070 = null;\nvar count__75071 = (0);\nvar i__75072 = (0);\nwhile(true){\nif((i__75072 < count__75071)){\nvar vec__75082 = chunk__75070.cljs$core$IIndexed$_nth$arity$2(null,i__75072);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75082,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75082,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null)));\n} else {\n}\n\n\nvar G__76721 = seq__75069;\nvar G__76722 = chunk__75070;\nvar G__76723 = count__75071;\nvar G__76724 = (i__75072 + (1));\nseq__75069 = G__76721;\nchunk__75070 = G__76722;\ncount__75071 = G__76723;\ni__75072 = G__76724;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__75069);\nif(temp__5753__auto__){\nvar seq__75069__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__75069__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__75069__$1);\nvar G__76726 = cljs.core.chunk_rest(seq__75069__$1);\nvar G__76727 = c__4591__auto__;\nvar G__76728 = cljs.core.count(c__4591__auto__);\nvar G__76729 = (0);\nseq__75069 = G__76726;\nchunk__75070 = G__76727;\ncount__75071 = G__76728;\ni__75072 = G__76729;\ncontinue;\n} else {\nvar vec__75085 = cljs.core.first(seq__75069__$1);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75085,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75085,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null)));\n} else {\n}\n\n\nvar G__76731 = cljs.core.next(seq__75069__$1);\nvar G__76732 = null;\nvar G__76733 = (0);\nvar G__76734 = (0);\nseq__75069 = G__76731;\nchunk__75070 = G__76732;\ncount__75071 = G__76733;\ni__75072 = G__76734;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.check_use_macros = (function cljs$analyzer$check_use_macros(var_args){\nvar G__75089 = arguments.length;\nswitch (G__75089) {\ncase 2:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2 = (function (use_macros,env){\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,null,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3 = (function (use_macros,missing_uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__75093_76740 = cljs.core.seq(use_macros);\nvar chunk__75094_76741 = null;\nvar count__75095_76742 = (0);\nvar i__75096_76743 = (0);\nwhile(true){\nif((i__75096_76743 < count__75095_76742)){\nvar vec__75105_76747 = chunk__75094_76741.cljs$core$IIndexed$_nth$arity$2(null,i__75096_76743);\nvar sym_76748 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75105_76747,(0),null);\nvar lib_76749 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75105_76747,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_76749,sym_76748))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_76749,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_76748], null)));\n} else {\n}\n\n\nvar G__76752 = seq__75093_76740;\nvar G__76753 = chunk__75094_76741;\nvar G__76754 = count__75095_76742;\nvar G__76755 = (i__75096_76743 + (1));\nseq__75093_76740 = G__76752;\nchunk__75094_76741 = G__76753;\ncount__75095_76742 = G__76754;\ni__75096_76743 = G__76755;\ncontinue;\n} else {\nvar temp__5753__auto___76756 = cljs.core.seq(seq__75093_76740);\nif(temp__5753__auto___76756){\nvar seq__75093_76759__$1 = temp__5753__auto___76756;\nif(cljs.core.chunked_seq_QMARK_(seq__75093_76759__$1)){\nvar c__4591__auto___76761 = cljs.core.chunk_first(seq__75093_76759__$1);\nvar G__76762 = cljs.core.chunk_rest(seq__75093_76759__$1);\nvar G__76763 = c__4591__auto___76761;\nvar G__76764 = cljs.core.count(c__4591__auto___76761);\nvar G__76765 = (0);\nseq__75093_76740 = G__76762;\nchunk__75094_76741 = G__76763;\ncount__75095_76742 = G__76764;\ni__75096_76743 = G__76765;\ncontinue;\n} else {\nvar vec__75109_76766 = cljs.core.first(seq__75093_76759__$1);\nvar sym_76767 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75109_76766,(0),null);\nvar lib_76768 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75109_76766,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_76768,sym_76767))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_76768,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_76767], null)));\n} else {\n}\n\n\nvar G__76774 = cljs.core.next(seq__75093_76759__$1);\nvar G__76775 = null;\nvar G__76776 = (0);\nvar G__76777 = (0);\nseq__75093_76740 = G__76774;\nchunk__75094_76741 = G__76775;\ncount__75095_76742 = G__76776;\ni__75096_76743 = G__76777;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.analyzer.check_uses(cljs.analyzer.missing_use_macros(missing_uses,env),env);\n\nreturn cljs.analyzer.inferred_use_macros(missing_uses,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.check_use_macros_inferring_missing = (function cljs$analyzer$check_use_macros_inferring_missing(p__75115,env){\nvar map__75116 = p__75115;\nvar map__75116__$1 = cljs.core.__destructure_map(map__75116);\nvar ast = map__75116__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75116__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75116__$1,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75116__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar missing_uses = (cljs.core.truth_((function (){var and__4149__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.seq(uses);\n} else {\nreturn and__4149__auto__;\n}\n})())?cljs.analyzer.missing_uses(uses,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,uses,cljs.core.keys(missing_uses));\nvar remove_missing_uses = (function (p1__75112_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__75112_SHARP_,cljs.core.keys(missing_uses));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),(function (p1__75113_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__75113_SHARP_,cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,missing_uses,env)], 0)),cljs.analyzer.inferred_use_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__75114_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__75114_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),cljs.core.merge,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.check_rename_macros_inferring_missing = (function cljs$analyzer$check_rename_macros_inferring_missing(p__75123,env){\nvar map__75124 = p__75123;\nvar map__75124__$1 = cljs.core.__destructure_map(map__75124);\nvar ast = map__75124__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75124__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75124__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar missing_renames = (cljs.core.truth_((function (){var and__4149__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.seq(renames);\n} else {\nreturn and__4149__auto__;\n}\n})())?cljs.analyzer.missing_renames(renames,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,renames,cljs.core.keys(missing_renames));\nvar missing_rename_macros = cljs.analyzer.inferred_rename_macros(missing_renames,env);\nvar remove_missing_renames = (function (p1__75120_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__75120_SHARP_,cljs.core.keys(missing_renames));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),(function (p1__75121_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__75121_SHARP_,missing_rename_macros], 0)),cljs.analyzer.inferred_rename_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__75122_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__75122_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),cljs.core.merge,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.parse_ns_error_msg = (function cljs$analyzer$parse_ns_error_msg(spec,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"; offending spec: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([spec], 0))].join('');\n});\ncljs.analyzer.basic_validate_ns_spec = (function cljs$analyzer$basic_validate_ns_spec(env,macros_QMARK_,spec){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string') || (cljs.core.sequential_QMARK_(spec)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"));\n}\n\nif(cljs.core.sequential_QMARK_(spec)){\nif((((cljs.core.first(spec) instanceof cljs.core.Symbol)) || (typeof cljs.core.first(spec) === 'string'))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Library name must be specified as a symbol in :require / :require-macros\"));\n}\n\nif(cljs.core.odd_QMARK_(cljs.core.count(spec))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"));\n}\n\nif(cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),cljs.core.next(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as, :refer and :rename options supported in :require / :require-macros\"));\n}\n\nif((function (){var fs = cljs.core.frequencies(cljs.core.next(spec));\nreturn ((((fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"as\",\"as\",1148689641),(0)) : fs.call(null,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),(0))) <= (1))) && (((fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),(0)) : fs.call(null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),(0))) <= (1))));\n})()){\nreturn null;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :as and :refer options may only be specified once in :require / :require-macros\"));\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.parse_ns_excludes = (function cljs$analyzer$parse_ns_excludes(env,args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (s,p__75132){\nvar vec__75133 = p__75132;\nvar seq__75134 = cljs.core.seq(vec__75133);\nvar first__75135 = cljs.core.first(seq__75134);\nvar seq__75134__$1 = cljs.core.next(seq__75134);\nvar k = first__75135;\nvar filters = seq__75134__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440))){\nif(cljs.core.seq(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(s))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only one :refer-clojure form is allowed per namespace definition\");\n} else {\n}\n\nvar valid_kws = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null);\nvar xs = (function (){var fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null);\nvar err = (!(cljs.core.even_QMARK_(cljs.core.count(filters))));\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\");\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nif(cljs.core.truth_((valid_kws.cljs$core$IFn$_invoke$arity$1 ? valid_kws.cljs$core$IFn$_invoke$arity$1(kw) : valid_kws.call(null,kw)))){\nvar refs = cljs.core.second(fs);\nif((!(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,valid_kws,vec__75133,seq__75134,first__75135,seq__75134__$1,k,filters){\nreturn (function (p1__75131_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__75131_SHARP_);\n});})(fs,ret,err,refs,kw,valid_kws,vec__75133,seq__75134,first__75135,seq__75134__$1,k,filters))\n,refs)))))))){\nvar G__76828 = fs;\nvar G__76829 = ret;\nvar G__76830 = true;\nfs = G__76828;\nret = G__76829;\nerr = G__76830;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))){\nvar G__76831 = cljs.core.nnext(fs);\nvar G__76832 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),cljs.core.into,refs);\nvar G__76833 = false;\nfs = G__76831;\nret = G__76832;\nerr = G__76833;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))){\nvar G__76834 = cljs.core.nnext(fs);\nvar G__76835 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),cljs.core.merge,refs);\nvar G__76836 = false;\nfs = G__76834;\nret = G__76835;\nerr = G__76836;\ncontinue;\n} else {\nreturn null;\n}\n}\n}\n} else {\nvar G__76839 = fs;\nvar G__76840 = ret;\nvar G__76841 = true;\nfs = G__76839;\nret = G__76840;\nerr = G__76841;\ncontinue;\n}\n} else {\nreturn ret;\n\n}\n}\nbreak;\n}\n})();\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s,xs], 0));\n} else {\nreturn s;\n}\n}),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null),args);\n});\ncljs.analyzer.use__GT_require = (function cljs$analyzer$use__GT_require(env,p__75140){\nvar vec__75141 = p__75140;\nvar seq__75142 = cljs.core.seq(vec__75141);\nvar first__75143 = cljs.core.first(seq__75142);\nvar seq__75142__$1 = cljs.core.next(seq__75142);\nvar lib = first__75143;\nvar filters = seq__75142__$1;\nvar spec = vec__75141;\nif((((lib instanceof cljs.core.Symbol)) && (cljs.core.odd_QMARK_(cljs.core.count(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n}\n\nvar fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib], null);\nvar err = false;\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nvar only_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"only\",\"only\",1907811652));\nif(((only_QMARK_) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))))){\nif((!((cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw)]),ret) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :only and :rename options may only be specified once in :use / :use-macros\"));\n} else {\nvar refs = cljs.core.second(fs);\nif((!(((((only_QMARK_) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,only_QMARK_,vec__75141,seq__75142,first__75143,seq__75142__$1,lib,filters,spec){\nreturn (function (p1__75139_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__75139_SHARP_);\n});})(fs,ret,err,refs,kw,only_QMARK_,vec__75141,seq__75142,first__75143,seq__75142__$1,lib,filters,spec))\n,refs)))))))){\nvar G__76852 = fs;\nvar G__76853 = ret;\nvar G__76854 = true;\nfs = G__76852;\nret = G__76853;\nerr = G__76854;\ncontinue;\n} else {\nvar G__76855 = cljs.core.nnext(fs);\nvar G__76856 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw),refs], null));\nvar G__76857 = false;\nfs = G__76855;\nret = G__76856;\nerr = G__76857;\ncontinue;\n}\n}\n} else {\nvar G__76858 = fs;\nvar G__76859 = ret;\nvar G__76860 = true;\nfs = G__76858;\nret = G__76859;\nerr = G__76860;\ncontinue;\n}\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),ret) == null)))){\nreturn ret;\n} else {\nvar G__76868 = fs;\nvar G__76869 = ret;\nvar G__76870 = true;\nfs = G__76868;\nret = G__76869;\nerr = G__76870;\ncontinue;\n}\n\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse_require_spec = (function cljs$analyzer$parse_require_spec(env,macros_QMARK_,deps,aliases,spec){\nwhile(true){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string'))){\nvar G__76871 = env;\nvar G__76872 = macros_QMARK_;\nvar G__76873 = deps;\nvar G__76874 = aliases;\nvar G__76875 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\nenv = G__76871;\nmacros_QMARK_ = G__76872;\ndeps = G__76873;\naliases = G__76874;\nspec = G__76875;\ncontinue;\n} else {\ncljs.analyzer.basic_validate_ns_spec(env,macros_QMARK_,spec);\n\nvar vec__75144 = spec;\nvar seq__75145 = cljs.core.seq(vec__75144);\nvar first__75146 = cljs.core.first(seq__75145);\nvar seq__75145__$1 = cljs.core.next(seq__75145);\nvar lib = first__75146;\nvar opts = seq__75145__$1;\nvar vec__75147 = (function (){var temp__5755__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib),new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib,null], null);\n} else {\nvar js_module_name = temp__5755__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(js_module_name),lib], null);\n}\n})();\nvar lib__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75147,(0),null);\nvar js_module_provides = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75147,(1),null);\nvar map__75150 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar map__75150__$1 = cljs.core.__destructure_map(map__75150);\nvar alias = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75150__$1,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),((typeof lib__$1 === 'string')?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(lib__$1)):lib__$1));\nvar referred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75150__$1,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553));\nvar renamed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75150__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar referred_without_renamed = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(renamed)),referred));\nvar vec__75151 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613)], null));\nvar rk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75151,(0),null);\nvar uk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75151,(1),null);\nvar renk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75151,(2),null);\nif((((alias instanceof cljs.core.Symbol)) || ((alias == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as must be followed by a symbol in :require / :require-macros\"));\n}\n\nif((!((alias == null)))){\nvar alias_type_76880 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.Keyword(null,\"macros\",\"macros\",811339431):new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786));\nvar lib_SINGLEQUOTE__76881 = (function (){var fexpr__75154 = alias_type_76880.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(aliases));\nreturn (fexpr__75154.cljs$core$IFn$_invoke$arity$1 ? fexpr__75154.cljs$core$IFn$_invoke$arity$1(alias) : fexpr__75154.call(null,alias));\n})();\nif((((!((lib_SINGLEQUOTE__76881 == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(lib__$1,lib_SINGLEQUOTE__76881)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as alias must be unique\"));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(aliases,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias_type_76880], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias,lib__$1], null),(cljs.core.truth_(js_module_provides)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_module_provides,lib__$1], null):null)], 0));\n} else {\n}\n\nif(((((cljs.core.sequential_QMARK_(referred)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,referred)))) || ((referred == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":refer must be followed by a sequence of symbols in :require / :require-macros\"));\n}\n\nif(cljs.core.truth_(macros_QMARK_)){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,lib__$1);\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(((!((alias == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([rk,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.createAsIfByAssoc([alias,lib__$1]),cljs.core.PersistentArrayMap.createAsIfByAssoc([lib__$1,lib__$1]),(cljs.core.truth_(js_module_provides)?cljs.core.PersistentArrayMap.createAsIfByAssoc([js_module_provides,lib__$1]):null)], 0))]):null),(((!((referred_without_renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([uk,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(referred_without_renamed,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(lib__$1)))]):null),(((!((renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([renk,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (env,macros_QMARK_,deps,aliases,spec,vec__75144,seq__75145,first__75146,seq__75145__$1,lib,opts,vec__75147,lib__$1,js_module_provides,map__75150,map__75150__$1,alias,referred,renamed,referred_without_renamed,vec__75151,rk,uk,renk){\nreturn (function (m,p__75155){\nvar vec__75156 = p__75155;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75156,(0),null);\nvar renamed__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75156,(1),null);\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([original]),referred))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Renamed symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original),\" not referred\"].join(''));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed__$1,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n});})(env,macros_QMARK_,deps,aliases,spec,vec__75144,seq__75145,first__75146,seq__75145__$1,lib,opts,vec__75147,lib__$1,js_module_provides,map__75150,map__75150__$1,alias,referred,renamed,referred_without_renamed,vec__75151,rk,uk,renk))\n,cljs.core.PersistentArrayMap.EMPTY,renamed)]):null)], 0));\n}\nbreak;\n}\n});\ncljs.analyzer.parse_import_spec = (function cljs$analyzer$parse_import_spec(env,deps,spec){\nif(((((cljs.core.sequential_QMARK_(spec)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,spec)))) || ((((spec instanceof cljs.core.Symbol)) && ((cljs.core.namespace(spec) == null)))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"));\n}\n\nvar import_map = ((cljs.core.sequential_QMARK_(spec))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__75159_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__75159_SHARP_,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(spec)),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__75159_SHARP_)].join(''))],null));\n}),cljs.core.rest(spec))):(((!(((-1) === cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec).indexOf(\".\")))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec),/\\./))),spec]):cljs.core.PersistentArrayMap.EMPTY\n));\nvar seq__75160_76888 = cljs.core.seq(import_map);\nvar chunk__75161_76889 = null;\nvar count__75162_76890 = (0);\nvar i__75163_76891 = (0);\nwhile(true){\nif((i__75163_76891 < count__75162_76890)){\nvar vec__75170_76893 = chunk__75161_76889.cljs$core$IIndexed$_nth$arity$2(null,i__75163_76891);\nvar __76894 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75170_76893,(0),null);\nvar spec_76895__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75170_76893,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_76895__$1);\n\n\nvar G__76898 = seq__75160_76888;\nvar G__76899 = chunk__75161_76889;\nvar G__76900 = count__75162_76890;\nvar G__76901 = (i__75163_76891 + (1));\nseq__75160_76888 = G__76898;\nchunk__75161_76889 = G__76899;\ncount__75162_76890 = G__76900;\ni__75163_76891 = G__76901;\ncontinue;\n} else {\nvar temp__5753__auto___76902 = cljs.core.seq(seq__75160_76888);\nif(temp__5753__auto___76902){\nvar seq__75160_76903__$1 = temp__5753__auto___76902;\nif(cljs.core.chunked_seq_QMARK_(seq__75160_76903__$1)){\nvar c__4591__auto___76904 = cljs.core.chunk_first(seq__75160_76903__$1);\nvar G__76905 = cljs.core.chunk_rest(seq__75160_76903__$1);\nvar G__76906 = c__4591__auto___76904;\nvar G__76907 = cljs.core.count(c__4591__auto___76904);\nvar G__76908 = (0);\nseq__75160_76888 = G__76905;\nchunk__75161_76889 = G__76906;\ncount__75162_76890 = G__76907;\ni__75163_76891 = G__76908;\ncontinue;\n} else {\nvar vec__75173_76909 = cljs.core.first(seq__75160_76903__$1);\nvar __76910 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75173_76909,(0),null);\nvar spec_76911__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75173_76909,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_76911__$1);\n\n\nvar G__76912 = cljs.core.next(seq__75160_76903__$1);\nvar G__76913 = null;\nvar G__76914 = (0);\nvar G__76915 = (0);\nseq__75160_76888 = G__76912;\nchunk__75161_76889 = G__76913;\ncount__75162_76890 = G__76914;\ni__75163_76891 = G__76915;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),import_map,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),import_map], null);\n});\n/**\n * Given a spec form check whether the spec namespace requires a macro file\n * of the same name. If so return true.\n */\ncljs.analyzer.macro_autoload_ns_QMARK_ = (function cljs$analyzer$macro_autoload_ns_QMARK_(form){\nif(cljs.core.truth_(cljs.analyzer._STAR_macro_infer_STAR_)){\nvar ns = ((cljs.core.sequential_QMARK_(form))?cljs.core.first(form):form);\nvar map__75176 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null));\nvar map__75176__$1 = cljs.core.__destructure_map(map__75176);\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75176__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75176__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar or__4160__auto__ = cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(use_macros));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(require_macros));\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given a symbol that starts with clojure as the first segment return the\n * same symbol with the first segment replaced with cljs\n */\ncljs.analyzer.clj_ns__GT_cljs_ns = (function cljs$analyzer$clj_ns__GT_cljs_ns(sym){\nvar segs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure\",cljs.core.first(segs))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.cons(\"cljs\",cljs.core.next(segs))));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.canonicalize_specs = (function cljs$analyzer$canonicalize_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nvar spec = cljs.core.second(quoted_spec_or_kw);\nif(((cljs.core.vector_QMARK_(spec)) || (cljs.core.map_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\n}\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\ncljs.analyzer.canonicalize_import_specs = (function cljs$analyzer$canonicalize_import_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_import_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nreturn cljs.core.second(quoted_spec_or_kw);\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\n/**\n * Given an original set of ns specs desugar :include-macros and :refer-macros\n * usage into only primitive spec forms - :use, :require, :use-macros,\n * :require-macros. If a library includes a macro file of with the same name\n * as the namespace will also be desugared.\n */\ncljs.analyzer.desugar_ns_specs = (function cljs$analyzer$desugar_ns_specs(args){\nvar map__75178 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__75179){\nvar vec__75180 = p__75179;\nvar seq__75181 = cljs.core.seq(vec__75180);\nvar first__75182 = cljs.core.first(seq__75181);\nvar seq__75181__$1 = cljs.core.next(seq__75181);\nvar k = first__75182;\nvar specs = seq__75181__$1;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,specs)], null);\n}),args));\nvar map__75178__$1 = cljs.core.__destructure_map(map__75178);\nvar indexed = map__75178__$1;\nvar require = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75178__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar sugar_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953),null], null), null);\nvar remove_from_spec = (function (pred,spec){\nwhile(true){\nif(cljs.core.not(((cljs.core.sequential_QMARK_(spec))?cljs.core.some(pred,spec):false))){\nreturn spec;\n} else {\nvar vec__75183 = cljs.core.split_with(cljs.core.complement(pred),spec);\nvar l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75183,(0),null);\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75183,(1),null);\nvar G__76951 = pred;\nvar G__76952 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(l,cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),r));\npred = G__76951;\nspec = G__76952;\ncontinue;\n}\nbreak;\n}\n});\nvar replace_refer_macros = (function (spec){\nif((!(cljs.core.sequential_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953))){\nreturn new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553);\n} else {\nreturn x;\n}\n}),spec);\n}\n});\nvar reload_spec_QMARK_ = (function (p1__75177_SHARP_){\nvar fexpr__75186 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null);\nreturn (fexpr__75186.cljs$core$IFn$_invoke$arity$1 ? fexpr__75186.cljs$core$IFn$_invoke$arity$1(p1__75177_SHARP_) : fexpr__75186.call(null,p1__75177_SHARP_));\n});\nvar to_macro_specs = (function (specs){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nreturn replace_refer_macros(remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null], null), null),x))));\n} else {\nreturn x;\n}\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (x){\nvar or__4160__auto__ = ((cljs.core.sequential_QMARK_(x))?cljs.core.some(sugar_keys,x):false);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = reload_spec_QMARK_(x);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.analyzer.macro_autoload_ns_QMARK_(x);\n}\n}\n}),specs));\n});\nvar remove_sugar = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(remove_from_spec,sugar_keys);\nvar temp__5755__auto__ = cljs.core.seq(to_macro_specs(require));\nif((temp__5755__auto__ == null)){\nreturn args;\n} else {\nvar require_specs = temp__5755__auto__;\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nvar vec__75187 = x;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75187,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75187,(1),null);\nreturn cljs.core.cons(k,cljs.core.map.cljs$core$IFn$_invoke$arity$2(remove_sugar,v));\n} else {\nreturn x;\n}\n}),cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexed,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentVector.EMPTY),require_specs));\n}\n});\ncljs.analyzer.find_def_clash = (function cljs$analyzer$find_def_clash(env,ns,segments){\nvar to_check = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xs){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.butlast(xs))),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(xs))], null);\n}),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.PersistentVector.EMPTY,segments)));\nvar seq__75190 = cljs.core.seq(to_check);\nvar chunk__75191 = null;\nvar count__75192 = (0);\nvar i__75193 = (0);\nwhile(true){\nif((i__75193 < count__75192)){\nvar vec__75200 = chunk__75191.cljs$core$IIndexed$_nth$arity$2(null,i__75193);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75200,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75200,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__76968 = seq__75190;\nvar G__76969 = chunk__75191;\nvar G__76970 = count__75192;\nvar G__76971 = (i__75193 + (1));\nseq__75190 = G__76968;\nchunk__75191 = G__76969;\ncount__75192 = G__76970;\ni__75193 = G__76971;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__75190);\nif(temp__5753__auto__){\nvar seq__75190__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__75190__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__75190__$1);\nvar G__76978 = cljs.core.chunk_rest(seq__75190__$1);\nvar G__76979 = c__4591__auto__;\nvar G__76980 = cljs.core.count(c__4591__auto__);\nvar G__76981 = (0);\nseq__75190 = G__76978;\nchunk__75191 = G__76979;\ncount__75192 = G__76980;\ni__75193 = G__76981;\ncontinue;\n} else {\nvar vec__75203 = cljs.core.first(seq__75190__$1);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75203,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75203,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__76988 = cljs.core.next(seq__75190__$1);\nvar G__76989 = null;\nvar G__76990 = (0);\nvar G__76991 = (0);\nseq__75190 = G__76988;\nchunk__75191 = G__76989;\ncount__75192 = G__76990;\ni__75193 = G__76991;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.macro_ns_name = (function cljs$analyzer$macro_ns_name(name){\nvar name_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nif(cljs.core.not(goog.string.endsWith(name_str,\"$macros\"))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([name_str,\"$macros\"].join(''));\n} else {\nreturn name;\n}\n});\ncljs.analyzer.check_duplicate_aliases = (function cljs$analyzer$check_duplicate_aliases(env,old,new$){\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(old);\nvar seq__75206 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null));\nvar chunk__75207 = null;\nvar count__75208 = (0);\nvar i__75209 = (0);\nwhile(true){\nif((i__75209 < count__75208)){\nvar k = chunk__75207.cljs$core$IIndexed$_nth$arity$2(null,i__75209);\nvar old_aliases_76994 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_76995 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5757__auto___76996 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_76995)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__75206,chunk__75207,count__75208,i__75209,old_aliases_76994,new_aliases_76995,k,ns_name){\nreturn (function (p__75218){\nvar vec__75219 = p__75218;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75219,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75219,(1),null);\nvar entry = vec__75219;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_76995,k__$1))));\n});})(seq__75206,chunk__75207,count__75208,i__75209,old_aliases_76994,new_aliases_76995,k,ns_name))\n,old_aliases_76994)));\nif((temp__5757__auto___76996 == null)){\n} else {\nvar alias_76998 = temp__5757__auto___76996;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_76998),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_76994,alias_76998))].join(''));\n}\n\n\nvar G__76999 = seq__75206;\nvar G__77000 = chunk__75207;\nvar G__77001 = count__75208;\nvar G__77002 = (i__75209 + (1));\nseq__75206 = G__76999;\nchunk__75207 = G__77000;\ncount__75208 = G__77001;\ni__75209 = G__77002;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__75206);\nif(temp__5753__auto__){\nvar seq__75206__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__75206__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__75206__$1);\nvar G__77007 = cljs.core.chunk_rest(seq__75206__$1);\nvar G__77008 = c__4591__auto__;\nvar G__77009 = cljs.core.count(c__4591__auto__);\nvar G__77010 = (0);\nseq__75206 = G__77007;\nchunk__75207 = G__77008;\ncount__75208 = G__77009;\ni__75209 = G__77010;\ncontinue;\n} else {\nvar k = cljs.core.first(seq__75206__$1);\nvar old_aliases_77012 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_77013 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5757__auto___77016 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_77013)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__75206,chunk__75207,count__75208,i__75209,old_aliases_77012,new_aliases_77013,k,seq__75206__$1,temp__5753__auto__,ns_name){\nreturn (function (p__75222){\nvar vec__75223 = p__75222;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75223,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75223,(1),null);\nvar entry = vec__75223;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_77013,k__$1))));\n});})(seq__75206,chunk__75207,count__75208,i__75209,old_aliases_77012,new_aliases_77013,k,seq__75206__$1,temp__5753__auto__,ns_name))\n,old_aliases_77012)));\nif((temp__5757__auto___77016 == null)){\n} else {\nvar alias_77043 = temp__5757__auto___77016;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_77043),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_77012,alias_77043))].join(''));\n}\n\n\nvar G__77044 = cljs.core.next(seq__75206__$1);\nvar G__77045 = null;\nvar G__77046 = (0);\nvar G__77047 = (0);\nseq__75206 = G__77044;\nchunk__75207 = G__77045;\ncount__75208 = G__77046;\ni__75209 = G__77047;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.merge_ns_info = (function cljs$analyzer$merge_ns_info(old,new$,env){\nif((cljs.core.count(old) > (0))){\nvar deep_merge_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394)], null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([old,cljs.core.select_keys(new$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null)),cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(old,deep_merge_keys),cljs.core.select_keys(new$,deep_merge_keys)], 0))], 0));\n} else {\nreturn new$;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),(function (_,env,p__75228,___$1,opts){\nvar vec__75229 = p__75228;\nvar seq__75230 = cljs.core.seq(vec__75229);\nvar first__75231 = cljs.core.first(seq__75230);\nvar seq__75230__$1 = cljs.core.next(seq__75230);\nvar ___$2 = first__75231;\nvar first__75231__$1 = cljs.core.first(seq__75230__$1);\nvar seq__75230__$2 = cljs.core.next(seq__75230__$1);\nvar name = first__75231__$1;\nvar args = seq__75230__$2;\nvar form = vec__75229;\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespace declarations must appear at the top-level.\");\n}\n\nif((name instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespaces must be named by a symbol.\");\n}\n\nvar name__$1 = (function (){var G__75232 = name;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nreturn cljs.analyzer.macro_ns_name(G__75232);\n} else {\nreturn G__75232;\n}\n})();\nvar segments_77054 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name__$1),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(segments_77054))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\nvar segment_77058 = cljs.core.some(cljs.analyzer.js_reserved,segments_77054);\nif((!((segment_77058 == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\ncljs.analyzer.find_def_clash(env,name__$1,segments_77054);\n\nvar docstring = ((typeof cljs.core.first(args) === 'string')?cljs.core.first(args):null);\nvar mdocstr = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name__$1));\nvar args__$1 = (((!((docstring == null))))?cljs.core.next(args):args);\nvar metadata = ((cljs.core.map_QMARK_(cljs.core.first(args__$1)))?cljs.core.first(args__$1):null);\nvar args__$2 = cljs.analyzer.desugar_ns_specs((((!((metadata == null))))?cljs.core.next(args__$1):args__$1));\nvar name__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(name__$1,cljs.core.merge,metadata);\nvar map__75233 = cljs.analyzer.parse_ns_excludes(env,args__$2);\nvar map__75233__$1 = cljs.core.__destructure_map(map__75233);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75233__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75233__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__75238){\nvar vec__75239 = p__75238;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75239,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75239,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar valid_forms = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null));\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__75234 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__75242){\nvar vec__75243 = p__75242;\nvar seq__75244 = cljs.core.seq(vec__75243);\nvar first__75245 = cljs.core.first(seq__75244);\nvar seq__75244__$1 = cljs.core.next(seq__75244);\nvar k = first__75245;\nvar libs = seq__75244__$1;\nvar libspec = vec__75243;\nif(cljs.core.truth_((function (){var fexpr__75246 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null);\nreturn (fexpr__75246.cljs$core$IFn$_invoke$arity$1 ? fexpr__75246.cljs$core$IFn$_invoke$arity$1(k) : fexpr__75246.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(libspec),\" instead.\"].join(''));\n}\n\nif(cljs.core.truth_((function (){var fexpr__75247 = cljs.core.deref(valid_forms);\nreturn (fexpr__75247.cljs$core$IFn$_invoke$arity$1 ? fexpr__75247.cljs$core$IFn$_invoke$arity$1(k) : fexpr__75247.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only one \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\" form is allowed per namespace definition\"].join(''));\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(valid_forms,cljs.core.disj,k);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5753__auto___77091 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__75226_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__75226_SHARP_));\n}),libs));\nif(temp__5753__auto___77091){\nvar xs_77094 = temp__5753__auto___77091;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_77094),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__75227_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__75227_SHARP_));\n}),xs_77094)));\n} else {\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__75248){\nvar vec__75249 = p__75248;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75249,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args__$2));\nvar map__75234__$1 = cljs.core.__destructure_map(map__75234);\nvar params = map__75234__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75234__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75234__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75234__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75234__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75234__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75234__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75234__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\nvar vec__75235 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (spec_map){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2),(0),(((cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2)).length) - (7))));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__75252){\nvar vec__75253 = p__75252;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75253,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75253,(1),null);\nvar G__75256 = m;\nif((!(cljs.core.symbol_identical_QMARK_(v,ns)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__75256,k,v);\n} else {\nreturn G__75256;\n}\n}),cljs.core.PersistentArrayMap.EMPTY,spec_map);\n} else {\nreturn spec_map;\n}\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [require_macros,use_macros], null));\nvar require_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75235,(0),null);\nvar use_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75235,(1),null);\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name__$2);\n\nvar ns_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros__$1,excludes,name__$2,imports,requires,uses,require_macros__$1,(function (){var or__4160__auto__ = docstring;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn mdocstr;\n}\n})()]);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name__$2], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__75257 = ns_info;\nvar G__75257__$1 = (cljs.core.truth_((function (){var fexpr__75258 = cljs.core.deref(reload);\nreturn (fexpr__75258.cljs$core$IFn$_invoke$arity$1 ? fexpr__75258.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__75258.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__75257,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__75259 = cljs.core.deref(reload);\nreturn (fexpr__75259.cljs$core$IFn$_invoke$arity$1 ? fexpr__75259.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__75259.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})(),true]));\n})):G__75257);\nif(cljs.core.truth_((function (){var fexpr__75260 = cljs.core.deref(reload);\nreturn (fexpr__75260.cljs$core$IFn$_invoke$arity$1 ? fexpr__75260.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__75260.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__75257__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__75261 = cljs.core.deref(reload);\nreturn (fexpr__75261.cljs$core$IFn$_invoke$arity$1 ? fexpr__75261.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__75261.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})(),true]));\n}));\n} else {\nreturn G__75257__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),(function (_,env,p__75265,___$1,opts){\nvar vec__75266 = p__75265;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75266,(0),null);\nvar quoted_specs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75266,(1),null);\nvar form = vec__75266;\nvar temp__5753__auto___77133 = cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__75262_SHARP_){\nreturn ((cljs.core.seq_QMARK_(p1__75262_SHARP_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(p1__75262_SHARP_))));\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword_QMARK_,quoted_specs)));\nif(cljs.core.truth_(temp__5753__auto___77133)){\nvar not_quoted_77135 = temp__5753__auto___77133;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Arguments to \",cljs.core.name(cljs.core.first(quoted_specs)),\" must be quoted. Offending spec: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(not_quoted_77135)].join(''));\n} else {\n}\n\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Calls to `\",cljs.core.name(cljs.core.first(quoted_specs)),\"` must appear at the top-level.\"].join(''));\n}\n\nvar specs = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.first(quoted_specs)))?cljs.analyzer.canonicalize_import_specs(quoted_specs):cljs.analyzer.canonicalize_specs(quoted_specs));\nvar name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar args = cljs.analyzer.desugar_ns_specs((new cljs.core.List(null,specs,null,(1),null)));\nvar map__75269 = cljs.analyzer.parse_ns_excludes(env,args);\nvar map__75269__$1 = cljs.core.__destructure_map(map__75269);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75269__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75269__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__75271){\nvar vec__75272 = p__75271;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75272,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75272,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__75270 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__75275){\nvar vec__75276 = p__75275;\nvar seq__75277 = cljs.core.seq(vec__75276);\nvar first__75278 = cljs.core.first(seq__75277);\nvar seq__75277__$1 = cljs.core.next(seq__75277);\nvar k = first__75278;\nvar libs = seq__75277__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5757__auto___77151 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__75263_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__75263_SHARP_));\n}),libs));\nif((temp__5757__auto___77151 == null)){\n} else {\nvar xs_77152 = temp__5757__auto___77151;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_77152),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__75264_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__75264_SHARP_));\n}),xs_77152)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__75279){\nvar vec__75280 = p__75279;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75280,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args));\nvar map__75270__$1 = cljs.core.__destructure_map(map__75270);\nvar params = map__75270__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75270__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75270__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75270__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75270__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75270__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75270__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75270__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name);\n\nvar require_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros,excludes,name,imports,requires,uses,require_macros]);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null),cljs.analyzer.merge_ns_info,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([require_info,env], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns*\",\"ns*\",200417856),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__75283 = require_info;\nvar G__75283__$1 = (cljs.core.truth_((function (){var fexpr__75284 = cljs.core.deref(reload);\nreturn (fexpr__75284.cljs$core$IFn$_invoke$arity$1 ? fexpr__75284.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__75284.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__75283,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__75285 = cljs.core.deref(reload);\nreturn (fexpr__75285.cljs$core$IFn$_invoke$arity$1 ? fexpr__75285.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__75285.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})(),true]));\n})):G__75283);\nif(cljs.core.truth_((function (){var fexpr__75286 = cljs.core.deref(reload);\nreturn (fexpr__75286.cljs$core$IFn$_invoke$arity$1 ? fexpr__75286.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__75286.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__75283__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__75287 = cljs.core.deref(reload);\nreturn (fexpr__75287.cljs$core$IFn$_invoke$arity$1 ? fexpr__75287.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__75287.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})(),true]));\n}));\n} else {\nreturn G__75283__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.parse_type = (function cljs$analyzer$parse_type(op,env,p__75288){\nvar vec__75289 = p__75288;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75289,(0),null);\nvar tsym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75289,(1),null);\nvar fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75289,(2),null);\nvar pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75289,(3),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75289,(4),null);\nvar form = vec__75289;\nvar t = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),tsym));\nvar locals = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,fld){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,fld,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[fld,true,cljs.analyzer.get_col(fld,env),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),cljs.analyzer.get_line(fld,env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(fld) : m.call(null,fld)),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500)]));\n}),cljs.core.PersistentArrayMap.EMPTY,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op))?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fields,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"__meta\",\"__meta\",-946752628,null),new cljs.core.Symbol(null,\"__extmap\",\"__extmap\",-1435580931,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"__hash\",\"__hash\",-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null)):fields));\nvar protocols = new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),tsym], null),(function (m){\nvar m__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((function (){var or__4160__auto__ = m;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),t,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),true,new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024),cljs.core.count(fields),new cljs.core.Keyword(null,\"record\",\"record\",-779106859),cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op)], 0));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m__$1,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(tsym),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),protocols], null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(tsym,env)], 0));\n}));\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"pmasks\",\"pmasks\",-871416698),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"t\",\"t\",-1397832519),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),pmasks,cljs.core.disj.cljs$core$IFn$_invoke$arity$2(protocols,new cljs.core.Symbol(\"cljs.core\",\"Object\",\"cljs.core/Object\",-345545431,null)),fields,op,env,t,form,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),(function (){var G__75292 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals);\nvar G__75293 = body;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__75292,G__75293) : cljs.analyzer.analyze.call(null,G__75292,G__75293));\n})()]);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"deftype\",\"deftype\",340294561),env,form);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),env,form);\n}));\ncljs.analyzer.property_symbol_QMARK_ = (function cljs$analyzer$property_symbol_QMARK_(p1__75294_SHARP_){\nreturn cljs.core.boolean$((((p1__75294_SHARP_ instanceof cljs.core.Symbol))?cljs.core.re_matches(/^-.*/,cljs.core.name(p1__75294_SHARP_)):false));\n});\ncljs.analyzer.classify_dot_form = (function cljs$analyzer$classify_dot_form(p__75295){\nvar vec__75296 = p__75295;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75296,(0),null);\nvar member = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75296,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75296,(2),null);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(((target == null))?new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642):new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n),((cljs.analyzer.property_symbol_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886):(((member instanceof cljs.core.Symbol))?new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902):((cljs.core.seq_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923):new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642)\n))),(((args == null))?cljs.core.List.EMPTY:new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n)], null);\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.build_dot_form !== 'undefined')){\n} else {\ncljs.analyzer.build_dot_form = (function (){var method_table__4654__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4655__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4656__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4657__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4658__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__75300 = cljs.core.get_global_hierarchy;\nreturn (fexpr__75300.cljs$core$IFn$_invoke$arity$0 ? fexpr__75300.cljs$core$IFn$_invoke$arity$0() : fexpr__75300.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"build-dot-form\"),(function (p1__75299_SHARP_){\nreturn cljs.analyzer.classify_dot_form(p1__75299_SHARP_);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4658__auto__,method_table__4654__auto__,prefer_table__4655__auto__,method_cache__4656__auto__,cached_hierarchy__4657__auto__));\n})();\n}\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),cljs.core.List.EMPTY], null),(function (p__75301){\nvar vec__75302 = p__75301;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75302,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75302,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75302,(2),null);\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"access\",\"cljs.analyzer/access\",-1639036494),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(prop).substring((1))),cljs.core.meta(prop))], null);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923)], null),(function (p__75305){\nvar vec__75306 = p__75305;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75306,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75306,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75306,(2),null);\nthrow (new Error([\"Cannot provide arguments \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(args),\" on property access \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop)].join('')));\n}));\n/**\n * Builds the intermediate method call map used to reason about the parsed form during\n *   compilation.\n */\ncljs.analyzer.build_method_call = (function cljs$analyzer$build_method_call(target,meth,args){\nif((meth instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),meth,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),cljs.core.first(meth),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n}\n});\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)], null),(function (p__75309){\nvar vec__75310 = p__75309;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75310,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75310,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75310,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),cljs.core.List.EMPTY], null),(function (p__75313){\nvar vec__75314 = p__75313;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75314,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75314,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75314,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923),cljs.core.List.EMPTY], null),(function (p__75317){\nvar vec__75318 = p__75317;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75318,(0),null);\nvar meth_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75318,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75318,(2),null);\nreturn cljs.analyzer.build_method_call(target,cljs.core.first(meth_expr),cljs.core.rest(meth_expr));\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (dot_form){\nthrow (new Error([\"Unknown dot form of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\".\",\".\",1975675962,null),dot_form)),\" with classification \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.classify_dot_form(dot_form))].join('')));\n}));\ncljs.analyzer.analyze_dot = (function cljs$analyzer$analyze_dot(env,target,field,member_PLUS_,form){\nvar v = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,field,member_PLUS_], null);\nvar map__75322 = cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1(v);\nvar map__75322__$1 = cljs.core.__destructure_map(map__75322);\nvar dot_action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75322__$1,new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601));\nvar target__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75322__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75322__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nvar field__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75322__$1,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75322__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar targetexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze.call(null,enve,target__$1));\nvar form_meta = cljs.core.meta(form);\nvar target_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(targetexpr);\nvar prop = (function (){var or__4160__auto__ = field__$1;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn method;\n}\n})();\nvar tag = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = ((cljs.analyzer.js_tag_QMARK_(target_tag))?cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.analyzer.normalize_js_tag(target_tag),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null)),prop):false);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn null;\n}\n}\n})();\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"constructor\",\"constructor\",-313397284,null),prop)) && ((!(clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop),\"cljs$\")))) && (cljs.core.not(new cljs.core.Keyword(null,\"protocol-prop\",\"protocol-prop\",-58388138).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(prop)))))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),cljs.core.first(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"object\",\"object\",1474613949),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),target_tag)){\nif(cljs.core.truth_((function (){var or__4160__auto__ = (target_tag == null);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar fexpr__75324 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\"], null), null);\nreturn (fexpr__75324.cljs$core$IFn$_invoke$arity$1 ? fexpr__75324.cljs$core$IFn$_invoke$arity$1(target_tag) : fexpr__75324.call(null,target_tag));\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nvar vec__75325_77220 = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast,cljs.core.identity)(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)));\nvar pre_SINGLEQUOTE__77221 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75325_77220,(0),null);\nvar pre_77222 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75325_77220,(1),null);\nif(cljs.core.truth_((function (){var and__4149__auto__ = cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_SINGLEQUOTE__77221);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_77222));\n} else {\nreturn and__4149__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",(function (){var G__75328 = pre_SINGLEQUOTE__77221;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null),cljs.core.last(pre_SINGLEQUOTE__77221))){\nreturn cljs.core.butlast(G__75328);\n} else {\nreturn G__75328;\n}\n})())),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n} else {\n}\n} else {\n}\n\nif(cljs.analyzer.js_tag_QMARK_(tag)){\nvar pre_77223 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_77223))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre_77223),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n} else {\n}\n\nvar G__75329 = dot_action;\nvar G__75329__$1 = (((G__75329 instanceof cljs.core.Keyword))?G__75329.fqn:null);\nswitch (G__75329__$1) {\ncase \"cljs.analyzer/access\":\nvar children = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4160__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn tag;\n}\n})():tag)], null);\n\nbreak;\ncase \"cljs.analyzer/call\":\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__75321_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__75321_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__75321_SHARP_));\n}),args);\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null);\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-call\",\"host-call\",1059629755),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"method\",\"method\",55703592),method,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4160__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n})():tag)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__75329__$1)].join('')));\n\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(function (_,env,p__75330,___$1,___$2){\nvar vec__75331 = p__75330;\nvar seq__75332 = cljs.core.seq(vec__75331);\nvar first__75333 = cljs.core.first(seq__75332);\nvar seq__75332__$1 = cljs.core.next(seq__75332);\nvar ___$3 = first__75333;\nvar first__75333__$1 = cljs.core.first(seq__75332__$1);\nvar seq__75332__$2 = cljs.core.next(seq__75332__$1);\nvar target = first__75333__$1;\nvar vec__75334 = seq__75332__$2;\nvar seq__75335 = cljs.core.seq(vec__75334);\nvar first__75336 = cljs.core.first(seq__75335);\nvar seq__75335__$1 = cljs.core.next(seq__75335);\nvar field = first__75336;\nvar member_PLUS_ = seq__75335__$1;\nvar form = vec__75331;\nvar _STAR_recur_frames_STAR__orig_val__75337 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75338 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75338);\n\ntry{return cljs.analyzer.analyze_dot(env,target,field,member_PLUS_,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75337);\n}}));\ncljs.analyzer.get_js_tag = (function cljs$analyzer$get_js_tag(form){\nvar form_meta = cljs.core.meta(form);\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif((temp__5755__auto__ == null)){\nif(new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta) === true){\nreturn new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\n} else {\nreturn null;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.js_star_interp = (function cljs$analyzer$js_star_interp(env,s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nvar inner = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(env,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,((2) + idx),end))));\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),cljs.core.cons(inner,(function (){var G__75339 = env;\nvar G__75340 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2(G__75339,G__75340) : cljs.analyzer.js_star_interp.call(null,G__75339,G__75340));\n})()));\n}),null,null));\n}\n});\ncljs.analyzer.js_star_seg = (function cljs$analyzer$js_star_seg(s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),(function (){var G__75341 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1(G__75341) : cljs.analyzer.js_star_seg.call(null,G__75341));\n})());\n}),null,null));\n}\n});\ncljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\",new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null),\"null\",new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null),\"null\",new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),\"null\"], null), null);\ncljs.analyzer.numeric_type_QMARK_ = (function cljs$analyzer$numeric_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif((((t instanceof cljs.core.Symbol)) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NUMERIC_SET,t) == null)))))){\nreturn true;\n} else {\nif(cljs.analyzer.impl.cljs_set_QMARK_(t)){\nreturn ((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null))));\n} else {\nreturn null;\n}\n}\n\n}\n}\n}\n});\ncljs.analyzer.array_types = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\",new cljs.core.Symbol(null,\"floats\",\"floats\",513591110,null),\"null\",new cljs.core.Symbol(null,\"longs\",\"longs\",-1017696020,null),\"null\",new cljs.core.Symbol(null,\"objects\",\"objects\",-554722035,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"doubles\",\"doubles\",-1517872169,null),\"null\",new cljs.core.Symbol(null,\"chars\",\"chars\",545901210,null),\"null\",new cljs.core.Symbol(null,\"ints\",\"ints\",-1761239845,null),\"null\",new cljs.core.Symbol(null,\"shorts\",\"shorts\",107738238,null),\"null\",new cljs.core.Symbol(null,\"bytes\",\"bytes\",-1478569089,null),\"null\"], null), null);\ncljs.analyzer.array_type_QMARK_ = (function cljs$analyzer$array_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),t)){\nreturn true;\n} else {\nif(cljs.core.contains_QMARK_(cljs.analyzer.array_types,t)){\nreturn true;\n} else {\nreturn cljs.core.boolean$(((cljs.analyzer.impl.cljs_set_QMARK_(t))?(function (){var or__4160__auto__ = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null));\nif(or__4160__auto____$1){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.core.some(cljs.analyzer.array_types,t);\n}\n}\n})():null));\n\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_js_star_args = (function cljs$analyzer$analyze_js_star_args(js_op,env,args){\nreturn cljs.core.first(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__75342,arg){\nvar vec__75343 = p__75342;\nvar argexprs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75343,(0),null);\nvar env__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75343,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(argexprs,(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env__$1,arg) : cljs.analyzer.analyze.call(null,env__$1,arg))),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(js_op,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",-6692549,null)))?cljs.analyzer.set_test_induced_tags(env__$1,arg):env__$1)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,env], null),args));\n});\ncljs.analyzer.analyze_js_star_STAR_ = (function cljs$analyzer$analyze_js_star_STAR_(env,jsform,args,form){\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar form_meta = cljs.core.meta(form);\nvar segs = cljs.analyzer.js_star_seg(jsform);\nvar tag = cljs.analyzer.get_js_tag(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar argexprs = cljs.analyzer.analyze_js_star_args(js_op,enve,args);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar validate = (function (warning_type,valid_types_QMARK_){\nvar types = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__75346_SHARP_){\nreturn cljs.analyzer.infer_tag(env,p1__75346_SHARP_);\n}),argexprs);\nif(cljs.core.truth_((valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1(types) : valid_types_QMARK_.call(null,types)))){\nreturn null;\n} else {\nreturn cljs.analyzer.warning(warning_type,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"types\",\"types\",590030639),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,types)], null));\n}\n});\nvar op_match_QMARK_ = (function (sym){\nreturn cljs.core.symbol_identical_QMARK_(sym,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta));\n});\nif(numeric === true){\nvalidate(new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (p1__75347_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,p1__75347_SHARP_);\n}));\n} else {\n}\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),new cljs.core.Keyword(null,\"segs\",\"segs\",-1940299576),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)],[argexprs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),numeric,segs,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),env,js_op,form,tag]);\n});\ncljs.analyzer.analyze_js_star = (function cljs$analyzer$analyze_js_star(env,jsform,args,form){\nvar _STAR_recur_frames_STAR__orig_val__75348 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75349 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75349);\n\ntry{return cljs.analyzer.analyze_js_star_STAR_(env,jsform,args,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75348);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),(function (op,env,p__75350,_,___$1){\nvar vec__75351 = p__75350;\nvar seq__75352 = cljs.core.seq(vec__75351);\nvar first__75353 = cljs.core.first(seq__75352);\nvar seq__75352__$1 = cljs.core.next(seq__75352);\nvar ___$2 = first__75353;\nvar first__75353__$1 = cljs.core.first(seq__75352__$1);\nvar seq__75352__$2 = cljs.core.next(seq__75352__$1);\nvar jsform = first__75353__$1;\nvar args = seq__75352__$2;\nvar form = vec__75351;\nif(typeof jsform === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid js* form\");\n}\n\nif((!((args == null)))){\nreturn cljs.analyzer.analyze_js_star(env,jsform,args,form);\n} else {\nvar code = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.analyzer.js_star_interp(env,jsform));\nvar tag = cljs.analyzer.get_js_tag(form);\nvar form_meta = cljs.core.meta(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js\",\"js\",1768080579),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),numeric], null);\n}\n}));\ncljs.analyzer.unsorted_map_QMARK_ = (function cljs$analyzer$unsorted_map_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && ((!(cljs.core.sorted_QMARK_(x)))));\n});\n/**\n * Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n *   warnings that will have been caught by a first compiler pass.\n */\ncljs.analyzer.analyzed = (function cljs$analyzer$analyzed(x){\nif(cljs.analyzer.unsorted_map_QMARK_(x)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n} else {\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(x,cljs.core.assoc,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n\n}\n});\n/**\n * Returns boolean if the form has already been marked as analyzed.\n */\ncljs.analyzer.analyzed_QMARK_ = (function cljs$analyzer$analyzed_QMARK_(x){\nreturn cljs.core.boolean$(((cljs.analyzer.unsorted_map_QMARK_(x))?new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(x):new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x))\n));\n});\ncljs.analyzer.all_values_QMARK_ = (function cljs$analyzer$all_values_QMARK_(exprs){\nreturn cljs.core.every_QMARK_((function (p1__75354_SHARP_){\nreturn (((p1__75354_SHARP_ == null)) || ((p1__75354_SHARP_ instanceof cljs.core.Symbol)) || (typeof p1__75354_SHARP_ === 'string') || (typeof p1__75354_SHARP_ === 'number') || (p1__75354_SHARP_ === true) || (p1__75354_SHARP_ === false));\n}),exprs);\n});\ncljs.analyzer.valid_arity_QMARK_ = (function cljs$analyzer$valid_arity_QMARK_(argc,method_params){\nreturn (((method_params == null)) || (cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([argc]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count,method_params)))));\n});\ncljs.analyzer.record_tag_QMARK_ = (function cljs$analyzer$record_tag_QMARK_(tag){\nreturn cljs.core.boolean$((((tag instanceof cljs.core.Symbol))?(((!((cljs.core.namespace(tag) == null))))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(tag)),new cljs.core.Keyword(null,\"record\",\"record\",-779106859)], null)):false):false));\n});\ncljs.analyzer.record_basis = (function cljs$analyzer$record_basis(tag){\nvar positional_factory = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\"->\",cljs.core.name(tag)].join(''));\nvar fields = cljs.core.first(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),positional_factory,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179)], null)));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,fields);\n});\ncljs.analyzer.record_with_field_QMARK_ = (function cljs$analyzer$record_with_field_QMARK_(tag,field){\nreturn ((cljs.analyzer.record_tag_QMARK_(tag)) && (cljs.core.contains_QMARK_(cljs.analyzer.record_basis(tag),field)));\n});\ncljs.analyzer.invalid_arity_QMARK_ = (function cljs$analyzer$invalid_arity_QMARK_(argc,method_params,variadic,max_fixed_arity){\nif((!(cljs.analyzer.valid_arity_QMARK_(argc,method_params)))){\nvar or__4160__auto__ = cljs.core.not(variadic);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar and__4149__auto__ = variadic;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn (argc < max_fixed_arity);\n} else {\nreturn and__4149__auto__;\n}\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.parse_invoke_STAR_ = (function cljs$analyzer$parse_invoke_STAR_(env,p__75356){\nvar vec__75357 = p__75356;\nvar seq__75358 = cljs.core.seq(vec__75357);\nvar first__75359 = cljs.core.first(seq__75358);\nvar seq__75358__$1 = cljs.core.next(seq__75358);\nvar f = first__75359;\nvar args = seq__75358__$1;\nvar form = vec__75357;\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar fexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,f) : cljs.analyzer.analyze.call(null,enve,f));\nvar argc = cljs.core.count(args);\nvar fn_var_QMARK_ = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\n}\n})();\nvar kw_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar cur_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar HO_invoke_QMARK_ = ((cljs.core.boolean$(cljs.analyzer._STAR_cljs_static_fns_STAR_)) && (cljs.core.not(fn_var_QMARK_)) && ((!(cljs.analyzer.js_tag_QMARK_(f)))) && ((!(kw_QMARK_))) && ((!(cljs.analyzer.analyzed_QMARK_(f)))));\nvar bind_f_expr_QMARK_ = ((HO_invoke_QMARK_) && ((!((f instanceof cljs.core.Symbol)))));\nvar bind_args_QMARK_ = ((HO_invoke_QMARK_) && ((!(cljs.analyzer.all_values_QMARK_(args)))));\nif(fn_var_QMARK_){\nvar map__75360_77321 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr);\nvar map__75360_77322__$1 = cljs.core.__destructure_map(map__75360_77321);\nvar variadic_77323 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75360_77322__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity_77324 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75360_77322__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params_77325 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75360_77322__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar name_77326 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75360_77322__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar ns_77327 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75360_77322__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar macro_77328 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75360_77322__$1,new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404));\nif(cljs.core.truth_(((cljs.core.not((function (){var and__4149__auto__ = goog.string.endsWith(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cur_ns),\"$macros\");\nif(cljs.core.truth_(and__4149__auto__)){\nreturn ((cljs.core.symbol_identical_QMARK_(cur_ns,ns_77327)) && (macro_77328 === true));\n} else {\nreturn and__4149__auto__;\n}\n})()))?cljs.analyzer.invalid_arity_QMARK_(argc,method_params_77325,variadic_77323,max_fixed_arity_77324):false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_77326,new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n} else {\n}\n\nif(((kw_QMARK_) && ((!(((((1) === argc)) || (((2) === argc)))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.first(form),new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n\nvar deprecated_QMARK__77342 = new cljs.core.Keyword(null,\"deprecated\",\"deprecated\",1498275348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar no_warn_QMARK__77343 = new cljs.core.Keyword(null,\"deprecation-nowarn\",\"deprecation-nowarn\",-1762828044).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nif(((cljs.core.boolean$(deprecated_QMARK__77342)) && ((!(cljs.core.boolean$(no_warn_QMARK__77343)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif(((bind_args_QMARK_) || (bind_f_expr_QMARK_))){\nvar arg_syms = ((bind_args_QMARK_)?cljs.core.take.cljs$core$IFn$_invoke$arity$2(argc,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym)):null);\nvar f_sym = ((bind_f_expr_QMARK_)?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"fexpr__\"):null);\nvar bindings = (function (){var G__75361 = cljs.core.PersistentVector.EMPTY;\nvar G__75361__$1 = ((bind_args_QMARK_)?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__75361,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arg_syms,args)):G__75361);\nif(bind_f_expr_QMARK_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__75361__$1,f_sym,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.analyzed(f)], 0));\n} else {\nreturn G__75361__$1;\n}\n})();\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar G__75362 = env;\nvar G__75363 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(bindings)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.analyzer.analyzed(((bind_f_expr_QMARK_)?f_sym:f)),null,(1),null)),((bind_args_QMARK_)?arg_syms:args)))),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag], null)),null,(1),null))], 0))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__75362,G__75363) : cljs.analyzer.analyze.call(null,G__75362,G__75363));\n} else {\nvar ana_expr = (function (p1__75355_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__75355_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__75355_SHARP_));\n});\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(ana_expr,args);\nif((((((f instanceof cljs.core.Keyword)) && ((cljs.core.namespace(f) == null)))) && (((1) === cljs.core.count(args))) && (cljs.analyzer.record_with_field_QMARK_(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.first(argexprs)),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(f)))))){\nvar field_access_form = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\".-\",cljs.core.name(f)].join('')),args);\nvar _STAR_cljs_warnings_STAR__orig_val__75364 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__75365 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__75365);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,field_access_form) : cljs.analyzer.analyze.call(null,env,field_access_form));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__75364);\n}} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),fexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null)], null);\n}\n}\n});\ncljs.analyzer.parse_invoke = (function cljs$analyzer$parse_invoke(env,form){\nvar _STAR_recur_frames_STAR__orig_val__75366 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75367 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75367);\n\ntry{return cljs.analyzer.parse_invoke_STAR_(env,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75366);\n}});\ncljs.analyzer.desugar_dotted_expr = (function cljs$analyzer$desugar_dotted_expr(p__75368){\nvar map__75369 = p__75368;\nvar map__75369__$1 = cljs.core.__destructure_map(map__75369);\nvar expr = map__75369__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75369__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__75370 = op;\nvar G__75370__$1 = (((G__75370 instanceof cljs.core.Keyword))?G__75370.fqn:null);\nswitch (G__75370__$1) {\ncase \"var\":\ncase \"local\":\nif(cljs.analyzer.dotted_symbol_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr))))){\nvar s = cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr));\nvar idx = s.lastIndexOf(\".\");\nvar _ = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((idx + (1)),((s).length)))?null:(function(){throw (new Error(\"Assert failed: (not= (inc idx) (count s))\"))})());\nvar prefix = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx)),cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr)));\nvar field = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1))));\nif(cljs.core.not(new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(expr))){\n} else {\nthrow (new Error(\"Assert failed: (not (:const-expr expr))\"));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),(new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(new cljs.core.List(null,prefix,(new cljs.core.List(null,field,null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(function (){var G__75371 = cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(expr,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),prefix,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),prefix], 0)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)], null),prefix),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nreturn (cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1(G__75371) : cljs.analyzer.desugar_dotted_expr.call(null,G__75371));\n})(),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null)], null);\n} else {\nreturn expr;\n}\n\nbreak;\ndefault:\nreturn expr;\n\n}\n});\n/**\n * Finds the var associated with sym\n */\ncljs.analyzer.analyze_symbol = (function cljs$analyzer$analyze_symbol(env,sym){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nvar G__75372 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__75372) : cljs.analyzer.analyze_wrap_meta.call(null,G__75372));\n} else {\nvar map__75373 = cljs.core.meta(sym);\nvar map__75373__$1 = cljs.core.__destructure_map(map__75373);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75373__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75373__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar env__$1 = (((!((line == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line):env);\nvar env__$2 = (((!((column == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column):env__$1);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$2,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym], null);\nvar lcls = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env__$2);\nvar temp__5755__auto__ = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls,sym));\nif((temp__5755__auto__ == null)){\nvar sym_meta = cljs.core.meta(sym);\nvar sym_ns = cljs.core.namespace(sym);\nvar cur_ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$2)));\nvar sym__$1 = (cljs.core.truth_((function (){var and__4149__auto__ = sym_ns;\nif(cljs.core.truth_(and__4149__auto__)){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,\"cljs.core\")){\nvar and__4149__auto____$1 = goog.string.endsWith(cur_ns,\"$macros\");\nif(cljs.core.truth_(and__4149__auto____$1)){\nreturn ((cljs.core.not(goog.string.endsWith(sym_ns,\"$macros\"))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cur_ns,(0),(((cur_ns).length) - (7))))));\n} else {\nreturn and__4149__auto____$1;\n}\n} else {\nreturn false;\n}\n} else {\nreturn and__4149__auto__;\n}\n})())?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([sym_ns,\"$macros\"].join(''),cljs.core.name(sym)):sym);\nvar info = (((!(cljs.core.contains_QMARK_(sym_meta,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162)))))?cljs.analyzer.resolve_existing_var(env__$2,sym__$1):cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info))){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info)),\"\\n\",\"(:op info)\"].join('')));\n}\n\nreturn cljs.analyzer.desugar_dotted_expr((((!(new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377).cljs$core$IFn$_invoke$arity$1(env__$2) === true)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info),cljs.core.select_keys(info,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null)),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar const_expr = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})()], 0)):(function (){var info__$1 = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info__$1], 0)),cljs.core.select_keys(info__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0));\n})()));\n} else {\nvar lb = temp__5755__auto__;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),lb], 0)),((cljs.core.map_QMARK_(lb))?cljs.core.select_keys(lb,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)):null)], 0));\n}\n}\n});\ncljs.analyzer.excluded_QMARK_ = (function cljs$analyzer$excluded_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))));\n});\ncljs.analyzer.used_QMARK_ = (function cljs$analyzer$used_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))));\n});\ncljs.analyzer.get_expander_ns = (function cljs$analyzer$get_expander_ns(env,nstr){\nvar res = (function (){var or__4160__auto__ = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\n}\n})();\nvar nstr__$1 = (((!((res == null))))?cljs.core.str.cljs$core$IFn$_invoke$arity$1(res):nstr);\nif((\"clojure.core\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(cljs.analyzer.impl.CLJS_CORE_MACROS_SYM);\n} else {\nif((\"clojure.repl\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(new cljs.core.Symbol(null,\"cljs.repl\",\"cljs.repl\",1767065658,null));\n} else {\nif(cljs.core.truth_(goog.string.contains(nstr__$1,\".\"))){\nreturn cljs.core.find_macros_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1));\n} else {\nvar G__75374 = env;\nvar G__75374__$1 = (((G__75374 == null))?null:new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(G__75374));\nvar G__75374__$2 = (((G__75374__$1 == null))?null:new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(G__75374__$1));\nvar G__75374__$3 = (((G__75374__$2 == null))?null:cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__75374__$2,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1)));\nif((G__75374__$3 == null)){\nreturn null;\n} else {\nreturn cljs.core.find_macros_ns(G__75374__$3);\n}\n\n}\n}\n}\n});\ncljs.analyzer.get_expander_STAR_ = (function cljs$analyzer$get_expander_STAR_(sym,env){\nif((((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym) == null)))) || (((cljs.analyzer.excluded_QMARK_(env,sym)) && ((!(cljs.analyzer.used_QMARK_(env,sym)))))))){\nreturn null;\n} else {\nvar nstr = cljs.core.namespace(sym);\nif((!((nstr == null)))){\nvar ns = cljs.analyzer.get_expander_ns(env,nstr);\nif((!((ns == null)))){\nreturn ns.findInternedVar(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\n} else {\nreturn null;\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym);\nvar nsym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym__$1);\n} else {\nvar nsym = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym);\nif((((!((nsym == null)))) && ((nsym instanceof cljs.core.Symbol)))){\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym);\n} else {\nreturn cljs.core.find_macros_ns(cljs.analyzer.impl.CLJS_CORE_MACROS_SYM).findInternedVar(sym);\n}\n\n}\n}\n}\n});\n/**\n * Given a sym, a symbol identifying a macro, and env, an analysis environment\n * return the corresponding Clojure macroexpander.\n */\ncljs.analyzer.get_expander = (function cljs$analyzer$get_expander(sym,env){\nvar mvar = cljs.analyzer.get_expander_STAR_(sym,env);\nif((((!((mvar == null)))) && (mvar.isMacro()))){\nreturn mvar;\n} else {\nreturn null;\n}\n});\nvar cached_var_77486 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)),new cljs.core.Symbol(null,\"macroexpand-check\",\"macroexpand-check\",699092091,null));\n}),null));\ncljs.analyzer.get_macroexpand_check_var = (function cljs$analyzer$get_macroexpand_check_var(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)) == null)))){\nreturn cljs.core.deref(cached_var_77486);\n} else {\nreturn null;\n}\n});\ncljs.analyzer.var__GT_sym = (function cljs$analyzer$var__GT_sym(var$){\nreturn var$.sym;\n});\ncljs.analyzer.do_macroexpand_check = (function cljs$analyzer$do_macroexpand_check(env,form,mac_var){\nif(cljs.core.not(new cljs.core.Keyword(null,\"spec-skip-macros\",\"spec-skip-macros\",-645015958).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))){\nvar mchk = cljs.analyzer.get_macroexpand_check_var();\nif((!((mchk == null)))){\ntry{var G__75376 = mac_var;\nvar G__75377 = cljs.core.next(form);\nreturn (mchk.cljs$core$IFn$_invoke$arity$2 ? mchk.cljs$core$IFn$_invoke$arity$2(G__75376,G__75377) : mchk.call(null,G__75376,G__75377));\n}catch (e75375){var e = e75375;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macro-syntax-check\",\"macro-syntax-check\",2072602373),cljs.analyzer.var__GT_sym(mac_var)),e);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.check_macro_arity = (function cljs$analyzer$check_macro_arity(mac_var,form){\nvar mac_sym = mac_var.sym;\nvar temp__5753__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_sym)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_sym))], null));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar map__75379 = temp__5753__auto__;\nvar map__75379__$1 = cljs.core.__destructure_map(map__75379);\nvar variadic_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75379__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75379__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75379__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar argc = cljs.core.count(cljs.core.rest(form));\nvar offset = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"&form\",\"&form\",1482799337,null),cljs.core.ffirst(method_params)))?(2):(0));\nif(cljs.core.truth_(cljs.analyzer.invalid_arity_QMARK_(argc,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__75378_SHARP_){\nreturn cljs.core.nthrest(p1__75378_SHARP_,offset);\n}),method_params),variadic_QMARK_,(cljs.core.truth_(max_fixed_arity)?(max_fixed_arity - offset):null)))){\nthrow (new Error(cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),mac_sym], null))));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.macroexpand_1_STAR_ = (function cljs$analyzer$macroexpand_1_STAR_(env,form){\nvar op = cljs.core.first(form);\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),op)){\ncljs.analyzer.do_macroexpand_check(env,form,cljs.analyzer.get_expander(new cljs.core.Symbol(\"cljs.core\",\"ns-special-form\",\"cljs.core/ns-special-form\",1585185745,null),env));\n} else {\n}\n\nreturn form;\n} else {\nvar temp__5755__auto__ = (((op instanceof cljs.core.Symbol))?cljs.analyzer.get_expander(op,env):null);\nif((temp__5755__auto__ == null)){\nif((op instanceof cljs.core.Symbol)){\nvar opname = cljs.core.str.cljs$core$IFn$_invoke$arity$1(op);\nif((\".\" === opname.charAt((0)))){\nvar vec__75380 = cljs.core.next(form);\nvar seq__75381 = cljs.core.seq(vec__75380);\nvar first__75382 = cljs.core.first(seq__75381);\nvar seq__75381__$1 = cljs.core.next(seq__75381);\nvar target = first__75382;\nvar args = seq__75381__$1;\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.analyzer.impl.DOT_SYM,target,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(opname,(1))),args),cljs.core.meta(form));\n} else {\nif((\".\" === opname.charAt((opname.length - (1))))){\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.impl.NEW_SYM,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(opname,(0),(((opname).length) - (1)))),cljs.core.next(form)),cljs.core.meta(form));\n} else {\nreturn form;\n\n}\n}\n} else {\nreturn form;\n}\n} else {\nvar mac_var = temp__5755__auto__;\ncljs.analyzer.do_macroexpand_check(env,form,mac_var);\n\nvar form_SINGLEQUOTE_ = (function (){try{cljs.analyzer.check_macro_arity(mac_var,form);\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(mac_var),form,env,cljs.core.rest(form));\n}catch (e75383){var e = e75383;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macroexpansion\",\"macroexpansion\",706274075),cljs.analyzer.var__GT_sym(mac_var)),e);\n}})();\nif(cljs.analyzer.impl.cljs_seq_QMARK_(form_SINGLEQUOTE_)){\nvar sym_SINGLEQUOTE_ = cljs.core.first(form_SINGLEQUOTE_);\nvar sym = cljs.core.first(form);\nif(cljs.core.symbol_identical_QMARK_(sym_SINGLEQUOTE_,cljs.analyzer.impl.JS_STAR_SYM)){\nvar sym__$1 = (((!((cljs.core.namespace(sym) == null))))?sym:cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)));\nvar js_op = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),sym__$1], null);\nvar numeric = (function (){var mac_var_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_var.sym));\nvar mac_var_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_var.sym));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),mac_var_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),mac_var_name,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(\"cljs.analyzer\",\"numeric\",\"cljs.analyzer/numeric\",1415704188)], null));\n})();\nvar js_op__$1 = ((numeric === true)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),true):js_op);\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(form_SINGLEQUOTE_,cljs.core.merge,js_op__$1);\n} else {\nreturn form_SINGLEQUOTE_;\n}\n} else {\nreturn form_SINGLEQUOTE_;\n}\n}\n}\n});\n/**\n * Given a env, an analysis environment, and form, a ClojureScript form,\n * macroexpand the form once.\n */\ncljs.analyzer.macroexpand_1 = (function cljs$analyzer$macroexpand_1(env,form){\ntry{return cljs.analyzer.macroexpand_1_STAR_(env,form);\n}catch (e75384){var err__74010__auto__ = e75384;\nif(cljs.analyzer.has_error_data_QMARK_(err__74010__auto__)){\nthrow err__74010__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__74010__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__74010__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__74010__auto__.message,err__74010__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq_STAR_ = (function cljs$analyzer$analyze_seq_STAR_(op,env,form,name,opts){\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nreturn cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5(op,env,form,name,opts);\n} else {\nreturn cljs.analyzer.parse_invoke(env,form);\n}\n});\ncljs.analyzer.analyze_seq_STAR__wrap = (function cljs$analyzer$analyze_seq_STAR__wrap(op,env,form,name,opts){\ntry{return cljs.analyzer.analyze_seq_STAR_(op,env,form,name,opts);\n}catch (e75385){var err__74010__auto__ = e75385;\nif(cljs.analyzer.has_error_data_QMARK_(err__74010__auto__)){\nthrow err__74010__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__74010__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__74010__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__74010__auto__.message,err__74010__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq = (function cljs$analyzer$analyze_seq(var_args){\nvar G__75387 = arguments.length;\nswitch (G__75387) {\ncase 3:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\nreturn (cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze_list.call(null,env,form));\n} else {\nvar line = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar line__$1 = (((line == null))?new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env):line);\nvar col = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar col__$1 = (((col == null))?new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env):col);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col__$1], 0));\nvar op = cljs.core.first(form);\nif((op == null)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,\"Can't call nil\");\n} else {\n}\n\nvar mform = cljs.analyzer.macroexpand_1(env__$1,form);\nif((form === mform)){\nreturn cljs.analyzer.analyze_seq_STAR__wrap(op,env__$1,form,name,opts);\n} else {\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,mform,name,opts) : cljs.analyzer.analyze.call(null,env__$1,mform,name,opts));\n}\n}\n}));\n\n(cljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.analyze_map = (function cljs$analyzer$analyze_map(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ks = (function (){var _STAR_recur_frames_STAR__orig_val__75390 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75391 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75391);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__75388_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__75388_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__75388_SHARP_));\n}),cljs.core.keys(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75390);\n}})();\nvar vs = (function (){var _STAR_recur_frames_STAR__orig_val__75392 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75393 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75393);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__75389_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__75389_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__75389_SHARP_));\n}),cljs.core.vals(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75392);\n}})();\nvar G__75394 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),ks,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IMap\",\"cljs.core/IMap\",1407777598,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__75394) : cljs.analyzer.analyze_wrap_meta.call(null,G__75394));\n});\ncljs.analyzer.analyze_list = (function cljs$analyzer$analyze_list(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__75396 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75397 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75397);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__75395_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__75395_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__75395_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75396);\n}})();\nvar G__75398 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__75398) : cljs.analyzer.analyze_wrap_meta.call(null,G__75398));\n});\ncljs.analyzer.analyze_vector = (function cljs$analyzer$analyze_vector(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__75400 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75401 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75401);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__75399_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__75399_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__75399_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75400);\n}})();\nvar G__75402 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IVector\",\"cljs.core/IVector\",1711112835,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__75402) : cljs.analyzer.analyze_wrap_meta.call(null,G__75402));\n});\ncljs.analyzer.analyze_set = (function cljs$analyzer$analyze_set(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__75404 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75405 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75405);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__75403_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__75403_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__75403_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75404);\n}})();\nvar G__75406 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set\",\"set\",304602554),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"ISet\",\"cljs.core/ISet\",2003412810,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__75406) : cljs.analyzer.analyze_wrap_meta.call(null,G__75406));\n});\ncljs.analyzer.analyze_js_value = (function cljs$analyzer$analyze_js_value(env,form){\nvar val = form.val;\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nif(cljs.core.map_QMARK_(val)){\nvar keys = cljs.core.vec(cljs.core.keys(val));\nvar vals = (function (){var _STAR_recur_frames_STAR__orig_val__75409 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75410 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75410);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__75407_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__75407_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__75407_SHARP_));\n}),cljs.core.vals(val));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75409);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-object\",\"js-object\",1830199158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),keys,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vals,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null)], null);\n} else {\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__75411 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75412 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75412);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__75408_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__75408_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__75408_SHARP_));\n}),val);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75411);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-array\",\"js-array\",-1210185421),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null)], null);\n}\n});\ncljs.analyzer.record_ns_PLUS_name = (function cljs$analyzer$record_ns_PLUS_name(x){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0)),/\\//));\n});\ncljs.analyzer.analyze_record = (function cljs$analyzer$analyze_record(env,x){\nvar _items_ = (function (){var _STAR_recur_frames_STAR__orig_val__75417 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__75418 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__75418);\n\ntry{var G__75419 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__75420 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,x);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__75419,G__75420) : cljs.analyzer.analyze.call(null,G__75419,G__75420));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__75417);\n}})();\nvar vec__75414 = cljs.analyzer.record_ns_PLUS_name(x);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75414,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75414,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),x,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),x,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null);\n});\ncljs.analyzer.elide_reader_meta = (function cljs$analyzer$elide_reader_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)], 0));\n});\ncljs.analyzer.elide_analyzer_meta = (function cljs$analyzer$elide_analyzer_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162));\n});\ncljs.analyzer.elide_irrelevant_meta = (function cljs$analyzer$elide_irrelevant_meta(m){\nreturn cljs.analyzer.elide_analyzer_meta(cljs.analyzer.elide_reader_meta(m));\n});\ncljs.analyzer.analyze_wrap_meta = (function cljs$analyzer$analyze_wrap_meta(expr){\nvar form = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr);\nvar m = cljs.analyzer.elide_irrelevant_meta(cljs.core.meta(form));\nif((!((cljs.core.seq(m) == null)))){\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr);\nvar expr__$1 = cljs.core.assoc_in(expr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar meta_expr = cljs.analyzer.analyze_map(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr__$1),m);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"with-meta\",\"with-meta\",-1566856820),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),meta_expr,new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_type = (function cljs$analyzer$infer_type(env,p__75422,_){\nvar map__75423 = p__75422;\nvar map__75423__$1 = cljs.core.__destructure_map(map__75423);\nvar ast = map__75423__$1;\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75423__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif((((tag == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),tag)))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),(function (ms){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__75421_SHARP_){\nreturn (cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3(env,p1__75421_SHARP_,_) : cljs.analyzer.infer_type.call(null,env,p1__75421_SHARP_,_));\n})),ms);\n}));\n} else {\nvar temp__5755__auto__ = cljs.analyzer.infer_tag(env,ast);\nif((temp__5755__auto__ == null)){\nreturn ast;\n} else {\nvar tag__$1 = temp__5755__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1);\n}\n}\n} else {\nreturn ast;\n}\n});\ncljs.analyzer.repl_self_require_QMARK_ = (function cljs$analyzer$repl_self_require_QMARK_(env,deps){\nvar and__4149__auto__ = new cljs.core.Keyword(null,\"repl-env\",\"repl-env\",-1976503928).cljs$core$IFn$_invoke$arity$1(env);\nif(cljs.core.truth_(and__4149__auto__)){\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.analyzer._STAR_cljs_ns_STAR_]),deps);\n} else {\nreturn and__4149__auto__;\n}\n});\ncljs.analyzer.invoke_arg_type_validators = (function (){var aget_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__75424_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__75424_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.rest(p1__75424_SHARP_))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nvar aset_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__75425_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__75425_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.butlast(cljs.core.rest(p1__75425_SHARP_)))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),aset_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),aset_validator], null);\n})();\ncljs.analyzer.check_invoke_arg_types = (function cljs$analyzer$check_invoke_arg_types(env,p__75426,opts){\nvar map__75427 = p__75426;\nvar map__75427__$1 = cljs.core.__destructure_map(map__75427);\nvar ast = map__75427__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75427__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif((((!(cljs.analyzer.analyzed_QMARK_(ast)))) && (cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),op)))){\nvar temp__5757__auto___77729 = cljs.core.find(cljs.analyzer.invoke_arg_type_validators,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(ast))));\nif((temp__5757__auto___77729 == null)){\n} else {\nvar vec__75428_77730 = temp__5757__auto___77729;\nvar name_77731 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75428_77730,(0),null);\nvar map__75431_77732 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75428_77730,(1),null);\nvar map__75431_77733__$1 = cljs.core.__destructure_map(map__75431_77732);\nvar valid_QMARK__77734 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75431_77733__$1,new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379));\nvar warning_type_77735 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75431_77733__$1,new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595));\nvar types_77742 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(ast));\nif(cljs.core.truth_((valid_QMARK__77734.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK__77734.cljs$core$IFn$_invoke$arity$1(types_77742) : valid_QMARK__77734.call(null,types_77742)))){\n} else {\ncljs.analyzer.warning(warning_type_77735,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_77731,new cljs.core.Keyword(null,\"types\",\"types\",590030639),types_77742], null));\n}\n}\n} else {\n}\n\nreturn cljs.analyzer.analyzed(ast);\n});\ncljs.analyzer.analyze_form = (function cljs$analyzer$analyze_form(env,form,name,opts){\nif((form instanceof cljs.core.Symbol)){\nreturn cljs.analyzer.analyze_symbol(env,form);\n} else {\nif(((cljs.analyzer.impl.cljs_seq_QMARK_(form)) && ((!((cljs.core.seq(form) == null)))))){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,opts);\n} else {\nif(cljs.core.record_QMARK_(form)){\nreturn cljs.analyzer.analyze_record(env,form);\n} else {\nif(cljs.analyzer.impl.cljs_map_QMARK_(form)){\nreturn cljs.analyzer.analyze_map(env,form);\n} else {\nif(cljs.analyzer.impl.cljs_vector_QMARK_(form)){\nreturn cljs.analyzer.analyze_vector(env,form);\n} else {\nif(cljs.analyzer.impl.cljs_set_QMARK_(form)){\nreturn cljs.analyzer.analyze_set(env,form);\n} else {\nif((form instanceof cljs.core.Keyword)){\nreturn cljs.analyzer.analyze_keyword(env,form);\n} else {\nif((form instanceof cljs.tagged_literals.JSValue)){\nreturn cljs.analyzer.analyze_js_value(env,form);\n} else {\nvar tag = (((form == null))?cljs.analyzer.impl.CLJ_NIL_SYM:((typeof form === 'number')?cljs.analyzer.impl.NUMBER_SYM:((typeof form === 'string')?cljs.analyzer.impl.STRING_SYM:((form === true)?cljs.analyzer.impl.BOOLEAN_SYM:((form === false)?cljs.analyzer.impl.BOOLEAN_SYM:((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY,form))?new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null):null))))));\nvar G__75432 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\nif(cljs.core.truth_(tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__75432,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag);\n} else {\nreturn G__75432;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n});\ncljs.analyzer.default_passes = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type,cljs.analyzer.check_invoke_arg_types], null);\ncljs.analyzer.analyze_STAR_ = (function cljs$analyzer$analyze_STAR_(env,form,name,opts){\nvar passes = cljs.analyzer._STAR_passes_STAR_;\nvar passes__$1 = (((passes == null))?cljs.analyzer.default_passes:passes);\nvar form__$1 = (((form instanceof cljs.core.LazySeq))?((cljs.core.seq(form))?form:cljs.core.List.EMPTY):form);\nvar ast = cljs.analyzer.analyze_form(env,form__$1,name,opts);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast__$1,pass){\nreturn (pass.cljs$core$IFn$_invoke$arity$3 ? pass.cljs$core$IFn$_invoke$arity$3(env,ast__$1,opts) : pass.call(null,env,ast__$1,opts));\n}),ast,passes__$1);\n});\n/**\n * Given an environment, a map containing {:locals (mapping of names to bindings), :context\n *   (one of :statement, :expr, :return), :ns (a symbol naming the\n *   compilation ns)}, and form, returns an expression object (a map\n *   containing at least :form, :op and :env keys). If expr has any (immediately)\n *   nested exprs, must have a :children entry. This must be a vector of keywords naming\n *   the immediately nested fields mapped to an expr or vector of exprs. This will\n *   facilitate code walking without knowing the details of the op set.\n */\ncljs.analyzer.analyze = (function cljs$analyzer$analyze(var_args){\nvar G__75434 = arguments.length;\nswitch (G__75434) {\ncase 2:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = (function (env,form){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(env,form,null);\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\ntry{if(cljs.analyzer.analyzed_QMARK_(form)){\nvar _STAR_cljs_warnings_STAR__orig_val__75436 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__75437 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__75437);\n\ntry{return cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__75436);\n}} else {\nreturn cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}\n}catch (e75435){var err__74010__auto__ = e75435;\nif(cljs.analyzer.has_error_data_QMARK_(err__74010__auto__)){\nthrow err__74010__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__74010__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__74010__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__74010__auto__.message,err__74010__auto__));\n\n}\n}\n}}));\n\n(cljs.analyzer.analyze.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given a compiler state and a map from fully qualified symbols to constant\n *   EDN values, update the compiler state marking these vars as const to support\n *   direct substitution of these vars in source.\n */\ncljs.analyzer.add_consts = (function cljs$analyzer$add_consts(compiler_state,constants_map){\nreturn cljs.core.reduce_kv((function (compiler_state__$1,sym,value){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(compiler_state__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null),cljs.core.merge,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),(function (){var _STAR_passes_STAR__orig_val__75438 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__75439 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__75439);\n\ntry{return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.empty_env(),value);\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__75438);\n}})()], null));\n}),compiler_state,constants_map);\n});\ncljs.analyzer.resolve_symbol = (function cljs$analyzer$resolve_symbol(sym){\nif(((cljs.core.not(cljs.core.namespace(sym))) && (cljs.analyzer.dotted_symbol_QMARK_(sym)))){\nreturn sym;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1((function (){var _STAR_private_var_access_nowarn_STAR__orig_val__75440 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__75441 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__75441);\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_)),sym);\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__75440);\n}})());\n}\n});\nvar registry_ref_77763 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"registry-ref\",\"registry-ref\",1975823941,null));\n}),null));\nvar speced_vars_77764 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"-speced-vars\",\"-speced-vars\",1758723085,null));\n}),null));\ncljs.analyzer.get_spec_vars = (function cljs$analyzer$get_spec_vars(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)) == null)))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414),cljs.core.deref(registry_ref_77763),new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988),cljs.core.deref(speced_vars_77764)], null);\n} else {\nreturn null;\n}\n});\n/**\n * Dumps registered speced vars for a given namespace into the compiler\n *   environment.\n */\ncljs.analyzer.dump_specs = (function cljs$analyzer$dump_specs(ns){\nvar spec_vars = cljs.analyzer.get_spec_vars();\nvar ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar registry_ref = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p__75442){\nvar vec__75443 = p__75442;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75443,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75443,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(k));\n})),cljs.core.deref(cljs.core.deref(registry_ref)))], null);\n} else {\nreturn null;\n}\n})(),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar speced_vars = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (v){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(v))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"fdef-ns\",\"fdef-ns\",-1602124254).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v)))));\n})),cljs.core.deref(cljs.core.deref(speced_vars)))], null);\n} else {\nreturn null;\n}\n})()], 0));\n});\n/**\n * Registers speced vars found in a namespace analysis cache.\n */\ncljs.analyzer.register_specs = (function cljs$analyzer$register_specs(cached_ns){\nvar map__75446 = cljs.analyzer.get_spec_vars();\nvar map__75446__$1 = cljs.core.__destructure_map(map__75446);\nvar registry_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75446__$1,new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414));\nvar speced_vars = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75446__$1,new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988));\nvar temp__5753__auto___77775 = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5753__auto___77775){\nvar registry_77776 = temp__5753__auto___77775;\nif(cljs.core.truth_(registry_ref)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(registry_ref),cljs.core.into,registry_77776);\n} else {\n}\n} else {\n}\n\nvar temp__5753__auto__ = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5753__auto__){\nvar vars = temp__5753__auto__;\nif(cljs.core.truth_(speced_vars)){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(speced_vars),cljs.core.into,vars);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_form_seq = (function cljs$analyzer$analyze_form_seq(var_args){\nvar G__75448 = arguments.length;\nswitch (G__75448) {\ncase 1:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1 = (function (forms){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2(forms,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2 = (function (forms,opts){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3(forms,opts,false);\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3 = (function (forms,opts,return_last_QMARK_){\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.empty_env(),new cljs.core.Keyword(null,\"build-options\",\"build-options\",1183685779),opts);\nvar _STAR_file_defs_STAR__orig_val__75449 = cljs.analyzer._STAR_file_defs_STAR_;\nvar _STAR_cljs_ns_STAR__orig_val__75450 = cljs.analyzer._STAR_cljs_ns_STAR_;\nvar _STAR_cljs_file_STAR__orig_val__75451 = cljs.analyzer._STAR_cljs_file_STAR_;\nvar _STAR_alias_map_STAR__orig_val__75452 = cljs.tools.reader._STAR_alias_map_STAR_;\nvar _STAR_file_defs_STAR__temp_val__75453 = null;\nvar _STAR_cljs_ns_STAR__temp_val__75454 = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\nvar _STAR_cljs_file_STAR__temp_val__75455 = null;\nvar _STAR_alias_map_STAR__temp_val__75456 = (function (){var or__4160__auto__ = cljs.tools.reader._STAR_alias_map_STAR_;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__temp_val__75453);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__temp_val__75454);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__temp_val__75455);\n\n(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__temp_val__75456);\n\ntry{var ns = null;\nvar forms__$1 = forms;\nvar last_ast = null;\nwhile(true){\nif((!((forms__$1 == null)))){\nvar form = cljs.core.first(forms__$1);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ast = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,form,null,opts);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760))){\nvar G__77788 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ast);\nvar G__77789 = cljs.core.next(forms__$1);\nvar G__77790 = ast;\nns = G__77788;\nforms__$1 = G__77789;\nlast_ast = G__77790;\ncontinue;\n} else {\nvar G__77791 = ns;\nvar G__77792 = cljs.core.next(forms__$1);\nvar G__77793 = ast;\nns = G__77791;\nforms__$1 = G__77792;\nlast_ast = G__77793;\ncontinue;\n}\n} else {\nif(cljs.core.truth_(return_last_QMARK_)){\nreturn last_ast;\n} else {\nreturn ns;\n}\n}\nbreak;\n}\n}finally {(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__orig_val__75452);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__orig_val__75451);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__orig_val__75450);\n\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__orig_val__75449);\n}}));\n\n(cljs.analyzer.analyze_form_seq.cljs$lang$maxFixedArity = 3);\n\n/**\n * Ensures that a non-nil defs map exists in the compiler state for a given\n *   ns. (A non-nil defs map signifies that the namespace has been analyzed.)\n */\ncljs.analyzer.ensure_defs = (function cljs$analyzer$ensure_defs(ns){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null),(function (p1__75457_SHARP_){\nvar or__4160__auto__ = p1__75457_SHARP_;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/analyzer.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",18],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",["^ ","~$allowing-redef","~$cljs.analyzer.macros","~$disallowing-ns*","^P","~$disallowing-recur","^P","~$no-warn","^P","~$with-warning-handlers","^P","~$wrapping-errors","^P","~$ensure","~$cljs.env.macros"],"~:excludes",["~#set",["^V","~$js-reserved","~$macroexpand-1","~$ns-interns"]],"~:name","~$cljs.analyzer","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$gstring","~$goog.string","~$impl","~$cljs.analyzer.impl","~$cljs.tools.reader","^1=","^1:","^1:","~$tags","~$cljs.tagged-literals","~$cljs.core","^1@","~$goog","^1A","^E","^E","~$cljs.env","^1B","^18","^18","~$readers","^E","^1?","^1?","~$env","^1B","~$string","~$clojure.string","^1<","^1<","^1F","^1F","~$cljs.reader","^1G","~$edn","^1G","~$reader","^1="],"~:seen",["^Y",["~:require","~:require-macros"]],"~:uses",null,"^1L",["^ ","^P","^P","^W","^W","^1@","^1@","^1G","^1G","^1H","^1G"],"~:form",["~#list",["~$ns","^12",["^1O",["~:refer-clojure","~:exclude",["^V","^Z","^[","^10"]]],["^1O",["^1L",["^P","~:refer",["^O","^Q","^R","^S","^T","^U"]],["^W","^1S",["^V"]]]],["^1O",["^1K",["^1<","~:as","^1;"],["^1B","^1T","^1D"],["^1G","^1T","^1H"],["^1?","^1T","^1>"],["^1=","^1T","^1I"],["^E","^1T","^1C"],["^18","^1T","^17"],["^1F","^1T","^1E"],["^1:","^1T","^19"]]]]],"~:flags",["^ ","^1L",["^Y",[]],"^1K",["^Y",[]]],"~:js-deps",["^ "],"~:deps",["^1A","^1@","^1<","^1B","^1G","^1?","^1=","^E","^18","^1F","^1:"]],"^14","^12","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer.cljc"],"~:compiled-at",1621210456605,"~:resource-name","cljs/analyzer.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer\n  #?(:clj  (:refer-clojure :exclude [ensure macroexpand-1])\n     :cljs (:refer-clojure :exclude [ensure js-reserved macroexpand-1 ns-interns]))\n  #?(:cljs (:require-macros [cljs.analyzer.macros\n                             :refer [allowing-redef disallowing-ns* disallowing-recur\n                                     no-warn with-warning-handlers wrapping-errors]]\n             [cljs.env.macros :refer [ensure]]))\n  #?(:clj  (:require [cljs.analyzer.impl :as impl]\n                     [cljs.env :as env :refer [ensure]]\n                     [cljs.externs :as externs]\n                     [cljs.js-deps :as deps]\n                     [cljs.tagged-literals :as tags]\n                     [cljs.util :as util :refer [ns->relpath topo-sort]]\n                     [clojure.edn :as edn]\n                     [clojure.java.io :as io]\n                     [clojure.set :as set]\n                     [clojure.string :as string]\n                     [clojure.tools.reader :as reader]\n                     [clojure.tools.reader.reader-types :as readers])\n     :cljs (:require [cljs.analyzer.impl :as impl]\n                     [cljs.env :as env]\n                     [cljs.reader :as edn]\n                     [cljs.tagged-literals :as tags]\n                     [cljs.tools.reader :as reader]\n                     [cljs.tools.reader.reader-types :as readers]\n                     [clojure.set :as set]\n                     [clojure.string :as string]\n                     [goog.string :as gstring]))\n  #?(:clj (:import [cljs.tagged_literals JSValue]\n                   [clojure.lang Namespace Var LazySeq ArityException]\n                   [java.io File Reader PushbackReader]\n                   [java.lang Throwable]\n                   [java.net URL]\n                   [java.util.regex Pattern])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; User file-local compiler flags\n#?(:clj (def ^:dynamic *unchecked-if* false))\n#?(:clj (def ^:dynamic *unchecked-arrays* false))\n\n;; Compiler dynamic vars\n(def ^:dynamic *cljs-ns* 'cljs.user)\n(def ^:dynamic *cljs-file* nil)\n(def ^:dynamic *checked-arrays* false)\n(def ^:dynamic *check-alias-dupes* true)\n(def ^:dynamic *cljs-static-fns* false)\n(def ^:dynamic *fn-invoke-direct* false)\n(def ^:dynamic *cljs-macros-path* \"/cljs/core\")\n(def ^:dynamic *cljs-macros-is-classpath* true)\n(def ^:dynamic *cljs-dep-set* (with-meta #{} {:dep-path []}))\n(def ^:dynamic *analyze-deps* true)\n(def ^:dynamic *load-tests* true)\n(def ^:dynamic *load-macros* true)\n(def ^:dynamic *reload-macros* false)\n(def ^:dynamic *macro-infer* true)\n(def ^:dynamic *passes* nil)\n(def ^:dynamic *file-defs* nil)\n(def ^:dynamic *private-var-access-nowarn* false)\n\n(def constants-ns-sym\n  \"The namespace of the constants table as a symbol.\"\n  'cljs.core.constants)\n\n#?(:clj\n   (def transit-read-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [read-handler     @(ns-resolve ns 'read-handler)\n               read-handler-map @(ns-resolve ns 'read-handler-map)]\n           {:handlers\n             (read-handler-map\n               {\"cljs/js\"    (read-handler (fn [v] (JSValue. v)))\n                \"cljs/regex\" (read-handler (fn [v] (Pattern/compile v)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit-write-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [write-handler     @(ns-resolve ns 'write-handler)\n               write-handler-map @(ns-resolve ns 'write-handler-map)]\n           {:handlers\n             (write-handler-map\n               {JSValue\n                (write-handler\n                  (fn [_] \"cljs/js\")\n                  (fn [js] (.val ^JSValue js)))\n                Pattern\n                (write-handler\n                  (fn [_] \"cljs/regex\")\n                  (fn [pat] (.pattern ^Pattern pat)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit\n     (delay\n       (try\n         (require '[cognitect.transit])\n         (when-some [ns (find-ns 'cognitect.transit)]\n           {:writer @(ns-resolve ns 'writer)\n            :reader @(ns-resolve ns 'reader)\n            :write  @(ns-resolve ns 'write)\n            :read   @(ns-resolve ns 'read)})\n         (catch Throwable t\n           nil)))))\n\n;; log compiler activities\n(def ^:dynamic *verbose* false)\n\n(def -cljs-macros-loaded (atom false))\n\n(def ^:dynamic *cljs-warnings*\n  {:preamble-missing true\n   :unprovided true\n   :undeclared-var true\n   :private-var-access true\n   :undeclared-ns true\n   :undeclared-ns-form true\n   :redef true\n   :redef-in-file true\n   :dynamic true\n   :fn-var true\n   :fn-arity true\n   :fn-deprecated true\n   :declared-arglists-mismatch true\n   :protocol-deprecated true\n   :undeclared-protocol-symbol true\n   :invalid-protocol-symbol true\n   :multiple-variadic-overloads true\n   :variadic-max-arity true\n   :overload-arity true\n   :extending-base-js-type true\n   :invoke-ctor true\n   :invalid-arithmetic true\n   :invalid-array-access true\n   :protocol-invalid-method true\n   :protocol-duped-method true\n   :protocol-multiple-impls true\n   :protocol-with-variadic-method true\n   :protocol-with-overwriting-method true\n   :protocol-impl-with-variadic-method true\n   :protocol-impl-recur-with-target true\n   :single-segment-namespace true\n   :munged-namespace true\n   :ns-var-clash true\n   :non-dynamic-earmuffed-var true\n   :extend-type-invalid-method-shape true\n   :unsupported-js-module-type true\n   :unsupported-preprocess-value true\n   :js-shadowed-by-local true\n   :infer-warning false})\n\n(defn unchecked-arrays? []\n  *unchecked-arrays*)\n\n(defn compiler-options []\n  (get @env/*compiler* :options))\n\n(defn get-externs []\n  (::externs @env/*compiler*))\n\n(defn checked-arrays\n  \"Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*.\"\n  []\n  (when (and (not (:advanced (compiler-options)))\n             (not *unchecked-arrays*))\n    *checked-arrays*))\n\n(def js-reserved\n  #{\"arguments\" \"abstract\" \"await\" \"boolean\" \"break\" \"byte\" \"case\"\n    \"catch\" \"char\" \"class\" \"const\" \"continue\"\n    \"debugger\" \"default\" \"delete\" \"do\" \"double\"\n    \"else\" \"enum\" \"export\" \"extends\" \"final\"\n    \"finally\" \"float\" \"for\" \"function\" \"goto\" \"if\"\n    \"implements\" \"import\" \"in\" \"instanceof\" \"int\"\n    \"interface\" \"let\" \"long\" \"native\" \"new\"\n    \"package\" \"private\" \"protected\" \"public\"\n    \"return\" \"short\" \"static\" \"super\" \"switch\"\n    \"synchronized\" \"this\" \"throw\" \"throws\"\n    \"transient\" \"try\" \"typeof\" \"var\" \"void\"\n    \"volatile\" \"while\" \"with\" \"yield\" \"methods\"\n    \"null\" \"constructor\"})\n\n(def es5-allowed\n  #{\"default\"})\n\n#?(:clj (def SENTINEL (Object.))\n   :cljs (def SENTINEL (js-obj)))\n\n(defn gets\n  ([m k0 k1]\n    (let [m (get m k0 SENTINEL)]\n      (when-not (identical? m SENTINEL)\n        (get m k1))))\n  ([m k0 k1 k2]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (get m k2))))))\n  ([m k0 k1 k2 k3]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (let [m (get m k2 SENTINEL)]\n             (when-not (identical? m SENTINEL)\n               (get m k3)))))))))\n\n#?(:cljs\n   (defn munge-path [ss]\n     (munge (str ss))))\n\n#?(:cljs\n   (defn ns->relpath\n     \"Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.\"\n     ([ns] (ns->relpath ns :cljs))\n     ([ns ext]\n      (str (string/replace (munge-path ns) \\. \\/) \".\" (name ext)))))\n\n#?(:cljs\n   (defn topo-sort\n     ([x get-deps]\n      (topo-sort x 0 (atom (sorted-map)) (memoize get-deps)))\n     ([x depth state memo-get-deps]\n      (let [deps (memo-get-deps x)]\n        (swap! state update-in [depth] (fnil into #{}) deps)\n        (doseq [dep deps]\n          (topo-sort dep (inc depth) state memo-get-deps))\n        (doseq [[<depth _] (subseq @state < depth)]\n          (swap! state update-in [<depth] set/difference deps))\n        (when (= depth 0)\n          (distinct (apply concat (vals @state))))))))\n\n(declare message namespaces)\n\n(defn ast?\n  #?(:cljs {:tag boolean})\n  [x]\n  (and (map? x) (contains? x :op)))\n\n(defmulti error-message (fn [warning-type & _] warning-type))\n\n(defmethod error-message :preamble-missing\n  [warning-type info]\n  (str \"Preamble resource file not found: \" (string/join \" \" (:missing info))))\n\n(defmethod error-message :unprovided\n  [warning-type info]\n  (str \"Required namespace not provided for \" (string/join \" \" (:unprovided info))))\n\n(defmethod error-message :undeclared-var\n  [warning-type info]\n  (str (if (:macro-present? info)\n         \"Can't take value of macro \"\n         \"Use of undeclared Var \")\n    (:prefix info) \"/\" (:suffix info)))\n\n(defmethod error-message :private-var-access\n  [warning-type info]\n  (str \"var: \" (:sym info) \" is not public\"))\n\n(defmethod error-message :undeclared-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :cljs)\n       \", \" (ns->relpath ns-sym :cljc)\n       \", or JavaScript source providing \\\"\" js-provide \"\\\"\"\n    (when (string/includes? (ns->relpath ns-sym) \"_\")\n      \" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\")))\n\n(defmethod error-message :undeclared-macros-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such macros namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :clj)\n       \" or \" (ns->relpath ns-sym :cljc)))\n\n(defmethod error-message :dynamic\n  [warning-type info]\n  (str (:name info) \" not declared ^:dynamic\"))\n\n(defmethod error-message :redef\n  [warning-type info]\n  (str (:sym info) \" already refers to: \" (symbol (str (:ns info)) (str (:sym info)))\n    \" being replaced by: \" (symbol (str (:ns-name info)) (str (:sym info)))))\n\n(defmethod error-message :redef-in-file\n  [warning-type info]\n  (str (:sym info) \" at line \" (:line info) \" is being replaced\"))\n\n(defmethod error-message :fn-var\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" no longer fn, references are stale\"))\n\n(defmethod error-message :fn-arity\n  [warning-type info]\n  (str \"Wrong number of args (\" (:argc info) \") passed to \"\n    (or (:ctor info)\n      (:name info))))\n\n(defmethod error-message :fn-deprecated\n  [warning-type info]\n  (str (-> info :fexpr :info :name) \" is deprecated\"))\n\n(defmethod error-message :declared-arglists-mismatch\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" declared arglists \" (:declared info)\n    \" mismatch defined arglists \" (:defined info)))\n\n(defmethod error-message :undeclared-ns-form\n  [warning-type info]\n  (str \"Invalid :refer, \" (:type info) \" \" (:lib info) \"/\" (:sym info) \" does not exist\"))\n\n(defmethod error-message :protocol-deprecated\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" is deprecated\"))\n\n(defmethod error-message :undeclared-protocol-symbol\n  [warning-type info]\n  (str \"Can't resolve protocol symbol \" (:protocol info)))\n\n(defmethod error-message :invalid-protocol-symbol\n  [warning-type info]\n  (str \"Symbol \" (:protocol info) \" is not a protocol\"))\n\n(defmethod error-message :protocol-invalid-method\n  [warning-type info]\n  (if (:no-such-method info)\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" does not declare method called \" (:fname info))\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" \" (:fname info) \" does not declare arity \" (:invalid-arity info))))\n\n(defmethod error-message :protocol-duped-method\n  [warning-type info]\n  (str \"Duplicated methods in protocol implementation \" (:protocol info) \" \" (:fname info)))\n\n(defmethod error-message :protocol-multiple-impls\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implemented multiple times\"))\n\n(defmethod error-message :protocol-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" declares method \"\n       (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-with-overwriting-method\n  [warning-type info]\n  (let [overwritten-protocol (-> info :existing :protocol)]\n    (str \"Protocol \" (:protocol info) \" is overwriting \"\n      (if overwritten-protocol \"method\" \"function\")\n      \" \" (:name info)\n      (when overwritten-protocol (str \" of protocol \" (name overwritten-protocol))))))\n\n(defmethod error-message :protocol-impl-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implements method \"\n    (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-impl-recur-with-target\n  [warning-type info]\n  (str \"Ignoring target object \\\"\" (pr-str (:form info)) \"\\\" passed in recur to protocol method head\"))\n\n(defmethod error-message :multiple-variadic-overloads\n  [warning-type info]\n  (str (:name info) \": Can't have more than 1 variadic overload\"))\n\n(defmethod error-message :variadic-max-arity\n  [warning-type info]\n  (str (:name info) \": Can't have fixed arity function with more params than variadic function\"))\n\n(defmethod error-message :overload-arity\n  [warning-type info]\n  (str (:name info) \": Can't have 2 overloads with same arity\"))\n\n(defmethod error-message :extending-base-js-type\n  [warning-type info]\n  (str \"Extending an existing JavaScript type - use a different symbol name \"\n       \"instead of \" (:current-symbol info) \" e.g \" (:suggested-symbol info)))\n\n(defmethod error-message :invalid-arithmetic\n  [warning-type info]\n  (str (:js-op info) \", all arguments must be numbers, got \" (:types info) \" instead\"))\n\n(defmethod error-message :invalid-array-access\n  [warning-type {:keys [name types]}]\n  (case name\n    (cljs.core/checked-aget cljs.core/checked-aget')\n    (str \"cljs.core/aget, arguments must be an array followed by numeric indices, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (rest types)))\n        (str \" (consider \"\n          (if (== 2 (count types))\n            \"goog.object/get\"\n            \"goog.object/getValueByKeys\")\n          \" for object access)\")))\n\n    (cljs.core/checked-aset cljs.core/checked-aset')\n    (str \"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (butlast (rest types))))\n        \" (consider goog.object/set for object access)\"))))\n\n(defmethod error-message :invoke-ctor\n  [warning-type info]\n  (str \"Cannot invoke type constructor \" (-> info :fexpr :info :name) \" as function \"))\n\n(defmethod error-message :single-segment-namespace\n  [warning-type info]\n  (str (:name info) \" is a single segment namespace\"))\n\n(defmethod error-message :munged-namespace\n  [warning-type {:keys [name] :as info}]\n  (let [munged (->> (string/split (clojure.core/name name) #\"\\.\")\n                 (map #(if (js-reserved %) (str % \"$\") %))\n                 (string/join \".\")\n                 (munge))]\n    (str \"Namespace \" name \" contains a reserved JavaScript keyword,\"\n         \" the corresponding Google Closure namespace will be munged to \" munged)))\n\n(defmethod error-message :ns-var-clash\n  [warning-type {:keys [ns var] :as info}]\n  (str \"Namespace \" ns \" clashes with var \" var))\n\n(defmethod error-message :non-dynamic-earmuffed-var\n  [warning-type {:keys [var] :as info}]\n  (str var \" not declared dynamic and thus is not dynamically rebindable, but its name \"\n    \"suggests otherwise. Please either indicate ^:dynamic \" var \" or change the name\"))\n\n(defmethod error-message :extend-type-invalid-method-shape\n  [warning-type {:keys [protocol method] :as info}]\n  (str \"Bad extend-type method shape for protocol \" protocol \" method \" method\n       \", method arities must be grouped together\"))\n\n(defmethod error-message :unsupported-js-module-type\n  [warning-type {:keys [module-type file] :as info}]\n  (str \"Unsupported JavaScript module type \" module-type \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :unsupported-preprocess-value\n  [warning-type {:keys [preprocess file]}]\n  (str \"Unsupported preprocess value \" preprocess \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :js-shadowed-by-local\n  [warning-type {:keys [name]}]\n  (str name \" is shadowed by a local\"))\n\n(defmethod error-message :infer-warning\n  [warning-type {:keys [warn-type form type property]}]\n  (case warn-type\n    :target   (str \"Cannot infer target type in expression \" form \"\")\n    :property (str \"Cannot resolve property \" property\n                   \" for inferred type \" type  \" in expression \" form)\n    :object   (str \"Adding extern to Object for property \" property \" due to \"\n                   \"ambiguous expression \" form)))\n\n(defn default-warning-handler [warning-type env extra]\n  (when (warning-type *cljs-warnings*)\n    (when-let [s (error-message warning-type extra)]\n      #?(:clj  (binding [*out* *err*]\n                 (println (message env (str \"WARNING: \" s))))\n         :cljs (binding [*print-fn* *print-err-fn*]\n                 (println (message env (str \"WARNING: \" s))))))))\n\n(def ^:dynamic *cljs-warning-handlers*\n  [default-warning-handler])\n\n#?(:clj\n   (defmacro with-warning-handlers [handlers & body]\n     `(binding [*cljs-warning-handlers* ~handlers]\n        ~@body)))\n\n(defn- repeat-char [c n]\n  (loop [ret c n n]\n    (if (pos? n)\n      (recur (str ret c) (dec n))\n      ret)))\n\n(defn- hex-format [s pad]\n  #?(:clj  (str \"_u\" (format (str \"%0\" pad \"x\") (int (first s))) \"_\")\n     :cljs (let [hex (.toString (.charCodeAt s 0) 16)\n                 len (. hex -length)\n                 hex (if (< len pad)\n                       (str (repeat-char \"0\" (- pad len)) hex)\n                       hex)]\n             (str \"_u\" hex \"_\"))))\n\n(defn gen-constant-id [value]\n  (let [prefix (cond\n                 (keyword? value) \"cst$kw$\"\n                 (symbol? value)  \"cst$sym$\"\n                 :else\n                 (throw\n                   #?(:clj (Exception. (str \"constant type \" (type value) \" not supported\"))\n                      :cljs (js/Error. (str \"constant type \" (type value) \" not supported\")))))\n        name   (if (keyword? value)\n                 (subs (str value) 1)\n                 (str value))\n        name   (if (= \".\" name)\n                 \"_DOT_\"\n                 (-> name\n                     (string/replace \"-\" \"_DASH_\")\n                     (munge)\n                     (string/replace \".\" \"$\")\n                     (string/replace #\"(?i)[^a-z0-9$_]\" #(hex-format % 4))))]\n    (symbol (str prefix name))))\n\n(defn- register-constant!\n  ([val] (register-constant! nil val))\n  ([env val]\n   (swap! env/*compiler*\n     (fn [cenv]\n       (cond->\n         (-> cenv\n           (update-in [::constant-table]\n             (fn [table]\n               (if (get table val)\n                 table\n                 (assoc table val (gen-constant-id val))))))\n         env (update-in [::namespaces (-> env :ns :name) ::constants]\n               (fn [{:keys [seen order] :or {seen #{} order []} :as constants}]\n                 (cond-> constants\n                   (not (contains? seen val))\n                   (assoc\n                     :seen (conj seen val)\n                     :order (conj order val))))))))))\n\n(def default-namespaces '{cljs.core {:name cljs.core}\n                          cljs.user {:name cljs.user}})\n\n;; this exists solely to support read-only namespace access from macros.\n;; External tools should look at the authoritative ::namespaces slot in the\n;; compiler-env atoms/maps they're using already; this value will yield only\n;; `default-namespaces` when accessed outside the scope of a\n;; compilation/analysis call\n(def namespaces\n  #?(:clj\n     (reify clojure.lang.IDeref\n       (deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))\n     :cljs\n     (reify IDeref\n       (-deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))))\n\n(defn get-namespace\n  ([key]\n    (get-namespace env/*compiler* key))\n  ([cenv key]\n   (if-some [ns (get-in @cenv [::namespaces key])]\n       ns\n       (when (= 'cljs.user key)\n         {:name 'cljs.user}))))\n\n#?(:clj\n   (defmacro no-warn [& body]\n     (let [no-warnings (zipmap (keys *cljs-warnings*) (repeat false))]\n       `(binding [*cljs-warnings* ~no-warnings]\n          ~@body))))\n\n#?(:clj\n   (defmacro all-warn [& body]\n     (let [all-warnings (zipmap (keys *cljs-warnings*) (repeat true))]\n       `(binding [*cljs-warnings* ~all-warnings]\n          ~@body))))\n\n(defn get-line [x env]\n  (or (-> x meta :line) (:line env)))\n\n(defn get-col [x env]\n  (or (-> x meta :column) (:column env)))\n\n(defn intern-macros\n  \"Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.\"\n  ([ns] (intern-macros ns false))\n  ([ns reload]\n    (when (or (nil? (gets @env/*compiler* ::namespaces ns :macros))\n              reload)\n      (swap! env/*compiler* assoc-in [::namespaces ns :macros]\n        (->> #?(:clj (ns-interns ns) :cljs (ns-interns* ns))\n             (filter (fn [[_ ^Var v]] (.isMacro v)))\n             (map (fn [[k v]]\n                    [k (as-> (meta v) vm\n                         (let [ns (.getName ^Namespace (:ns vm))]\n                           (assoc vm\n                             :ns ns\n                             :name (symbol (str ns) (str k))\n                             :macro true)))]))\n             (into {}))))))\n\n#?(:clj\n   (def load-mutex (Object.)))\n\n#?(:clj\n   (defn load-core []\n     (when (not @-cljs-macros-loaded)\n       (reset! -cljs-macros-loaded true)\n       (if *cljs-macros-is-classpath*\n         (locking load-mutex\n           (load *cljs-macros-path*))\n         (locking load-mutex\n           (load-file *cljs-macros-path*))))\n     (intern-macros 'cljs.core)))\n\n#?(:clj\n   (defmacro with-core-macros\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path]\n          ~@body))))\n\n#?(:clj\n   (defmacro with-core-macros-file\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path\n                  *cljs-macros-is-classpath* false]\n          ~@body))))\n\n(defn empty-env\n  \"Construct an empty analysis environment. Required to analyze forms.\"\n  []\n  (ensure\n    {:ns (get-namespace *cljs-ns*)\n     :context :statement\n     :locals {}\n     :fn-scope []\n     :js-globals (into {}\n                   (map #(vector % {:op :js-var :name % :ns 'js})\n                     '(alert window document console escape unescape\n                       screen location navigator history location\n                       global process require module exports)))}))\n\n(defn- source-info->error-data\n  [{:keys [file line column]}]\n  {:clojure.error/source file\n   :clojure.error/line   line\n   :clojure.error/column column})\n\n(defn source-info\n  ([env]\n   (when (:line env)\n     (source-info nil env)))\n  ([name env]\n   (cond-> {:file (if (= (-> env :ns :name) 'cljs.core)\n                    \"cljs/core.cljs\"\n                    *cljs-file*)\n            :line (get-line name env)\n            :column (get-col name env)}\n     (:root-source-info env)\n     (merge (select-keys env [:root-source-info])))))\n\n(defn message [env s]\n  (str s\n    (if (:line env)\n      (str \" at line \" (:line env) \" \" *cljs-file*)\n      (when *cljs-file*\n        (str \" in file \" *cljs-file*)))))\n\n(defn warning [warning-type env extra]\n  (doseq [handler *cljs-warning-handlers*]\n    (handler warning-type env extra)))\n\n(defn- accumulating-warning-handler [warn-acc]\n  (fn [warning-type env extra]\n    (when (warning-type *cljs-warnings*)\n      (swap! warn-acc conj [warning-type env extra]))))\n\n(defn- replay-accumulated-warnings [warn-acc]\n  (run! #(apply warning %) @warn-acc))\n\n(defn- error-data\n  ([env phase]\n   (error-data env phase nil))\n  ([env phase symbol]\n   (merge (-> (source-info env) source-info->error-data)\n     {:clojure.error/phase phase}\n     (when symbol\n       {:clojure.error/symbol symbol}))))\n\n(defn- compile-syntax-error\n  [env msg symbol]\n  (ex-info nil (error-data env :compile-syntax-check symbol)\n    #?(:clj (RuntimeException. ^String msg) :cljs (js/Error. msg))))\n\n(defn error\n  ([env msg]\n   (error env msg nil))\n  ([env msg cause]\n   (ex-info (message env msg)\n     (assoc (source-info env) :tag :cljs/analysis-error)\n     cause)))\n\n(defn analysis-error?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (= :cljs/analysis-error (:tag (ex-data ex))))\n\n(defn has-error-data?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (contains? (ex-data ex) :clojure.error/phase))\n\n#?(:clj\n   (defmacro wrapping-errors [env & body]\n     `(try\n        ~@body\n        (catch Throwable err#\n          (cond\n            (has-error-data? err#) (throw err#)\n            (analysis-error? err#) (throw (ex-info nil (error-data ~env :compilation) err#))\n            :else (throw (ex-info nil (error-data ~env :compilation) (error ~env (.getMessage err#) err#))))))))\n\n;; namespaces implicit to the inclusion of cljs.core\n(def implicit-nses '#{goog goog.object goog.string goog.array Math String})\n\n(defn implicit-import?\n  #?(:cljs {:tag boolean})\n  [env prefix suffix]\n  (contains? implicit-nses prefix))\n\n(declare get-expander)\n\n(defn confirm-var-exist-warning [env prefix suffix]\n  (fn [env prefix suffix]\n    (warning :undeclared-var env\n      {:prefix         prefix\n       :suffix         suffix\n       :macro-present? (not (nil? (get-expander (symbol (str prefix) (str suffix)) env)))})))\n\n(defn lib&sublib\n  \"If a library name has the form foo$bar, return a vector of the library and\n   the sublibrary property.\"\n  [lib]\n  (if-let [xs (re-matches #\"(.*)\\$(.*)\" (str lib))]\n    (drop 1 xs)\n    [lib nil]))\n\n(defn loaded-js-ns?\n  \"Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.\"\n  #?(:cljs {:tag boolean})\n  [env prefix]\n  (when-not (gets @env/*compiler* ::namespaces prefix)\n    (let [ns (:ns env)]\n      (or (some? (get (:requires ns) prefix))\n          (some? (get (:imports ns) prefix))))))\n\n(defn- internal-js-module-exists?\n  [js-module-index module]\n  ;; we need to check both keys and values of the JS module index, because\n  ;; macroexpansion will be looking for the provided name - António Monteiro\n  (contains?\n    (into #{}\n      (mapcat (fn [[k v]]\n                [k (:name v)]))\n      js-module-index)\n    (str module)))\n\n(def js-module-exists?* (memoize internal-js-module-exists?))\n\n(defn js-module-exists?\n  [module]\n  (js-module-exists?* (get-in @env/*compiler* [:js-module-index]) module))\n\n(defn node-module-dep?\n  #?(:cljs {:tag boolean})\n  [module]\n  #?(:clj  (let [idx (get @env/*compiler* :node-module-index)]\n             (contains? idx (str (-> module lib&sublib first))))\n     :cljs (try\n             (and (= *target* \"nodejs\")\n                  (boolean\n                    (or (js/require.resolve (str module))\n                        (js/require.resolve (-> module lib&sublib first)))))\n             (catch :default _\n               false))))\n\n(defn dep-has-global-exports?\n  [module]\n  (let [[module _] (lib&sublib module)\n        global-exports (get-in @env/*compiler* [:js-dependency-index (str module) :global-exports])]\n    (or (contains? global-exports (symbol module))\n        (contains? global-exports (name module)))))\n\n(defn confirm-var-exists\n  ([env prefix suffix]\n   (let [warn (confirm-var-exist-warning env prefix suffix)]\n     (confirm-var-exists env prefix suffix warn)))\n  ([env prefix suffix missing-fn]\n   (let [sufstr     (str suffix)\n         suffix-str (if (and #?(:clj  (not= \"..\" sufstr)\n                                :cljs (not (identical? \"..\" sufstr))) ;; leave cljs.core$macros/.. alone\n                          #?(:clj  (re-find #\"\\.\" sufstr)\n                             :cljs ^boolean (.test #\"\\.\" sufstr)))\n                      (first (string/split sufstr #\"\\.\"))\n                      suffix)\n         suffix     (symbol suffix-str)]\n     (when (and (not (implicit-import? env prefix suffix))\n                (not (loaded-js-ns? env prefix))\n                (not (and (= 'cljs.core prefix) (= 'unquote suffix)))\n                (nil? (gets @env/*compiler* ::namespaces prefix :defs suffix))\n                (not (js-module-exists? prefix)))\n       (missing-fn env prefix suffix)))))\n\n(defn confirm-var-exists-throw []\n  (fn [env prefix suffix]\n    (confirm-var-exists env prefix suffix\n      (fn [env prefix suffix]\n        (throw (error env (str \"Unable to resolve var: \" suffix \" in this context\")))))))\n\n(defn resolve-ns-alias\n  ([env name]\n   (resolve-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:requires (:ns env)) sym not-found))))\n\n(defn resolve-macro-ns-alias\n  ([env name]\n   (resolve-macro-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:require-macros (:ns env)) sym not-found))))\n\n(defn confirm-ns\n  \"Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found.\"\n  [env ns-sym]\n  (when (and (not= 'cljs.core ns-sym)\n             (nil? (get implicit-nses ns-sym))\n             (nil? (get (-> env :ns :requires) ns-sym))\n             ;; something else may have loaded the namespace, i.e. load-file\n             (nil? (gets @env/*compiler* ::namespaces ns-sym))\n             ;; macros may refer to namespaces never explicitly required\n             ;; confirm that the library at least exists\n             #?(:clj (nil? (util/ns->source ns-sym)))\n             (not (js-module-exists? ns-sym)))\n    (warning :undeclared-ns env {:ns-sym ns-sym :js-provide ns-sym})))\n\n(defn core-name?\n  \"Is sym visible from core in the current compilation namespace?\"\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (and (or (some? (gets @env/*compiler* ::namespaces 'cljs.core :defs sym))\n           (if-some [mac (get-expander sym env)]\n             (let [^Namespace ns (-> mac meta :ns)]\n               (= (.getName ns) #?(:clj 'cljs.core :cljs 'cljs.core$macros)))\n             false))\n       (not (contains? (-> env :ns :excludes) sym))))\n\n(defn public-name?\n  \"Is sym public?\"\n  #?(:cljs {:tag boolean})\n  [ns sym]\n  (let [var-ast (or (gets @env/*compiler* ::namespaces ns :defs sym)\n                    #?(:clj  (gets @env/*compiler* ::namespaces ns :macros sym)\n                       :cljs (gets @env/*compiler* ::namespaces (symbol (str (name ns) \"$macros\")) :defs sym)))]\n    (and (some? var-ast)\n         (not (or (:private var-ast)\n                  (:anonymous var-ast))))))\n\n(defn js-tag? [x]\n  (and (symbol? x)\n       (or (= 'js x)\n           (= \"js\" (namespace x)))))\n\n(defn normalize-js-tag [x]\n  ;; if not 'js, assume constructor\n  (if-not (= 'js x)\n    (with-meta 'js\n      {:prefix (conj (->> (string/split (name x) #\"\\.\")\n                       (map symbol) vec)\n                 'prototype)})\n    x))\n\n(defn ->type-set\n  \"Ensures that a type tag is a set.\"\n  [t]\n  (if #?(:clj  (set? t)\n         :cljs (impl/cljs-set? t))\n    t\n    #{t}))\n\n(defn canonicalize-type [t]\n  \"Ensures that a type tag is either nil, a type symbol, or a non-singleton\n  set of type symbols, absorbing clj-nil into seq and all types into any.\"\n  (cond\n    (symbol? t) t\n    (empty? t) nil\n    (== 1 (count t)) (first t)\n    (contains? t 'any) 'any\n    (contains? t 'seq) (let [res (disj t 'clj-nil)]\n                         (if (== 1 (count res))\n                           'seq\n                           res))\n    :else t))\n\n(defn add-types\n  \"Produces a union of types.\"\n  ([] 'any)\n  ([t1] t1)\n  ([t1 t2]\n   (if (or (nil? t1)\n           (nil? t2))\n     'any\n     (-> (set/union (->type-set t1) (->type-set t2))\n       canonicalize-type)))\n  ([t1 t2 & ts]\n   (apply add-types (add-types t1 t2) ts)))\n\n(def alias->type\n  '{object   Object\n    string   String\n    number   Number\n    array    Array\n    function Function\n    boolean  Boolean\n    symbol   Symbol})\n\n(defn has-extern?*\n  ([pre externs]\n   (let [pre (if-some [me (find\n                            (get-in externs '[Window prototype])\n                            (first pre))]\n               (if-some [tag (-> me first meta :tag)]\n                 (into [tag 'prototype] (next pre))\n                 pre)\n               pre)]\n     (has-extern?* pre externs externs)))\n  ([pre externs top]\n   (cond\n     (empty? pre) true\n     :else\n     (let [x  (first pre)\n           me (find externs x)]\n       (cond\n         (not me) false\n         :else\n         (let [[x' externs'] me\n               xmeta (meta x')]\n           (if (and (= 'Function (:tag xmeta)) (:ctor xmeta))\n             (or (has-extern?* (into '[prototype] (next pre)) externs' top)\n                 (has-extern?* (next pre) externs' top))\n             (recur (next pre) externs' top))))))))\n\n(defn has-extern?\n  ([pre]\n   (has-extern? pre (get-externs)))\n  ([pre externs]\n   (or (has-extern?* pre externs)\n       (when (= 1 (count pre))\n         (let [x (first pre)]\n           (or (get-in externs (conj '[Window prototype] x))\n               (get-in externs (conj '[Number] x)))))\n       (-> (last pre) str (string/starts-with? \"cljs$\")))))\n\n(defn js-tag\n  ([pre]\n   (js-tag pre :tag))\n  ([pre tag-type]\n   (js-tag pre tag-type (get-externs)))\n  ([pre tag-type externs]\n   (js-tag pre tag-type externs externs))\n  ([pre tag-type externs top]\n   (when-let [[p externs' :as me] (find externs (first pre))]\n     (let [tag (-> p meta tag-type)]\n       (if (= (count pre) 1)\n         (when tag (symbol \"js\" (str (alias->type tag tag))))\n         (or (js-tag (next pre) tag-type externs' top)\n             (js-tag (into '[prototype] (next pre)) tag-type (get top tag) top)))))))\n\n(defn dotted-symbol? [sym]\n  (let [s (str sym)]\n    #?(:clj  (and (.contains s \".\")\n                  (not (.contains s \"..\")))\n       :cljs (and ^boolean (goog.string/contains s \".\")\n                  (not ^boolean (goog.string/contains s \"..\"))))))\n\n(defn munge-node-lib [name]\n  (str \"node$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                    :cljs \"$$\")))))\n\n(defn munge-global-export [name]\n  (str \"global$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                      :cljs \"$$\")))))\n\n(defn resolve-alias\n  \"Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original.\"\n  [ns sym]\n  ;; Conditionally alias aget/aset fns to checked variants\n  (if (and (= 'cljs.core ns)\n           ('#{aget aset} sym)\n           (checked-arrays))\n    (get-in '{:warn  {aget checked-aget\n                      aset checked-aset}\n              :error {aget checked-aget'\n                      aset checked-aset'}}\n      [(checked-arrays) sym])\n    sym))\n\n(defn ns->module-type [ns]\n  (cond\n    (js-module-exists? ns) :js\n    (node-module-dep? ns) :node\n    (dep-has-global-exports? ns) :global))\n\n(defmulti resolve* (fn [env sym full-ns current-ns] (ns->module-type full-ns)))\n\n(defmethod resolve* :js\n  [env sym full-ns current-ns]\n  {:name (symbol (str full-ns) (str (name sym)))\n   :op :js-var\n   :ns full-ns})\n\n(defn extern-pre [sym current-ns]\n  (let [pre (into '[Object] (->> (string/split (name sym) #\"\\.\") (map symbol) vec))]\n    (when-not (has-extern? pre)\n      (swap! env/*compiler* update-in\n        (into [::namespaces current-ns :externs] pre) merge {}))\n    pre))\n\n(defn node-like?\n  ([]\n   (node-like? (compiler-options)))\n  ([opts]\n   (and (= :nodejs (:target opts))\n        (false? (:nodejs-rt opts)))))\n\n(defmethod resolve* :node\n  [env sym full-ns current-ns]\n  ;; not actually targeting Node.js, we need to generate externs\n  (if (node-like?)\n    (let [pre (extern-pre sym current-ns)]\n      {:ns      current-ns\n       :name    (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n       :op      :js-var\n       :tag     (with-meta 'js {:prefix pre})\n       :foreign true})\n    {:ns      current-ns\n     :name    (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n     :op      :js-var\n     :foreign true}))\n\n(defmethod resolve* :global\n  [env sym full-ns current-ns]\n  (let [pre (extern-pre sym current-ns)]\n    {:ns current-ns\n     :name (symbol (str current-ns) (str (munge-global-export full-ns) \".\" (name sym)))\n     :op :js-var\n     :tag (with-meta 'js {:prefix pre})\n     :foreign true}))\n\n(def ^:private private-var-access-exceptions\n  \"Specially-treated symbols for which we don't trigger :private-var-access warnings.\"\n  '#{cljs.core/checked-aget\n     cljs.core/checked-aset\n     cljs.core/checked-aget'\n     cljs.core/checked-aset'})\n\n(defmethod resolve* :default\n  [env sym full-ns current-ns]\n  (let [sym-ast (gets @env/*compiler* ::namespaces full-ns :defs (symbol (name sym)))\n        sym-name (symbol (str full-ns) (str (name sym)))]\n    (when (and (not= current-ns full-ns)\n               (:private sym-ast)\n               (not *private-var-access-nowarn*)\n               (not (contains? private-var-access-exceptions sym-name)))\n      (warning :private-var-access env\n        {:sym sym-name}))\n    (merge sym-ast\n      {:name sym-name\n       :op :var\n       :ns   full-ns})))\n\n(defn required? [ns env]\n  (or (contains? (set (vals (gets env :ns :requires))) ns)\n      (contains? (set (vals (gets env :ns :uses))) ns)))\n\n(defn invokeable-ns?\n  \"Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function.\"\n  [ns env]\n  (let [ns (resolve-ns-alias env ns)]\n    (and (required? ns env)\n         (or (js-module-exists? ns)\n             (node-module-dep? ns)\n             (dep-has-global-exports? ns)))))\n\n(defn resolve-invokeable-ns [ns current-ns env]\n  (let [ns (resolve-ns-alias env ns)\n        module-type (ns->module-type ns)]\n    (case module-type\n      :js     {:name (symbol\n                       (or (gets @env/*compiler* :js-module-index ns :name)\n                           (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns 'js}\n      :node   {:name (symbol (str current-ns)\n                       (munge-node-lib (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns}\n      :global {:name (symbol (str current-ns)\n                       (munge-global-export (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns})))\n\n;; core.async calls `macroexpand-1` manually with an ill-formed\n;; :locals map. Normally :locals maps symbols maps, but\n;; core.async adds entries mapping symbols to symbols. We work\n;; around that specific case here. This is called defensively\n;; every time we lookup the :locals map.\n(defn handle-symbol-local [sym lb]\n  (if (symbol? lb)\n    {:name sym}\n    lb))\n\n(defn resolve-var\n  \"Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.\"\n  ([env sym]\n   (resolve-var env sym nil))\n  ([env sym confirm]\n   (resolve-var env sym confirm true))\n  ([env sym confirm default?]\n   (let [locals (:locals env)]\n     (if #?(:clj  (= \"js\" (namespace sym))\n            :cljs (identical? \"js\" (namespace sym)))\n       (let [symn (-> sym name symbol)\n             shadowed-by-local (handle-symbol-local symn (get locals symn))]\n         (cond\n           (some? shadowed-by-local)\n           (do (warning :js-shadowed-by-local env {:name sym})\n               (assoc shadowed-by-local :op :local))\n\n           :else\n           (let [pre (->> (string/split (name sym) #\"\\.\") (map symbol) vec)]\n             (when (and (not (has-extern? pre))\n                        ;; ignore exists? usage\n                        (not (-> sym meta ::no-resolve)))\n               (swap! env/*compiler* update-in\n                 (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))\n             (merge\n               {:name sym\n                :op :js-var\n                :ns   'js\n                :tag  (with-meta (or (js-tag pre) (:tag (meta sym)) 'js) {:prefix pre})}\n               (when-let [ret-tag (js-tag pre :ret-tag)]\n                 {:js-fn-var true\n                  :ret-tag ret-tag})))))\n       (let [s  (str sym)\n             lb (handle-symbol-local sym (get locals sym))\n             current-ns (-> env :ns :name)]\n         (cond\n           (some? lb) (assoc lb :op :local)\n\n           (some? (namespace sym))\n           (let [ns      (namespace sym)\n                 ns      (if #?(:clj  (= \"clojure.core\" ns)\n                                :cljs (identical? \"clojure.core\" ns))\n                           \"cljs.core\"\n                           ns)\n                 full-ns (resolve-ns-alias env ns\n                           (or (and (js-module-exists? ns)\n                                    (gets @env/*compiler* :js-module-index ns :name))\n                             (symbol ns)))]\n             (when (some? confirm)\n               (when (not= current-ns full-ns)\n                 (confirm-ns env full-ns))\n               (confirm env full-ns (symbol (name sym))))\n             (resolve* env sym full-ns current-ns))\n\n           (dotted-symbol? sym)\n           (let [idx    (.indexOf s \".\")\n                 prefix (symbol (subs s 0 idx))\n                 suffix (subs s (inc idx))]\n             ;; check if prefix is some existing def\n             (if-let [resolved (resolve-var env prefix nil false)]\n               (update resolved :name #(symbol (str % \".\" suffix)))\n               (let [idx (.lastIndexOf s \".\")\n                     pre (subs s 0 idx)\n                     suf (subs s (inc idx))]\n                 {:op   :var\n                  :name (symbol pre suf)\n                  :ns   (symbol pre)})))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :uses sym))\n           (let [full-ns (gets @env/*compiler* ::namespaces current-ns :uses sym)]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :renames sym))\n           (let [qualified-symbol (gets @env/*compiler* ::namespaces current-ns :renames sym)\n                 full-ns (symbol (namespace qualified-symbol))\n                 sym     (symbol (name qualified-symbol))]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :imports sym))\n           (recur env (gets @env/*compiler* ::namespaces current-ns :imports sym) confirm default?)\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :defs sym))\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))\n\n           (core-name? env sym)\n           (do\n             (when (some? confirm)\n               (confirm env 'cljs.core sym))\n             (merge (gets @env/*compiler* ::namespaces 'cljs.core :defs sym)\n               {:name (symbol \"cljs.core\" (str sym))\n                :op :var\n                :ns 'cljs.core}))\n\n           (invokeable-ns? s env)\n           (resolve-invokeable-ns s current-ns env)\n\n           :else\n           (when default?\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))))))))\n\n(defn resolve-existing-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists.\"\n  [env sym]\n  (if-not (-> sym meta ::no-resolve)\n    (resolve-var env sym confirm-var-exists)\n    (resolve-var env sym)))\n\n(defn confirm-bindings\n  \"Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars.\"\n  [env names]\n  (doseq [name names]\n    (let [env (assoc env :ns (get-namespace *cljs-ns*))\n          ev (resolve-existing-var env name)]\n      (when (and ev (not (-> ev :dynamic)))\n        (warning :dynamic env {:ev ev :name (:name ev)})))))\n\n(defn resolve-macro-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve a macro.\"\n  [env sym]\n  (let [ns (-> env :ns :name)\n        namespaces (get @env/*compiler* ::namespaces)]\n    (cond\n      (some? (namespace sym))\n      (let [ns (namespace sym)\n            ns (if (= \"clojure.core\" ns) \"cljs.core\" ns)\n            full-ns (resolve-macro-ns-alias env ns)\n            #?@(:cljs [full-ns (if-not (string/ends-with? (str full-ns) \"$macros\")\n                                 (symbol (str full-ns \"$macros\"))\n                                 full-ns)])]\n        #?(:clj (get-in namespaces [full-ns :macros (symbol (name sym))])\n           :cljs (get-in namespaces [full-ns :defs (symbol (name sym))])))\n\n      (some? (get-in namespaces [ns :use-macros sym]))\n      (let [full-ns (get-in namespaces [ns :use-macros sym])]\n        (get-in namespaces [full-ns :macros sym]))\n\n      (some? (get-in namespaces [ns :rename-macros sym]))\n      (let [qualified-symbol (get-in namespaces [ns :rename-macros sym])\n            full-ns (symbol (namespace qualified-symbol))\n            sym     (symbol (name qualified-symbol))]\n        (get-in namespaces [full-ns :macros sym]))\n\n      :else\n      (let [ns (cond\n                 (some? (get-in namespaces [ns :macros sym])) ns\n                 (core-name? env sym) #?(:clj  'cljs.core\n                                         :cljs impl/CLJS_CORE_MACROS_SYM))]\n        (when (some? ns)\n          #?(:clj  (get-in namespaces [ns :macros sym])\n             :cljs (get-in namespaces [ns :defs sym])))))))\n\n(declare analyze analyze-symbol analyze-seq)\n\n;; Note: This is the set of parse multimethod dispatch values,\n;; along with '&, and differs from cljs.core/special-symbol?\n(def specials '#{if def fn* do let* loop* letfn* throw try recur new set!\n                 ns deftype* defrecord* . js* & quote case* var ns*})\n\n(def ^:dynamic *recur-frames* nil)\n(def ^:dynamic *loop-lets* ())\n(def ^:dynamic *allow-redef* false)\n(def ^:dynamic *allow-ns* true)\n\n#?(:clj\n   (defmacro disallowing-recur [& body]\n     `(binding [*recur-frames* (cons nil *recur-frames*)] ~@body)))\n\n#?(:clj\n   (defmacro allowing-redef [& body]\n     `(binding [*allow-redef* true] ~@body)))\n\n#?(:clj\n   (defmacro disallowing-ns* [& body]\n     `(binding [*allow-ns* false] ~@body)))\n\n;; TODO: move this logic out - David\n(defn analyze-keyword\n  [env sym]\n  (register-constant! env sym)\n  {:op :const :val sym :env env :form sym :tag 'cljs.core/Keyword})\n\n(defn get-tag [e]\n  (if-some [tag (-> e :form meta :tag)]\n    tag\n    (if-some [tag (-> e :tag)]\n      tag\n      (-> e :info :tag))))\n\n(defn find-matching-method [f params]\n  ;; if local fn, need to look in :info\n  (let [methods (or (:methods f) (-> f :info :methods))\n        c       (count params)]\n    (some\n      (fn [m]\n        (and (or (== (:fixed-arity m) c)\n                 (:variadic? m))\n             m))\n      methods)))\n\n(defn type?\n  #?(:cljs {:tag boolean})\n  [env t]\n  ;; don't use resolve-existing-var to avoid warnings\n  (when (and (some? t) (symbol? t))\n    (let [var (resolve-var env t)]\n      (if-some [type (:type var)]\n        type\n          (if-some [type (-> var :info :type)]\n            type\n              (if-some [proto (:protocol-symbol var)]\n                proto\n                (get '#{cljs.core/PersistentHashMap cljs.core/List} t)))))))\n\n(declare infer-tag)\n\n(defn unwrap-quote [{:keys [op] :as expr}]\n  (if #?(:clj (= op :quote)\n         :cljs (keyword-identical? op :quote))\n    (:expr expr)\n    expr))\n\n(defn infer-if [env e]\n  (let [{:keys [op form]} (unwrap-quote (:test e))\n        then-tag (infer-tag env (:then e))]\n    (if (and #?(:clj (= op :const)\n                :cljs (keyword-identical? op :const))\n             (not (nil? form))\n             (not (false? form)))\n      then-tag\n      (let [else-tag (infer-tag env (:else e))]\n        (cond\n          (or #?(:clj (= then-tag else-tag)\n                 :cljs (symbol-identical? then-tag else-tag))\n              #?(:clj (= else-tag impl/IGNORE_SYM)\n                 :cljs (symbol-identical? else-tag impl/IGNORE_SYM))) then-tag\n          #?(:clj (= then-tag impl/IGNORE_SYM)\n             :cljs (symbol-identical? then-tag impl/IGNORE_SYM)) else-tag\n          ;; TODO: temporary until we move not-native -> clj - David\n          (and (or (some? (get impl/NOT_NATIVE then-tag)) (type? env then-tag))\n               (or (some? (get impl/NOT_NATIVE else-tag)) (type? env else-tag)))\n          'clj\n          :else\n          (if (and (some? (get impl/BOOLEAN_OR_SEQ then-tag))\n                   (some? (get impl/BOOLEAN_OR_SEQ else-tag)))\n            'seq\n            (let [then-tag (if #?(:clj (set? then-tag)\n                                  :cljs (impl/cljs-set? then-tag))\n                             then-tag #{then-tag})\n                  else-tag (if #?(:clj (set? else-tag)\n                                  :cljs (impl/cljs-set? else-tag))\n                             else-tag #{else-tag})]\n              (into then-tag else-tag))))))))\n\n(defn infer-invoke [env {f :fn :keys [args] :as e}]\n  (let [me (assoc (find-matching-method f args) :op :fn-method)]\n    (if-some [ret-tag (infer-tag env me)]\n      ret-tag\n      (let [{:keys [info]} f]\n        (if-some [ret-tag (if (or (true? (:fn-var info))\n                                  (true? (:js-fn-var info)))\n                            (:ret-tag info)\n                            (when (= 'js (:ns info)) 'js))]\n          ret-tag\n          impl/ANY_SYM)))))\n\n(defn infer-tag\n  \"Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node\"\n  [env e]\n    (if-some [tag (get-tag e)]\n      tag\n      (case (:op e)\n        :recur    impl/IGNORE_SYM\n        :throw    impl/IGNORE_SYM\n        :let      (infer-tag env (:body e))\n        :loop     (infer-tag env (:body e))\n        :do       (infer-tag env (:ret e))\n        :fn-method (infer-tag env (:body e))\n        :def      (infer-tag env (:init e))\n        :invoke   (infer-invoke env e)\n        :if       (infer-if env e)\n        :const    (case (:form e)\n                    true impl/BOOLEAN_SYM\n                    false impl/BOOLEAN_SYM\n                    impl/ANY_SYM)\n        :quote    (infer-tag env (:expr e))\n        (:var :local :js-var :binding)\n                  (if-some [init (:init e)]\n                    (infer-tag env init)\n                    (infer-tag env (:info e)))\n        (:host-field :host-call)\n                  impl/ANY_SYM\n        :js       impl/ANY_SYM\n        nil)))\n\n(defmulti parse (fn [op & rest] op))\n\n(defn var-meta\n  ([var]\n    (var-meta var nil))\n  ([var expr-env]\n   (let [sym (:name var)\n         ks [:ns :doc :file :line :column]\n         m (merge\n             (let [user-meta (:meta var)\n                   uks (keys user-meta)]\n               (zipmap uks\n                 (map #(list 'quote (get user-meta %)) uks)))\n             (assoc (zipmap ks (map #(list 'quote (get var %)) ks))\n               :name `(quote ~(symbol (name (:name var))))\n               :test `(when ~sym (.-cljs$lang$test ~sym))\n               :arglists (let [arglists (:arglists var)\n                               arglists' (if (= 'quote (first arglists))\n                                           (second arglists)\n                                           arglists)]\n                           (list 'quote\n                             (doall (map with-meta arglists'\n                                      (:arglists-meta var)))))))]\n     (if expr-env\n       (analyze expr-env m)\n       m))))\n\n(defn var-ast\n  [env sym]\n  ;; we need to dissoc locals for the `(let [x 1] (def x x))` case, because we\n  ;; want the var's AST and `resolve-var` will check locals first. - António Monteiro\n  (binding [*private-var-access-nowarn* true]\n    (let [env      (dissoc env :locals)\n          var      (resolve-var env sym (confirm-var-exists-throw))\n          expr-env (assoc env :context :expr)]\n      (when-some [var-ns (:ns var)]\n        {:var  (analyze expr-env sym)\n         :sym  (analyze expr-env `(quote ~(symbol (name var-ns) (name (:name var)))))\n         :meta (var-meta var expr-env)}))))\n\n(defmethod parse 'var\n  [op env [_ sym :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to var\")))\n  (when-not (symbol? sym)\n    (throw (error env \"Argument to var must be symbol\")))\n  (merge\n    {:env env\n     :op :the-var\n     :children [:var :sym :meta]\n     :form form}\n    (var-ast env sym)))\n\n(def ^:private predicate->tag\n  '{\n    ;; Base values\n    cljs.core/nil?            clj-nil\n    cljs.core/undefined?      clj-nil\n    cljs.core/false?          boolean\n    cljs.core/true?           boolean\n    cljs.core/zero?           number\n    cljs.core/infinite?       number\n\n    ;; Base types\n    cljs.core/boolean?        boolean\n    cljs.core/string?         string\n    cljs.core/char?           string\n    cljs.core/number?         number\n    cljs.core/integer?        number\n    cljs.core/float?          number\n    cljs.core/double?         number\n    cljs.core/array?          array\n    cljs.core/seq?            seq\n\n    ;; JavaScript types\n    cljs.core/regexp?         js/RegExp\n\n    ;; Types\n    cljs.core/keyword?        cljs.core/Keyword\n    cljs.core/var?            cljs.core/Var\n    cljs.core/symbol?         cljs.core/Symbol\n    cljs.core/volatile?       cljs.core/Volatile\n    cljs.core/delay?          cljs.core/Delay\n    cljs.core/reduced?        cljs.core/Reduced\n\n    ;; Subtypes\n    cljs.core/simple-keyword?    cljs.core/Keyword\n    cljs.core/qualified-keyword? cljs.core/Keyword\n    cljs.core/simple-symbol?     cljs.core/Symbol\n    cljs.core/qualified-symbol?  cljs.core/Symbol\n\n    ;;; Note: For non-marker protocol entries below, we\n    ;;; omit predicates that are based on satisfies? because\n    ;;; we cannot safely apply the fast-path optimization\n    ;;; which is enabled when the protocol type is inferred.\n    ;;; If adding a non-marker entry here, also add a test to\n    ;;; cljs.extend-to-native-test/test-extend-to-protocols.\n\n    ;; Protocols\n    cljs.core/map-entry?      cljs.core/IMapEntry\n    cljs.core/uuid?           cljs.core/IUUID\n    cljs.core/tagged-literal? cljs.core/ITaggedLiteral\n    cljs.core/inst?           cljs.core/Inst\n    cljs.core/sequential?     cljs.core/ISequential\n    cljs.core/list?           cljs.core/IList\n    cljs.core/record?         cljs.core/IRecord\n    cljs.core/chunked-seq?    cljs.core/IChunkedSeq\n\n    ;; Composites\n    cljs.core/seqable?        #{cljs.core/ISeqable array string}\n    cljs.core/ident?          #{cljs.core/Keyword cljs.core/Symbol}\n\n    ;; Composite subtypes\n    cljs.core/simple-ident?    #{cljs.core/Keyword cljs.core/Symbol}\n    cljs.core/qualified-ident? #{cljs.core/Keyword cljs.core/Symbol}\n    })\n\n(defn- simple-predicate-induced-tag\n  \"Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x).\"\n  [env test]\n  (when (and (list? test)\n             (== 2 (count test))\n             (every? symbol? test))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when-let [tag (predicate->tag (:name analyzed-fn))]\n          (let [sym (last test)]\n            (when (and (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(declare specials)\n\n(defn- type-check-induced-tag\n  \"Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x).\"\n  [env test]\n  (when (and (list? test)\n             (== 3 (count test))\n             (every? symbol? test)\n             (not (contains? specials (first test))))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when ('#{cljs.core/instance? cljs.core/implements?} (:name analyzed-fn))\n          (let [analyzed-type (no-warn (analyze (assoc env :context :expr) (second test)))\n                tag (:name analyzed-type)\n                sym (last test)]\n            (when (and (= :var (:op analyzed-type))\n                       (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(defn- truth-induced-tag\n  \"Refine a tag to exclude clj-nil if the test is a local.\"\n  [env test]\n  (when (and (symbol? test)\n             (nil? (namespace test))\n             (get-in env [:locals test]))\n    (let [analyzed-symbol (no-warn (analyze (assoc env :context :expr) test))]\n      (when-let [tag (:tag analyzed-symbol)]\n        (when (and (set? tag)\n                   (contains? tag 'clj-nil))\n          [test (canonicalize-type (disj tag 'clj-nil))])))))\n\n(defn- set-test-induced-tags\n  \"Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type.\"\n  [env test]\n  (let [[local tag] (or (simple-predicate-induced-tag env test)\n                        (type-check-induced-tag env test)\n                        (truth-induced-tag env test))]\n    (cond-> env\n      local (assoc-in [:locals local :tag] tag))))\n\n(defmethod parse 'if\n  [op env [_ test then else :as form] name _]\n  (when (< (count form) 3)\n    (throw (compile-syntax-error env \"Too few arguments to if\" 'if)))\n  (when (> (count form) 4)\n    (throw (compile-syntax-error env \"Too many arguments to if\" 'if)))\n  (let [test-expr (disallowing-recur (analyze (assoc env :context :expr) test))\n        then-expr (allowing-redef (analyze (set-test-induced-tags env test) then))\n        else-expr (allowing-redef (analyze env else))]\n    {:env env :op :if :form form\n     :test test-expr :then then-expr :else else-expr\n     :unchecked *unchecked-if*\n     :children [:test :then :else]}))\n\n(defmethod parse 'case*\n  [op env [_ sym tests thens default :as form] name _]\n  (assert (symbol? sym) \"case* must switch on symbol\")\n  (assert (every? vector? tests) \"case* tests must be grouped in vectors\")\n  (let [expr-env (assoc env :context :expr)\n        v        (disallowing-recur (analyze expr-env sym))\n        tests    (mapv #(mapv (fn [t] (analyze expr-env t)) %) tests)\n        thens    (mapv #(analyze env %) thens)\n        nodes    (mapv (fn [tests then]\n                         {:op :case-node\n                          ;synthetic node, no :form\n                          :env env\n                          :tests (mapv (fn [test]\n                                         {:op :case-test\n                                          :form (:form test)\n                                          :env expr-env\n                                          :test test\n                                          :children [:test]})\n                                       tests)\n                          :then {:op :case-then\n                                 :form (:form then)\n                                 :env env\n                                 :then then\n                                 :children [:then]}\n                          :children [:tests :then]})\n                       tests\n                       thens)\n        default  (analyze env default)]\n    (assert (every? (fn [t]\n                      (or\n                        (-> t :info :const)\n                        (and (= :const (:op t))\n                             ((some-fn number? string? char?) (:form t)))))\n              (apply concat tests))\n      \"case* tests must be numbers, strings, or constants\")\n    {:env env :op :case :form form\n     :test v :nodes nodes :default default\n     :children [:test :nodes :default]}))\n\n(defmethod parse 'throw\n  [op env [_ throw-form :as form] name _]\n  (cond\n    (= 1 (count form))\n    (throw\n      (error env \"Too few arguments to throw, throw expects a single Error instance\"))\n    (< 2 (count form))\n    (throw\n      (error env \"Too many arguments to throw, throw expects a single Error instance\")))\n  (let [throw-expr (disallowing-recur (analyze (assoc env :context :expr) throw-form))]\n    {:env env :op :throw :form form\n     :exception throw-expr\n     :children [:exception]}))\n\n(defmethod parse 'try\n  [op env [_ & body :as form] name _]\n  (let [catchenv (update-in env [:context] #(if (= :expr %) :return %))\n        catch? (every-pred seq? #(= (first %) 'catch))\n        default? (every-pred catch? #(= (second %) :default))\n        finally? (every-pred seq? #(= (first %) 'finally))\n\n        {:keys [body cblocks dblock fblock]}\n        (loop [parser {:state :start :forms body\n                       :body [] :cblocks [] :dblock nil :fblock nil}]\n          (if (seq? (:forms parser))\n            (let [[form & forms*] (:forms parser)\n                  parser* (assoc parser :forms forms*)]\n              (case (:state parser)\n                :start (cond\n                         (catch? form) (recur (assoc parser :state :catches))\n                         (finally? form) (recur (assoc parser :state :finally))\n                         :else (recur (update-in parser* [:body] conj form)))\n                :catches (cond\n                           (default? form) (recur (assoc parser* :dblock form :state :finally))\n                           (catch? form) (recur (update-in parser* [:cblocks] conj form))\n                           (finally? form) (recur (assoc parser :state :finally))\n                           :else (throw (error env \"Invalid try form\")))\n                :finally (recur (assoc parser* :fblock form :state :done))\n                :done (throw (error env \"Unexpected form after finally\"))))\n            parser))\n\n        finally (when (seq fblock)\n                  (-> (disallowing-recur (analyze (assoc env :context :statement) `(do ~@(rest fblock))))\n                      (assoc :body? true)))\n        e (when (or (seq cblocks) dblock) (gensym \"e\"))\n        default (if-let [[_ _ name & cb] dblock]\n                  `(cljs.core/let [~name ~e] ~@cb)\n                  `(throw ~e))\n        cblock (if (seq cblocks)\n                 `(cljs.core/cond\n                   ~@(mapcat\n                      (fn [[_ type name & cb]]\n                        (when name (assert (not (namespace name)) \"Can't qualify symbol in catch\"))\n                        `[(cljs.core/instance? ~type ~e)\n                          (cljs.core/let [~name ~e] ~@cb)])\n                      cblocks)\n                   :else ~default)\n                 default)\n        locals (:locals catchenv)\n        locals (if e\n                 (assoc locals e\n                        {:name e\n                         :line (get-line e env)\n                         :column (get-col e env)})\n                 locals)\n        catch (when cblock\n                (disallowing-recur (analyze (assoc catchenv :locals locals) cblock)))\n        try (disallowing-recur (analyze (if (or e finally) catchenv env) `(do ~@body)))]\n\n    {:env env :op :try :form form\n     :body (assoc try :body? true)\n     :finally finally\n     :name e\n     :catch catch\n     :children (vec\n                 (concat [:body]\n                         (when catch\n                           [:catch])\n                         (when finally\n                           [:finally])))}))\n\n(defn valid-proto [x]\n  (when (symbol? x) x))\n\n(defn elide-env [env ast opts]\n  (dissoc ast :env))\n\n(defn replace-env-pass [new-env]\n  (fn [env ast opts]\n    (assoc ast :env new-env)))\n\n(defn ast-children [ast]\n  (mapcat (fn [c]\n            (let [g (get ast c)]\n              (cond\n                (vector? g) g\n                g [g])))\n          (:children ast)))\n\n(defn constant-value?\n  [{:keys [op] :as ast}]\n  (or (#{:quote :const} op)\n      (and (#{:map :set :vector} op)\n           (every? constant-value? (ast-children ast)))))\n\n(defn const-expr->constant-value [{:keys [op] :as e}]\n  (case op\n    :quote  (const-expr->constant-value (:expr e))\n    :const  (:val e)\n    :map    (zipmap (map const-expr->constant-value (:keys e))\n                    (map const-expr->constant-value (:vals e)))\n    :set    (into #{} (map const-expr->constant-value (:items e)))\n    :vector (into [] (map const-expr->constant-value (:items e)))))\n\n(defn- earmuffed? [sym]\n  (let [s (name sym)]\n    (and (> (count s) 2)\n         (string/starts-with? s \"*\")\n         (string/ends-with? s \"*\"))))\n\n(defn- core-ns? [ns-sym]\n  (let [s (name ns-sym)]\n    (and (not= 'cljs.user ns-sym)\n         (or (string/starts-with? s \"cljs.\")\n             (string/starts-with? s \"clojure.\")))))\n\n(defmethod parse 'def\n  [op env form _ _]\n  (when (> (count form) 4)\n    (throw (error env \"Too many arguments to def\")))\n  (let [pfn (fn\n              ([_ sym] {:sym sym})\n              ([_ sym init] {:sym sym :init init})\n              ([_ sym doc init] {:sym sym :doc doc :init init}))\n        args (apply pfn form)\n        sym (:sym args)\n        const? (-> sym meta :const)\n        sym-meta (meta sym)\n        tag (-> sym meta :tag)\n        protocol (-> sym meta :protocol valid-proto)\n        dynamic (-> sym meta :dynamic)\n        ns-name (-> env :ns :name)\n        locals (:locals env)\n        clash-ns (symbol (str ns-name \".\" sym))\n        sym-ns   (namespace sym)\n        sym      (cond\n                   (and sym-ns (not #?(:clj  (= (symbol sym-ns) ns-name)\n                                       :cljs (symbol-identical? (symbol sym-ns) ns-name))))\n                   (throw (error env (str \"Can't def ns-qualified name in namespace \" sym-ns)))\n\n                   (some? sym-ns)\n                   (symbol (name sym))\n\n                   :else sym)]\n    (when (some? (get-in @env/*compiler* [::namespaces clash-ns]))\n      (warning :ns-var-clash env\n        {:ns (symbol (str ns-name \".\" sym))\n         :var (symbol (str ns-name) (str sym))}))\n    (when (some? (:const (resolve-var (dissoc env :locals) sym)))\n      (throw (error env \"Can't redefine a constant\")))\n    (when-some [doc (:doc args)]\n      (when-not (string? doc)\n        (throw (error env \"Too many arguments to def\"))))\n    (when (and (not dynamic)\n               (earmuffed? sym)\n               (not (core-ns? ns-name)))\n      (warning :non-dynamic-earmuffed-var env\n        {:var (str sym)}))\n    (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n      (when (and (not *allow-redef*)\n                 (not (:declared v))\n                 (not (:declared sym-meta))\n                 *file-defs*\n                 (get @*file-defs* sym))\n        (warning :redef-in-file env {:sym sym :line (:line v)}))\n      (when (and (:declared v)\n                 (:arglists v)\n                 (not= (:arglists v) (:arglists sym-meta)))\n        (warning :declared-arglists-mismatch env {:ns-name  ns-name :sym sym\n                                                  :declared (second (:arglists v))\n                                                  :defined  (second (:arglists sym-meta))})))\n    (let [env (if (or (and (not= ns-name 'cljs.core)\n                           (core-name? env sym))\n                      (some? (get-in @env/*compiler* [::namespaces ns-name :uses sym])))\n                (let [ev (resolve-existing-var (dissoc env :locals)\n                           ;; ::no-resolve true is to suppress \"can't take value\n                           ;; of macro warning\" when sym resolves to a macro\n                           (with-meta sym {::no-resolve true}))\n                      conj-to-set (fnil conj #{})]\n                  (when (public-name? (:ns ev) sym)\n                    (warning :redef env {:sym sym :ns (:ns ev) :ns-name ns-name}))\n                  (swap! env/*compiler* update-in [::namespaces ns-name :excludes]\n                     conj-to-set sym)\n                  (update-in env [:ns :excludes] conj-to-set sym))\n                env)\n          var-name (:name (resolve-var (dissoc env :locals) sym))\n          init-expr (when (contains? args :init)\n                      (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n                        (merge\n                          {:name var-name}\n                          sym-meta\n                          (when (true? dynamic) {:dynamic true})\n                          (source-info var-name env)))\n                      (disallowing-recur\n                        (disallowing-ns*\n                          (analyze (assoc env :context :expr) (:init args) sym))))\n          fn-var? (and (some? init-expr) (= (:op init-expr) :fn))\n          tag (cond\n                fn-var? (or (:ret-tag init-expr) tag (:inferred-ret-tag init-expr))\n                tag tag\n                dynamic impl/ANY_SYM\n                :else (:tag init-expr))\n          export-as (when-let [export-val (-> sym meta :export)]\n                      (if (= true export-val) var-name export-val))\n          doc (or (:doc args) (-> sym meta :doc))]\n      (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n        (when (and (not (-> sym meta :declared))\n                   (and (true? (:fn-var v)) (not fn-var?)))\n          (warning :fn-var env {:ns-name ns-name :sym sym})))\n\n      ;; declare must not replace any analyzer data of an already def'd sym\n      (when (or (nil? (get-in @env/*compiler* [::namespaces ns-name :defs sym]))\n                (not (:declared sym-meta)))\n        (when *file-defs*\n          (swap! *file-defs* conj sym))\n\n        (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n          (merge\n            {:name var-name}\n            ;; remove actual test metadata, as it includes non-valid EDN and\n            ;; cannot be present in analysis cached to disk - David\n            (cond-> sym-meta\n              (:test sym-meta) (assoc :test true))\n            {:meta (-> sym-meta\n                       (dissoc :test)\n                       (update-in [:file]\n                         (fn [f]\n                           (if (= (-> env :ns :name) 'cljs.core)\n                             \"cljs/core.cljs\"\n                             f))))}\n            (when doc {:doc doc})\n            (when const?\n              (let [const-expr\n                    (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n                      (analyze env (:init args)))]\n                (when (constant-value? const-expr)\n                  {:const-expr const-expr})))\n            (when (true? dynamic) {:dynamic true})\n            (source-info var-name env)\n            ;; the protocol a protocol fn belongs to\n            (when protocol\n              {:protocol protocol})\n            ;; symbol for reified protocol\n            (when-let [protocol-symbol (-> sym meta :protocol-symbol)]\n              {:protocol-symbol protocol-symbol\n               :info (-> protocol-symbol meta :protocol-info)\n               :impls #{}})\n            (when fn-var?\n              (let [params (map #(vec (map :name (:params %))) (:methods init-expr))]\n                (merge\n                  {:fn-var (not (:macro sym-meta))\n                   ;; protocol implementation context\n                   :protocol-impl (:protocol-impl init-expr)\n                   ;; inline protocol implementation context\n                   :protocol-inline (:protocol-inline init-expr)}\n                  (if-some [top-fn-meta (:top-fn sym-meta)]\n                    top-fn-meta\n                    {:variadic? (:variadic? init-expr)\n                     :max-fixed-arity (:max-fixed-arity init-expr)\n                     :method-params params\n                     :arglists (:arglists sym-meta)\n                     :arglists-meta (doall (map meta (:arglists sym-meta)))}))))\n            (when (and (:declared sym-meta)\n                       (:arglists sym-meta))\n              {:declared true\n               :fn-var true\n               :method-params (second (:arglists sym-meta))})\n            (if (and fn-var? (some? tag))\n              {:ret-tag tag}\n              (when tag {:tag tag})))))\n      (merge\n        {:env env\n         :op :def\n         :form form\n         :ns ns-name\n         :name var-name\n         :var (assoc\n                (analyze\n                  (-> env (dissoc :locals)\n                    (assoc :context :expr)\n                    (assoc :def-var true))\n                  sym)\n                :op :var)\n         :doc doc\n         :jsdoc (:jsdoc sym-meta)}\n        (when-let [goog-type (:goog-define sym-meta)]\n          {:goog-define goog-type})\n        (when (true? (:def-emits-var env))\n          {:var-ast (var-ast env sym)})\n        (when-some [test (:test sym-meta)]\n          {:test (analyze (assoc env :context :expr) test)})\n        (when (some? tag)\n          (if fn-var?\n            {:ret-tag tag}\n            {:tag tag}))\n        (when (true? dynamic) {:dynamic true})\n        (when (some? export-as) {:export export-as})\n        (if (some? init-expr)\n          {:init init-expr\n           :children [:var :init]}\n          {:children [:var]})))))\n\n(defn analyze-fn-method-param [env]\n  (fn [[locals params] [arg-id name]]\n    (when (namespace name)\n      (throw (error env (str \"Can't use qualified name as parameter: \" name))))\n    (let [line   (get-line name env)\n          column (get-col name env)\n          nmeta  (meta name)\n          tag    (:tag nmeta)\n          shadow (when (some? locals)\n                   (handle-symbol-local name (locals name)))\n          env    (merge (select-keys env [:context])\n                   {:line line :column column})\n          param  {:op :binding\n                  :name name\n                  :line line\n                  :column column\n                  :tag tag\n                  :shadow shadow\n                  :local :arg\n                  :arg-id arg-id\n                  ;; Give the fn params the same shape\n                  ;; as a :var, so it gets routed\n                  ;; correctly in the compiler\n                  :env env\n                  :info {:name name :shadow shadow}\n                  :binding-form? true}]\n     [(assoc locals name param) (conj params param)])))\n\n(defn analyze-fn-method-body [env form recur-frames]\n  (binding [*recur-frames* recur-frames]\n    (analyze env form)))\n\n(defn- analyze-fn-method [env locals form type analyze-body?]\n  (let [param-names     (first form)\n        variadic        (boolean (some '#{&} param-names))\n        param-names     (vec (remove '#{&} param-names))\n        body            (next form)\n        step            (analyze-fn-method-param env)\n        step-init       [locals []]\n        [locals params] (reduce step step-init (map-indexed vector param-names))\n        params'         (if (true? variadic)\n                          (butlast params)\n                          params)\n        fixed-arity     (count params')\n        recur-frame     {:protocol-impl (:protocol-impl env)\n                         :params        params\n                         :flag          (atom nil)\n                         :tags          (atom [])}\n        recur-frames    (cons recur-frame *recur-frames*)\n        body-env        (assoc env :context :return :locals locals)\n        body-form       `(do ~@body)\n        expr            (when analyze-body?\n                          (analyze-fn-method-body body-env body-form recur-frames))\n        recurs          @(:flag recur-frame)]\n    (merge\n      {:env env\n       :op :fn-method\n       :variadic? variadic\n       :params params\n       :fixed-arity fixed-arity\n       :type type\n       :form form\n       :recurs recurs}\n      (if (some? expr)\n        {:body (assoc expr :body? true)\n         :children [:params :body]}\n        {:children [:params]}))))\n\n(declare analyze-wrap-meta)\n\n(defn fn-name-var [env locals name]\n  (when (some? name)\n    (let [ns       (-> env :ns :name)\n          shadow   (handle-symbol-local name (get locals name))\n          shadow   (when (nil? shadow)\n                     (get-in env [:js-globals name]))\n          fn-scope (:fn-scope env)\n          name-var {:name name\n                    :op :binding\n                    :local :fn\n                    :info {:fn-self-name true\n                           :fn-scope fn-scope\n                           :ns ns\n                           :shadow shadow}}\n          tag      (-> name meta :tag)\n          ret-tag  (when (some? tag)\n                     {:ret-tag tag})]\n      (merge name-var ret-tag))))\n\n(defn analyze-fn-methods-pass2* [menv locals type meths]\n  (mapv #(analyze-fn-method menv locals % type true) meths))\n\n(defn analyze-fn-methods-pass2 [menv locals type meths]\n  (analyze-fn-methods-pass2* menv locals type meths))\n\n(defmethod parse 'fn*\n  [op env [_ & args :as form] name _]\n  (let [named-fn?    (symbol? (first args))\n        [name meths] (if named-fn?\n                         [(first args) (next args)]\n                         [name (seq args)])\n        ;; turn (fn [] ...) into (fn ([]...))\n        meths        (if (vector? (first meths))\n                       (list meths)\n                       meths)\n        locals       (:locals env)\n        name-var     (fn-name-var env locals name)\n        env          (if (some? name)\n                       (update-in env [:fn-scope] conj name-var)\n                       env)\n        locals       (if (and (some? locals)\n                              named-fn?)\n                       (assoc locals name name-var)\n                       locals)\n        form-meta    (meta form)\n        type         (::type form-meta)\n        proto-impl   (::protocol-impl form-meta)\n        proto-inline (::protocol-inline form-meta)\n        menv         (-> env\n                         (cond->\n                           (> (count meths) 1)\n                           (assoc :context :expr))\n                         ;; clear loop flag since method bodies won't be in a loop at first\n                         ;; only tracking this to keep track of locals we need to capture\n                         (dissoc :in-loop)\n                         (merge {:protocol-impl proto-impl\n                                 :protocol-inline proto-inline}))\n        methods      (map #(disallowing-ns* (analyze-fn-method menv locals % type (nil? name))) meths)\n        mfa          (transduce (map :fixed-arity) max 0 methods)\n        variadic     (boolean (some :variadic? methods))\n        locals       (if named-fn?\n                       (update-in locals [name] assoc\n                         ;; TODO: can we simplify? - David\n                         :fn-var true\n                         :variadic? variadic\n                         :max-fixed-arity mfa\n                         :method-params (map :params methods))\n                       locals)\n        methods      (if (some? name)\n                       ;; a second pass with knowledge of our function-ness/arity\n                       ;; lets us optimize self calls\n                       (disallowing-ns* (analyze-fn-methods-pass2 menv locals type meths))\n                       (vec methods))\n        form         (vary-meta form dissoc ::protocol-impl ::protocol-inline ::type)\n        js-doc       (when (true? variadic)\n                       \"@param {...*} var_args\")\n        children     (if (some? name-var)\n                       [:local :methods]\n                       [:methods])\n        inferred-ret-tag (let [inferred-tags (map (partial infer-tag env) (map :body methods))]\n                           (when (apply = inferred-tags)\n                             (first inferred-tags)))\n        ast   (merge {:op :fn\n                      :env env\n                      :form form\n                      :name name-var\n                      :methods methods\n                      :variadic? variadic\n                      :tag 'function\n                      :inferred-ret-tag inferred-ret-tag\n                      :recur-frames *recur-frames*\n                      :in-loop (:in-loop env)\n                      :loop-lets *loop-lets*\n                      :jsdoc [js-doc]\n                      :max-fixed-arity mfa\n                      :protocol-impl proto-impl\n                      :protocol-inline proto-inline\n                      :children children}\n                     (when (some? name-var)\n                       {:local name-var}))]\n    (let [variadic-methods (into []\n                             (comp (filter :variadic?) (take 1))\n                             methods)\n          variadic-params  (if (pos? (count variadic-methods))\n                             (count (:params (nth variadic-methods 0)))\n                             0)\n          param-counts     (into [] (map (comp count :params)) methods)]\n      (when (< 1 (count variadic-methods))\n        (warning :multiple-variadic-overloads env {:name name-var}))\n      (when (not (or (zero? variadic-params) (== variadic-params (+ 1 mfa))))\n        (warning :variadic-max-arity env {:name name-var}))\n      (when (not= (distinct param-counts) param-counts)\n        (warning :overload-arity env {:name name-var})))\n    (analyze-wrap-meta ast)))\n\n(defmethod parse 'letfn*\n  [op env [_ bindings & exprs :as form] name _]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error env \"bindings must be vector of even number of elements\")))\n  (let [n->fexpr (into {} (map (juxt first second) (partition 2 bindings)))\n        names    (keys n->fexpr)\n        context  (:context env)\n        ;; first pass to collect information for recursive references\n        [meth-env bes]\n        (reduce (fn [[{:keys [locals] :as env} bes] n]\n                  (let [ret-tag (-> n meta :tag)\n                        fexpr (no-warn (analyze env (n->fexpr n)))\n                        be (cond->\n                             {:name n\n                              :op :binding\n                              :fn-var true\n                              :line (get-line n env)\n                              :column (get-col n env)\n                              :local :letfn\n                              :shadow (handle-symbol-local n (locals n))\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr))}\n                             ret-tag (assoc :ret-tag ret-tag))]\n                    [(assoc-in env [:locals n] be)\n                     (conj bes be)]))\n                [env []] names)\n        meth-env (assoc meth-env :context :expr)\n        ;; the real pass\n        [meth-env bes]\n        (reduce (fn [[meth-env bes] {:keys [name shadow] :as be}]\n                  (let [env (assoc-in meth-env [:locals name] shadow)\n                        fexpr (analyze env (n->fexpr name))\n                        be' (assoc be\n                              :init fexpr\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr)))]\n                    [(assoc-in env [:locals name] be')\n                     (conj bes be')]))\n          [meth-env []] bes)\n        expr (-> (analyze (assoc meth-env :context (if (= :expr context) :return context)) `(do ~@exprs))\n                 (assoc :body? true))]\n    {:env env :op :letfn :bindings bes :body expr :form form\n     :children [:bindings :body]}))\n\n(defn analyze-do-statements* [env exprs]\n  (mapv #(analyze (assoc env :context :statement) %) (butlast exprs)))\n\n(defn analyze-do-statements [env exprs]\n  (disallowing-recur (analyze-do-statements* env exprs)))\n\n(defmethod parse 'do\n  [op env [_ & exprs :as form] _ _]\n  (let [statements (analyze-do-statements env exprs)]\n    (if (<= (count exprs) 1)\n      (let [ret      (analyze env (first exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements :ret ret\n         :children children})\n      (let [ret-env  (if (= :statement (:context env))\n                       (assoc env :context :statement)\n                       (assoc env :context :return))\n            ret      (analyze ret-env (last exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements\n         :ret ret\n         :children children}))))\n\n(defn analyze-let-binding-init [env init loop-lets]\n  (binding [*loop-lets* loop-lets]\n    (analyze env init)))\n\n(defn get-let-tag [name init-expr]\n  (if-some [tag (-> name meta :tag)]\n      tag\n        (if-some [tag (-> init-expr :tag)]\n          tag\n          (-> init-expr :info :tag))))\n\n(defn analyze-let-bindings* [encl-env bindings op]\n  (loop [bes []\n         env (assoc encl-env :context :expr)\n         bindings (seq (partition 2 bindings))]\n\n      (if-some [[name init] (first bindings)]\n        (let []\n          (when (or (some? (namespace name))\n                  #?(:clj  (.contains (str name) \".\")\n                     :cljs ^boolean (goog.string/contains (str name) \".\")))\n            (throw (error encl-env (str \"Invalid local name: \" name))))\n          (let [init-expr (analyze-let-binding-init env init (cons {:params bes} *loop-lets*))\n                line (get-line name env)\n                col (get-col name env)\n                shadow (handle-symbol-local name (get-in env [:locals name]))\n                be {:name name\n                    :line line\n                    :column col\n                    :init init-expr\n                    :tag (get-let-tag name init-expr)\n                    :local op\n                    :shadow shadow\n                    ;; Give let* bindings same shape as var so\n                    ;; they get routed correctly in the compiler\n                    :op :binding\n                    :env {:line line :column col}\n                    :info {:name name\n                           :shadow shadow}\n                    :binding-form? true}\n                be (if (= :fn (:op init-expr))\n                     ;; TODO: can we simplify - David\n                     (merge be\n                       {:fn-var true\n                        ;; copy over the :fn-method information we need for invoke type inference\n                        :methods (into [] (map #(select-keys % [:tag :fixed-arity :variadic?]) (:methods init-expr)))\n                        :variadic? (:variadic? init-expr)\n                        :max-fixed-arity (:max-fixed-arity init-expr)\n                        :method-params (map :params (:methods init-expr))})\n                     be)]\n            (recur (conj bes be)\n              (assoc-in env [:locals name] be)\n              (next bindings))))\n        [bes env])))\n\n(defn analyze-let-bindings [encl-env bindings op]\n  (disallowing-recur (analyze-let-bindings* encl-env bindings op)))\n\n(defn analyze-let-body* [env context exprs]\n  (analyze (assoc env :context (if (= :expr context) :return context)) `(do ~@exprs)))\n\n(defn analyze-let-body [env context exprs recur-frames loop-lets]\n  (binding [*recur-frames* recur-frames\n            *loop-lets* loop-lets]\n    (analyze-let-body* env context exprs)))\n\n(defn analyze-let\n  [encl-env [_ bindings & exprs :as form] is-loop widened-tags]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error encl-env \"bindings must be vector of even number of elements\")))\n  (let [context      (:context encl-env)\n        op           (if (true? is-loop) :loop :let)\n        bindings     (if widened-tags\n                       (vec (mapcat\n                              (fn [[name init] widened-tag]\n                                [(vary-meta name assoc :tag widened-tag) init])\n                              (partition 2 bindings)\n                              widened-tags))\n                       bindings)\n        [bes env]    (-> encl-env\n                         (cond->\n                           (true? is-loop) (assoc :in-loop true))\n                         (analyze-let-bindings bindings op))\n        recur-frame  (when (true? is-loop)\n                       {:params bes\n                        :flag (atom nil)\n                        :tags (atom (mapv :tag bes))})\n        recur-frames (if recur-frame\n                       (cons recur-frame *recur-frames*)\n                       *recur-frames*)\n        loop-lets    (cond\n                       (true? is-loop) *loop-lets*\n                       (some? *loop-lets*) (cons {:params bes} *loop-lets*))\n        ;; Accumulate warnings for deferred replay iff there's a possibility of re-analyzing\n        warn-acc     (when (and is-loop\n                                (not widened-tags))\n                       (atom []))\n        expr         (if warn-acc\n                       (with-warning-handlers [(accumulating-warning-handler warn-acc)]\n                         (analyze-let-body env context exprs recur-frames loop-lets))\n                       (analyze-let-body env context exprs recur-frames loop-lets))\n        children     [:bindings :body]\n        nil->any     (fnil identity 'any)]\n    (if (and is-loop\n             (not widened-tags)\n             (not= (mapv nil->any @(:tags recur-frame))\n                   (mapv (comp nil->any :tag) bes)))\n      (recur encl-env form is-loop @(:tags recur-frame))\n      (do\n        (when warn-acc\n          (replay-accumulated-warnings warn-acc))\n        {:op       op\n         :env      encl-env\n         :bindings bes\n         :body     (assoc expr :body? true)\n         :form     form\n         :children children}))))\n\n(defmethod parse 'let*\n  [op encl-env form _ _]\n  (analyze-let encl-env form false nil))\n\n(defmethod parse 'loop*\n  [op encl-env form _ _]\n  (analyze-let encl-env form true nil))\n\n(defmethod parse 'recur\n  [op env [_ & exprs :as form] _ _]\n  (let [context (:context env)\n        frame (first *recur-frames*)\n        ;; Add dummy implicit target object if recuring to proto impl method head\n        add-implicit-target-object? (and (:protocol-impl frame)\n                                         (= (count exprs) (dec (count (:params frame)))))\n        exprs (cond->> exprs add-implicit-target-object? (cons nil))\n        exprs (disallowing-recur (vec (map #(analyze (assoc env :context :expr) %) exprs)))]\n    (when-not frame\n      (throw (error env \"Can't recur here\")))\n    (when-not (= (count exprs) (count (:params frame)))\n      (throw (error env (str \"recur argument count mismatch, expected: \"\n                          (count (:params frame)) \" args, got: \" (count exprs)))))\n    (when (and (:protocol-impl frame)\n               (not add-implicit-target-object?))\n      (warning :protocol-impl-recur-with-target env {:form (:form (first exprs))}))\n    (reset! (:flag frame) true)\n    (swap! (:tags frame) (fn [tags]\n                           (mapv (fn [tag expr]\n                                   ;; Widen by adding the type of the recur expression, except when recurring with a\n                                   ;; loop local: Since its final widened type is unknown, conservatively assume 'any.\n                                   (if (= :loop (:local expr))\n                                     'any\n                                     (add-types tag (:tag expr))))\n                             tags exprs)))\n    (assoc {:env env :op :recur :form form}\n      :frame frame\n      :exprs exprs\n      :children [:exprs])))\n\n(defn analyze-const\n  [env form]\n  (let [;; register constants\n        {:keys [tag]} (analyze (assoc env :quoted? true) form)]\n    {:op       :const\n     :env      env\n     :literal? true\n     :val      form\n     :tag      tag\n     :form     form}))\n\n(defmethod parse 'quote\n  [_ env [_ x :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to quote\")))\n  (let [expr (analyze-const env x)]\n    {:op :quote\n     :expr expr\n     :env env\n     :form form\n     :tag (:tag expr)\n     :children [:expr]}))\n\n(defmethod parse 'new\n  [_ env [_ ctor & args :as form] _ _]\n  (disallowing-recur\n   (let [enve (assoc env :context :expr)\n         ctorexpr (analyze enve ctor)\n         ctor-var (when (#{:var :local :js-var} (:op ctorexpr))\n                    (resolve-existing-var env ctor))\n         record-args\n         (when (and (:record ctor-var) (not (-> ctor meta :internal-ctor)))\n           (repeat 3 (analyze enve nil)))\n         argexprs (into (vec (map #(analyze enve %) args)) record-args)\n         known-num-fields (:num-fields ctor-var)\n         argc (count args)]\n     (when (and (not (-> ctor meta :internal-ctor))\n                (some? known-num-fields) (not= known-num-fields argc))\n       (warning :fn-arity env {:argc argc :ctor ctor}))\n     {:env env :op :new :form form :class ctorexpr :args argexprs\n      :children [:class :args]\n      :tag (let [name (-> ctorexpr :info :name)]\n             (or ('{js/Object object\n                    js/String string\n                    js/Array  array\n                    js/Number number\n                    js/Function function\n                    js/Boolean boolean} name)\n                 name))})))\n\n(defmethod parse 'set!\n  [_ env [_ target val alt :as form] _ _]\n  (let [[target val] (if alt\n                       ;; (set! o -prop val)\n                       [`(. ~target ~val) alt]\n                       [target val])]\n    (disallowing-recur\n      (binding [*private-var-access-nowarn* true]\n        (let [enve  (assoc env :context :expr)\n              texpr (cond\n                      (symbol? target)\n                      (do\n                        (cond\n                          (and (= target '*unchecked-if*)   ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-if* val)\n\n                          (and (= target '*unchecked-arrays*) ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-arrays* val)\n\n                          (and (= target '*warn-on-infer*)\n                               (or (true? val) (false? val)))\n                          (set! *cljs-warnings* (assoc *cljs-warnings* :infer-warning val)))\n                        (when (some? (:const (resolve-var (dissoc env :locals) target)))\n                          (throw (error env \"Can't set! a constant\")))\n                        (let [local (handle-symbol-local target (-> env :locals target))]\n                          (when-not (or (nil? local)\n                                        (and (:field local)\n                                             (or (:mutable local)\n                                                 (:unsynchronized-mutable local)\n                                                 (:volatile-mutable local))))\n                            (throw (error env \"Can't set! local var or non-mutable field\"))))\n                        (analyze-symbol enve target))\n\n                      :else\n                      (when (seq? target)\n                        (let [texpr (if (-> target meta :extend-type)\n                                      ;; we're setting a prototype via extend-type macro\n                                      ;; nothing to warn\n                                      (binding [*cljs-warnings*\n                                                (assoc *cljs-warnings* :infer-warning false)]\n                                        (analyze-seq enve target nil))\n                                      (analyze-seq enve target nil))]\n                          (when (:field texpr)\n                            texpr))))\n              vexpr (analyze enve val)]\n          ;; as top level fns are decomposed for Closure cross-module code motion, we need to\n          ;; restore their :methods information\n          (when (seq? target)\n            (let [sym  (some-> target second)\n                  meta (meta sym)]\n              (when-let [info (and (= :fn (:op vexpr)) (:top-fn meta))]\n                (swap! env/*compiler* update-in\n                  [::namespaces (-> env :ns :name) :defs sym :methods]\n                  (fnil conj [])\n                  ;; just use original fn meta, as the fn method is already desugared\n                  ;; only get tag from analysis\n                  (merge\n                    (select-keys info [:fixed-arity :variadic?])\n                    (select-keys (-> vexpr :methods first) [:tag]))))))\n          (when-not texpr\n            (throw (error env \"set! target must be a field or a symbol naming a var\")))\n          (cond\n            (and (not (:def-emits-var env))                 ;; non-REPL context\n                 (some? ('#{*unchecked-if* *unchecked-arrays* *warn-on-infer*} target)))\n            {:env env :op :no-op}\n\n            :else\n            {:env env :op :set! :form form :target texpr :val vexpr\n             :children [:target :val]}))))))\n\n#?(:clj (declare analyze-file))\n\n#?(:clj\n   (defn locate-src\n     \"Given a namespace return the corresponding ClojureScript (.cljs or .cljc)\n     resource on the classpath or file from the root of the build.\"\n     [ns]\n     (or (util/ns->source ns)\n       ;; Find sources available in inputs given to cljs.closure/build - Juho Teperi\n       (some (fn [source]\n               (if (= ns (:ns source))\n                 (:source-file source)))\n             (:sources @env/*compiler*))\n       ;; Find sources in directory given to cljs.compiler/compile-root - Juho Teperi\n       (let [rootp (when-let [root (:root @env/*compiler*)]\n                     (.getPath ^File root))\n             cljsf (io/file rootp (ns->relpath ns :cljs))\n             cljcf (io/file rootp (ns->relpath ns :cljc))]\n         (if (and (.exists cljsf) (.isFile cljsf))\n           cljsf\n           (if (and (.exists cljcf) (.isFile cljcf))\n             cljcf))))))\n\n(defn foreign-dep?\n  #?(:cljs {:tag boolean})\n  [dep]\n  (let [js-index (:js-dependency-index @env/*compiler*)]\n    (if-some [[_ {:keys [foreign]}] (find js-index (name (-> dep lib&sublib first)))]\n      foreign\n      false)))\n\n(defn analyze-deps\n  \"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.\"\n  ([lib deps env]\n   (analyze-deps lib deps env\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([lib deps env opts]\n   (let [compiler @env/*compiler*]\n     (binding [*cljs-dep-set* (vary-meta (conj *cljs-dep-set* lib) update-in [:dep-path] conj lib)]\n       (assert (every? #(not (contains? *cljs-dep-set* %)) deps)\n         (str \"Circular dependency detected, \"\n           (apply str\n             (interpose \" -> \"\n               (conj (-> *cljs-dep-set* meta :dep-path)\n                 (some *cljs-dep-set* deps))))))\n       (doseq [dep deps]\n         (when-not (or (some? (get-in compiler [::namespaces dep :defs]))\n                       (node-module-dep? dep)\n                       (js-module-exists? (name dep))\n                       #?(:clj (deps/find-classpath-lib dep)))\n           (let [idx (:js-dependency-index compiler)\n                 dep (-> dep lib&sublib first)]\n             (if (contains? idx (name dep))\n               (let [dep-name (name dep)]\n                 (when (string/starts-with? dep-name \"goog.\")\n                   #?(:clj (let [js-lib (get idx dep-name)\n                                 ns (externs/analyze-goog-file (:file js-lib) (symbol dep-name))]\n                             (swap! env/*compiler* update-in [::namespaces dep] merge ns)))))\n               #?(:clj  (if-some [src (locate-src dep)]\n                          (analyze-file src opts)\n                          (throw\n                            (error env\n                              (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))\n                  :cljs (throw\n                          (error env\n                            (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))))))))))\n\n(defn missing-use? [lib sym cenv]\n  (let [js-lib (get-in cenv [:js-dependency-index (name lib)])]\n    (and (= (get-in cenv [::namespaces lib :defs sym] ::not-found) ::not-found)\n         (not (= (get js-lib :group) :goog))\n         (not (get js-lib :closure-lib))\n         (not (node-module-dep? lib))\n         (not (dep-has-global-exports? lib)))))\n\n(defn missing-rename? [sym cenv]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))]\n    (missing-use? lib sym cenv)))\n\n(defn missing-use-macro? [lib sym]\n  ;; guard against string requires\n  (when (symbol? lib)\n    (let [the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n      (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym))))))\n\n(defn missing-rename-macro? [sym]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))\n        the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n    (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym)))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-uses\n  [uses env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use? lib sym cenv)) uses))))\n\n;; returns (s/map-of symbol? qualified-symbol?)\n(defn missing-renames [renames env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[_ qualified-sym]] (missing-rename? qualified-sym cenv)) renames))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use-macro? lib sym)) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (not (missing-use-macro? lib sym))) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-rename-macros [rename-macros env]\n  (into {} (filter (fn [[_ qualified-sym]] (not (missing-rename-macro? qualified-sym))) rename-macros)))\n\n(defn check-uses [uses env]\n  (let [cenv @env/*compiler*]\n    (doseq [[sym lib] uses]\n      (when (missing-use? lib sym cenv)\n        (throw\n          (error env\n            (error-message :undeclared-ns-form {:type \"var\" :lib lib :sym sym})))))))\n\n(defn check-use-macros\n  ([use-macros env]\n    (check-use-macros use-macros nil env))\n  ([use-macros missing-uses env]\n   (let [cenv @env/*compiler*]\n     (doseq [[sym lib] use-macros]\n       (when (missing-use-macro? lib sym)\n         (throw\n           (error env\n             (error-message :undeclared-ns-form {:type \"macro\" :lib lib :sym sym})))))\n     (check-uses (missing-use-macros missing-uses env) env)\n     (inferred-use-macros missing-uses env))))\n\n(defn check-use-macros-inferring-missing\n  [{:keys [name uses use-macros] :as ast} env]\n  (let [missing-uses        (when (and *analyze-deps* (seq uses))\n                              (missing-uses uses env))\n        maybe-macros        (apply dissoc uses (keys missing-uses))\n        remove-missing-uses #(apply dissoc % (keys missing-uses))\n        ast' (-> ast\n               (update-in [:use-macros]\n                 #(-> %\n                   (merge (check-use-macros use-macros missing-uses env))\n                   (merge (inferred-use-macros maybe-macros env))))\n               (update-in [:uses] remove-missing-uses))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :use-macros] merge (:use-macros ast'))\n        (update-in [::namespaces name :uses] remove-missing-uses)))\n    ast'))\n\n(defn check-rename-macros-inferring-missing\n  [{:keys [name renames] :as ast} env]\n  (let [missing-renames        (when (and *analyze-deps* (seq renames))\n                                 (missing-renames renames env))\n        maybe-macros           (apply dissoc renames (keys missing-renames))\n        missing-rename-macros  (inferred-rename-macros missing-renames env)\n        remove-missing-renames #(apply dissoc % (keys missing-renames))\n        ast' (-> ast\n               (update-in [:rename-macros]\n                 #(-> %\n                   (merge missing-rename-macros)\n                   (merge (inferred-rename-macros maybe-macros env))))\n               (update-in [:renames] remove-missing-renames))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :rename-macros] merge (:rename-macros ast'))\n        (update-in [::namespaces name :renames] remove-missing-renames)))\n    ast'))\n\n(defn parse-ns-error-msg [spec msg]\n  (str msg \"; offending spec: \" (pr-str spec)))\n\n(defn basic-validate-ns-spec [env macros? spec]\n  (when-not (or (symbol? spec) (string? spec) (sequential? spec))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"))))\n  (when (sequential? spec)\n    (when-not (or (symbol? (first spec)) (string? (first spec)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Library name must be specified as a symbol in :require / :require-macros\"))))\n    (when-not (odd? (count spec))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"))))\n    (when-not (every? #{:as :refer :rename} (map first (partition 2 (next spec))))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as, :refer and :rename options supported in :require / :require-macros\"))))\n    (when-not (let [fs (frequencies (next spec))]\n                (and (<= (fs :as 0) 1)\n                     (<= (fs :refer 0) 1)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Each of :as and :refer options may only be specified once in :require / :require-macros\"))))))\n\n(defn parse-ns-excludes [env args]\n  (reduce\n    (fn [s [k & filters]]\n      (if (= k :refer-clojure)\n        (do\n          (when (seq (:excludes s))\n            (throw (error env \"Only one :refer-clojure form is allowed per namespace definition\")))\n          (let [valid-kws #{:exclude :rename}\n                xs\n                (loop [fs (seq filters)\n                       ret {:excludes #{}\n                            :renames {}}\n                       err (not (even? (count filters)))]\n                  (cond\n                    (true? err)\n                    (throw\n                      (error env \"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\"))\n\n                    (some? fs)\n                    (let [kw (first fs)]\n                      (if (valid-kws kw)\n                        (let [refs (second fs)]\n                          (cond\n                            (not (or (and (= kw :exclude) (sequential? refs) (every? symbol? refs))\n                                     (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs))))\n                            (recur fs ret true)\n\n                            (= kw :exclude)\n                            (recur (nnext fs) (update-in ret [:excludes] into refs) false)\n\n                            (= kw :rename)\n                            (recur (nnext fs) (update-in ret [:renames] merge refs) false)))\n                        (recur fs ret true)))\n\n                    :else ret))]\n            (merge-with into s xs)))\n        s))\n    {:excludes #{}\n     :renames {}} args))\n\n(defn use->require [env [lib & filters :as spec]]\n  (when-not (and (symbol? lib) (odd? (count spec)))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"))))\n  (loop [fs (seq filters) ret [lib] err false]\n    (cond\n      (true? err)\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\")))\n\n      (some? fs)\n      (let [kw (first fs)\n            only? (= kw :only)]\n        (if (or only? (= kw :rename))\n          (if (some? (some #{(if only? :refer kw)} ret))\n            (throw\n              (error env\n                (parse-ns-error-msg spec\n                  \"Each of :only and :rename options may only be specified once in :use / :use-macros\")))\n            (let [refs (second fs)]\n              (if-not (or (and only? (sequential? refs) (every? symbol? refs))\n                          (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs)))\n                (recur fs ret true)\n                (recur (nnext fs) (into ret [(if only? :refer kw) refs]) false))))\n          (recur fs ret true )))\n\n      :else (if (some? (some #{:refer} ret))\n              ret\n              (recur fs ret true)))))\n\n(defn parse-require-spec [env macros? deps aliases spec]\n  (if (or (symbol? spec) (string? spec))\n    (recur env macros? deps aliases [spec])\n    (do\n      (basic-validate-ns-spec env macros? spec)\n      (let [[lib & opts] spec\n            ;; We need to load JS modules by the name that has been created by the\n            ;; Google Closure compiler, e.g. module$resources$libs$calculator.\n            ;; This means that we need to create an alias from the module name\n            ;; given with :provides to the new name.\n            [lib js-module-provides] (if-some [js-module-name (gets @env/*compiler* :js-module-index (str lib) :name)]\n                                       [(symbol js-module-name) lib]\n                                       [lib nil])\n            {alias :as referred :refer renamed :rename\n             :or {alias (if (string? lib)\n                          (symbol (munge lib))\n                          lib)}}\n            (apply hash-map opts)\n            referred-without-renamed (seq (remove (set (keys renamed)) referred))\n            [rk uk renk] (if macros? [:require-macros :use-macros :rename-macros] [:require :use :rename])]\n        (when-not (or (symbol? alias) (nil? alias))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":as must be followed by a symbol in :require / :require-macros\"))))\n        (when (some? alias)\n          (let [alias-type (if macros? :macros :fns)\n                lib'       ((alias-type @aliases) alias)]\n            (when (and (some? lib') (not= lib lib'))\n              (throw (error env (parse-ns-error-msg spec \":as alias must be unique\"))))\n            (swap! aliases\n              update-in [alias-type]\n              conj [alias lib] (when js-module-provides [js-module-provides lib]))))\n        (when-not (or (and (sequential? referred)\n                           (every? symbol? referred))\n                      (nil? referred))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":refer must be followed by a sequence of symbols in :require / :require-macros\"))))\n        (when-not macros?\n          (swap! deps conj lib))\n        (merge\n          (when (some? alias)\n            {rk (merge {alias lib} {lib lib}\n                  (when js-module-provides {js-module-provides lib}))})\n          (when (some? referred-without-renamed)\n            {uk (apply hash-map (interleave referred-without-renamed (repeat lib)))})\n          (when (some? renamed)\n            {renk (reduce (fn [m [original renamed]]\n                            (when-not (some #{original} referred)\n                              (throw (error env\n                                       (str \"Renamed symbol \" original \" not referred\"))))\n                            (assoc m renamed (symbol (str lib) (str original))))\n                    {} renamed)}))))))\n\n(defn parse-import-spec [env deps spec]\n  (when-not (or (and (sequential? spec)\n                     (every? symbol? spec))\n                (and (symbol? spec) (nil? (namespace spec))))\n    (throw (error env (parse-ns-error-msg spec \"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"))))\n  (let [import-map (cond\n                     (sequential? spec)\n                     (->> (rest spec)\n                       (map #(vector % (symbol (str (first spec) \".\" %))))\n                       (into {}))\n\n                     (not (== -1 (.indexOf (str spec) \".\")))\n                     {(symbol (last (string/split (str spec) #\"\\.\"))) spec}\n\n                     :else {})]\n    (doseq [[_ spec] import-map]\n      (swap! deps conj spec))\n    {:import  import-map\n     :require import-map}))\n\n#?(:clj (declare parse-ns))\n\n(defn macro-autoload-ns?\n  \"Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.\"\n  #?(:cljs {:tag boolean})\n  [form]\n  (when *macro-infer*\n    (let [ns (if (sequential? form) (first form) form)\n         {:keys [use-macros require-macros]}\n         (or (get-in @env/*compiler* [::namespaces ns])\n             #?(:clj\n                (when-let [res (util/ns->source ns)]\n                  (:ast (parse-ns res)))))]\n      (or (some #{ns} (vals use-macros))\n          (some #{ns} (vals require-macros))))))\n\n(defn clj-ns->cljs-ns\n  \"Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs\"\n  [sym]\n  (let [segs (string/split (clojure.core/name sym) #\"\\.\")]\n    (if (= \"clojure\" (first segs))\n      (symbol (string/join \".\" (cons \"cljs\" (next segs))))\n      sym)))\n\n#?(:clj\n   (defn aliasable-clj-ns?\n     \"Predicate for testing with a symbol represents an aliasable clojure namespace.\"\n     [sym]\n     (when-not (util/ns->source sym)\n       (let [[seg1 :as segs] (string/split (clojure.core/name sym) #\"\\.\")]\n         (when (= \"clojure\" seg1)\n           (let [sym' (clj-ns->cljs-ns sym)]\n             (util/ns->source sym')))))))\n\n#?(:clj\n   (defn process-rewrite-form [[k & specs :as form]]\n     (letfn [(process-spec [maybe-spec]\n               (let [[lib & xs] (if (sequential? maybe-spec)\n                                  maybe-spec\n                                  [maybe-spec])]\n                 (if (and (symbol? lib) (aliasable-clj-ns? lib))\n                   (let [lib' (clj-ns->cljs-ns lib)\n                         spec (cons lib' xs)]\n                     (into (if xs [spec] []) [(list lib' :as lib)]))\n                   [maybe-spec])))]\n       (if (#{:use :require} k)\n         (cons k (mapcat process-spec specs))\n         form))))\n\n#?(:clj\n   (defn rewrite-cljs-aliases\n     \"Alias non-existing clojure.* namespaces to existing cljs.* namespaces if\n      possible.\"\n     [args]\n     (map process-rewrite-form args)))\n\n(defn canonicalize-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (as-> (second quoted-spec-or-kw) spec\n                (if (or (vector? spec) (map? spec)) spec [spec]))))]\n    (map canonicalize specs)))\n\n(defn canonicalize-import-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (second quoted-spec-or-kw)))]\n    (map canonicalize specs)))\n\n(defn desugar-ns-specs\n  \"Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared.\"\n  [args]\n  (let [{:keys [require] :as indexed}\n        (->> args\n          (map (fn [[k & specs]] [k (into [] specs)]))\n          (into {}))\n        sugar-keys #{:include-macros :refer-macros}\n        ;; drop spec k and value from spec for generated :require-macros\n        remove-from-spec\n        (fn [pred spec]\n          (if-not (and (sequential? spec) (some pred spec))\n            spec\n            (let [[l r] (split-with (complement pred) spec)]\n              (recur pred (concat l (drop 2 r))))))\n        ;; rewrite :refer-macros to :refer for generated :require-macros\n        replace-refer-macros\n        (fn [spec]\n          (if-not (sequential? spec)\n            spec\n            (map (fn [x] (if (= x :refer-macros) :refer x)) spec)))\n        reload-spec? #(#{:reload :reload-all} %)\n        to-macro-specs\n        (fn [specs]\n          (->> specs\n            (filter\n              (fn [x]\n                (or (and (sequential? x)\n                         (some sugar-keys x))\n                    (reload-spec? x)\n                    (macro-autoload-ns? x))))\n            (map (fn [x]\n                   (if-not (reload-spec? x)\n                     (->> x (remove-from-spec #{:include-macros})\n                            (remove-from-spec #{:refer})\n                            (remove-from-spec #{:rename})\n                            (replace-refer-macros))\n                     x)))))\n        remove-sugar (partial remove-from-spec sugar-keys)]\n    (if-some [require-specs (seq (to-macro-specs require))]\n      (map (fn [x]\n             (if-not (reload-spec? x)\n               (let [[k v] x]\n                 (cons k (map remove-sugar v)))\n               x))\n        (update-in indexed [:require-macros] (fnil into []) require-specs))\n      args)))\n\n(defn find-def-clash [env ns segments]\n  (let [to-check (map (fn [xs]\n                        [(symbol (string/join \".\" (butlast xs)))\n                         (symbol (last xs))])\n                   (drop 2 (reductions conj [] segments)))]\n    (doseq [[clash-ns name] to-check]\n      (when (get-in @env/*compiler* [::namespaces clash-ns :defs name])\n        (warning :ns-var-clash env\n          {:ns ns\n           :var (symbol (str clash-ns) (str name))})))))\n\n(defn macro-ns-name [name]\n  (let [name-str (str name)]\n    (if-not #?(:clj  (.endsWith name-str \"$macros\")\n               :cljs (gstring/endsWith name-str \"$macros\"))\n      (symbol (str name-str \"$macros\"))\n      name)))\n\n(defn- check-duplicate-aliases\n  [env old new]\n  (let [ns-name (:name old)]\n    (doseq [k [:requires :require-macros]]\n      (let [old-aliases (get old k)\n            new-aliases (get new k)]\n        (when-some [alias (some (set (keys new-aliases))\n                                (->> old-aliases\n                                     (remove (fn [[k v :as entry]]\n                                               (or (= k v)\n                                                   (= entry (find new-aliases k)))))\n                                     keys))]\n          (throw (error env\n                        (str \"Alias \" alias \" already exists in namespace \" ns-name\n                             \", aliasing \" (get old-aliases alias)))))))))\n\n(defn- merge-ns-info [old new env]\n  (if (pos? (count old))\n    (let [deep-merge-keys\n          [:use-macros :require-macros :rename-macros\n           :uses :requires :renames :imports]]\n      #?(:clj\n         (when *check-alias-dupes*\n           (check-duplicate-aliases env old new)))\n      (merge\n       old\n       (select-keys new [:excludes])\n       (merge-with merge\n                   (select-keys old deep-merge-keys)\n                   (select-keys new deep-merge-keys))))\n    new))\n\n(defmethod parse 'ns\n  [_ env [_ name & args :as form] _ opts]\n  (when-not *allow-ns*\n    (throw (error env \"Namespace declarations must appear at the top-level.\")))\n  (when-not (symbol? name)\n    (throw (error env \"Namespaces must be named by a symbol.\")))\n  (let [name (cond-> name (:macros-ns opts) macro-ns-name)]\n    (let [segments (string/split (clojure.core/name name) #\"\\.\")]\n      (when (= 1 (count segments))\n        (warning :single-segment-namespace env {:name name}))\n      (let [segment (some js-reserved segments)]\n        (when (some? segment)\n          (warning :munged-namespace env {:name name})))\n      (find-def-clash env name segments)\n      #?(:clj\n         (when (some (complement util/valid-js-id-start?) segments)\n           (throw\n             (AssertionError.\n               (str \"Namespace \" name \" has a segment starting with an invaild \"\n                    \"JavaScript identifier\"))))))\n    (let [docstring    (when (string? (first args)) (first args))\n          mdocstr      (-> name meta :doc)\n          args         (if (some? docstring) (next args) args)\n          metadata     (when (map? (first args)) (first args))\n          args         (desugar-ns-specs\n                         #?(:clj  (rewrite-cljs-aliases\n                                    (if metadata (next args) args))\n                            :cljs (if (some? metadata) (next args) args)))\n          name         (vary-meta name merge metadata)\n          {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n          core-renames (reduce (fn [m [original renamed]]\n                                 (assoc m renamed (symbol \"cljs.core\" (str original))))\n                         {} core-renames)\n          deps         (atom [])\n          aliases      (atom {:fns {} :macros {}})\n          spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                        :require-macros (partial parse-require-spec env true deps aliases)\n                        :use            (comp (partial parse-require-spec env false deps aliases)\n                                          (partial use->require env))\n                        :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                          (partial use->require env))\n                        :import         (partial parse-import-spec env deps)}\n          valid-forms  (atom #{:use :use-macros :require :require-macros :import})\n          reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n          reloads      (atom {})\n          {uses :use requires :require renames :rename\n           use-macros :use-macros require-macros :require-macros\n           rename-macros :rename-macros imports :import :as params}\n          (reduce\n            (fn [m [k & libs :as libspec]]\n              (when-not (#{:use :use-macros :require :require-macros :import} k)\n                (throw (error env (str \"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \" libspec \" instead.\"))))\n              (when-not (@valid-forms k)\n                (throw (error env (str \"Only one \" k \" form is allowed per namespace definition\"))))\n              (swap! valid-forms disj k)\n              ;; check for spec type reloads\n              (when-not (= :import k)\n                (when (some? (some #{:reload} libs))\n                  (swap! reload assoc k :reload))\n                (when (some? (some #{:reload-all} libs))\n                  (swap! reload assoc k :reload-all)))\n              ;; check for individual ns reloads from REPL interactions\n              (when-let [xs (seq (filter #(-> % meta :reload) libs))]\n                (swap! reloads assoc k\n                  (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n              (apply merge-with merge m\n                (map (spec-parsers k)\n                  (remove #{:reload :reload-all} libs))))\n            {} (remove (fn [[r]] (= r :refer-clojure)) args))\n          ;; patch `require-macros` and `use-macros` in Bootstrap for namespaces\n          ;; that require their own macros\n          #?@(:cljs [[require-macros use-macros]\n                     (map (fn [spec-map]\n                            (if (:macros-ns opts)\n                              (let [ns (symbol (subs (str name) 0 (- (count (str name)) 7)))]\n                                (reduce (fn [m [k v]]\n                                          (cond-> m\n                                            (not (symbol-identical? v ns))\n                                            (assoc k v)))\n                                  {} spec-map))\n                              spec-map)) [require-macros use-macros])])]\n      (set! *cljs-ns* name)\n      (let [ns-info\n            {:name           name\n             :doc            (or docstring mdocstr)\n             :excludes       excludes\n             :use-macros     use-macros\n             :require-macros require-macros\n             :rename-macros  rename-macros\n             :uses           uses\n             :requires       requires\n             :renames        (merge renames core-renames)\n             :imports        imports}]\n        (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n        (merge {:op      :ns\n                :env     env\n                :form    form\n                :deps    (into [] (distinct @deps))\n                :reload  @reload\n                :reloads @reloads}\n          (cond-> ns-info\n            (@reload :use)\n            (update-in [:uses]\n              (fn [m] (with-meta m {(@reload :use) true})))\n            (@reload :require)\n            (update-in [:requires]\n              (fn [m] (with-meta m {(@reload :require) true})))))))))\n\n(defmethod parse 'ns*\n  [_ env [_ quoted-specs :as form] _ opts]\n  (when-let [not-quoted (->> (remove keyword? quoted-specs)\n                          (remove #(and (seq? %) (= 'quote (first %))) )\n                          first)]\n    (throw (error env (str \"Arguments to \" (name (first quoted-specs))\n                        \" must be quoted. Offending spec: \" not-quoted))))\n  (when-not *allow-ns*\n    (throw (error env (str \"Calls to `\" (name (first quoted-specs))\n                        \"` must appear at the top-level.\"))))\n  (let [specs        (if (= :import (first quoted-specs))\n                       (canonicalize-import-specs quoted-specs)\n                       (canonicalize-specs quoted-specs))\n        name         (-> env :ns :name)\n        args         (desugar-ns-specs\n                       #?(:clj  (list (process-rewrite-form\n                                        specs))\n                          :cljs (list specs)))\n        {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n        core-renames (reduce (fn [m [original renamed]]\n                               (assoc m renamed (symbol \"cljs.core\" (str original))))\n                       {} core-renames)\n        deps         (atom [])\n        aliases      (atom {:fns {} :macros {}})\n        spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                      :require-macros (partial parse-require-spec env true deps aliases)\n                      :use            (comp (partial parse-require-spec env false deps aliases)\n                                        (partial use->require env))\n                      :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                        (partial use->require env))\n                      :import         (partial parse-import-spec env deps)}\n        reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n        reloads      (atom {})\n        {uses :use requires :require renames :rename\n         use-macros :use-macros require-macros :require-macros\n         rename-macros :rename-macros imports :import :as params}\n        (reduce\n          (fn [m [k & libs]]\n            ;; check for spec type reloads\n            (when-not (= :import k)\n              (when (some? (some #{:reload} libs))\n                (swap! reload assoc k :reload))\n              (when (some? (some #{:reload-all} libs))\n                (swap! reload assoc k :reload-all)))\n            ;; check for individual ns reloads from REPL interactions\n            (when-some [xs (seq (filter #(-> % meta :reload) libs))]\n              (swap! reloads assoc k\n                (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n            (apply merge-with merge m\n              (map (spec-parsers k)\n                (remove #{:reload :reload-all} libs))))\n          {} (remove (fn [[r]] (= r :refer-clojure)) args))]\n    (set! *cljs-ns* name)\n    (let [require-info\n          {:name           name\n           :excludes       excludes\n           :use-macros     use-macros\n           :require-macros require-macros\n           :rename-macros  rename-macros\n           :uses           uses\n           :requires       requires\n           :renames        (merge renames core-renames)\n           :imports        imports}]\n      (swap! env/*compiler* update-in [::namespaces name] merge-ns-info require-info env)\n      (merge {:op      :ns*\n              :env     env\n              :form    form\n              :deps    (into [] (distinct @deps))\n              :reload  @reload\n              :reloads @reloads}\n        (cond-> require-info\n          (@reload :use)\n          (update-in [:uses]\n            (fn [m] (with-meta m {(@reload :use) true})))\n          (@reload :require)\n          (update-in [:requires]\n            (fn [m] (with-meta m {(@reload :require) true}))))))))\n\n(defn parse-type\n  [op env [_ tsym fields pmasks body :as form]]\n  (let [t (:name (resolve-var (dissoc env :locals) tsym))\n        locals (reduce (fn [m fld]\n                         (assoc m fld\n                                {:name fld\n                                 :line (get-line fld env)\n                                 :column (get-col fld env)\n                                 :local :field\n                                 :field true\n                                 :mutable (-> fld meta :mutable)\n                                 :unsynchronized-mutable (-> fld meta :unsynchronized-mutable)\n                                 :volatile-mutable (-> fld meta :volatile-mutable)\n                                 :tag (-> fld meta :tag)\n                                 :shadow (m fld)}))\n                       {} (if (= :defrecord op)\n                            (concat fields '[__meta __extmap ^:mutable __hash])\n                            fields))\n        protocols (-> tsym meta :protocols)]\n    (swap! env/*compiler* update-in [::namespaces (-> env :ns :name) :defs tsym]\n           (fn [m]\n             (let [m (assoc (or m {})\n                       :name t\n                       :tag 'function\n                       :type true\n                       :num-fields (count fields)\n                       :record (= :defrecord op))]\n               (merge m\n                      (dissoc (meta tsym) :protocols)\n                      {:protocols protocols}\n                      (source-info tsym env)))))\n    {:op op :env env :form form :t t :fields fields :pmasks pmasks\n     :tag 'function\n     :protocols (disj protocols 'cljs.core/Object)\n     :children [#_:fields :body]\n     :body (analyze (assoc env :locals locals) body)}))\n\n(defmethod parse 'deftype*\n  [_ env form _ _]\n  (parse-type :deftype env form))\n\n(defmethod parse 'defrecord*\n  [_ env form _ _]\n  (parse-type :defrecord env form) )\n\n;; dot accessor code\n\n(def ^:private property-symbol? #(boolean (and (symbol? %) (re-matches #\"^-.*\" (name %)))))\n\n(defn- classify-dot-form\n  [[target member args]]\n  [(cond (nil? target) ::error\n         :default      ::expr)\n   (cond (property-symbol? member) ::property\n         (symbol? member)          ::symbol\n         (seq? member)             ::list\n         :default                  ::error)\n   (cond (nil? args) ()\n         :default    ::expr)])\n\n(defmulti build-dot-form #(classify-dot-form %))\n\n;; (. o -p)\n;; (. (...) -p)\n(defmethod build-dot-form [::expr ::property ()]\n  [[target prop _]]\n  {:dot-action ::access :target target\n   :field (with-meta (-> prop name (.substring 1) symbol) (meta prop))})\n\n;; (. o -p <args>)\n(defmethod build-dot-form [::expr ::property ::list]\n  [[target prop args]]\n  #?(:clj  (throw (Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))\n     :cljs (throw (js/Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))))\n\n(defn- build-method-call\n  \"Builds the intermediate method call map used to reason about the parsed form during\n  compilation.\"\n  [target meth args]\n  (if (symbol? meth)\n    {:dot-action ::call :target target :method meth :args args}\n    {:dot-action ::call :target target :method (first meth) :args args}))\n\n;; (. o m 1 2)\n(defmethod build-dot-form [::expr ::symbol ::expr]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o m)\n(defmethod build-dot-form [::expr ::symbol ()]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o (m))\n;; (. o (m 1 2))\n(defmethod build-dot-form [::expr ::list ()]\n  [[target meth-expr _]]\n  (build-method-call target (first meth-expr) (rest meth-expr)))\n\n(defmethod build-dot-form :default\n  [dot-form]\n  #?(:clj  (throw\n             (Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))\n     :cljs (throw\n             (js/Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))))\n\n(defn analyze-dot [env target field member+ form]\n  (let [v [target field member+]\n        {:keys [dot-action target method field args]} (build-dot-form v)\n        enve       (assoc env :context :expr)\n        targetexpr (analyze enve target)\n        form-meta  (meta form)\n        target-tag (:tag targetexpr)\n        prop       (or field method)\n        tag        (or (:tag form-meta)\n                       (and (js-tag? target-tag)\n                            (vary-meta (normalize-js-tag target-tag)\n                              update-in [:prefix] (fnil conj '[Object]) prop))\n                       nil)]\n    (when (and (not= 'constructor prop)\n               (not (string/starts-with? (str prop) \"cljs$\"))\n               (not (-> prop meta :protocol-prop)))\n      ;; Adding to Object\n      (when (= 'Object (first (-> tag meta :prefix)))\n        (warning :infer-warning env\n          {:warn-type :object :form form :property prop}))\n      (when (not= 'js target-tag)\n        ;; Cannot determine type of the target\n        (when (or (nil? target-tag) ('#{any} target-tag))\n          (warning :infer-warning env\n            {:warn-type :target :form form :property prop}))\n        ;; Unresolveable property on existing extern\n        (let [[pre' pre] ((juxt butlast identity) (-> tag meta :prefix))]\n          (when (and (has-extern? pre') (not (has-extern? pre)))\n            (warning :infer-warning env\n              {:warn-type :property :form form\n               :type (symbol \"js\"\n                       (string/join \".\"\n                         (cond-> pre' (= 'prototype (last pre')) butlast)))\n               :property prop})))))\n    (when (js-tag? tag)\n      (let [pre (-> tag meta :prefix)]\n        (when-not (has-extern? pre)\n          (swap! env/*compiler* update-in\n            (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))))\n    (case dot-action\n      ::access (let [children [:target]]\n                 {:op :host-field\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :field field\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :tag) tag)\n                         tag)})\n      ::call   (let [argexprs (mapv #(analyze enve %) args)\n                     children [:target :args]]\n                 {:op :host-call\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :method method\n                  :args argexprs\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :ret-tag) 'js)\n                         tag)}))))\n\n(defmethod parse '.\n  [_ env [_ target & [field & member+] :as form] _ _]\n  (disallowing-recur (analyze-dot env target field member+ form)))\n\n(defn get-js-tag [form]\n  (let [form-meta (meta form)]\n    (if-some [tag (:tag form-meta)]\n      tag\n      (when (true? (:numeric form-meta))\n        'number))))\n\n(defn js-star-interp\n  [env ^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)\n            inner (:name (resolve-existing-var env (symbol (subs s (+ 2 idx) end))))]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (cons inner\n              (js-star-interp env (subs s (inc end))))))))))\n\n(defn js-star-seg\n  [^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (js-star-seg (subs s (inc end)))))))))\n\n(def NUMERIC_SET '#{any number long double})\n\n(defn numeric-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO: type inference is not strong enough to detect that\n  ;; when functions like first won't return nil, so variadic\n  ;; numeric functions like cljs.core/< would produce a spurious\n  ;; warning without this - David\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    :else\n    (if (and (symbol? t) (some? (get NUMERIC_SET t)))\n      true\n      (when #?(:clj  (set? t)\n               :cljs (impl/cljs-set? t))\n        (or (contains? t 'number)\n            (contains? t 'long)\n            (contains? t 'double)\n            (contains? t 'any)\n            (contains? t 'js))))))\n\n(def array-types\n  '#{array objects ints longs floats doubles chars shorts bytes boolean})\n\n(defn array-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO same inference caveats as the numeric-type? fn above\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    (= 'any t) true\n    (contains? array-types t) true\n    :else\n    (boolean\n      (when #?(:clj  (set? t)\n               :cljs (impl/cljs-set? t))\n        (or (contains? t 'any)\n            (contains? t 'js)\n            (some array-types t))))))\n\n(defn- analyze-js-star-args [js-op env args]\n  (first (reduce\n           (fn [[argexprs env] arg]\n             [(conj argexprs (analyze env arg))\n              (if (= js-op 'cljs.core/and)\n                (set-test-induced-tags env arg)\n                env)])\n           [[] env]\n           args)))\n\n(defn analyze-js-star* [env jsform args form]\n  (let [enve      (assoc env :context :expr)\n        form-meta (meta form)\n        segs      (js-star-seg jsform)\n        tag       (get-js-tag form)\n        js-op     (:js-op form-meta)\n        argexprs  (analyze-js-star-args js-op enve args)\n        numeric   (:numeric form-meta)\n        validate  (fn [warning-type valid-types?]\n                    (let [types (map #(infer-tag env %) argexprs)]\n                      (when-not (valid-types? types)\n                        (warning warning-type env\n                          {:js-op js-op\n                           :types (into [] types)}))))\n        op-match? (fn [sym]\n                    #?(:clj  (= sym (:js-op form-meta))\n                       :cljs (symbol-identical? sym (:js-op form-meta))))]\n    (when (true? numeric)\n      (validate :invalid-arithmetic #(every? numeric-type? %)))\n    {:op :js\n     :env env\n     :segs segs\n     :args argexprs\n     :tag tag\n     :form form\n     :children [:args]\n     :js-op js-op\n     :numeric numeric}))\n\n(defn analyze-js-star [env jsform args form]\n  (disallowing-recur (analyze-js-star* env jsform args form)))\n\n(defmethod parse 'js*\n  [op env [_ jsform & args :as form] _ _]\n  (when-not (string? jsform)\n    (throw (error env \"Invalid js* form\")))\n  (if (some? args)\n    (analyze-js-star env jsform args form)\n    (let [code      (apply str (js-star-interp env jsform))\n          tag       (get-js-tag form)\n          form-meta (meta form)\n          js-op     (:js-op form-meta)\n          numeric   (:numeric form-meta)]\n      {:op :js\n       :env env\n       :form form\n       :code code\n       :tag tag\n       :js-op js-op\n       :numeric numeric})))\n\n;; TODO: analyzed analyzed? should take pass name as qualified keyword arg\n;; then compiler passes can mark/check individually - David\n\n(defn- unsorted-map? [x]\n  (and (map? x)\n       (not (sorted? x))))\n\n(defn analyzed\n  \"Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass.\"\n  [x]\n  (cond\n    (unsorted-map? x) (assoc x ::analyzed true)\n    :else (vary-meta x assoc ::analyzed true)))\n\n(defn analyzed?\n  \"Returns boolean if the form has already been marked as analyzed.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  (boolean\n    (cond\n      (unsorted-map? x) (::analyzed x)\n      :else (::analyzed (meta x)))))\n\n(defn- all-values?\n  #?(:cljs {:tag boolean})\n  [exprs]\n  (every? #(or (nil? %) (symbol? %) (string? %) (number? %) (true? %) (false? %)) exprs))\n\n(defn- valid-arity?\n  #?(:cljs {:tag boolean})\n  [argc method-params]\n  (or (nil? method-params)  ; Assume valid if method-params unavailable\n      (boolean (some #{argc} (map count method-params)))))\n\n(defn- record-tag?\n  [tag]\n  (boolean (and (symbol? tag)\n                (some? (namespace tag))\n                (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs (symbol (name tag)) :record]))))\n\n(defn- record-basis\n  [tag]\n  (let [positional-factory (symbol (str \"->\" (name tag)))\n        fields             (first (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs positional-factory :method-params]))]\n    (into #{} fields)))\n\n(defn- record-with-field?\n  [tag field]\n  (and (record-tag? tag)\n       (contains? (record-basis tag) field)))\n\n(defn- invalid-arity? [argc method-params variadic max-fixed-arity]\n  (and (not (valid-arity? argc method-params))\n       (or (not variadic)\n           (and variadic (< argc max-fixed-arity)))))\n\n(defn parse-invoke*\n  [env [f & args :as form]]\n  (let [enve    (assoc env :context :expr)\n        fexpr   (analyze enve f)\n        argc    (count args)\n        fn-var? (or (-> fexpr :info :fn-var)\n                    (-> fexpr :info :js-fn-var))\n        kw?     (= 'cljs.core/Keyword (:tag fexpr))\n        cur-ns  (-> env :ns :name)\n        HO-invoke? (and (boolean *cljs-static-fns*)\n                        (not fn-var?)\n                        (not (js-tag? f))\n                        (not kw?)\n                        (not (analyzed? f)))\n        ;; function expressions, eg: ((deref m) x) or ((:x m) :a)\n        bind-f-expr? (and HO-invoke?\n                          (not (symbol? f)))\n        ;; Higher order invokes with (some) argument expressions. Bind the arguments\n        ;; to avoid exponential complexity that is created by the IFn arity check branch.\n        bind-args? (and HO-invoke?\n                        (not (all-values? args)))]\n    (when ^boolean fn-var?\n      (let [{^boolean variadic :variadic? :keys [max-fixed-arity method-params name ns macro]} (:info fexpr)]\n        ;; don't warn about invalid arity when when compiling a macros namespace\n        ;; that requires itself, as that code is not meant to be executed in the\n        ;; `$macros` ns - António Monteiro\n        (when (and #?(:cljs (not (and (gstring/endsWith (str cur-ns) \"$macros\")\n                                      (symbol-identical? cur-ns ns)\n                                      (true? macro))))\n                   (invalid-arity? argc method-params variadic max-fixed-arity))\n          (warning :fn-arity env {:name name :argc argc}))))\n    (when (and kw? (not (or (== 1 argc) (== 2 argc))))\n      (warning :fn-arity env {:name (first form) :argc argc}))\n    (let [deprecated? (-> fexpr :info :deprecated)\n          no-warn? (-> form meta :deprecation-nowarn)]\n      (when (and (boolean deprecated?)\n                 (not (boolean no-warn?)))\n        (warning :fn-deprecated env {:fexpr fexpr})))\n    (when (some? (-> fexpr :info :type))\n      (warning :invoke-ctor env {:fexpr fexpr}))\n    (if (or bind-args? bind-f-expr?)\n      (let [arg-syms (when bind-args? (take argc (repeatedly gensym)))\n            f-sym (when bind-f-expr? (gensym \"fexpr__\"))\n            bindings (cond-> []\n                       bind-args? (into (interleave arg-syms args))\n                       bind-f-expr? (conj f-sym (analyzed f)))\n            tag (:tag (meta form))]\n        (analyze env\n          `(let [~@bindings]\n             ~(with-meta\n               `(~(analyzed (if bind-f-expr? f-sym f))\n                 ~@(if bind-args? arg-syms args))\n               {:tag tag}))))\n      (let [ana-expr #(analyze enve %)\n            argexprs (mapv ana-expr args)]\n        (if (and (and (keyword? f)\n                      (nil? (namespace f)))\n                 (== 1 (count args))\n                 (record-with-field? (:tag (first argexprs)) (symbol (name f))))\n          (let [field-access-form (list* (symbol (str \".-\" (name f))) args)]\n            (no-warn (analyze env field-access-form)))\n          {:env      env :op :invoke :form form :fn fexpr :args argexprs\n           :children [:fn :args]})))))\n\n(defn parse-invoke\n  [env form]\n  (disallowing-recur (parse-invoke* env form)))\n\n(defn desugar-dotted-expr [{:keys [op] :as expr}]\n  (case op\n    (:var :local) (if (dotted-symbol? (symbol (name (:name expr))))\n                    (let [s      (name (:name expr))\n                          idx    (.lastIndexOf s \".\")\n                          _ (assert (not= (inc idx) (count s)))\n                          prefix (with-meta (symbol (namespace (:name expr)) (subs s 0 idx))\n                                            (meta (:form expr)))\n                          field (symbol (subs s (inc idx)))]\n                      (assert (not (:const-expr expr)))\n                      {:op :host-field\n                       :env (:env expr)\n                       :form (list '. prefix field)\n                       :target (desugar-dotted-expr (-> expr\n                                                        (assoc :name prefix\n                                                               :form prefix)\n                                                        (dissoc :tag)\n                                                        (assoc-in [:info :name] prefix)\n                                                        (assoc-in [:env :context] :expr)))\n                       :field field\n                       :tag (:tag expr)\n                       :children [:target]})\n                    expr)\n    ;:var\n    expr))\n\n\n(defn analyze-symbol\n  \"Finds the var associated with sym\"\n  [env sym]\n  (if ^boolean (:quoted? env)\n    (do\n      (register-constant! env sym)\n      (analyze-wrap-meta {:op :const :val sym :env env :form sym :tag 'cljs.core/Symbol}))\n    (let [{:keys [line column]} (meta sym)\n          env  (if-not (nil? line)\n                 (assoc env :line line)\n                 env)\n          env  (if-not (nil? column)\n                 (assoc env :column column)\n                 env)\n          ret  {:env env :form sym}\n          lcls (:locals env)]\n      (if-some [lb (handle-symbol-local sym (get lcls sym))]\n        (merge\n          (assoc ret :op :local :info lb)\n          ;; this is a temporary workaround for core.async see CLJS-3030 - David\n          (when (map? lb)\n            (select-keys lb [:name :local :arg-id :variadic? :init])))\n        (let [sym-meta (meta sym)\n              sym-ns (namespace sym)\n              cur-ns (str (-> env :ns :name))\n              ;; when compiling a macros namespace that requires itself, we need\n              ;; to resolve calls to `my-ns.core/foo` to `my-ns.core$macros/foo`\n              ;; to avoid undeclared variable warnings - António Monteiro\n              #?@(:cljs [sym (if (and sym-ns\n                                   (not= sym-ns \"cljs.core\")\n                                   (gstring/endsWith cur-ns \"$macros\")\n                                   (not (gstring/endsWith sym-ns \"$macros\"))\n                                   (= sym-ns (subs cur-ns 0 (- (count cur-ns) 7))))\n                               (symbol (str sym-ns \"$macros\") (name sym))\n                               sym)])\n              info     (if-not (contains? sym-meta ::analyzed)\n                         (resolve-existing-var env sym)\n                         (resolve-var env sym))]\n          (assert (:op info) (:op info))\n          (desugar-dotted-expr\n            (if-not (true? (:def-var env))\n              (merge\n                (assoc ret :info info)\n                (select-keys info [:op :name :ns :tag])\n                (when-let [const-expr (:const-expr info)]\n                  {:const-expr const-expr}))\n              (let [info (resolve-var env sym)]\n                (merge (assoc ret :op :var :info info)\n                       (select-keys info [:op :name :ns :tag]))))))))))\n\n(defn excluded?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :excludes sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :excludes sym))))\n\n(defn used?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :use-macros sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :use-macros sym))))\n\n(defn get-expander-ns [env ^String nstr]\n  ;; first check for clojure.* -> cljs.* cases\n  (let [res  (or (resolve-macro-ns-alias env nstr nil)\n                 (resolve-ns-alias env nstr nil))\n        nstr (if (some? res) (str res) nstr)]\n    (cond\n     #?@(:clj  [(= \"clojure.core\" nstr) (find-ns 'cljs.core)]\n         :cljs [(identical? \"clojure.core\" nstr) (find-macros-ns impl/CLJS_CORE_MACROS_SYM)])\n     #?@(:clj  [(= \"clojure.repl\" nstr) (find-ns 'cljs.repl)]\n         :cljs [(identical? \"clojure.repl\" nstr) (find-macros-ns 'cljs.repl)])\n     #?@(:clj  [(.contains nstr \".\") (find-ns (symbol nstr))]\n         :cljs [(goog.string/contains nstr \".\") (find-macros-ns (symbol nstr))])\n     :else (some-> env :ns :require-macros (get (symbol nstr)) #?(:clj  find-ns\n                                                                  :cljs find-macros-ns)))))\n\n(defn get-expander* [sym env]\n  (when-not (or (some? (gets env :locals sym)) ; locals hide macros\n                (and (excluded? env sym) (not (used? env sym))))\n    (let [nstr (namespace sym)]\n      (cond\n        (some? nstr)\n        (let [ns (get-expander-ns env nstr)]\n          (when (some? ns)\n            (.findInternedVar ^clojure.lang.Namespace ns (symbol (name sym)))))\n\n        (some? (gets env :ns :rename-macros sym))\n        (let [qualified-symbol (gets env :ns :rename-macros sym)\n              nsym (symbol (namespace qualified-symbol))\n              sym  (symbol (name qualified-symbol))]\n          (.findInternedVar ^clojure.lang.Namespace\n            #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym))\n\n        :else\n        (let [nsym (gets env :ns :use-macros sym)]\n          (if (and (some? nsym) (symbol? nsym))\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym)\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns 'cljs.core) :cljs (find-macros-ns impl/CLJS_CORE_MACROS_SYM)) sym)))))))\n\n(defn get-expander\n  \"Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander.\"\n  [sym env]\n  (let [mvar (get-expander* sym env)]\n    (when (and (some? mvar)\n            #?(:clj  (.isMacro ^clojure.lang.Var mvar)\n               :cljs ^boolean (.isMacro mvar)))\n      mvar)))\n\n#?(:cljs\n   (let [cached-var (delay (get (ns-interns* 'cljs.spec.alpha) 'macroexpand-check))]\n     (defn get-macroexpand-check-var []\n       (when (some? (find-ns-obj 'cljs.spec.alpha))\n         @cached-var))))\n\n(defn- var->sym [var]\n  #?(:clj  (symbol (str (.-ns ^clojure.lang.Var var)) (str (.-sym ^clojure.lang.Var var)))\n     :cljs (.-sym var)))\n\n(defn- do-macroexpand-check\n  [env form mac-var]\n  (when (not (-> @env/*compiler* :options :spec-skip-macros))\n    (let [mchk #?(:clj (some-> (find-ns 'clojure.spec.alpha)\n                       (ns-resolve 'macroexpand-check))\n                :cljs (get-macroexpand-check-var))]\n    (when (some? mchk)\n      (try\n        (mchk mac-var (next form))\n        (catch #?(:clj Throwable :cljs :default) e\n          (throw (ex-info nil (error-data env :macro-syntax-check (var->sym mac-var)) e))))))))\n\n#?(:cljs\n   (defn- check-macro-arity [mac-var form]\n     (let [mac-sym (.-sym mac-var)]\n       (when-let [{:keys [variadic? max-fixed-arity method-params]}\n                  (get-in @env/*compiler* [::namespaces (symbol (namespace mac-sym)) :defs (symbol (name mac-sym))])]\n         (let [argc   (count (rest form))\n               offset (if (= '&form (ffirst method-params)) 2 0)]\n           (when (invalid-arity? argc (map #(nthrest %1 offset) method-params)\n                   variadic? (when max-fixed-arity (- max-fixed-arity offset)))\n             (throw (js/Error. (error-message :fn-arity {:argc argc, :name mac-sym})))))))))\n\n(defn macroexpand-1*\n  [env form]\n  (let [op (first form)]\n    (if (contains? specials op)\n      (do\n        (when (= 'ns op)\n          (do-macroexpand-check env form (get-expander 'cljs.core/ns-special-form env)))\n        form)\n      ;else\n        (if-some [mac-var (when (symbol? op) (get-expander op env))]\n          (#?@(:clj [binding [*ns* (create-ns *cljs-ns*)]]\n               :cljs [do])\n            (do-macroexpand-check env form mac-var)\n            (let [form' (try\n                          #?(:cljs (check-macro-arity mac-var form))\n                          (apply @mac-var form env (rest form))\n                          #?(:clj (catch ArityException e\n                                    (throw (ArityException. (- (.actual e) 2) (.name e)))))\n                          (catch #?(:clj Throwable :cljs :default) e\n                            (throw (ex-info nil (error-data env :macroexpansion (var->sym mac-var)) e))))]\n              (if #?(:clj (seq? form') :cljs (impl/cljs-seq? form'))\n                (let [sym' (first form')\n                      sym  (first form)]\n                  (if #?(:clj  (= sym' 'js*)\n                         :cljs (symbol-identical? sym' impl/JS_STAR_SYM))\n                    (let [sym   (if (some? (namespace sym))\n                                  sym\n                                  (symbol \"cljs.core\" (str sym)))\n                          js-op {:js-op sym}\n                          numeric #?(:clj  (-> mac-var meta ::numeric)\n                                     :cljs (let [mac-var-ns   (symbol (namespace (.-sym mac-var)))\n                                                 mac-var-name (symbol (name (.-sym mac-var)))]\n                                             (get-in @env/*compiler*\n                                               [::namespaces mac-var-ns :defs mac-var-name :meta ::numeric])))\n                          js-op (if (true? numeric)\n                                  (assoc js-op :numeric true)\n                                  js-op)]\n                      (vary-meta form' merge js-op))\n                    form'))\n                form')))\n          (if (symbol? op)\n            (let [opname (str op)]\n              (cond\n                (identical? \\.\n                  #?(:clj  (first opname)\n                     :cljs (.charAt opname 0)))\n                (let [[target & args] (next form)]\n                  (with-meta (list* #?(:clj '. :cljs impl/DOT_SYM) target (symbol (subs opname 1)) args)\n                    (meta form)))\n\n                (identical? \\.\n                  #?(:clj  (last opname)\n                     :cljs (.charAt opname (dec (. opname -length)))))\n                (with-meta\n                  (list* #?(:clj 'new :cljs impl/NEW_SYM) (symbol (subs opname 0 (dec (count opname)))) (next form))\n                  (meta form))\n\n                :else form))\n            form)))))\n\n(defn macroexpand-1\n  \"Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once.\"\n  [env form]\n  (wrapping-errors env (macroexpand-1* env form)))\n\n(declare analyze-list)\n\n(defn analyze-seq* [op env form name opts]\n  (if (contains? specials op)\n    (parse op env form name opts)\n    (parse-invoke env form)))\n\n(defn analyze-seq*-wrap [op env form name opts]\n  (wrapping-errors env\n    (analyze-seq* op env form name opts)))\n\n(defn analyze-seq\n  ([env form name]\n   (analyze-seq env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (if ^boolean (:quoted? env)\n     (analyze-list env form)\n     (let [line (-> form meta :line)\n           line (if (nil? line)\n                  (:line env)\n                  line)\n           col  (-> form meta :column)\n           col  (if (nil? col)\n                  (:column env)\n                  col)\n           env  (assoc env :line line :column col)]\n       (let [op (first form)]\n         (when (nil? op)\n           (throw (error env \"Can't call nil\")))\n         (let [mform (macroexpand-1 env form)]\n           (if (identical? form mform)\n             (analyze-seq*-wrap op env form name opts)\n             (analyze env mform name opts))))))))\n\n(defn analyze-map\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        ks (disallowing-recur (mapv #(analyze expr-env %) (keys form)))\n        vs (disallowing-recur (mapv #(analyze expr-env %) (vals form)))]\n    (analyze-wrap-meta {:op :map :env env :form form\n                        :keys ks :vals vs\n                        :children [:keys :vals]\n                        :tag 'cljs.core/IMap})))\n\n;; :list is not used in the emitter any more, but analyze-list is called from analyze-const\n;; to hit the `register-constant!` cases for symbols and keywords.\n(defn analyze-list\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :list :env env :form form :items items :children [:items] :tag 'cljs.core/IList})))\n\n(defn analyze-vector\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :vector :env env :form form :items items :children [:items] :tag 'cljs.core/IVector})))\n\n(defn analyze-set\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :set :env env :form form :items items :children [:items] :tag 'cljs.core/ISet})))\n\n(defn analyze-js-value\n  [env ^JSValue form]\n  (let [val (.-val form)\n        expr-env (assoc env :context :expr)]\n    (if (map? val)\n      (let [keys (vec (keys val))\n            vals (disallowing-recur\n                   (mapv #(analyze expr-env %) (vals val)))]\n        {:op :js-object\n         :env env\n         :form form\n         :keys keys\n         :vals vals\n         :children [:vals]\n         :tag 'object})\n      (let [items (disallowing-recur\n                    (mapv #(analyze expr-env %) val))]\n        {:op :js-array\n         :env env\n         :form form\n         :items items\n         :children [:items]\n         :tag 'array}))))\n\n(defn record-ns+name [x]\n  (map symbol\n       #?(:clj\n          ((juxt (comp #(string/join \".\" %) butlast) last)\n           (string/split (.getName ^Class (type x)) #\"\\.\"))\n          :cljs\n          (string/split (pr-str (type x)) #\"/\"))))\n\n(defn analyze-record\n  [env x]\n  (let [;; register constansts\n        _items_   (disallowing-recur\n                    (analyze (assoc env :context :expr) (into {} x)))\n        [ns name] (record-ns+name x)]\n    {:op :const\n     :val x\n     :env env\n     :form x\n     :tag (symbol (str ns) (str name))}))\n\n(defn elide-reader-meta [m]\n  (dissoc m :file :line :column :end-column :end-line :source))\n\n(defn elide-analyzer-meta [m]\n  (dissoc m ::analyzed))\n\n(defn elide-irrelevant-meta [m]\n  (-> m elide-reader-meta elide-analyzer-meta))\n\n(defn analyze-wrap-meta [expr]\n  (let [form (:form expr)\n        m    (elide-irrelevant-meta (meta form))]\n    (if (some? (seq m))\n      (let [env (:env expr) ; take on expr's context ourselves\n            expr (assoc-in expr [:env :context] :expr) ; change expr to :expr\n            meta-expr (analyze-map (:env expr) m)]\n        {:op :with-meta :env env :form form\n         :meta meta-expr :expr expr :children [:meta :expr]})\n      expr)))\n\n(defn infer-type [env {:keys [tag] :as ast} _]\n  (if (or (nil? tag) (= 'function tag))\n    ;; infer-type won't get a chance to process :methods\n    ;; so treat :fn as a special case for now, could probably\n    ;; fix up to use :children to walk child nodes\n    (if (= :fn (:op ast))\n      (update ast :methods\n        (fn [ms] (into [] (map #(infer-type env % _)) ms)))\n      (if-some [tag (infer-tag env ast)]\n        (assoc ast :tag tag)\n        ast))\n    ast))\n\n(defn- repl-self-require? [env deps]\n  (and (:repl-env env) (some #{*cljs-ns*} deps)))\n\n#?(:clj\n   (defn ns-side-effects\n     [env {:keys [op] :as ast} opts]\n     (if (#{:ns :ns*} op)\n       (let [{:keys [name deps uses require-macros use-macros reload reloads]} ast]\n         (when (and *analyze-deps* (seq deps))\n           (analyze-deps\n             (if (repl-self-require? env deps) 'cljs.user name)\n             deps env (dissoc opts :macros-ns)))\n         (if *load-macros*\n           (do\n             (load-core)\n             (doseq [nsym (vals use-macros)]\n               (let [k (or (:use-macros reload)\n                         (get-in reloads [:use-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (doseq [nsym (vals require-macros)]\n               (let [k (or (:require-macros reload)\n                         (get-in reloads [:require-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (-> ast\n               (check-use-macros-inferring-missing env)\n               (check-rename-macros-inferring-missing env)))\n           (do\n             (check-uses\n               (when (and *analyze-deps* (seq uses))\n                 (missing-uses uses env))\n               env)\n             ast)))\n       ast)))\n\n;; A set of validators that can be used to do static type\n;; checking of runtime fns based on inferred argument types.\n(def invoke-arg-type-validators\n  (let [aget-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (rest %)))\n                        :warning-type :invalid-array-access}\n        aset-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (butlast (rest %))))\n                        :warning-type :invalid-array-access}]\n    {'cljs.core/checked-aget  aget-validator\n     'cljs.core/checked-aset  aset-validator\n     'cljs.core/checked-aget' aget-validator\n     'cljs.core/checked-aset' aset-validator}))\n\n(defn check-invoke-arg-types\n  [env {:keys [op] :as ast} opts]\n  (when (and (not (analyzed? ast))\n             #?(:clj  (= :invoke op)\n                :cljs (keyword-identical? :invoke op)))\n    (when-some [[name {:keys [valid? warning-type]}] (find invoke-arg-type-validators (-> ast :fn :info :name))]\n      (let [types (mapv :tag (:args ast))]\n        (when-not (valid? types)\n          (warning warning-type env\n            {:name  name\n             :types types})))))\n  (analyzed ast))\n\n#?(:clj\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (seq? form) (seq form)) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (map? form) (analyze-map env form)\n       (vector? form) (analyze-vector env form)\n       (set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) 'clj-nil\n                   (number? form) 'number\n                   (string? form) 'string\n                   (instance? Character form) 'string\n                   (true? form) 'boolean\n                   (false? form) 'boolean\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n#?(:cljs\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (impl/cljs-seq? form) (some? (seq form))) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (impl/cljs-map? form) (analyze-map env form)\n       (impl/cljs-vector? form) (analyze-vector env form)\n       (impl/cljs-set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? cljs.tagged-literals/JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) impl/CLJ_NIL_SYM\n                   (number? form) impl/NUMBER_SYM\n                   (string? form) impl/STRING_SYM\n                   (true? form) impl/BOOLEAN_SYM\n                   (false? form) impl/BOOLEAN_SYM\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n(def default-passes\n  #?(:clj  [infer-type check-invoke-arg-types ns-side-effects]\n     :cljs [infer-type check-invoke-arg-types]))\n\n(defn analyze* [env form name opts]\n  (let [passes *passes*\n        passes (if (nil? passes)\n                 default-passes\n                 passes)\n        form   (if (instance? LazySeq form)\n                 (if (seq form) form ())\n                 form)\n        ast    (analyze-form env form name opts)]\n    (reduce (fn [ast pass] (pass env ast opts)) ast passes)))\n\n(defn analyze\n  \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.\"\n  ([env form] (analyze env form nil))\n  ([env form name]\n   (analyze env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (wrapping-errors env\n     (if (analyzed? form)\n       (no-warn (analyze* env form name opts))\n       (analyze* env form name opts)))))\n\n(defn add-consts\n  \"Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source.\"\n  [compiler-state constants-map]\n  (reduce-kv\n    (fn [compiler-state sym value]\n      (let [ns (symbol (namespace sym))]\n        (update-in compiler-state\n          [::namespaces ns :defs (symbol (name sym))] merge\n          {:const-expr\n           (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n             (analyze (empty-env) value))})))\n    compiler-state constants-map))\n\n#?(:clj\n   (defn- source-path\n     \"Returns a path suitable for providing to tools.reader as a 'filename'.\"\n     [x]\n     (cond\n       (instance? File x) (.getAbsolutePath ^File x)\n       :default (str x))))\n\n(defn resolve-symbol [sym]\n  (if (and (not (namespace sym))\n           (dotted-symbol? sym))\n    sym\n    (:name (binding [*private-var-access-nowarn* true]\n             (resolve-var (assoc @env/*compiler* :ns (get-namespace *cljs-ns*))\n               sym)))))\n\n#?(:clj\n   (defn forms-seq*\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([^Reader rdr] (forms-seq* rdr nil))\n     ([^Reader rdr filename]\n      {:pre [(instance? Reader rdr)]}\n      (let [eof-sentinel (Object.)\n            opts (merge\n                   {:eof eof-sentinel}\n                   (if (and filename (= (util/ext filename) \"cljc\"))\n                     {:read-cond :allow :features #{:cljs}}))\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq_\n            (fn forms-seq_ []\n              (lazy-seq\n                (let [form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))\n                                     reader/resolve-symbol resolve-symbol]\n                             (reader/read opts pbr))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq_))))))]\n        (forms-seq_)))))\n\n#?(:clj\n   (defn forms-seq\n     \"DEPRECATED: Seq of Clojure/ClojureScript forms from [f], which can be anything\n     for which `clojure.java.io/reader` can produce a `java.io.Reader`. Optionally\n     accepts a [filename] argument, which the reader will use in any emitted errors.\"\n     ([f] (forms-seq f (source-path f)))\n     ([f filename] (forms-seq f filename false))\n     ([f filename return-reader?]\n      (let [rdr (io/reader f)\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq*\n            (fn forms-seq* []\n              (lazy-seq\n                (let [eof-sentinel (Object.)\n                      form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))]\n                             (reader/read pbr nil eof-sentinel))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq*))))))]\n        (if (true? return-reader?)\n          [(forms-seq*) rdr]\n          (forms-seq*))))))\n\n#?(:clj\n   (defn gen-user-ns\n     [src]\n     (if (sequential? src)\n       (symbol (str \"cljs.user.source$form$\" (util/content-sha (pr-str src) 7)))\n       (let [full-name (str src)\n             name (.substring full-name\n                    (inc (.lastIndexOf full-name \"/\"))\n                    (.lastIndexOf full-name \".\"))]\n         (symbol (str \"cljs.user.\" name (util/content-sha full-name 7)))))))\n\n#?(:clj\n   (defn ^:dynamic parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n\n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src]\n      (parse-ns src nil\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (ensure\n        (let [src (if (symbol? src)\n                    (util/ns->source src)\n                    src)\n              ijs\n              (binding [env/*compiler* (if (false? (:restore opts))\n                                         env/*compiler*\n                                         (atom @env/*compiler*))\n                        *cljs-ns* 'cljs.user\n                        *cljs-file* src\n                        *macro-infer*\n                        (or (when (contains? opts :macro-infer)\n                              (:macro-infer opts))\n                          false)\n                        *analyze-deps*\n                        (or (when (contains? opts :analyze-deps)\n                              (:analyze-deps opts))\n                          false)\n                        *load-macros*\n                        (or (when (contains? opts :load-macros)\n                              (:load-macros opts))\n                          false)]\n                (let [rdr (when-not (sequential? src) (io/reader src))]\n                  (try\n                    (loop [forms (if rdr\n                                   (forms-seq* rdr (source-path src))\n                                   src)\n                           ret (merge\n                                 {:file         dest\n                                  :source-file  (when rdr src)\n                                  :source-forms (when-not rdr src)\n                                  :macros-ns    (:macros-ns opts)\n                                  :requires     (cond-> #{'cljs.core}\n                                                  (get-in @env/*compiler* [:options :emit-constants])\n                                                  (conj constants-ns-sym))}\n                                 (when (and dest (.exists ^File dest))\n                                   {:lines (with-open [reader (io/reader dest)]\n                                             (-> reader line-seq count))}))]\n                      (if (seq forms)\n                        (let [env (empty-env)\n                              ast (no-warn (analyze env (first forms) nil opts))]\n                          (cond\n                            (= :ns (:op ast))\n                            (let [ns-name (:name ast)\n                                  ns-name (if (and (= 'cljs.core ns-name)\n                                                   (= \"cljc\" (util/ext src)))\n                                            'cljs.core$macros\n                                            ns-name)\n                                  deps (merge (:uses ast) (:requires ast))]\n                              (merge\n                                {:ns           (or ns-name 'cljs.user)\n                                 :provides     [ns-name]\n                                 :requires     (if (= 'cljs.core ns-name)\n                                                 (set (vals deps))\n                                                 (cond-> (conj (set (vals deps)) 'cljs.core)\n                                                   (get-in @env/*compiler* [:options :emit-constants])\n                                                   (conj constants-ns-sym)))\n                                 :file         dest\n                                 :source-file  (when rdr src)\n                                 :source-forms (when-not rdr src)\n                                 :ast          ast\n                                 :macros-ns    (or (:macros-ns opts)\n                                                   (= 'cljs.core$macros ns-name))}\n                                (when (and dest (.exists ^File dest))\n                                  {:lines (with-open [reader (io/reader dest)]\n                                            (-> reader line-seq count))})))\n\n                            (= :ns* (:op ast))\n                            (let [deps (merge (:uses ast) (:requires ast))]\n                              (recur (rest forms)\n                                (cond-> (update-in ret [:requires] into (set (vals deps)))\n                                  ;; we need to defer generating the user namespace\n                                  ;; until we actually need or it will break when\n                                  ;; `src` is a sequence of forms - António Monteiro\n                                  (not (:ns ret))\n                                  (assoc :ns (gen-user-ns src) :provides [(gen-user-ns src)]))))\n\n                            :else ret))\n                        ret))\n                    (finally\n                      (when rdr\n                        (.close ^Reader rdr))))))]\n          (cond-> ijs\n            (not (contains? ijs :ns))\n            (merge\n              {:ns (gen-user-ns src)\n               :provides [(gen-user-ns src)]})))))))\n\n#?(:clj\n   (defn- cache-analysis-ext\n     ([] (cache-analysis-ext (get-in @env/*compiler* [:options :cache-analysis-format] :transit)))\n     ([format]\n      (if (and (= format :transit) @transit) \"json\" \"edn\"))))\n\n#?(:clj\n   (defn build-affecting-options [opts]\n     (select-keys opts\n       [:static-fns :fn-invoke-direct :optimize-constants :elide-asserts :target :nodejs-rt\n        :cache-key :checked-arrays :language-out])))\n\n#?(:clj\n   (defn build-affecting-options-sha [path opts]\n     (let [m (assoc (build-affecting-options opts) :path path)]\n       (util/content-sha (pr-str m) 7))))\n\n#?(:clj\n   (defn ^File cache-base-path\n     ([path]\n      (cache-base-path path nil))\n     ([path opts]\n      (io/file (System/getProperty \"user.home\")\n        \".cljs\" \".aot_cache\" (util/clojurescript-version)\n        (build-affecting-options-sha path opts)))))\n\n#?(:clj\n   (defn cacheable-files\n     ([rsrc ext]\n      (cacheable-files rsrc ext nil))\n     ([rsrc ext opts]\n      (let [{:keys [ns]} (parse-ns rsrc)\n            path (cache-base-path (util/path rsrc) opts)\n            name (util/ns->relpath ns nil File/separatorChar)]\n        (into {}\n          (map\n            (fn [[k v]]\n              [k (io/file path\n                   (if (and (= (str \"cljs\" File/separatorChar \"core$macros\") name)\n                         (= :source k))\n                     (str \"cljs\" File/separatorChar \"core.cljc\")\n                     (str name v)))]))\n          {:source (str \".\" ext)\n           :output-file \".js\"\n           :source-map \".js.map\"\n           :analysis-cache-edn (str \".\" ext \".cache.edn\")\n           :analysis-cache-json (str \".\" ext \".cache.json\")})))))\n\n#?(:clj\n   (defn cache-file\n     \"Given a ClojureScript source file returns the read/write path to the analysis\n      cache file. Defaults to the read path which is usually also the write path.\"\n     ([src] (cache-file src \"out\"))\n     ([src output-dir] (cache-file src (parse-ns src) output-dir))\n     ([src ns-info output-dir]\n      (cache-file src ns-info output-dir :read nil))\n     ([src ns-info output-dir mode]\n      (cache-file src ns-info output-dir mode nil))\n     ([src ns-info output-dir mode opts]\n      {:pre [(map? ns-info)]}\n      (let [ext (cache-analysis-ext)]\n        (if-let [core-cache\n                 (and (= mode :read)\n                      (= (:ns ns-info) 'cljs.core)\n                      (io/resource (str \"cljs/core.cljs.cache.aot.\" ext)))]\n          core-cache\n          (let [aot-cache-file\n                (when (util/url? src)\n                  ((keyword (str \"analysis-cache-\" ext))\n                    (cacheable-files src (util/ext src) opts)))]\n            (if (and aot-cache-file (.exists ^File aot-cache-file))\n              aot-cache-file\n              (let [target-file (util/to-target-file output-dir ns-info\n                                  (util/ext (:source-file ns-info)))]\n                (io/file (str target-file \".cache.\" ext))))))))))\n\n#?(:clj\n   (defn requires-analysis?\n     \"Given a src, a resource, and output-dir, a compilation output directory\n      return true or false depending on whether src needs to be (re-)analyzed.\n      Can optionally pass cache, the analysis cache file.\"\n     ([src] (requires-analysis? src \"out\"))\n     ([src output-dir]\n      (let [cache (cache-file src output-dir)]\n        (requires-analysis? src cache output-dir nil)))\n     ([src cache output-dir]\n      (requires-analysis? src cache output-dir nil))\n     ([src cache output-dir opts]\n      (cond\n        (util/url? cache)\n        (let [path (.getPath ^URL cache)]\n          (if (or (.endsWith path \"cljs/core.cljs.cache.aot.edn\")\n                  (.endsWith path \"cljs/core.cljs.cache.aot.json\"))\n            false\n            (throw (Exception. (str \"Invalid anlaysis cache, must be file not URL \" cache)))))\n\n        (and (util/file? cache)\n             (not (.exists ^File cache)))\n        true\n\n        :else\n        (let [out-src   (util/to-target-file output-dir (parse-ns src))\n              cache-src (:output-file (cacheable-files src (util/ext src) opts))]\n          (if (and (not (.exists out-src))\n                   (not (.exists ^File cache-src)))\n            true\n            (or (not cache) (util/changed? src cache))))))))\n\n#?(:clj\n   (defn- get-spec-vars\n     []\n     (when-let [spec-ns (find-ns 'cljs.spec.alpha)]\n       (locking load-mutex\n         {:registry-ref (ns-resolve spec-ns 'registry-ref)\n          :speced-vars  (ns-resolve spec-ns '_speced_vars)})))\n   :cljs\n   (let [registry-ref (delay (get (ns-interns* 'cljs.spec.alpha$macros) 'registry-ref))\n         ;; Here, we look up the symbol '-speced-vars because ns-interns*\n         ;; is implemented by invoking demunge on the result of js-keys.\n         speced-vars  (delay (get (ns-interns* 'cljs.spec.alpha$macros) '-speced-vars))]\n     (defn- get-spec-vars []\n       (when (some? (find-ns-obj 'cljs.spec.alpha$macros))\n         {:registry-ref @registry-ref\n          :speced-vars  @speced-vars}))))\n\n(defn dump-specs\n  \"Dumps registered speced vars for a given namespace into the compiler\n  environment.\"\n  [ns]\n  (let [spec-vars (get-spec-vars)\n        ns-str    (str ns)]\n    (swap! env/*compiler* update-in [::namespaces ns]\n      merge\n      (when-let [registry-ref (:registry-ref spec-vars)]\n        {:cljs.spec/registry-ref\n         (into []\n           (filter (fn [[k _]] (= ns-str (namespace k))))\n           @@registry-ref)})\n      (when-let [speced-vars (:speced-vars spec-vars)]\n        {:cljs.spec/speced-vars\n         (into []\n           (filter\n             (fn [v]\n               (or (= ns-str (namespace v))\n                   (= ns (-> v meta :fdef-ns)))))\n           @@speced-vars)}))))\n\n(defn register-specs\n  \"Registers speced vars found in a namespace analysis cache.\"\n  [cached-ns]\n  #?(:clj (try\n            (locking load-mutex\n              (clojure.core/require 'cljs.spec.alpha))\n            (catch Throwable t)))\n  (let [{:keys [registry-ref speced-vars]} (get-spec-vars)]\n    (when-let [registry (seq (:cljs.spec/registry-ref cached-ns))]\n      (when registry-ref\n        (swap! @registry-ref into registry)))\n    (when-let [vars (seq (:cljs.spec/speced-vars cached-ns))]\n      (when speced-vars\n        (swap! @speced-vars into vars)))))\n\n#?(:clj\n   (defn write-analysis-cache\n     ([ns cache-file]\n       (write-analysis-cache ns cache-file nil))\n     ([ns ^File cache-file src]\n      (util/mkdirs cache-file)\n      (dump-specs ns)\n      (let [ext (util/ext cache-file)\n            analysis (dissoc (get-in @env/*compiler* [::namespaces ns]) :macros)]\n        (case ext\n          \"edn\"  (spit cache-file\n                   (str \";; Analyzed by ClojureScript \" (util/clojurescript-version) \"\\n\"\n                     (pr-str analysis)))\n          \"json\" (when-let [{:keys [writer write]} @transit]\n                   (with-open [os (io/output-stream cache-file)]\n                     (write (writer os :json transit-write-opts) analysis)))))\n      (when src\n        (.setLastModified ^File cache-file (util/last-modified src))))))\n\n#?(:clj\n   (defn read-analysis-cache\n     ([cache-file src]\n      (read-analysis-cache cache-file src nil))\n     ([^File cache-file src opts]\n       ;; we want want to keep dependency analysis information\n       ;; don't revert the environment - David\n      (let [{:keys [ns]} (parse-ns src\n                           (merge opts\n                             {:restore false\n                              :analyze-deps true\n                              :load-macros true}))\n            ext          (util/ext cache-file)\n            cached-ns    (case ext\n                           \"edn\"  (edn/read-string (slurp cache-file))\n                           \"json\" (let [{:keys [reader read]} @transit]\n                                    (with-open [is (io/input-stream cache-file)]\n                                      (read (reader is :json transit-read-opts)))))]\n        (when (or *verbose* (:verbose opts))\n          (util/debug-prn \"Reading analysis cache for\" (str src)))\n        (swap! env/*compiler*\n          (fn [cenv]\n            (do\n              (register-specs cached-ns)\n              (doseq [x (get-in cached-ns [::constants :order])]\n                (register-constant! x))\n              (-> cenv\n                (assoc-in [::namespaces ns] cached-ns)))))))))\n\n(defn analyze-form-seq\n  ([forms]\n   (analyze-form-seq forms\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([forms opts]\n   (analyze-form-seq forms opts false))\n  ([forms opts return-last?]\n   (let [env (assoc (empty-env) :build-options opts)]\n     (binding [*file-defs* nil\n               #?@(:clj [*unchecked-if* false\n                         *unchecked-arrays* false])\n               *cljs-ns* 'cljs.user\n               *cljs-file* nil\n               reader/*alias-map* (or reader/*alias-map* {})]\n       (loop [ns nil forms forms last-ast nil]\n         (if (some? forms)\n           (let [form (first forms)\n                 env  (assoc env :ns (get-namespace *cljs-ns*))\n                 ast  (analyze env form nil opts)]\n             (if (= (:op ast) :ns)\n               (recur (:name ast) (next forms) ast)\n               (recur ns (next forms) ast)))\n           (if return-last?\n             last-ast\n             ns)))))))\n\n(defn ensure-defs\n  \"Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)\"\n  [ns]\n  (swap! env/*compiler* update-in [::namespaces ns :defs] #(or % {})))\n\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n\n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f]\n      (analyze-file f\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([f opts]\n      (analyze-file f false opts))\n     ([f skip-cache opts]\n      (binding [*file-defs*        (atom #{})\n                *unchecked-if*     false\n                *unchecked-arrays* false\n                *cljs-warnings*    *cljs-warnings*]\n        (let [output-dir (util/output-directory opts)\n              res        (cond\n                           (instance? File f) f\n                           (instance? URL f) f\n                           (re-find #\"^file://\" f) (URL. f)\n                           :else (io/resource f))]\n          (assert res (str \"Can't find \" f \" in classpath\"))\n          (ensure\n            (let [ns-info (parse-ns res)\n                  path    (if (instance? File res)\n                            (.getPath ^File res)\n                            (.getPath ^URL res))\n                  cache   (when (:cache-analysis opts)\n                            (cache-file res ns-info output-dir :read opts))]\n              (when-not (get-in @env/*compiler* [::namespaces (:ns ns-info) :defs])\n                (if (or skip-cache (not cache) (requires-analysis? res cache output-dir opts))\n                  (binding [*cljs-ns* 'cljs.user\n                            *cljs-file* path\n                            reader/*alias-map* (or reader/*alias-map* {})]\n                    (when (or *verbose* (:verbose opts))\n                      (util/debug-prn \"Analyzing\" (str res)))\n                    (let [env (assoc (empty-env) :build-options opts)\n                          ns  (with-open [rdr (io/reader res)]\n                                (loop [ns nil forms (seq (forms-seq* rdr (util/path res)))]\n                                  (if forms\n                                    (let [form (first forms)\n                                          env (assoc env :ns (get-namespace *cljs-ns*))\n                                          ast (analyze env form nil opts)]\n                                      (cond\n                                        (= (:op ast) :ns)\n                                        (recur (:name ast) (next forms))\n\n                                        (and (nil? ns) (= (:op ast) :ns*))\n                                        (recur (gen-user-ns res) (next forms))\n\n                                        :else\n                                        (recur ns (next forms))))\n                                    ns)))]\n                      (ensure-defs ns)\n                      (when (and cache (true? (:cache-analysis opts)))\n                        (write-analysis-cache ns cache res))))\n                  (try\n                    (read-analysis-cache cache res opts)\n                    (catch Throwable e\n                      (analyze-file f true opts))))))))))))\n","~:reader-features",["^Y",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.analyzer/*cljs-ns*","cljs.analyzer/*cljs-file*","cljs.analyzer/*checked-arrays*","cljs.analyzer/*check-alias-dupes*","cljs.analyzer/*cljs-static-fns*","cljs.analyzer/*fn-invoke-direct*","cljs.analyzer/*cljs-macros-path*","cljs.analyzer/*cljs-macros-is-classpath*","cljs.analyzer/*cljs-dep-set*","cljs.core/with-meta","cljs.analyzer/*analyze-deps*","cljs.analyzer/*load-tests*","cljs.analyzer/*load-macros*","cljs.analyzer/*reload-macros*","cljs.analyzer/*macro-infer*","cljs.analyzer/*passes*","cljs.analyzer/*file-defs*","cljs.analyzer/*private-var-access-nowarn*","cljs.analyzer/constants-ns-sym","cljs.analyzer/*verbose*","cljs.analyzer/-cljs-macros-loaded","cljs.core.atom","cljs.analyzer/*cljs-warnings*","cljs.analyzer/unchecked-arrays?","cljs.core/*unchecked-arrays*","cljs.analyzer/compiler-options","cljs.core/deref","cljs.core.get","cljs.env/*compiler*","cljs.analyzer/get-externs","cljs.analyzer/checked-arrays","cljs.core/not","cljs.analyzer/js-reserved","cljs.analyzer/es5-allowed","cljs.analyzer/SENTINEL","var_args","G__74051","cljs.analyzer/gets","js/Error","m","k0","k1","k2","k3","cljs.analyzer/munge-path","ss","cljs.core/munge","G__74056","cljs.analyzer/ns->relpath","ns","cljs.analyzer.ns__GT_relpath","ext","clojure.string/replace","cljs.core/name","G__74060","cljs.analyzer/topo-sort","x","get-deps","cljs.analyzer.topo_sort","cljs.core/sorted-map","cljs.core/memoize","depth","state","memo-get-deps","deps","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core.fnil","cljs.core/into","seq__74061","cljs.core/seq","chunk__74062","count__74063","i__74064","temp__5753__auto__","cljs.core/chunked-seq?","c__4591__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","dep","seq__74073","chunk__74074","count__74075","i__74076","vec__74087","cljs.core.nth","vec__74094","<depth","_","cljs.core.subseq","cljs.core/<","clojure.set/difference","cljs.core._EQ_","cljs.core.distinct","cljs.core.apply","cljs.core/concat","cljs.core/vals","cljs.analyzer/ast?","cljs.core/map?","cljs.core/contains?","js/cljs","js/cljs.analyzer","js/cljs.analyzer.error-message","method-table__4654__auto__","prefer-table__4655__auto__","method-cache__4656__auto__","cached-hierarchy__4657__auto__","hierarchy__4658__auto__","fexpr__74102","cljs.core/MultiFn","cljs.core.symbol","cljs.analyzer/error-message","warning-type","info","clojure.string.join","p__74113","map__74114","cljs.core/--destructure-map","ns-sym","js-provide","clojure.string/includes?","p__74117","map__74118","or__4160__auto__","overwritten-protocol","cljs.core.pr_str","p__74164","map__74165","name","types","G__74166","cljs.core/every?","cljs.core/rest","cljs.core/butlast","p__74192","map__74193","munged","clojure.string.split","p1__74191#","cljs.core.map","p__74197","map__74198","var","p__74200","map__74201","p__74202","map__74203","protocol","method","p__74206","map__74207","module-type","file","p__74211","map__74212","preprocess","p__74214","map__74215","p__74216","map__74217","warn-type","form","type","property","G__74218","cljs.core/Keyword","cljs.analyzer/default-warning-handler","env","extra","s","*print-fn*-orig-val__74221","*print-fn*-temp-val__74222","cljs.core/*print-fn*","cljs.core/*print-err-fn*","cljs.core.println","G__74223","G__74224","cljs.analyzer/message","cljs.analyzer/*cljs-warning-handlers*","cljs.analyzer/repeat-char","c","n","ret","cljs.analyzer/hex-format","pad","hex","len","cljs.analyzer/gen-constant-id","value","prefix","cljs.core/Symbol","cljs.core/type","cljs.core.subs","p1__74229#","G__74242","cljs.analyzer/register-constant!","val","cljs.analyzer.register_constant_BANG_","cenv","G__74245","cljs.core.update_in","table","cljs.core.assoc","p__74248","map__74249","seen","order","constants","G__74251","cljs.core.conj","cljs.analyzer/default-namespaces","cljs.analyzer/namespaces","js/cljs.analyzer.t_cljs$analyzer74253","cljs.analyzer/t_cljs$analyzer74253","_74255","meta74254","this__4404__auto__","writer__4405__auto__","opt__4406__auto__","cljs.core/-write","cljs.analyzer/->t_cljs$analyzer74253","G__74272","cljs.analyzer/get-namespace","key","cljs.analyzer.get_namespace","temp__5755__auto__","cljs.core.get_in","cljs.analyzer/get-line","cljs.core/meta","cljs.analyzer/get-col","G__74286","cljs.analyzer/intern-macros","cljs.analyzer.intern_macros","reload","cljs.analyzer.gets","cljs.core/assoc-in","cljs.core/ns-interns*","cljs.core.filter","p__74304","vec__74306","v","p__74296","vec__74297","k","vm","cljs.core.into","cljs.analyzer/empty-env","val__73946__auto__","cljs.env.default_compiler_env","p1__74313#","cljs.core/PersistentVector","p__74315","map__74317","cljs.analyzer/source-info->error-data","line","column","G__74319","cljs.analyzer/source-info","cljs.analyzer.source_info","G__74323","cljs.core.merge","cljs.core/select-keys","cljs.analyzer/warning","seq__74327","chunk__74328","count__74329","i__74330","handler","cljs.analyzer/accumulating-warning-handler","warn-acc","cljs.core/conj","cljs.analyzer/replay-accumulated-warnings","p1__74361#","cljs.core/run!","G__74366","cljs.analyzer/error-data","phase","cljs.analyzer.error_data","symbol","cljs.analyzer/compile-syntax-error","msg","cljs.core.ex_info","G__74377","cljs.analyzer/error","cljs.analyzer.error","cause","cljs.analyzer/analysis-error?","ex","cljs.core/ex-data","cljs.analyzer/has-error-data?","cljs.analyzer/implicit-nses","cljs.analyzer/implicit-import?","suffix","cljs.analyzer/confirm-var-exist-warning","G__74390","G__74391","cljs.analyzer/get-expander","cljs.analyzer/lib&sublib","lib","temp__5751__auto__","xs","cljs.core/re-matches","cljs.core.drop","cljs.analyzer/loaded-js-ns?","cljs.analyzer/internal-js-module-exists?","js-module-index","module","cljs.core.mapcat","p__74402","vec__74403","cljs.analyzer/js-module-exists?*","cljs.analyzer/js-module-exists?","cljs.analyzer/node-module-dep?","e74408","cljs.core/*target*","cljs.core/boolean","js/require.resolve","cljs.analyzer/dep-has-global-exports?","vec__74413","global-exports","G__74419","cljs.analyzer/confirm-var-exists","warn","cljs.analyzer.confirm_var_exists","missing-fn","sufstr","suffix-str","cljs.analyzer/confirm-var-exists-throw","G__74425","cljs.analyzer/resolve-ns-alias","cljs.analyzer.resolve_ns_alias","not-found","sym","G__74430","cljs.analyzer/resolve-macro-ns-alias","cljs.analyzer.resolve_macro_ns_alias","cljs.analyzer/confirm-ns","cljs.core.not_EQ_","cljs.analyzer/core-name?","mac","cljs.analyzer/public-name?","var-ast","cljs.analyzer/js-tag?","cljs.core/namespace","cljs.analyzer/normalize-js-tag","cljs.core/symbol","cljs.core/vec","cljs.analyzer/->type-set","t","cljs.analyzer.impl/cljs-set?","cljs.analyzer/canonicalize-type","cljs.core/empty?","res","cljs.core.disj","G__74451","cljs.analyzer/add-types","args-arr__4792__auto__","len__4771__auto__","i__4772__auto__","argseq__4793__auto__","cljs.core/IndexedSeq","seq74448","G__74449","G__74450","self__4758__auto__","t1","t2","clojure.set.union","ts","cljs.analyzer.add_types","cljs.analyzer/alias->type","G__74459","cljs.analyzer/has-extern?*","pre","externs","me","cljs.core/find","tag","cljs.analyzer.has_extern_QMARK__STAR_","top","vec__74463","x'","externs'","xmeta","G__74467","cljs.analyzer/has-extern?","cljs.analyzer.has_extern_QMARK_","cljs.core/last","clojure.string/starts-with?","G__74470","cljs.analyzer/js-tag","cljs.analyzer.js_tag","tag-type","vec__74471","p","G__74474","cljs.analyzer/dotted-symbol?","goog.string/contains","cljs.analyzer/munge-node-lib","cljs.analyzer/munge-global-export","cljs.analyzer/resolve-alias","and__4149__auto__","fexpr__74479","cljs.analyzer/ns->module-type","js/cljs.analyzer.resolve*","fexpr__74481","cljs.analyzer/resolve*","full-ns","current-ns","cljs.analyzer/extern-pre","cljs.core/merge","G__74484","cljs.analyzer/node-like?","cljs.analyzer.node_like_QMARK_","opts","cljs.analyzer/private-var-access-exceptions","sym-ast","sym-name","cljs.analyzer/required?","cljs.core/set","cljs.analyzer/invokeable-ns?","cljs.analyzer/resolve-invokeable-ns","G__74490","cljs.analyzer/handle-symbol-local","lb","G__74494","cljs.analyzer/resolve-var","cljs.analyzer.resolve_var","confirm","default?","locals","symn","shadowed-by-local","ret-tag","G__74501","G__74502","G__74503","idx","resolved","p1__74492#","cljs.core.update","suf","qualified-symbol","G__74510","G__74511","G__74512","cljs.analyzer/resolve-existing-var","cljs.analyzer/confirm-bindings","names","seq__74516","chunk__74517","count__74518","i__74519","ev","cljs.analyzer/resolve-macro-var","namespaces","clojure.string/ends-with?","cljs.analyzer.impl/CLJS_CORE_MACROS_SYM","cljs.analyzer/specials","cljs.analyzer/*recur-frames*","cljs.analyzer/*loop-lets*","cljs.analyzer/*allow-redef*","cljs.analyzer/*allow-ns*","cljs.analyzer/analyze-keyword","cljs.analyzer/get-tag","e","cljs.analyzer/find-matching-method","f","params","methods","cljs.core/some","cljs.analyzer/type?","proto","p__74535","map__74536","cljs.analyzer/unwrap-quote","op","expr","cljs.core/keyword-identical?","cljs.analyzer/infer-if","map__74537","then-tag","G__74538","G__74539","cljs.analyzer/infer-tag","else-tag","G__74540","G__74541","cljs.core/symbol-identical?","cljs.analyzer.impl/IGNORE_SYM","cljs.analyzer.impl/NOT_NATIVE","cljs.analyzer.impl/BOOLEAN_OR_SEQ","p__74543","map__74544","cljs.analyzer/infer-invoke","args","map__74548","cljs.analyzer.impl/ANY_SYM","G__74554","G__74555","G__74556","G__74557","G__74558","G__74560","G__74561","G__74563","G__74564","G__74566","G__74567","G__74568","cljs.analyzer.impl/BOOLEAN_SYM","G__74569","G__74570","init","G__74571","G__74572","js/cljs.analyzer.parse","fexpr__74576","cljs.analyzer/parse","rest","G__74582","cljs.analyzer/var-meta","cljs.analyzer.var_meta","expr-env","ks","user-meta","uks","cljs.core/keys","cljs.core/zipmap","p1__74577#","cljs.core/List","cljs.core.sequence","cljs.core.concat","p1__74578#","arglists","arglists'","cljs.core/second","cljs.core.doall","cljs.analyzer/analyze","cljs.analyzer/var-ast","*private-var-access-nowarn*-orig-val__74584","*private-var-access-nowarn*-temp-val__74585","cljs.core.dissoc","temp__5757__auto__","var-ns","G__74586","G__74587","p__74589","vec__74590","cljs.analyzer/predicate->tag","cljs.analyzer/simple-predicate-induced-tag","test","cljs.core/list?","cljs.core/symbol?","analyzed-fn","*cljs-warnings*-orig-val__74618","*cljs-warnings*-temp-val__74619","cljs.core.repeat","G__74620","G__74621","G__74622","cljs.analyzer/type-check-induced-tag","*cljs-warnings*-orig-val__74624","*cljs-warnings*-temp-val__74625","G__74626","G__74627","G__74629","fexpr__74628","analyzed-type","*cljs-warnings*-orig-val__74630","*cljs-warnings*-temp-val__74631","G__74633","G__74634","cljs.analyzer/truth-induced-tag","analyzed-symbol","*cljs-warnings*-orig-val__74635","*cljs-warnings*-temp-val__74636","G__74637","G__74638","cljs.core/set?","cljs.analyzer/set-test-induced-tags","vec__74640","local","G__74643","p__74645","vec__74646","then","else","test-expr","*recur-frames*-orig-val__74649","*recur-frames*-temp-val__74650","cljs.core/cons","G__74651","G__74652","then-expr","*allow-redef*-orig-val__74653","*allow-redef*-temp-val__74654","G__74655","G__74656","else-expr","*allow-redef*-orig-val__74657","*allow-redef*-temp-val__74658","cljs.core/*unchecked-if*","p__74663","vec__74664","tests","thens","default","cljs.core/vector?","*recur-frames*-orig-val__74670","*recur-frames*-temp-val__74671","p1__74659#","cljs.core.mapv","p1__74660#","nodes","cljs.core.some_fn","cljs.core/number?","cljs.core/string?","cljs.core/char?","p__74672","vec__74673","throw-form","throw-expr","*recur-frames*-orig-val__74678","*recur-frames*-temp-val__74679","G__74680","G__74681","p__74687","vec__74688","seq__74689","first__74690","body","map__74691","catchenv","p1__74682#","catch?","p1__74683#","cljs.core.every_pred","cljs.core/seq?","p1__74684#","finally?","p1__74685#","cblocks","dblock","fblock","parser","vec__74699","seq__74700","first__74701","forms*","parser*","G__74702","finally","*recur-frames*-orig-val__74703","*recur-frames*-temp-val__74704","G__74706","G__74707","cljs.core.gensym","vec__74710","seq__74711","first__74712","cb","cblock","p__74717","vec__74718","seq__74719","first__74720","catch","*recur-frames*-orig-val__74725","*recur-frames*-temp-val__74726","G__74727","G__74728","try","*recur-frames*-orig-val__74729","*recur-frames*-temp-val__74730","G__74731","G__74732","cljs.analyzer/valid-proto","cljs.analyzer/elide-env","ast","cljs.analyzer/replace-env-pass","new-env","cljs.analyzer/ast-children","g","p__74733","map__74734","cljs.analyzer/constant-value?","fexpr__74736","fexpr__74739","p__74740","map__74741","cljs.analyzer/const-expr->constant-value","G__74742","G__74743","cljs.analyzer/earmuffed?","cljs.analyzer/core-ns?","pfn","doc","const?","sym-meta","dynamic","ns-name","clash-ns","sym-ns","conj-to-set","var-name","init-expr","*recur-frames*-orig-val__74752","*recur-frames*-temp-val__74753","*allow-ns*-orig-val__74754","*allow-ns*-temp-val__74755","G__74757","G__74758","G__74759","fn-var?","export-as","export-val","G__74760","const-expr","*passes*-orig-val__74761","*passes*-temp-val__74762","G__74763","G__74764","protocol-symbol","p1__74746#","top-fn-meta","G__74766","G__74767","goog-type","G__74769","G__74770","cljs.analyzer/analyze-fn-method-param","p__74772","p__74773","vec__74775","vec__74778","arg-id","nmeta","shadow","param","cljs.analyzer/analyze-fn-method-body","recur-frames","*recur-frames*-orig-val__74781","*recur-frames*-temp-val__74782","cljs.analyzer/analyze-fn-method","analyze-body?","vec__74783","param-names","variadic","cljs.core.remove","step","step-init","cljs.core.reduce","cljs.core.map_indexed","cljs.core/vector","params'","fixed-arity","recur-frame","body-env","body-form","recurs","cljs.analyzer/fn-name-var","fn-scope","name-var","cljs.analyzer/analyze-fn-methods-pass2*","menv","meths","p1__74792#","cljs.analyzer/analyze-fn-methods-pass2","p__74798","vec__74799","seq__74800","first__74801","vec__74802","named-fn?","form-meta","proto-impl","proto-inline","G__74809","p1__74794#","*allow-ns*-orig-val__74810","*allow-ns*-temp-val__74811","mfa","cljs.core.transduce","cljs.core/max","cljs.core/assoc","*allow-ns*-orig-val__74812","*allow-ns*-temp-val__74813","cljs.core.vary_meta","cljs.core/dissoc","js-doc","children","inferred-ret-tag","inferred-tags","cljs.core.partial","cljs.core/=","variadic-methods","cljs.core.comp","cljs.core.take","variadic-params","param-counts","cljs.analyzer/analyze-wrap-meta","p__74822","vec__74823","seq__74824","first__74825","bindings","exprs","cljs.core/even?","vec__74826","vec__74829","n->fexpr","cljs.core.juxt","cljs.core.partition","context","meth-env","bes","p__74832","vec__74834","map__74837","fexpr","*cljs-warnings*-orig-val__74840","*cljs-warnings*-temp-val__74841","G__74843","G__74844","be","G__74845","p__74846","p__74847","vec__74848","map__74851","G__74852","G__74853","be'","G__74858","G__74859","cljs.analyzer/analyze-do-statements*","p1__74860#","G__74861","G__74862","cljs.analyzer/analyze-do-statements","*recur-frames*-orig-val__74863","*recur-frames*-temp-val__74864","p__74869","vec__74870","seq__74871","first__74872","statements","G__74873","G__74874","ret-env","G__74875","G__74876","cljs.analyzer/analyze-let-binding-init","loop-lets","*loop-lets*-orig-val__74881","*loop-lets*-temp-val__74882","cljs.analyzer/get-let-tag","cljs.analyzer/analyze-let-bindings*","encl-env","vec__74895","col","p1__74885#","cljs.analyzer/analyze-let-bindings","*recur-frames*-orig-val__74902","*recur-frames*-temp-val__74903","cljs.analyzer/analyze-let-body*","G__74905","G__74906","cljs.analyzer/analyze-let-body","*recur-frames*-orig-val__74910","*loop-lets*-orig-val__74911","*recur-frames*-temp-val__74912","*loop-lets*-temp-val__74913","p__74914","vec__74915","seq__74916","first__74917","cljs.analyzer/analyze-let","is-loop","widened-tags","vec__74920","p__74924","vec__74925","widened-tag","G__74931","*cljs-warning-handlers*-orig-val__74932","*cljs-warning-handlers*-temp-val__74933","nil->any","cljs.core/identity","p__74938","vec__74939","seq__74940","first__74941","frame","add-implicit-target-object?","G__74943","*recur-frames*-orig-val__74944","*recur-frames*-temp-val__74945","p1__74937#","G__74946","G__74947","cljs.core/reset!","tags","cljs.analyzer/analyze-const","map__74954","G__74955","G__74956","p__74958","vec__74959","p__74964","vec__74966","seq__74967","first__74968","ctor","*recur-frames*-orig-val__74971","*recur-frames*-temp-val__74972","enve","ctorexpr","ctor-var","G__74974","fexpr__74973","record-args","argexprs","p1__74962#","known-num-fields","argc","fexpr__74976","p__74977","vec__74978","target","alt","vec__74981","*recur-frames*-orig-val__74985","*recur-frames*-temp-val__74986","*private-var-access-nowarn*-orig-val__74987","*private-var-access-nowarn*-temp-val__74988","texpr","G__74995","cljs.analyzer/analyze-symbol","*cljs-warnings*-orig-val__75001","*cljs-warnings*-temp-val__75002","cljs.analyzer/analyze-seq","vexpr","G__75003","meta","fexpr__75005","cljs.analyzer/foreign-dep?","js-index","vec__75009","map__75012","foreign","G__75018","cljs.analyzer/analyze-deps","cljs.analyzer.analyze_deps","compiler","*cljs-dep-set*-orig-val__75020","*cljs-dep-set*-temp-val__75021","p1__75013#","cljs.core/str","cljs.core.interpose","seq__75024","chunk__75025","count__75026","i__75027","dep-name","cljs.analyzer/missing-use?","js-lib","cljs.analyzer/missing-rename?","cljs.analyzer/missing-use-macro?","the-ns","cljs.core/find-macros-ns","cljs.analyzer/missing-rename-macro?","cljs.analyzer/missing-uses","uses","p__75046","vec__75047","cljs.analyzer/missing-renames","renames","p__75050","vec__75051","qualified-sym","cljs.analyzer/missing-use-macros","use-macros","p__75057","vec__75058","cljs.analyzer/inferred-use-macros","p__75061","vec__75062","cljs.analyzer/inferred-rename-macros","rename-macros","p__75065","vec__75066","cljs.analyzer/check-uses","seq__75069","chunk__75070","count__75071","i__75072","vec__75082","vec__75085","G__75089","cljs.analyzer/check-use-macros","cljs.analyzer.check_use_macros","missing-uses","seq__75093","chunk__75094","count__75095","i__75096","vec__75105","vec__75109","p__75115","map__75116","cljs.analyzer/check-use-macros-inferring-missing","p1__75112#","maybe-macros","remove-missing-uses","ast'","p1__75113#","p1__75114#","p__75123","map__75124","cljs.analyzer/check-rename-macros-inferring-missing","p1__75120#","missing-renames","missing-rename-macros","remove-missing-renames","p1__75121#","p1__75122#","cljs.analyzer/parse-ns-error-msg","spec","cljs.analyzer/basic-validate-ns-spec","macros?","cljs.core/sequential?","cljs.core/odd?","fs","cljs.core/frequencies","cljs.analyzer/parse-ns-excludes","p__75132","vec__75133","seq__75134","first__75135","filters","valid-kws","err","kw","refs","p1__75131#","cljs.core/nnext","cljs.core.merge_with","p__75140","vec__75141","seq__75142","first__75143","cljs.analyzer/use->require","only?","p1__75139#","cljs.analyzer/parse-require-spec","aliases","vec__75144","seq__75145","first__75146","vec__75147","map__75150","vec__75151","js-module-provides","js-module-name","alias","referred","renamed","cljs.core/hash-map","referred-without-renamed","rk","uk","renk","alias-type","lib'","fexpr__75154","cljs.core.interleave","p__75155","vec__75156","original","cljs.analyzer/parse-import-spec","import-map","p1__75159#","seq__75160","chunk__75161","count__75162","i__75163","vec__75170","vec__75173","cljs.analyzer/macro-autoload-ns?","map__75176","require-macros","cljs.analyzer/clj-ns->cljs-ns","segs","cljs.analyzer/canonicalize-specs","specs","quoted-spec-or-kw","canonicalize","cljs.analyzer/canonicalize-import-specs","cljs.analyzer/desugar-ns-specs","map__75178","p1__75177#","require","indexed","p__75179","vec__75180","seq__75181","first__75182","sugar-keys","remove-from-spec","pred","vec__75183","l","r","cljs.core/split-with","cljs.core/complement","replace-refer-macros","reload-spec?","fexpr__75186","to-macro-specs","remove-sugar","require-specs","vec__75187","cljs.analyzer/find-def-clash","segments","to-check","cljs.core.reductions","seq__75190","chunk__75191","count__75192","i__75193","vec__75200","vec__75203","cljs.analyzer/macro-ns-name","name-str","goog.string/endsWith","cljs.analyzer/check-duplicate-aliases","old","new","seq__75206","chunk__75207","count__75208","i__75209","old-aliases","new-aliases","p__75218","vec__75219","p__75222","vec__75223","entry","cljs.analyzer/merge-ns-info","deep-merge-keys","p__75228","vec__75229","seq__75230","first__75231","G__75232","segment","map__75233","map__75234","vec__75235","docstring","mdocstr","metadata","excludes","core-renames","p__75238","vec__75239","spec-parsers","valid-forms","reloads","requires","imports","p__75242","vec__75243","seq__75244","first__75245","libs","libspec","fexpr__75246","fexpr__75247","cljs.core/disj","p1__75226#","p1__75227#","cljs.core/merge-with","p__75248","vec__75249","spec-map","p__75252","vec__75253","G__75256","ns-info","G__75257","fexpr__75258","fexpr__75259","fexpr__75260","fexpr__75261","p__75265","vec__75266","quoted-specs","not-quoted","cljs.core/keyword?","p1__75262#","map__75269","map__75270","p__75271","vec__75272","p__75275","vec__75276","seq__75277","first__75278","p1__75263#","p1__75264#","p__75279","vec__75280","require-info","G__75283","fexpr__75284","fexpr__75285","fexpr__75286","fexpr__75287","p__75288","vec__75289","cljs.analyzer/parse-type","tsym","fields","pmasks","fld","protocols","G__75292","G__75293","p1__75294#","cljs.analyzer/property-symbol?","p__75295","vec__75296","cljs.analyzer/classify-dot-form","member","js/cljs.analyzer.build-dot-form","fexpr__75300","p1__75299#","cljs.analyzer/build-dot-form","p__75301","vec__75302","prop","p__75305","vec__75306","cljs.analyzer/build-method-call","meth","p__75309","vec__75310","p__75313","vec__75314","p__75317","vec__75318","meth-expr","dot-form","cljs.core.list_STAR_","cljs.analyzer/analyze-dot","field","member+","map__75322","dot-action","targetexpr","target-tag","fexpr__75324","vec__75325","pre'","G__75328","G__75329","p1__75321#","p__75330","vec__75331","seq__75332","first__75333","vec__75334","seq__75335","first__75336","*recur-frames*-orig-val__75337","*recur-frames*-temp-val__75338","cljs.analyzer/get-js-tag","cljs.analyzer/js-star-interp","end","inner","cljs.core/LazySeq","G__75339","G__75340","cljs.analyzer/js-star-seg","G__75341","cljs.analyzer/NUMERIC_SET","cljs.analyzer/numeric-type?","cljs.analyzer/array-types","cljs.analyzer/array-type?","cljs.analyzer/analyze-js-star-args","js-op","p__75342","vec__75343","arg","cljs.analyzer/analyze-js-star*","jsform","numeric","validate","valid-types?","p1__75346#","op-match?","p1__75347#","cljs.analyzer/analyze-js-star","*recur-frames*-orig-val__75348","*recur-frames*-temp-val__75349","p__75350","vec__75351","seq__75352","first__75353","code","cljs.analyzer/unsorted-map?","cljs.core/sorted?","cljs.analyzer/analyzed","cljs.analyzer/analyzed?","cljs.analyzer/all-values?","p1__75354#","cljs.analyzer/valid-arity?","method-params","cljs.analyzer/record-tag?","cljs.analyzer/record-basis","positional-factory","cljs.analyzer/record-with-field?","cljs.analyzer/invalid-arity?","max-fixed-arity","p__75356","vec__75357","seq__75358","first__75359","cljs.analyzer/parse-invoke*","kw?","cur-ns","HO-invoke?","bind-f-expr?","bind-args?","map__75360","macro","deprecated?","no-warn?","arg-syms","cljs.core.repeatedly","cljs.core/gensym","f-sym","G__75361","G__75362","G__75363","p1__75355#","ana-expr","field-access-form","*cljs-warnings*-orig-val__75364","*cljs-warnings*-temp-val__75365","cljs.analyzer/parse-invoke","*recur-frames*-orig-val__75366","*recur-frames*-temp-val__75367","p__75368","map__75369","cljs.analyzer/desugar-dotted-expr","G__75370","G__75371","G__75372","map__75373","lcls","cljs.analyzer/excluded?","cljs.analyzer/used?","cljs.analyzer/get-expander-ns","nstr","G__75374","cljs.analyzer/get-expander*","nsym","mvar","cached-var","cljs.core/Delay","cljs.analyzer/get-macroexpand-check-var","cljs.core/find-ns-obj","cljs.analyzer/var->sym","cljs.analyzer/do-macroexpand-check","mac-var","mchk","e75375","G__75376","G__75377","cljs.analyzer/check-macro-arity","mac-sym","map__75379","variadic?","offset","cljs.core/ffirst","p1__75378#","cljs.core/nthrest","cljs.analyzer/macroexpand-1*","form'","e75383","cljs.analyzer.impl/cljs-seq?","sym'","cljs.analyzer.impl/JS_STAR_SYM","mac-var-ns","mac-var-name","opname","vec__75380","seq__75381","first__75382","cljs.analyzer.impl/DOT_SYM","cljs.analyzer.impl/NEW_SYM","cljs.analyzer/macroexpand-1","err__74010__auto__","e75384","cljs.analyzer/analyze-seq*","cljs.analyzer/analyze-seq*-wrap","e75385","G__75387","cljs.analyzer.analyze_seq","cljs.analyzer/analyze-list","mform","cljs.analyzer/analyze-map","*recur-frames*-orig-val__75390","*recur-frames*-temp-val__75391","p1__75388#","vs","*recur-frames*-orig-val__75392","*recur-frames*-temp-val__75393","p1__75389#","G__75394","items","*recur-frames*-orig-val__75396","*recur-frames*-temp-val__75397","p1__75395#","G__75398","cljs.analyzer/analyze-vector","*recur-frames*-orig-val__75400","*recur-frames*-temp-val__75401","p1__75399#","G__75402","cljs.analyzer/analyze-set","*recur-frames*-orig-val__75404","*recur-frames*-temp-val__75405","p1__75403#","G__75406","cljs.analyzer/analyze-js-value","keys","vals","*recur-frames*-orig-val__75409","*recur-frames*-temp-val__75410","p1__75407#","*recur-frames*-orig-val__75411","*recur-frames*-temp-val__75412","p1__75408#","cljs.analyzer/record-ns+name","cljs.analyzer/analyze-record","vec__75414","_items_","*recur-frames*-orig-val__75417","*recur-frames*-temp-val__75418","G__75419","G__75420","cljs.analyzer/elide-reader-meta","cljs.analyzer/elide-analyzer-meta","cljs.analyzer/elide-irrelevant-meta","meta-expr","p__75422","map__75423","cljs.analyzer/infer-type","ms","p1__75421#","cljs.analyzer/repl-self-require?","cljs.analyzer/invoke-arg-type-validators","p1__75424#","p1__75425#","aget-validator","aset-validator","p__75426","map__75427","cljs.analyzer/check-invoke-arg-types","vec__75428","map__75431","valid?","cljs.analyzer/analyze-form","cljs.core/record?","cljs.analyzer.impl/cljs-map?","cljs.analyzer.impl/cljs-vector?","cljs.tagged-literals/JSValue","cljs.analyzer.impl/CLJ_NIL_SYM","cljs.analyzer.impl/NUMBER_SYM","cljs.analyzer.impl/STRING_SYM","G__75432","cljs.analyzer/default-passes","cljs.analyzer/analyze*","passes","pass","G__75434","cljs.analyzer.analyze","e75435","*cljs-warnings*-orig-val__75436","*cljs-warnings*-temp-val__75437","cljs.analyzer/add-consts","compiler-state","constants-map","cljs.core/reduce-kv","*passes*-orig-val__75438","*passes*-temp-val__75439","cljs.analyzer/resolve-symbol","*private-var-access-nowarn*-orig-val__75440","*private-var-access-nowarn*-temp-val__75441","registry-ref","speced-vars","cljs.analyzer/get-spec-vars","cljs.analyzer/dump-specs","spec-vars","ns-str","p__75442","vec__75443","cljs.analyzer/register-specs","cached-ns","map__75446","registry","vars","G__75448","cljs.analyzer/analyze-form-seq","forms","cljs.analyzer.analyze_form_seq","return-last?","*file-defs*-orig-val__75449","*cljs-ns*-orig-val__75450","*cljs-file*-orig-val__75451","*alias-map*-orig-val__75452","*file-defs*-temp-val__75453","*cljs-ns*-temp-val__75454","*cljs-file*-temp-val__75455","*alias-map*-temp-val__75456","cljs.tools.reader/*alias-map*","last-ast","cljs.analyzer/ensure-defs","p1__75457#"]],"~:used-vars",["^Y",["~$cljs.analyzer/NUMERIC_SET","~$cljs.core/mapcat","~$cljs.analyzer/analyze-map","~$cljs.analyzer/confirm-var-exists","~$clojure.string/join","~$cljs.analyzer/missing-uses","~$cljs.core/symbol-identical?","~$cljs.analyzer/analyze-record","~$cljs.analyzer/missing-use?","~$cljs.analyzer/constants-ns-sym","~$cljs.core/comp","~$cljs.analyzer/analyze-let-bindings","~$js/cljs.analyzer","~$cljs.core/rest","~$cljs.analyzer/resolve-var","~$cljs.analyzer/resolve-alias","~$cljs.core/even?","~$cljs.analyzer/merge-ns-info","~$cljs.analyzer/var->sym","~$cljs.analyzer/macroexpand-1*","~$cljs.analyzer/*cljs-dep-set*","~$cljs.core/str","~$cljs.core/char?","~$cljs.analyzer/analyzed?","~$cljs.analyzer/record-basis","~$cljs.analyzer/invalid-arity?","~$cljs.core/MultiFn","~$cljs.core/sequential?","~$cljs.analyzer/dotted-symbol?","~$cljs.core/odd?","~$clojure.string/starts-with?","~$cljs.analyzer/analyze-deps","~$cljs.analyzer/get-namespace","~$cljs.analyzer.impl/DOT_SYM","~$cljs.analyzer/*cljs-macros-is-classpath*","~$cljs.analyzer/elide-reader-meta","~$cljs.analyzer/handle-symbol-local","~$cljs.analyzer/resolve-invokeable-ns","~$cljs.analyzer/infer-type","~$cljs.analyzer/clj-ns->cljs-ns","~$cljs.analyzer/*fn-invoke-direct*","~$cljs.analyzer/js-tag?","~$cljs.analyzer/parse-invoke","~$cljs.analyzer/error-data","~$cljs.core/nthrest","~$cljs.analyzer/has-extern?*","~$cljs.analyzer/analyze-let","~$cljs.analyzer/constant-value?","~$clojure.string/split","~$cljs.analyzer/ensure-defs","~$cljs.core/vector?","~$cljs.analyzer/ast?","~$cljs.analyzer/foreign-dep?","~$js/cljs.analyzer.build-dot-form","~$cljs.core/filter","~$cljs.analyzer/checked-arrays","~$cljs.core/=","~$cljs.analyzer/hex-format","~$cljs.analyzer.impl/cljs-map?","~$cljs.analyzer/analyze-js-star-args","~$cljs.analyzer.impl/NOT_NATIVE","~$cljs.analyzer/es5-allowed","~$cljs.core/re-matches","~$cljs.analyzer/used?","~$cljs.analyzer/property-symbol?","~$cljs.core/doall","~$cljs.core/-write","~$cljs.analyzer/analyze","~$cljs.analyzer/analyze-fn-method","~$cljs.analyzer/t_cljs$analyzer74253","~$cljs.analyzer/source-info->error-data","~$cljs.analyzer/js-star-seg","~$cljs.analyzer/dep-has-global-exports?","~$cljs.analyzer/type?","~$js/cljs.analyzer.resolve*","~$cljs.analyzer/missing-use-macros","~$cljs.analyzer/register-specs","~$cljs.env/default-compiler-env","~$cljs.analyzer/-cljs-macros-loaded","~$cljs.core/count","~$cljs.analyzer/find-matching-method","~$cljs.core/deref","~$cljs.core/hash-map","~$cljs.analyzer.impl/cljs-seq?","~$cljs.analyzer/*cljs-warning-handlers*","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.analyzer/var-meta","~$cljs.analyzer/replay-accumulated-warnings","~$cljs.analyzer/desugar-ns-specs","~$cljs.core/apply","~$cljs.analyzer/analyze-seq*-wrap","~$cljs.analyzer/analyze-js-value","~$cljs.analyzer/topo-sort","~$cljs.analyzer/classify-dot-form","~$cljs.core/Keyword","~$cljs.analyzer/record-with-field?","~$goog.string/contains","~$cljs.analyzer/SENTINEL","~$cljs.core/last","~$cljs.analyzer/namespaces","~$cljs.core/mapv","~$cljs.analyzer/*checked-arrays*","~$cljs.analyzer/valid-proto","~$cljs.analyzer/compile-syntax-error","~$cljs.core/not=","~$cljs.analyzer/ns->relpath","~$cljs.analyzer/js-reserved","~$cljs.core/ns-interns*","~$cljs.core/distinct","~$cljs.core/string?","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.analyzer/check-use-macros","~$cljs.core/LazySeq","~$cljs.core/chunk-rest","~$cljs.core/atom","~$cljs.analyzer/basic-validate-ns-spec","~$cljs.analyzer/parse-type","~$cljs.analyzer/has-error-data?","~$cljs.core/concat","~$cljs.analyzer/all-values?","~$cljs.analyzer/desugar-dotted-expr","~$cljs.analyzer/check-rename-macros-inferring-missing","~$cljs.analyzer/infer-invoke","~$cljs.core/pr-str","~$cljs.analyzer/array-type?","~$cljs.analyzer/get-line","~$cljs.analyzer/excluded?","~$cljs.analyzer/array-types","~$cljs.analyzer/*check-alias-dupes*","~$clojure.string/ends-with?","~$cljs.analyzer/add-types","~$cljs.analyzer/node-like?","~$cljs.analyzer.impl/BOOLEAN_SYM","~$cljs.analyzer/resolve-existing-var","~$cljs.analyzer/required?","~$cljs.analyzer/analyze-fn-method-body","~$cljs.analyzer/parse-invoke*","~$clojure.string/includes?","~$cljs.core/set","~$cljs.analyzer/truth-induced-tag","~$cljs.analyzer/ast-children","~$cljs.analyzer/analyze-symbol","~$cljs.analyzer/analyze-seq*","~$cljs.analyzer/analyze-keyword","~$cljs.analyzer/predicate->tag","~$cljs.analyzer/elide-analyzer-meta","~$cljs.analyzer/*loop-lets*","~$cljs.core/empty?","~$cljs.analyzer/munge-global-export","~$cljs.core/memoize","~$cljs.analyzer/js-tag","~$cljs.core/fnil","~$cljs.core/merge-with","~$cljs.analyzer/get-expander","~$cljs.analyzer/->type-set","~$cljs.env/*compiler*","~$cljs.analyzer/analyze-let-body","~$cljs.analyzer/check-use-macros-inferring-missing","~$cljs.analyzer/*load-tests*","~$cljs.analyzer/canonicalize-type","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.analyzer/extern-pre","~$cljs.core/reset!","~$cljs.analyzer/get-col","~$js/cljs.analyzer.error-message","~$cljs.core/conj","~$cljs.analyzer/gets","~$cljs.analyzer/*cljs-warnings*","~$cljs.analyzer/alias->type","~$cljs.core/vary-meta","~$cljs.analyzer/error-message","~$cljs.core/zipmap","~$cljs.analyzer/analyze-const","~$cljs.core/update","~$js/require.resolve","~$cljs.analyzer/simple-predicate-induced-tag","~$cljs.core/run!","~$cljs.core/with-meta","~$cljs.core/namespace","~$cljs.analyzer/missing-rename?","~$cljs.analyzer/*allow-redef*","~$js/cljs","~$cljs.core/map","~$cljs.analyzer/*reload-macros*","~$cljs.analyzer/macro-ns-name","~$cljs.analyzer/parse-import-spec","~$cljs.analyzer/dump-specs","~$cljs.analyzer/inferred-use-macros","~$cljs.analyzer/compiler-options","~$cljs.analyzer/use->require","~$cljs.analyzer/earmuffed?","~$cljs.analyzer/public-name?","~$cljs.analyzer/*macro-infer*","~$cljs.core/PersistentVector","~$cljs.analyzer/analyze-js-star*","~$cljs.analyzer/default-warning-handler","~$cljs.analyzer/intern-macros","~$cljs.analyzer/const-expr->constant-value","~$cljs.analyzer/parse-ns-error-msg","~$cljs.core/get-in","~$cljs.core/List","~$cljs.analyzer/record-ns+name","~$cljs.analyzer.impl/JS_STAR_SYM","~$cljs.core/vals","~$cljs.core/swap!","~$js/cljs.analyzer.parse","~$cljs.core/-add-method","~$cljs.analyzer/missing-renames","~$cljs.analyzer/implicit-nses","~$cljs.core/number?","~$cljs.analyzer/check-macro-arity","~$cljs.analyzer/normalize-js-tag","~$cljs.core/get","~$cljs.analyzer/unchecked-arrays?","~$cljs.analyzer/repeat-char","~$cljs.analyzer/analyze-js-star","~$cljs.analyzer/analyze-do-statements*","~$cljs.analyzer/analyze-let-bindings*","~$cljs.analyzer/register-constant!","~$cljs.analyzer/do-macroexpand-check","~$cljs.analyzer/valid-arity?","~$cljs.core/partition","~$cljs.analyzer/core-name?","~$js/cljs.analyzer.t_cljs$analyzer74253","~$cljs.analyzer/*recur-frames*","~$cljs.analyzer/*load-macros*","~$cljs.analyzer/resolve-macro-ns-alias","~$cljs.analyzer/get-let-tag","~$cljs.analyzer/macroexpand-1","~$cljs.analyzer.impl/cljs-vector?","~$cljs.analyzer/analyze-fn-methods-pass2*","~$clojure.set/difference","~$cljs.analyzer/empty-env","~$cljs.analyzer/analyze-let-body*","~$cljs.core/symbol","~$cljs.analyzer/canonicalize-import-specs","~$cljs.analyzer/loaded-js-ns?","~$cljs.analyzer/analyze-vector","~$cljs.analyzer/unwrap-quote","~$cljs.analyzer/resolve-ns-alias","~$cljs.analyzer/inferred-rename-macros","~$cljs.core/*unchecked-arrays*","~$cljs.core/record?","~$cljs.analyzer/gen-constant-id","~$cljs.analyzer/missing-use-macro?","~$cljs.core/nnext","~$cljs.analyzer/analyzed","~$cljs.analyzer/macro-autoload-ns?","~$cljs.analyzer/lib&sublib","~$cljs.analyzer/default-passes","~$cljs.analyzer/get-tag","~$cljs.analyzer/resolve*","~$cljs.analyzer.impl/IGNORE_SYM","~$cljs.analyzer/confirm-var-exist-warning","~$cljs.core/set?","~$cljs.core/sorted?","~$cljs.analyzer/type-check-induced-tag","~$cljs.analyzer.impl/CLJS_CORE_MACROS_SYM","~$cljs.core/ex-info","~$cljs.core/meta","~$cljs.analyzer/analyze-do-statements","~$cljs.core/list?","~$cljs.core/second","~$cljs.core/find-ns-obj","~$cljs.analyzer/*allow-ns*","~$cljs.analyzer/private-var-access-exceptions","~$cljs.analyzer/get-expander*","~$cljs.analyzer/*cljs-static-fns*","~$cljs.analyzer/analyze-seq","~$cljs.core/println","~$clojure.string/replace","~$cljs.analyzer/find-def-clash","~$cljs.core/interleave","~$cljs.analyzer/resolve-macro-var","~$cljs.analyzer/munge-node-lib","~$cljs.analyzer.impl/ANY_SYM","~$cljs.core/*target*","~$cljs.analyzer/fn-name-var","~$cljs.core/next","~$cljs.core/vec","~$cljs.analyzer/internal-js-module-exists?","~$cljs.core/sorted-map","~$cljs.analyzer/munge-path","~$cljs.core/select-keys","~$cljs.analyzer/ns->module-type","~$cljs.analyzer/get-macroexpand-check-var","~$cljs.analyzer/analyze-set","~$cljs.analyzer/build-method-call","~$cljs.analyzer/analyze-fn-method-param","~$cljs.analyzer/has-extern?","~$cljs.core/*print-fn*","~$cljs.analyzer/js-module-exists?","~$cljs.analyzer/confirm-var-exists-throw","~$cljs.analyzer/missing-rename-macro?","~$cljs.analyzer/numeric-type?","~$cljs.analyzer/repl-self-require?","~$cljs.analyzer/elide-env","~$cljs.core/not","~$cljs.analyzer/confirm-bindings","~$cljs.analyzer/var-ast","~$cljs.analyzer/analyze-wrap-meta","~$cljs.core/disj","~$cljs.core/cons","~$cljs.analyzer/node-module-dep?","~$cljs.core/assoc","~$cljs.analyzer/get-js-tag","~$cljs.analyzer/get-spec-vars","~$cljs.core/interpose","~$clojure.set/union","~$cljs.analyzer/parse","~$cljs.core/assoc-in","~$cljs.analyzer.impl/BOOLEAN_OR_SEQ","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.analyzer/warning","~$cljs.analyzer/implicit-import?","~$cljs.analyzer/get-externs","~$cljs.tools.reader/*alias-map*","~$cljs.analyzer/check-uses","~$cljs.analyzer/set-test-induced-tags","~$cljs.tagged-literals/JSValue","~$cljs.analyzer.impl/NEW_SYM","~$cljs.analyzer/*passes*","~$cljs.analyzer/invoke-arg-type-validators","~$cljs.core/ex-data","~$cljs.analyzer/get-expander-ns","~$cljs.core/reduce-kv","~$cljs.analyzer/*file-defs*","~$cljs.analyzer/*private-var-access-nowarn*","~$cljs.analyzer/*cljs-file*","~$cljs.core/repeat","~$cljs.analyzer/*verbose*","~$cljs.analyzer/message","~$cljs.analyzer/confirm-ns","~$cljs.core/*unchecked-if*","~$cljs.core/munge","~$cljs.core/some-fn","~$cljs.analyzer/default-namespaces","~$cljs.analyzer/accumulating-warning-handler","~$cljs.analyzer/canonicalize-specs","~$cljs.analyzer/source-info","~$cljs.analyzer/analyze-form","~$cljs.core/first","~$cljs.core/butlast","~$cljs.core/seq?","~$cljs.analyzer/analyze-form-seq","~$cljs.analyzer/js-module-exists?*","~$cljs.analyzer/resolve-symbol","~$cljs.analyzer/record-tag?","~$cljs.analyzer/invokeable-ns?","~$cljs.analyzer/add-consts","~$cljs.analyzer/error","~$cljs.analyzer/core-ns?","~$cljs.analyzer/*cljs-macros-path*","~$cljs.core/name","~$cljs.analyzer/analyze-dot","~$cljs.core/subs","~$cljs.core/merge","~$cljs.analyzer/parse-require-spec","~$cljs.core/every?","~$cljs.analyzer/*cljs-ns*","~$cljs.core/update-in","~$cljs.analyzer/*analyze-deps*","~$cljs.analyzer/replace-env-pass","~$cljs.analyzer/analysis-error?","~$cljs.analyzer/->t_cljs$analyzer74253","~$js/Error","~$cljs.core/list*","~$cljs.core/find-macros-ns","~$cljs.core/boolean","~$cljs.analyzer/js-star-interp","~$cljs.analyzer/build-dot-form","~$cljs.core/type","~$cljs.analyzer/analyze-list","~$cljs.analyzer/analyze*","~$cljs.analyzer/parse-ns-excludes","~$cljs.analyzer/elide-irrelevant-meta","~$cljs.core/some","~$cljs.analyzer/analyze-fn-methods-pass2","~$cljs.analyzer/specials","~$cljs.analyzer/unsorted-map?","~$cljs.analyzer/check-invoke-arg-types","~$cljs.analyzer/check-duplicate-aliases","~$goog.string/endsWith","~$cljs.core/drop","~$cljs.analyzer/infer-tag","~$cljs.core/chunked-seq?","~$cljs.analyzer/analyze-let-binding-init","~$cljs.analyzer.impl/cljs-set?","~$cljs.analyzer/infer-if"]]],"~:cache-keys",["~#cmap",[["^1Y","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Y",[]],"~:deps-syms",["^1A","~$goog.dom.HtmlElement"]]],["^1Y","cljs/tools/reader/impl/utils.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^1F","^1:"]]],["^1Y","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","~$goog.array","~$goog.asserts"]]],["^1Y","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","cljs/env.cljc"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@"]]],["^1Y","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;>","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1Y","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^;B"]]],["^1Y","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?"]]],["^1Y","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","cljs/tools/reader/edn.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","~$cljs.tools.reader.impl.errors","^E","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","^1=","^1:","~$goog.string.StringBuffer"]]],["^1Y","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","cljs/tools/reader/impl/inspect.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@"]]],["^1Y","cljs/tools/reader.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^E","^;J","^;K","^;I","^;>","^1:","^;L"]]],["^1Y","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^1Y","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?","~$goog.reflect"]]],["^1Y","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?","~$goog.fs.blob","^;C","~$goog.html.SafeScript","~$goog.html.trustedtypes","^;E","^;F","^;G","^;H"]]],["^1Y","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;>","^;?","~$goog.html.SafeUrl","^;G","^;H","^;B"]]],["^1Y","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^;P","~$goog.html.SafeStyle","^;R","^;D","~$goog.html.uncheckedconversions","^;G","^;B"]]],["^1Y","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1Y","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;>","^;?","~$goog.dom.TagName","~$goog.dom.tags","^;P","^;V","~$goog.html.SafeStyleSheet","^;R","^;D","^;Q","^;E","^;F","~$goog.labs.userAgent.browser","^;A","^;G","^;H","^;B"]]],["^1Y","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;A"]]],["^1Y","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;>"]]],["^1Y","cljs/reader.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^;A","^1=","~$cljs.tools.reader.edn","^;L"]]],["^1Y","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1Y","cljs/tagged_literals.cljc"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^1G"]]],["^1Y","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;>","^;?","^1:","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1Y","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",[]]],["^1Y","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;>","^;A"]]],["^1Y","cljs/tools/reader/impl/errors.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^E","^1F","~$cljs.tools.reader.impl.inspect"]]],["^1Y","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^1:","^;L"]]],["^1Y","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","~$goog.dom.safe","^;W","^;G","^;B"]]],["^1Y","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;B"]]],["^1Y","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","cljs/tools/reader/reader_types.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^;J","^1:","^;L"]]],["^1Y","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;>","^;?","^;T","~$goog.math"]]],["^1Y","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?","^;U","^;P","^;V","^<0","^;R","^;D","^;G","^;B","^;E"]]],["^1Y","cljs/tools/reader/impl/commons.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^;I","^E","^;J"]]],["^1Y","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A"]]],["^1Y","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","~$goog.math.Long","~$goog.math.Integer","^1:","^;A","^;>","~$goog.Uri","^;L"]]],["^1Y","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;G","^;H","^;Q","^;?"]]],["^1Y","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;G","^;V","^;H","^;>","^;A","^;?","^;B"]]],["^1Y","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;N"]]],["^1Y","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@"]]],["^1Y","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?","^1:"]]],["^1Y","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^;?","^;H"]]],["^1Y","cljs/analyzer.cljc"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@","^1<","^1B","^1G","^1?","^1=","^E","^18","^1F","^1:"]]],["^1Y","cljs/analyzer/impl.cljc"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^;9",["^ ","^;:",null,"^;;",["^Y",[]],"^;<",["^1A","^1@"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/reader.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/macros.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env/macros.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/cljs/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/analyzer.cljc","^7",9,"^8",5,"^9",9,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M"],"^N",["^ ","^O","^P","^Q","^P","^R","^P","^S","^P","^T","^P","^U","^P","^V","^W"],"^X",["^Y",["^V","^Z","^[","^10"]],"~:shadow/js-access-properties",["^Y",["resolve"]],"^11","^12","^15",null,"^16",["^ ","^17","^18","^19","^1:","^1;","^1<","^1=","^1=","^1:","^1:","^1>","^1?","^1@","^1@","^1A","^1A","^E","^E","^1B","^1B","^18","^18","^1C","^E","^1?","^1?","^1D","^1B","^1E","^1F","^1<","^1<","^1F","^1F","^1G","^1G","^1H","^1G","^1I","^1="],"^1J",["^Y",["^1K","^1L"]],"~:shadow/js-access-global",["^Y",["require","Error"]],"^1M",null,"~:defs",["^ ","~$type?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1359,"^8",7,"^9",1359,"^:",12,"~:arglists",["^1O",["~$quote",["^1O",[["^1D","~$t"]]]]],"~:tag","~$boolean"],"^11","^3V","^6","cljs/analyzer.cljc","^:",12,"~:method-params",["^1O",[["^1D","~$t"]]],"~:protocol-impl",null,"~:arglists-meta",["^1O",[null,null]],"^8",1,"~:variadic?",false,"^7",1359,"~:ret-tag","^==","^9",1359,"~:max-fixed-arity",2,"^=<","^==","~:fn-var",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$t"]]]]]],"~$invalid-arity?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3623,"^8",8,"^9",3623,"^:",22,"~:private",true,"^=:",["^1O",["^=;",["^1O",[["~$argc","~$method-params","~$variadic","~$max-fixed-arity"]]]]]],"^=F",true,"^11","^2R","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^=G","^=H","^=I","^=J"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3623,"^=B",["^Y",[null,"^=="]],"^9",3623,"^=C",4,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=G","^=H","^=I","^=J"]]]]]],"~$record-basis",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3612,"^8",8,"^9",3612,"^:",20,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$tag"]]]]]],"^=F",true,"^11","^2Q","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^=L"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3612,"^=B",["^Y",[null,"~$clj","~$any"]],"^9",3612,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=L"]]]]]],"~$get-namespace",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",568,"^8",7,"^9",568,"^:",20,"^=:",["^1O",["^=;",["^1O",[["~$key"],["~$cenv","^=P"]]]]],"~:top-fn",["^ ","^=A",false,"~:fixed-arity",2,"^=C",2,"^=>",[["^=P"],["^=Q","^=P"]],"^=:",["^1O",[["^=P"],["^=Q","^=P"]]],"^=@",["^1O",[null,null]]]],"^11","^2Y","^6","cljs/analyzer.cljc","^:",20,"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^=P"],["^=Q","^=P"]],"^=:",["^1O",[["^=P"],["^=Q","^=P"]]],"^=@",["^1O",[null,null]]],"^=>",[["^=P"],["^=Q","^=P"]],"^=?",null,"^=S",2,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"~:methods",[["^ ","^=S",1,"^=A",false,"^=<","^=N"],["^ ","^=S",2,"^=A",false,"^=<",["^Y",[null,"^=N","~$cljs.core/IMap","~$clj-nil"]]]],"^7",568,"^9",568,"^=C",2,"^=D",true,"^=:",["^1O",[["^=P"],["^=Q","^=P"]]]],"~$error-message",["^ ","^11","^67","^6","cljs/analyzer.cljc","^7",257,"^8",1,"^9",257,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",257,"^8",11,"^9",257,"^:",24],"^=<","^2S"],"~$elide-reader-meta",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4044,"^8",7,"^9",4044,"^:",24,"^=:",["^1O",["^=;",["^1O",[["~$m"]]]]]],"^11","^30","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["~$m"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4044,"^=B",["^Y",["^=M","^=V"]],"^9",4044,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$m"]]]]]],"~$missing-rename?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2614,"^8",7,"^9",2614,"^:",22,"^=:",["^1O",["^=;",["^1O",[["~$sym","^=Q"]]]]]],"^11","^6@","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^=Z","^=Q"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2614,"^=B","^==","^9",2614,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z","^=Q"]]]]]],"~$resolve-invokeable-ns",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1118,"^8",7,"^9",1118,"^:",28,"^=:",["^1O",["^=;",["^1O",[["^1P","~$current-ns","^1D"]]]]]],"^11","^32","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["^1P","^>0","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1118,"^9",1118,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1P","^>0","^1D"]]]]]],"~$analyze-let",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2323,"^8",7,"^9",2323,"^:",18,"^=:",["^1O",["^=;",["^1O",[["~$encl-env",["~$_","~$bindings","~$&","~$exprs","^1T","~$form"],"~$is-loop","~$widened-tags"]]]]]],"^11","^3;","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["^>2","~$p__74914","^>6","^>7"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2323,"^=B","^=U","^9",2323,"^=C",4,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>2",["~$_","^>3","~$&","^>4","^1T","^>5"],"^>6","^>7"]]]]]],"~$var-meta",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1457,"^8",7,"^9",1457,"^:",15,"^=:",["^1O",["^=;",["^1O",[["~$var"],["^>:","~$expr-env"]]]]],"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^>:"],["^>:","^>;"]],"^=:",["^1O",[["^>:"],["^>:","^>;"]]],"^=@",["^1O",[null,null]]]],"^11","^48","^6","cljs/analyzer.cljc","^:",15,"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^>:"],["^>:","^>;"]],"^=:",["^1O",[["^>:"],["^>:","^>;"]]],"^=@",["^1O",[null,null]]],"^=>",[["^>:"],["^>:","^>;"]],"^=?",null,"^=S",2,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",1,"^=A",false,"^=<","^=N"],["^ ","^=S",2,"^=A",false,"^=<",["^Y",["^=N","^=V"]]]],"^7",1457,"^9",1457,"^=C",2,"^=D",true,"^=:",["^1O",[["^>:"],["^>:","^>;"]]]],"~$desugar-ns-specs",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2970,"^8",7,"^9",2970,"^:",23,"^=:",["^1O",["^=;",["^1O",[["~$args"]]]]],"~:doc","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"^11","^4:","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["^>="]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2970,"^=B",["^Y",[null,"^4S"]],"^9",2970,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>="]]]]],"^>>","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"~$replay-accumulated-warnings",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",696,"^8",8,"^9",696,"^:",35,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$warn-acc"]]]]]],"^=F",true,"^11","^49","^6","cljs/analyzer.cljc","^:",35,"^=>",["^1O",[["^>@"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",696,"^=B","^=V","^9",696,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>@"]]]]]],"~$js-tag?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",890,"^8",7,"^9",890,"^:",14,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"^11","^36","^6","cljs/analyzer.cljc","^:",14,"^=>",["^1O",[["~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",890,"^=B","^==","^9",890,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"~$classify-dot-form",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3306,"^8",8,"^9",3306,"^:",25,"^=F",true,"^=:",["^1O",["^=;",["^1O",[[["~$target","~$member","^>="]]]]]]],"^=F",true,"^11","^4?","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["~$p__75295"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3306,"^=B","~$cljs.core/IVector","^9",3306,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[["^>C","^>D","^>="]]]]]]],"~$ensure-defs",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4674,"^8",7,"^9",4674,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^1P"]]]]],"^>>","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"^11","^3>","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["^1P"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4674,"^=B",["^Y",[null,"^=N"]],"^9",4674,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1P"]]]]],"^>>","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"~$analyze-map",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3970,"^8",7,"^9",3970,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"^11","^2;","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3970,"^=B","^=N","^9",3970,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"~$NUMERIC_SET",["^ ","^11","^29","^6","cljs/analyzer.cljc","^7",3465,"^8",1,"^9",3465,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3465,"^8",6,"^9",3465,"^:",17],"^=<","~$cljs.core/ISet"],"~$analyze-record",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4032,"^8",7,"^9",4032,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^1D","~$x"]]]]]],"^11","^2@","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^1D","~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4032,"^=B","^=U","^9",4032,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$x"]]]]]],"~$analyze-seq*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3936,"^8",7,"^9",3936,"^:",19,"^=:",["^1O",["^=;",["^1O",[["~$op","^1D","^>5","~$name","~$opts"]]]]]],"^11","^5E","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^>M","^1D","^>5","^>N","^>O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3936,"^=B","^=N","^9",3936,"^=C",5,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>M","^1D","^>5","^>N","^>O"]]]]]],"~$constants-ns-sym",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",69,"^8",6,"^9",69,"^:",22],"^11","^2B","^6","cljs/analyzer.cljc","^:",22,"^8",1,"^7",69,"^9",69,"^=<","^9A","^>>","The namespace of the constants table as a symbol."],"~$resolve-alias",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1015,"^8",7,"^9",1015,"^:",20,"^=:",["^1O",["^=;",["^1O",[["^1P","^=Z"]]]]],"^>>","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"^11","^2H","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^1P","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1015,"^=B",["^Y",[null,"^=N"]],"^9",1015,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1P","^=Z"]]]]],"^>>","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"~$*cljs-dep-set*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",59,"^8",16,"^9",59,"^:",30,"~:dynamic",true],"^11","^2M","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>S",true,"^7",59,"^9",59,"^=<","^=N"],"~$merge-ns-info",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3055,"^8",8,"^9",3055,"^:",21,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$old","~$new","^1D"]]]]]],"^=F",true,"^11","^2J","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^>U","^>V","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3055,"^=B",["^Y",[null,"^=N","^=V"]],"^9",3055,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>U","^>V","^1D"]]]]]],"~$resolve-var",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1146,"^8",7,"^9",1146,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"],["^1D","^=Z","~$confirm"],["^1D","^=Z","^>X","~$default?"]]]]],"^>>","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.","^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^1D","^=Z"],["^1D","^=Z","^>X"],["^1D","^=Z","^>X","^>Y"]],"^=:",["^1O",[["^1D","^=Z"],["^1D","^=Z","^>X"],["^1D","^=Z","^>X","^>Y"]]],"^=@",["^1O",[null,null,null]]]],"^11","^2G","^6","cljs/analyzer.cljc","^:",18,"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^1D","^=Z"],["^1D","^=Z","^>X"],["^1D","^=Z","^>X","^>Y"]],"^=:",["^1O",[["^1D","^=Z"],["^1D","^=Z","^>X"],["^1D","^=Z","^>X","^>Y"]]],"^=@",["^1O",[null,null,null]]],"^=>",[["^1D","^=Z"],["^1D","^=Z","^>X"],["^1D","^=Z","^>X","^>Y"]],"^=?",null,"^=S",4,"^=@",["^1O",[null,null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<","^=N"],["^ ","^=S",4,"^=A",false,"^=<",["^Y",["^=M","^=N","^=U","^=V"]]]],"^7",1146,"^9",1146,"^=C",4,"^=D",true,"^=:",["^1O",[["^1D","^=Z"],["^1D","^=Z","^>X"],["^1D","^=Z","^>X","^>Y"]]],"^>>","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars."],"~$analyze-fn-method",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2029,"^8",8,"^9",2029,"^:",25,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$locals","^>5","~$type","~$analyze-body?"]]]]]],"^=F",true,"^11","^3Q","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^1D","^>[","^>5","^?0","^?1"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2029,"^=B",["^Y",["^=N","^=V"]],"^9",2029,"^=C",5,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>[","^>5","^?0","^?1"]]]]]],"~$t_cljs$analyzer74253",["^ ","~:num-fields",1,"~:protocols",["^Y",["~$cljs.core/IMeta","~$cljs.core/IDeref","~$cljs.core/IWithMeta"]],"^11","^3R","^6","cljs/analyzer.cljc","~:type",true,"~:anonymous",true,"^8",6,"^7",562,"~:record",false,"^=<","~$function","~:skip-protocol-flag",["^Y",["^?5","^?6","^?7"]]],"~$js-star-seg",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3455,"^8",7,"^9",3455,"^:",18,"^=:",["^1O",["^=;",["^1O",[["~$s"]]]]]],"^11","^3T","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["~$s"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3455,"^=B","^=M","^9",3455,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$s"]]]]]],"~$dep-has-global-exports?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",806,"^8",7,"^9",806,"^:",30,"^=:",["^1O",["^=;",["^1O",[["~$module"]]]]]],"^11","^3U","^6","cljs/analyzer.cljc","^:",30,"^=>",["^1O",[["^??"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",806,"^=B","^==","^9",806,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^??"]]]]]],"~$register-specs",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4584,"^8",7,"^9",4584,"^:",21,"^=:",["^1O",["^=;",["^1O",[["~$cached-ns"]]]]],"^>>","Registers speced vars found in a namespace analysis cache."],"^11","^3Y","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^?A"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4584,"^=B",["^Y",[null,"^=N","^=V"]],"^9",4584,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^?A"]]]]],"^>>","Registers speced vars found in a namespace analysis cache."],"~$get-externs",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",172,"^8",7,"^9",172,"^:",18,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"^11","^9E","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[[]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",172,"^=B","^=N","^9",172,"^=C",0,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"~$*passes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",65,"^8",16,"^9",65,"^:",24,"^>S",true],"^11","^9K","^6","cljs/analyzer.cljc","^:",24,"^8",1,"^>S",true,"^7",65,"^9",65,"^=<","^=N"],"~$has-extern?*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",948,"^8",7,"^9",948,"^:",19,"^=:",["^1O",["^=;",["^1O",[["~$pre","~$externs"],["^?E","^?F","~$top"]]]]],"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^?E","^?F"],["^?E","^?F","^?G"]],"^=:",["^1O",[["^?E","^?F"],["^?E","^?F","^?G"]]],"^=@",["^1O",[null,null]]]],"^11","^3:","^6","cljs/analyzer.cljc","^:",19,"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^?E","^?F"],["^?E","^?F","^?G"]],"^=:",["^1O",[["^?E","^?F"],["^?E","^?F","^?G"]]],"^=@",["^1O",[null,null]]],"^=>",[["^?E","^?F"],["^?E","^?F","^?G"]],"^=?",null,"^=S",3,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<",["^Y",["^==","^=N"]]]],"^7",948,"^9",948,"^=C",3,"^=D",true,"^=:",["^1O",[["^?E","^?F"],["^?E","^?F","^?G"]]]],"~$handle-symbol-local",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1141,"^8",7,"^9",1141,"^:",26,"^=:",["^1O",["^=;",["^1O",[["^=Z","~$lb"]]]]]],"^11","^31","^6","cljs/analyzer.cljc","^:",26,"^=>",["^1O",[["^=Z","^?I"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1141,"^=B",["^Y",[null,"^=U"]],"^9",1141,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z","^?I"]]]]]],"~$get-expander-ns",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3785,"^8",7,"^9",3785,"^:",22,"^=:",["^1O",["^=;",["^1O",[["^1D","~$nstr"]]]]]],"^11","^9N","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^1D","^?K"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3785,"^=B",["^Y",["~$cljs.core/Namespace","^=N","^=V"]],"^9",3785,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^?K"]]]]]],"~$message",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",680,"^8",7,"^9",680,"^:",14,"^=:",["^1O",["^=;",["^1O",[["^1D","~$s"]]]]]],"^11","^9U","^6","cljs/analyzer.cljc","^:",14,"^=>",["^1O",[["^1D","~$s"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",680,"^=B","^1E","^9",680,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$s"]]]]]],"~$parse-invoke",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3692,"^8",7,"^9",3692,"^:",19,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"^11","^37","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3692,"^9",3692,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"~$*cljs-warning-handlers*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",483,"^8",16,"^9",483,"^:",39,"^>S",true],"^11","^45","^6","cljs/analyzer.cljc","^:",39,"^8",1,"^>S",true,"^7",483,"^9",483,"^=<","^=N"],"~$analyze-seq*-wrap",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3941,"^8",7,"^9",3941,"^:",24,"^=:",["^1O",["^=;",["^1O",[["^>M","^1D","^>5","^>N","^>O"]]]]]],"^11","^4<","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["^>M","^1D","^>5","^>N","^>O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3941,"^9",3941,"^=C",5,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>M","^1D","^>5","^>N","^>O"]]]]]],"~$confirm-bindings",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1266,"^8",7,"^9",1266,"^:",23,"^=:",["^1O",["^=;",["^1O",[["^1D","~$names"]]]]],"^>>","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"^11","^93","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["^1D","^?R"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1266,"^=B","^=V","^9",1266,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^?R"]]]]],"^>>","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"~$has-extern?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",974,"^8",7,"^9",974,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^?E"],["^?E","^?F"]]]]],"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^?E"],["^?E","^?F"]],"^=:",["^1O",[["^?E"],["^?E","^?F"]]],"^=@",["^1O",[null,null]]]],"^11","^8V","^6","cljs/analyzer.cljc","^:",18,"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^?E"],["^?E","^?F"]],"^=:",["^1O",[["^?E"],["^?E","^?F"]]],"^=@",["^1O",[null,null]]],"^=>",[["^?E"],["^?E","^?F"]],"^=?",null,"^=S",2,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",1,"^=A",false,"^=<","^=N"],["^ ","^=S",2,"^=A",false,"^=<",["^Y",["^==","^=N"]]]],"^7",974,"^9",974,"^=C",2,"^=D",true,"^=:",["^1O",[["^?E"],["^?E","^?F"]]]],"~$foreign-dep?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2559,"^8",7,"^9",2559,"^:",19,"^=:",["^1O",["^=;",["^1O",[["~$dep"]]]]],"^=<","^=="],"^11","^3A","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^?U"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2559,"^=B","^==","^9",2559,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^?U"]]]]]],"~$missing-rename-macro?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2625,"^8",7,"^9",2625,"^:",28,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]]],"^11","^8Z","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2625,"^=B","^==","^9",2625,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]]],"~$missing-uses",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2632,"^8",7,"^9",2632,"^:",19,"^=:",["^1O",["^=;",["^1O",[["~$uses","^1D"]]]]]],"^11","^2>","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^?X","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2632,"^=B",["^Y",[null,"^=M","^=N"]],"^9",2632,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^?X","^1D"]]]]]],"~$get-macroexpand-check-var",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3837,"^8",12,"^9",3837,"^:",37,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"^11","^8R","^6","cljs/analyzer.cljc","^:",37,"^=>",["^1O",[[]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",6,"^=A",false,"^7",3837,"^=B",["^Y",["^=N","^=V"]],"^9",3837,"^=C",0,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"~$missing-use?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2606,"^8",7,"^9",2606,"^:",19,"^=:",["^1O",["^=;",["^1O",[["~$lib","^=Z","^=Q"]]]]]],"^11","^2A","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^?[","^=Z","^=Q"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2606,"^=B","^==","^9",2606,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^?[","^=Z","^=Q"]]]]]],"~$hex-format",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",497,"^8",8,"^9",497,"^:",18,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$s","~$pad"]]]]]],"^=F",true,"^11","^3F","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["~$s","^@1"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",497,"^=B","^1E","^9",497,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$s","^@1"]]]]]],"~$es5-allowed",["^ ","^11","^3J","^6","cljs/analyzer.cljc","^7",198,"^8",1,"^9",198,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",198,"^8",6,"^9",198,"^:",17],"^=<","^>J"],"~$source-info->error-data",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",661,"^8",8,"^9",661,"^:",31,"^=F",true,"^=:",["^1O",["^=;",["^1O",[[["^ ","~:keys",["~$file","~$line","~$column"]]]]]]]],"^=F",true,"^11","^3S","^6","cljs/analyzer.cljc","^:",31,"^=>",["^1O",[["~$p__74315"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",661,"^=B","^=U","^9",661,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^@5","^@6","^@7"]]]]]]]],"~$get-spec-vars",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4557,"^8",13,"^9",4557,"^:",26,"^=F",true,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"^=F",true,"^11","^9;","^6","cljs/analyzer.cljc","^:",26,"^=>",["^1O",[[]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",6,"^=A",false,"^7",4557,"^=B",["^Y",["^=U","^=V"]],"^9",4557,"^=C",0,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"~$analyze",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4210,"^8",7,"^9",4210,"^:",14,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"],["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]]]]],"^>>","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.","^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^1D","^>5"],["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]],"^=:",["^1O",[["^1D","^>5"],["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]]],"^=@",["^1O",[null,null,null]]]],"^11","^3P","^6","cljs/analyzer.cljc","^:",14,"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^1D","^>5"],["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]],"^=:",["^1O",[["^1D","^>5"],["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]]],"^=@",["^1O",[null,null,null]]],"^=>",[["^1D","^>5"],["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]],"^=?",null,"^=S",4,"^=@",["^1O",[null,null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<","^=N"],["^ ","^=S",4,"^=A",false]],"^7",4210,"^9",4210,"^=C",4,"^=D",true,"^=:",["^1O",[["^1D","^>5"],["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]]],"^>>","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set."],"~$used?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3779,"^8",7,"^9",3779,"^:",12,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^=<","^=="],"^11","^3L","^6","cljs/analyzer.cljc","^:",12,"^=>",["^1O",[["^1D","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3779,"^=B","^==","^9",3779,"^=C",2,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]]],"~$node-module-dep?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",793,"^8",7,"^9",793,"^:",23,"^=:",["^1O",["^=;",["^1O",[["^??"]]]]],"^=<","^=="],"^11","^98","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["^??"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",793,"^=B","^==","^9",793,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^??"]]]]]],"~$parse-type",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3257,"^8",7,"^9",3257,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^>M","^1D",["~$_","~$tsym","~$fields","~$pmasks","~$body","^1T","^>5"]]]]]]],"^11","^4W","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^>M","^1D","~$p__75288"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3257,"^=B","^=U","^9",3257,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>M","^1D",["~$_","^@>","^@?","^@@","^@A","^1T","^>5"]]]]]]],"~$gets",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",204,"^8",7,"^9",204,"^:",11,"^=:",["^1O",["^=;",["^1O",[["~$m","~$k0","~$k1"],["~$m","^@D","^@E","~$k2"],["~$m","^@D","^@E","^@F","~$k3"]]]]],"^=R",["^ ","^=A",false,"^=S",5,"^=C",5,"^=>",[["~$m","^@D","^@E"],["~$m","^@D","^@E","^@F"],["~$m","^@D","^@E","^@F","^@G"]],"^=:",["^1O",[["~$m","^@D","^@E"],["~$m","^@D","^@E","^@F"],["~$m","^@D","^@E","^@F","^@G"]]],"^=@",["^1O",[null,null,null]]]],"^11","^63","^6","cljs/analyzer.cljc","^:",11,"^=R",["^ ","^=A",false,"^=S",5,"^=C",5,"^=>",[["~$m","^@D","^@E"],["~$m","^@D","^@E","^@F"],["~$m","^@D","^@E","^@F","^@G"]],"^=:",["^1O",[["~$m","^@D","^@E"],["~$m","^@D","^@E","^@F"],["~$m","^@D","^@E","^@F","^@G"]]],"^=@",["^1O",[null,null,null]]],"^=>",[["~$m","^@D","^@E"],["~$m","^@D","^@E","^@F"],["~$m","^@D","^@E","^@F","^@G"]],"^=?",null,"^=S",5,"^=@",["^1O",[null,null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",3,"^=A",false,"^=<",["^Y",["^=N","^=V"]]],["^ ","^=S",4,"^=A",false,"^=<",["^Y",["^=N","^=V"]]],["^ ","^=S",5,"^=A",false,"^=<",["^Y",["^=N","^=V"]]]],"^7",204,"^9",204,"^=C",5,"^=D",true,"^=:",["^1O",[["~$m","^@D","^@E"],["~$m","^@D","^@E","^@F"],["~$m","^@D","^@E","^@F","^@G"]]]],"~$check-rename-macros-inferring-missing",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2695,"^8",7,"^9",2695,"^:",44,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>N","~$renames"],"^1T","~$ast"],"^1D"]]]]]],"^11","^50","^6","cljs/analyzer.cljc","^:",44,"^=>",["^1O",[["~$p__75123","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2695,"^=B",["^Y",["^=M","^=N"]],"^9",2695,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>N","^@I"],"^1T","^@J"],"^1D"]]]]]],"~$*allow-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1321,"^8",16,"^9",1321,"^:",26,"^>S",true],"^11","^8=","^6","cljs/analyzer.cljc","^:",26,"^8",1,"^>S",true,"^7",1321,"^9",1321,"^=<","^=N"],"~$analyze-const",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2414,"^8",7,"^9",2414,"^:",20,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"^11","^69","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2414,"^=B","^=U","^9",2414,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"~$simple-predicate-induced-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1572,"^8",8,"^9",1572,"^:",36,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$test"]]]]],"^>>","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"^=F",true,"^11","^6<","^6","cljs/analyzer.cljc","^:",36,"^=>",["^1O",[["^1D","^@O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1572,"^=B",["^Y",["^>F","^=V"]],"^9",1572,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^@O"]]]]],"^>>","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"~$infer-invoke",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1413,"^8",7,"^9",1413,"^:",19,"^=:",["^1O",["^=;",["^1O",[["^1D",["^ ","~$f","~:fn","^@4",["^>="],"^1T","~$e"]]]]]]],"^11","^51","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^1D","~$p__74543"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1413,"^=B",["^Y",["^=N","^9A","^=V"]],"^9",1413,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D",["^ ","~$f","^@Q","^@4",["^>="],"^1T","~$e"]]]]]]],"~$*cljs-static-fns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",55,"^8",16,"^9",55,"^:",33,"^>S",true],"^11","^8@","^6","cljs/analyzer.cljc","^:",33,"^8",1,"^>S",true,"^7",55,"^9",55,"^=<","^=N"],"~$array-types",["^ ","^11","^56","^6","cljs/analyzer.cljc","^7",3489,"^8",1,"^9",3489,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3489,"^8",6,"^9",3489,"^:",17],"^=<","^>J"],"~$*check-alias-dupes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",54,"^8",16,"^9",54,"^:",35,"^>S",true],"^11","^57","^6","cljs/analyzer.cljc","^:",35,"^8",1,"^>S",true,"^7",54,"^9",54,"^=<","^=N"],"~$macro-ns-name",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3032,"^8",7,"^9",3032,"^:",20,"^=:",["^1O",["^=;",["^1O",[["^>N"]]]]]],"^11","^6E","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^>N"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3032,"^=B",["^Y",[null,"^=N","^9A"]],"^9",3032,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>N"]]]]]],"~$*reload-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",63,"^8",16,"^9",63,"^:",31,"^>S",true],"^11","^6D","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^>S",true,"^7",63,"^9",63,"^=<","^=N"],"~$compiler-options",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",169,"^8",7,"^9",169,"^:",23,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"^11","^6I","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[[]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",169,"^=B",["^Y",["^=N","^=V"]],"^9",169,"^=C",0,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"~$resolve-existing-var",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1258,"^8",7,"^9",1258,"^:",27,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^>>","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"^11","^5<","^6","cljs/analyzer.cljc","^:",27,"^=>",["^1O",[["^1D","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1258,"^=B","^=N","^9",1258,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^>>","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"~$required?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1104,"^8",7,"^9",1104,"^:",16,"^=:",["^1O",["^=;",["^1O",[["^1P","^1D"]]]]]],"^11","^5=","^6","cljs/analyzer.cljc","^:",16,"^=>",["^1O",[["^1P","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1104,"^=B","^==","^9",1104,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1P","^1D"]]]]]],"~$node-like?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1051,"^8",7,"^9",1051,"^:",17,"^=:",["^1O",["^=;",["^1O",[[],["^>O"]]]]],"^=R",["^ ","^=A",false,"^=S",1,"^=C",1,"^=>",[[],["^>O"]],"^=:",["^1O",[[],["^>O"]]],"^=@",["^1O",[null,null]]]],"^11","^5:","^6","cljs/analyzer.cljc","^:",17,"^=R",["^ ","^=A",false,"^=S",1,"^=C",1,"^=>",[[],["^>O"]],"^=:",["^1O",[[],["^>O"]]],"^=@",["^1O",[null,null]]],"^=>",[[],["^>O"]],"^=?",null,"^=S",1,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",0,"^=A",false,"^=<","^=N"],["^ ","^=S",1,"^=A",false,"^=<","^=="]],"^7",1051,"^9",1051,"^=C",1,"^=D",true,"^=:",["^1O",[[],["^>O"]]]],"~$parse-invoke*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3628,"^8",7,"^9",3628,"^:",20,"^=:",["^1O",["^=;",["^1O",[["^1D",["~$f","~$&","^>=","^1T","^>5"]]]]]]],"^11","^5?","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^1D","~$p__75356"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3628,"^=B",["^Y",[null,"^=N","^=U"]],"^9",3628,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D",["~$f","~$&","^>=","^1T","^>5"]]]]]]],"~$*checked-arrays*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",53,"^8",16,"^9",53,"^:",32,"^>S",true],"^11","^4G","^6","cljs/analyzer.cljc","^:",32,"^8",1,"^>S",true,"^7",53,"^9",53,"^=<","^=N"],"~$ast-children",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1776,"^8",7,"^9",1776,"^:",19,"^=:",["^1O",["^=;",["^1O",[["^@J"]]]]]],"^11","^5C","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^@J"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1776,"^=B","^=N","^9",1776,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^@J"]]]]]],"~$loaded-js-ns?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",766,"^8",7,"^9",766,"^:",20,"^=:",["^1O",["^=;",["^1O",[["^1D","~$prefix"]]]]],"^>>","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.","^=<","^=="],"^11","^7M","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^1D","^A5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",766,"^=B","^==","^9",766,"^=C",2,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^A5"]]]]],"^>>","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked."],"~$analyze-vector",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3988,"^8",7,"^9",3988,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"^11","^7N","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3988,"^=B","^=N","^9",3988,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"~$unwrap-quote",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1375,"^8",7,"^9",1375,"^:",19,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>M"],"^1T","~$expr"]]]]]]],"^11","^7O","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["~$p__74535"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1375,"^=B",["^Y",[null,"^=N"]],"^9",1375,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>M"],"^1T","^A8"]]]]]]],"~$namespaces",["^ ","^11","^4E","^6","cljs/analyzer.cljc","^7",554,"^8",1,"^9",554,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",554,"^8",6,"^9",554,"^:",16],"^=<","^3R"],"~$predicate->tag",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1508,"^8",16,"^9",1508,"^:",30,"^=F",true],"^=F",true,"^11","^5G","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^7",1508,"^9",1508,"^=<","^=U"],"~$record-with-field?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3618,"^8",8,"^9",3618,"^:",26,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^=L","~$field"]]]]]],"^=F",true,"^11","^4A","^6","cljs/analyzer.cljc","^:",26,"^=>",["^1O",[["^=L","^A="]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3618,"^=B","^==","^9",3618,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=L","^A="]]]]]],"~$elide-analyzer-meta",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4047,"^8",7,"^9",4047,"^:",26,"^=:",["^1O",["^=;",["^1O",[["~$m"]]]]]],"^11","^5H","^6","cljs/analyzer.cljc","^:",26,"^=>",["^1O",[["~$m"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4047,"^=B",["^Y",["^=M","^=V"]],"^9",4047,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$m"]]]]]],"~$ns->relpath",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",229,"^8",10,"^9",229,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^1P"],["^1P","~$ext"]]]]],"^>>","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.","^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^1P"],["^1P","^A@"]],"^=:",["^1O",[["^1P"],["^1P","^A@"]]],"^=@",["^1O",[null,null]]]],"^11","^4K","^6","cljs/analyzer.cljc","^:",21,"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^1P"],["^1P","^A@"]],"^=:",["^1O",[["^1P"],["^1P","^A@"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1P"],["^1P","^A@"]],"^=?",null,"^=S",2,"^=@",["^1O",[null,null]],"^8",4,"^=A",false,"^=T",[["^ ","^=S",1,"^=A",false,"^=<","^=N"],["^ ","^=S",2,"^=A",false,"^=<","^1E"]],"^7",229,"^9",229,"^=C",2,"^=D",true,"^=:",["^1O",[["^1P"],["^1P","^A@"]]],"^>>","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs."],"~$compile-syntax-error",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",708,"^8",8,"^9",708,"^:",28,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$msg","~$symbol"]]]]]],"^=F",true,"^11","^4I","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["^1D","^AB","^AC"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",708,"^=B","~$cljs.core/ExceptionInfo","^9",708,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^AB","^AC"]]]]]],"~$analyze-let-body",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2318,"^8",7,"^9",2318,"^:",23,"^=:",["^1O",["^=;",["^1O",[["^1D","~$context","^>4","~$recur-frames","~$loop-lets"]]]]]],"^11","^5S","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["^1D","^AF","^>4","^AG","^AH"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2318,"^9",2318,"^=C",5,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^AF","^>4","^AG","^AH"]]]]]],"~$extern-pre",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1044,"^8",7,"^9",1044,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^=Z","^>0"]]]]]],"^11","^5Z","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^=Z","^>0"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1044,"^=B",["^Y",[null,"^=M","^=N"]],"^9",1044,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z","^>0"]]]]]],"~$get-col",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",592,"^8",7,"^9",592,"^:",14,"^=:",["^1O",["^=;",["^1O",[["~$x","^1D"]]]]]],"^11","^60","^6","cljs/analyzer.cljc","^:",14,"^=>",["^1O",[["~$x","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",592,"^=B","^=N","^9",592,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x","^1D"]]]]]],"~$type-check-induced-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1589,"^8",8,"^9",1589,"^:",30,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^@O"]]]]],"^>>","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"^=F",true,"^11","^85","^6","cljs/analyzer.cljc","^:",30,"^=>",["^1O",[["^1D","^@O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1589,"^=B",["^Y",["^>F","^=V"]],"^9",1589,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^@O"]]]]],"^>>","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"~$basic-validate-ns-spec",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2717,"^8",7,"^9",2717,"^:",29,"^=:",["^1O",["^=;",["^1O",[["^1D","~$macros?","~$spec"]]]]]],"^11","^4V","^6","cljs/analyzer.cljc","^:",29,"^=>",["^1O",[["^1D","^AM","^AN"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2717,"^=B","^=V","^9",2717,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^AM","^AN"]]]]]],"~$*cljs-warnings*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",125,"^8",16,"^9",125,"^:",31,"^>S",true],"^11","^64","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^>S",true,"^7",125,"^9",125,"^=<","^=N"],"~$alias->type",["^ ","^11","^65","^6","cljs/analyzer.cljc","^7",939,"^8",1,"^9",939,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",939,"^8",6,"^9",939,"^:",17],"^=<","^=U"],"~$analyzed?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3586,"^8",7,"^9",3586,"^:",16,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]],"^>>","Returns boolean if the form has already been marked as analyzed.","^=<","^=="],"^11","^2P","^6","cljs/analyzer.cljc","^:",16,"^=>",["^1O",[["~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3586,"^=B","^==","^9",3586,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]],"^>>","Returns boolean if the form has already been marked as analyzed."],"~$analyze-deps",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2567,"^8",7,"^9",2567,"^:",19,"^=:",["^1O",["^=;",["^1O",[["^?[","~$deps","^1D"],["^?[","^AS","^1D","^>O"]]]]],"^>>","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.","^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^?[","^AS","^1D"],["^?[","^AS","^1D","^>O"]],"^=:",["^1O",[["^?[","^AS","^1D"],["^?[","^AS","^1D","^>O"]]],"^=@",["^1O",[null,null]]]],"^11","^2X","^6","cljs/analyzer.cljc","^:",19,"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^?[","^AS","^1D"],["^?[","^AS","^1D","^>O"]],"^=:",["^1O",[["^?[","^AS","^1D"],["^?[","^AS","^1D","^>O"]]],"^=@",["^1O",[null,null]]],"^=>",[["^?[","^AS","^1D"],["^?[","^AS","^1D","^>O"]],"^=?",null,"^=S",4,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",3,"^=A",false,"^=<","^=N"],["^ ","^=S",4,"^=A",false]],"^7",2567,"^9",2567,"^=C",4,"^=D",true,"^=:",["^1O",[["^?[","^AS","^1D"],["^?[","^AS","^1D","^>O"]]],"^>>","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces."],"~$array-type?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3492,"^8",7,"^9",3492,"^:",18,"^=:",["^1O",["^=;",["^1O",[["~$t"]]]]],"^=<","^=="],"^11","^53","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["~$t"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3492,"^=B","^==","^9",3492,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$t"]]]]]],"~$dotted-symbol?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1000,"^8",7,"^9",1000,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]]],"^11","^2U","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1000,"^=B","^==","^9",1000,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]]],"~$*cljs-macros-is-classpath*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",58,"^8",16,"^9",58,"^:",42,"^>S",true],"^11","^2[","^6","cljs/analyzer.cljc","^:",42,"^8",1,"^>S",true,"^7",58,"^9",58,"^=<","^=N"],"~$*allow-redef*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1320,"^8",16,"^9",1320,"^:",29,"^>S",true],"^11","^6A","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>S",true,"^7",1320,"^9",1320,"^=<","^=N"],"~$analyze-fn-method-body",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2025,"^8",7,"^9",2025,"^:",29,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","^AG"]]]]]],"^11","^5>","^6","cljs/analyzer.cljc","^:",29,"^=>",["^1O",[["^1D","^>5","^AG"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2025,"^9",2025,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","^AG"]]]]]],"~$infer-type",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4064,"^8",7,"^9",4064,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^1D",["^ ","^@4",["^=L"],"^1T","^@J"],"~$_"]]]]]],"^11","^33","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^1D","~$p__75422","~$_"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4064,"^=B",["^Y",[null,"^=M","^=N"]],"^9",4064,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D",["^ ","^@4",["^=L"],"^1T","^@J"],"~$_"]]]]]],"~$parse-import-spec",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2877,"^8",7,"^9",2877,"^:",24,"^=:",["^1O",["^=;",["^1O",[["^1D","^AS","^AN"]]]]]],"^11","^6F","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["^1D","^AS","^AN"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2877,"^=B","^=U","^9",2877,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^AS","^AN"]]]]]],"~$clj-ns->cljs-ns",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2914,"^8",7,"^9",2914,"^:",22,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]],"^>>","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"^11","^34","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2914,"^=B",["^Y",[null,"^=N","^9A"]],"^9",2914,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]],"^>>","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"~$constant-value?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1784,"^8",7,"^9",1784,"^:",22,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>M"],"^1T","^@J"]]]]]]],"^11","^3<","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["~$p__74733"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1784,"^=B",["^Y",["^==","^=N"]],"^9",1784,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>M"],"^1T","^@J"]]]]]]],"~$dump-specs",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4562,"^8",7,"^9",4562,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^1P"]]]]],"^>>","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"^11","^6G","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^1P"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4562,"^=B",["^Y",[null,"^=N"]],"^9",4562,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1P"]]]]],"^>>","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"~$*fn-invoke-direct*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",56,"^8",16,"^9",56,"^:",34,"^>S",true],"^11","^35","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^>S",true,"^7",56,"^9",56,"^=<","^=N"],"~$use->require",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2787,"^8",7,"^9",2787,"^:",19,"^=:",["^1O",["^=;",["^1O",[["^1D",["^?[","~$&","~$filters","^1T","^AN"]]]]]]],"^11","^6J","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^1D","~$p__75140"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2787,"^=B","^=N","^9",2787,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D",["^?[","~$&","^B6","^1T","^AN"]]]]]]],"~$inferred-use-macros",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2648,"^8",7,"^9",2648,"^:",26,"^=:",["^1O",["^=;",["^1O",[["~$use-macros","^1D"]]]]]],"^11","^6H","^6","cljs/analyzer.cljc","^:",26,"^=>",["^1O",[["^B9","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2648,"^=B",["^Y",[null,"^=M","^=N"]],"^9",2648,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^B9","^1D"]]]]]],"~$error-data",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",699,"^8",8,"^9",699,"^:",18,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$phase"],["^1D","^B;","^AC"]]]]],"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^1D","^B;"],["^1D","^B;","^AC"]],"^=:",["^1O",[["^1D","^B;"],["^1D","^B;","^AC"]]],"^=@",["^1O",[null,null]]]],"^=F",true,"^11","^38","^6","cljs/analyzer.cljc","^:",18,"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^1D","^B;"],["^1D","^B;","^AC"]],"^=:",["^1O",[["^1D","^B;"],["^1D","^B;","^AC"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1D","^B;"],["^1D","^B;","^AC"]],"^=?",null,"^=S",3,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<",["^Y",["^=N","^=V"]]]],"^7",699,"^9",699,"^=C",3,"^=D",true,"^=:",["^1O",[["^1D","^B;"],["^1D","^B;","^AC"]]]],"~$analyze-symbol",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3723,"^8",7,"^9",3723,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^>>","Finds the var associated with sym"],"^11","^5D","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^1D","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3723,"^=B",["^Y",["^=N","^=V"]],"^9",3723,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^>>","Finds the var associated with sym"],"~$truth-induced-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1609,"^8",8,"^9",1609,"^:",25,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^@O"]]]]],"^>>","Refine a tag to exclude clj-nil if the test is a local."],"^=F",true,"^11","^5B","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^1D","^@O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1609,"^=B",["^Y",["^>F","^=V"]],"^9",1609,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^@O"]]]]],"^>>","Refine a tag to exclude clj-nil if the test is a local."],"~$confirm-var-exists",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",813,"^8",7,"^9",813,"^:",25,"^=:",["^1O",["^=;",["^1O",[["^1D","^A5","~$suffix"],["^1D","^A5","^B?","~$missing-fn"]]]]],"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^1D","^A5","^B?"],["^1D","^A5","^B?","^B@"]],"^=:",["^1O",[["^1D","^A5","^B?"],["^1D","^A5","^B?","^B@"]]],"^=@",["^1O",[null,null]]]],"^11","^2<","^6","cljs/analyzer.cljc","^:",25,"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^1D","^A5","^B?"],["^1D","^A5","^B?","^B@"]],"^=:",["^1O",[["^1D","^A5","^B?"],["^1D","^A5","^B?","^B@"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1D","^A5","^B?"],["^1D","^A5","^B?","^B@"]],"^=?",null,"^=S",4,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",3,"^=A",false,"^=<","^=N"],["^ ","^=S",4,"^=A",false,"^=<",["^Y",["^=N","^=V"]]]],"^7",813,"^9",813,"^=C",4,"^=D",true,"^=:",["^1O",[["^1D","^A5","^B?"],["^1D","^A5","^B?","^B@"]]]],"~$analyze-keyword",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1336,"^8",7,"^9",1336,"^:",22,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]]],"^11","^5F","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^1D","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1336,"^=B","^=U","^9",1336,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]]],"~$SENTINEL",["^ ","^11","^4C","^6","cljs/analyzer.cljc","^7",202,"^8",10,"^9",202,"^:",23,"^5",["^ ","^6","cljs/analyzer.cljc","^7",202,"^8",15,"^9",202,"^:",23],"^=<","~$object"],"~$analyze-let-bindings",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2312,"^8",7,"^9",2312,"^:",27,"^=:",["^1O",["^=;",["^1O",[["^>2","^>3","^>M"]]]]]],"^11","^2D","^6","cljs/analyzer.cljc","^:",27,"^=>",["^1O",[["^>2","^>3","^>M"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2312,"^9",2312,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>2","^>3","^>M"]]]]]],"~$munge-global-export",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1011,"^8",7,"^9",1011,"^:",26,"^=:",["^1O",["^=;",["^1O",[["^>N"]]]]]],"^11","^5K","^6","cljs/analyzer.cljc","^:",26,"^=>",["^1O",[["^>N"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1011,"^=B","^1E","^9",1011,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>N"]]]]]],"~$*loop-lets*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1319,"^8",16,"^9",1319,"^:",27,"^>S",true],"^11","^5I","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>S",true,"^7",1319,"^9",1319,"^=<","^=N"],"~$->type-set",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",904,"^8",7,"^9",904,"^:",17,"^=:",["^1O",["^=;",["^1O",[["~$t"]]]]],"^>>","Ensures that a type tag is a set."],"^11","^5Q","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["~$t"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",904,"^=B",["^Y",[null,"^>J"]],"^9",904,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$t"]]]]],"^>>","Ensures that a type tag is a set."],"~$js-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",985,"^8",7,"^9",985,"^:",13,"^=:",["^1O",["^=;",["^1O",[["^?E"],["^?E","~$tag-type"],["^?E","^BI","^?F"],["^?E","^BI","^?F","^?G"]]]]],"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^?E"],["^?E","^BI"],["^?E","^BI","^?F"],["^?E","^BI","^?F","^?G"]],"^=:",["^1O",[["^?E"],["^?E","^BI"],["^?E","^BI","^?F"],["^?E","^BI","^?F","^?G"]]],"^=@",["^1O",[null,null,null,null]]]],"^11","^5M","^6","cljs/analyzer.cljc","^:",13,"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^?E"],["^?E","^BI"],["^?E","^BI","^?F"],["^?E","^BI","^?F","^?G"]],"^=:",["^1O",[["^?E"],["^?E","^BI"],["^?E","^BI","^?F"],["^?E","^BI","^?F","^?G"]]],"^=@",["^1O",[null,null,null,null]]],"^=>",[["^?E"],["^?E","^BI"],["^?E","^BI","^?F"],["^?E","^BI","^?F","^?G"]],"^=?",null,"^=S",4,"^=@",["^1O",[null,null,null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",1,"^=A",false,"^=<","^=N"],["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<","^=N"],["^ ","^=S",4,"^=A",false,"^=<",["^Y",["^=N","^9A","^=V"]]]],"^7",985,"^9",985,"^=C",4,"^=D",true,"^=:",["^1O",[["^?E"],["^?E","^BI"],["^?E","^BI","^?F"],["^?E","^BI","^?F","^?G"]]]],"^Z",["^ ","^11","^4L","^6","cljs/analyzer.cljc","^7",183,"^8",1,"^9",183,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",183,"^8",6,"^9",183,"^:",17],"^=<","^>J"],"~$*load-tests*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",61,"^8",16,"^9",61,"^:",28,"^>S",true],"^11","^5U","^6","cljs/analyzer.cljc","^:",28,"^8",1,"^>S",true,"^7",61,"^9",61,"^=<","^=N"],"~$check-use-macros-inferring-missing",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2677,"^8",7,"^9",2677,"^:",41,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>N","^?X","^B9"],"^1T","^@J"],"^1D"]]]]]],"^11","^5T","^6","cljs/analyzer.cljc","^:",41,"^=>",["^1O",[["~$p__75115","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2677,"^=B",["^Y",["^=M","^=N"]],"^9",2677,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>N","^?X","^B9"],"^1T","^@J"],"^1D"]]]]]],"~$canonicalize-type",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",912,"^8",7,"^9",912,"^:",24,"^=:",["^1O",["^=;",["^1O",[["~$t"]]]]]],"^11","^5V","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["~$t"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",912,"^=B",["^Y",[null,"^=M","^=N","^9A","^=V"]],"^9",912,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$t"]]]]]],"~$macroexpand-1*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3868,"^8",7,"^9",3868,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"^11","^2L","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3868,"^=B",["^Y",[null,"^=M","~$cljs.core/MetaFn","^=V"]],"^9",3868,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"~$var->sym",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3841,"^8",8,"^9",3841,"^:",16,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^>:"]]]]]],"^=F",true,"^11","^2K","^6","cljs/analyzer.cljc","^:",16,"^=>",["^1O",[["^>:"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3841,"^=B","^=N","^9",3841,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>:"]]]]]],"~$check-use-macros",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2664,"^8",7,"^9",2664,"^:",23,"^=:",["^1O",["^=;",["^1O",[["^B9","^1D"],["^B9","^?W","^1D"]]]]],"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^B9","^1D"],["^B9","^?W","^1D"]],"^=:",["^1O",[["^B9","^1D"],["^B9","^?W","^1D"]]],"^=@",["^1O",[null,null]]]],"^11","^4R","^6","cljs/analyzer.cljc","^:",23,"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^B9","^1D"],["^B9","^?W","^1D"]],"^=:",["^1O",[["^B9","^1D"],["^B9","^?W","^1D"]]],"^=@",["^1O",[null,null]]],"^=>",[["^B9","^1D"],["^B9","^?W","^1D"]],"^=?",null,"^=S",3,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<",["^Y",[null,"^=M","^=N"]]]],"^7",2664,"^9",2664,"^=C",3,"^=D",true,"^=:",["^1O",[["^B9","^1D"],["^B9","^?W","^1D"]]]],"~$get-expander",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3825,"^8",7,"^9",3825,"^:",19,"^=:",["^1O",["^=;",["^1O",[["^=Z","^1D"]]]]],"^>>","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"^11","^5P","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^=Z","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3825,"^=B",["^Y",["^=N","^=V"]],"^9",3825,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z","^1D"]]]]],"^>>","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"~$analyze-js-star",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3549,"^8",7,"^9",3549,"^:",22,"^=:",["^1O",["^=;",["^1O",[["^1D","~$jsform","^>=","^>5"]]]]]],"^11","^78","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^1D","^BT","^>=","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3549,"^9",3549,"^=C",4,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^BT","^>=","^>5"]]]]]],"~$do-macroexpand-check",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3845,"^8",8,"^9",3845,"^:",28,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","~$mac-var"]]]]]],"^=F",true,"^11","^7<","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["^1D","^>5","^BV"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3845,"^=B",["^Y",[null,"^=V"]],"^9",3845,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","^BV"]]]]]],"~$build-dot-form",["^ ","^11","^:P","^6","cljs/analyzer.cljc","^7",3317,"^8",1,"^9",3317,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3317,"^8",11,"^9",3317,"^:",25],"^=<","^2S"],"~$register-constant!",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",526,"^8",8,"^9",526,"^:",26,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$val"],["^1D","^BY"]]]]],"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^BY"],["^1D","^BY"]],"^=:",["^1O",[["^BY"],["^1D","^BY"]]],"^=@",["^1O",[null,null]]]],"^=F",true,"^11","^7;","^6","cljs/analyzer.cljc","^:",26,"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^BY"],["^1D","^BY"]],"^=:",["^1O",[["^BY"],["^1D","^BY"]]],"^=@",["^1O",[null,null]]],"^=>",[["^BY"],["^1D","^BY"]],"^=?",null,"^=S",2,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",1,"^=A",false,"^=<","^=N"],["^ ","^=S",2,"^=A",false,"^=<",["^Y",[null,"^=N"]]]],"^7",526,"^9",526,"^=C",2,"^=D",true,"^=:",["^1O",[["^BY"],["^1D","^BY"]]]],"~$js-star-interp",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3443,"^8",7,"^9",3443,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^1D","~$s"]]]]]],"^11","^:O","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^1D","~$s"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3443,"^=B","^=M","^9",3443,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$s"]]]]]],"~$*recur-frames*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1318,"^8",16,"^9",1318,"^:",30,"^>S",true],"^11","^7A","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>S",true,"^7",1318,"^9",1318,"^=<","^=N"],"~$analyze-fn-methods-pass2*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2086,"^8",7,"^9",2086,"^:",32,"^=:",["^1O",["^=;",["^1O",[["~$menv","^>[","^?0","~$meths"]]]]]],"^11","^7G","^6","cljs/analyzer.cljc","^:",32,"^=>",["^1O",[["^C1","^>[","^?0","^C2"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2086,"^=B","^=M","^9",2086,"^=C",4,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^C1","^>[","^?0","^C2"]]]]]],"^[",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3928,"^8",7,"^9",3928,"^:",20,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]],"^>>","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"^11","^7E","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3928,"^9",3928,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]],"^>>","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"~$resolve-macro-var",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1276,"^8",7,"^9",1276,"^:",24,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^>>","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"^11","^8F","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["^1D","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1276,"^=B",["^Y",[null,"^=N","^=V"]],"^9",1276,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^>>","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"~$analyze-let-binding-init",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2257,"^8",7,"^9",2257,"^:",31,"^=:",["^1O",["^=;",["^1O",[["^1D","~$init","^AH"]]]]]],"^11","^;4","^6","cljs/analyzer.cljc","^:",31,"^=>",["^1O",[["^1D","^C5","^AH"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2257,"^9",2257,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^C5","^AH"]]]]]],"~$infer-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1425,"^8",7,"^9",1425,"^:",16,"^=:",["^1O",["^=;",["^1O",[["^1D","~$e"]]]]],"^>>","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"^11","^;2","^6","cljs/analyzer.cljc","^:",16,"^=>",["^1O",[["^1D","~$e"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1425,"^=B",["^Y",[null,"^=N"]],"^9",1425,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$e"]]]]],"^>>","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"~$canonicalize-import-specs",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2963,"^8",7,"^9",2963,"^:",32,"^=:",["^1O",["^=;",["^1O",[["~$specs"]]]]]],"^11","^7L","^6","cljs/analyzer.cljc","^:",32,"^=>",["^1O",[["^C8"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2963,"^9",2963,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^C8"]]]]]],"~$analyze-form-seq",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4647,"^8",7,"^9",4647,"^:",23,"^=:",["^1O",["^=;",["^1O",[["~$forms"],["^C:","^>O"],["^C:","^>O","~$return-last?"]]]]],"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^C:"],["^C:","^>O"],["^C:","^>O","^C;"]],"^=:",["^1O",[["^C:"],["^C:","^>O"],["^C:","^>O","^C;"]]],"^=@",["^1O",[null,null,null]]]],"^11","^:6","^6","cljs/analyzer.cljc","^:",23,"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^C:"],["^C:","^>O"],["^C:","^>O","^C;"]],"^=:",["^1O",[["^C:"],["^C:","^>O"],["^C:","^>O","^C;"]]],"^=@",["^1O",[null,null,null]]],"^=>",[["^C:"],["^C:","^>O"],["^C:","^>O","^C;"]],"^=?",null,"^=S",3,"^=@",["^1O",[null,null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",1,"^=A",false,"^=<","^=N"],["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false]],"^7",4647,"^9",4647,"^=C",3,"^=D",true,"^=:",["^1O",[["^C:"],["^C:","^>O"],["^C:","^>O","^C;"]]]],"~$analyze-let-body*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2315,"^8",7,"^9",2315,"^:",24,"^=:",["^1O",["^=;",["^1O",[["^1D","^AF","^>4"]]]]]],"^11","^7J","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["^1D","^AF","^>4"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2315,"^=B","^=N","^9",2315,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^AF","^>4"]]]]]],"~$analyze-js-star*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3520,"^8",7,"^9",3520,"^:",23,"^=:",["^1O",["^=;",["^1O",[["^1D","^BT","^>=","^>5"]]]]]],"^11","^6O","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["^1D","^BT","^>=","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3520,"^=B","^=U","^9",3520,"^=C",4,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^BT","^>=","^>5"]]]]]],"~$inferred-rename-macros",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2653,"^8",7,"^9",2653,"^:",29,"^=:",["^1O",["^=;",["^1O",[["~$rename-macros","^1D"]]]]]],"^11","^7Q","^6","cljs/analyzer.cljc","^:",29,"^=>",["^1O",[["^C?","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2653,"^=B",["^Y",[null,"^=M","^=N"]],"^9",2653,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^C?","^1D"]]]]]],"~$parse-ns-error-msg",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2714,"^8",7,"^9",2714,"^:",25,"^=:",["^1O",["^=;",["^1O",[["^AN","^AB"]]]]]],"^11","^6S","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^AN","^AB"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2714,"^=B","^1E","^9",2714,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^AN","^AB"]]]]]],"~$missing-use-macro?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2619,"^8",7,"^9",2619,"^:",25,"^=:",["^1O",["^=;",["^1O",[["^?[","^=Z"]]]]]],"^11","^7U","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^?[","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2619,"^=B",["^Y",["^==","^=V"]],"^9",2619,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^?[","^=Z"]]]]]],"~$record-ns+name",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4024,"^8",7,"^9",4024,"^:",21,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"^11","^6V","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4024,"^=B","^4S","^9",4024,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"~$analyzed",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3578,"^8",7,"^9",3578,"^:",15,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]],"^>>","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"^11","^7W","^6","cljs/analyzer.cljc","^:",15,"^=>",["^1O",[["~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3578,"^=B",["^Y",["^=M","^=N","^BO","^=V"]],"^9",3578,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]],"^>>","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"~$resolve-symbol",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4252,"^8",7,"^9",4252,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]]],"^11","^:8","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4252,"^=B",["^Y",[null,"^=N"]],"^9",4252,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]]],"~$missing-renames",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2638,"^8",7,"^9",2638,"^:",22,"^=:",["^1O",["^=;",["^1O",[["^@I","^1D"]]]]]],"^11","^70","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^@I","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2638,"^=B",["^Y",[null,"^=M","^=N"]],"^9",2638,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^@I","^1D"]]]]]],"~$resolve*",["^ ","^11","^80","^6","cljs/analyzer.cljc","^7",1036,"^8",1,"^9",1036,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1036,"^8",11,"^9",1036,"^:",19],"^=<","^2S"],"~$default-passes",["^ ","^11","^7Z","^6","cljs/analyzer.cljc","^7",4195,"^8",1,"^9",4195,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4195,"^8",6,"^9",4195,"^:",20],"^=<","^>F"],"~$*cljs-macros-path*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",57,"^8",16,"^9",57,"^:",34,"^>S",true],"^11","^:>","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^>S",true,"^7",57,"^9",57,"^=<","^=N"],"~$confirm-var-exist-warning",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",751,"^8",7,"^9",751,"^:",32,"^=:",["^1O",["^=;",["^1O",[["^1D","^A5","^B?"]]]]]],"^11","^82","^6","cljs/analyzer.cljc","^:",32,"^=>",["^1O",[["^1D","^A5","^B?"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",751,"^=B","^?;","^9",751,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^A5","^B?"]]]]]],"~$repeat-char",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",491,"^8",8,"^9",491,"^:",19,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$c","~$n"]]]]]],"^=F",true,"^11","^77","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["~$c","~$n"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",491,"^9",491,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$c","~$n"]]]]]],"~$unchecked-arrays?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",166,"^8",7,"^9",166,"^:",24,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"^11","^76","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[[]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",166,"^=B","^==","^9",166,"^=C",0,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"~$core-ns?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1805,"^8",8,"^9",1805,"^:",16,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$ns-sym"]]]]]],"^=F",true,"^11","^:=","^6","cljs/analyzer.cljc","^:",16,"^=>",["^1O",[["^CM"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1805,"^=B","^==","^9",1805,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^CM"]]]]]],"~$analyze-dot",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3369,"^8",7,"^9",3369,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^1D","^>C","^A=","~$member+","^>5"]]]]]],"^11","^:@","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["^1D","^>C","^A=","^CO","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3369,"^9",3369,"^=C",5,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>C","^A=","^CO","^>5"]]]]]],"~$analyze-do-statements",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2231,"^8",7,"^9",2231,"^:",28,"^=:",["^1O",["^=;",["^1O",[["^1D","^>4"]]]]]],"^11","^89","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["^1D","^>4"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2231,"^9",2231,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>4"]]]]]],"~$get-line",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",589,"^8",7,"^9",589,"^:",15,"^=:",["^1O",["^=;",["^1O",[["~$x","^1D"]]]]]],"^11","^54","^6","cljs/analyzer.cljc","^:",15,"^=>",["^1O",[["~$x","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",589,"^=B","^=N","^9",589,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x","^1D"]]]]]],"~$analyze-do-statements*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2228,"^8",7,"^9",2228,"^:",29,"^=:",["^1O",["^=;",["^1O",[["^1D","^>4"]]]]]],"^11","^79","^6","cljs/analyzer.cljc","^:",29,"^=>",["^1O",[["^1D","^>4"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2228,"^=B","^=M","^9",2228,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>4"]]]]]],"~$analyze-seq",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3945,"^8",7,"^9",3945,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]]]]],"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]],"^=:",["^1O",[["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]]],"^=@",["^1O",[null,null]]]],"^11","^8A","^6","cljs/analyzer.cljc","^:",18,"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]],"^=:",["^1O",[["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]],"^=?",null,"^=S",4,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",3,"^=A",false,"^=<","^=N"],["^ ","^=S",4,"^=A",false,"^=<","^=N"]],"^7",3945,"^9",3945,"^=C",4,"^=D",true,"^=:",["^1O",[["^1D","^>5","^>N"],["^1D","^>5","^>N","^>O"]]]],"~$desugar-dotted-expr",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3696,"^8",7,"^9",3696,"^:",26,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>M"],"^1T","^A8"]]]]]]],"^11","^4[","^6","cljs/analyzer.cljc","^:",26,"^=>",["^1O",[["~$p__75368"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3696,"^9",3696,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>M"],"^1T","^A8"]]]]]]],"~$private-var-access-exceptions",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1082,"^8",16,"^9",1082,"^:",45,"^=F",true],"^=F",true,"^11","^8>","^6","cljs/analyzer.cljc","^:",45,"^8",1,"^7",1082,"^9",1082,"^=<","^>J","^>>","Specially-treated symbols for which we don't trigger :private-var-access warnings."],"~$all-values?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3595,"^8",8,"^9",3595,"^:",19,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^>4"]]]]],"^=<","^=="],"^=F",true,"^11","^4Z","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^>4"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3595,"^=B","^==","^9",3595,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>4"]]]]]],"~$find-def-clash",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3021,"^8",7,"^9",3021,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^1D","^1P","~$segments"]]]]]],"^11","^8D","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^1D","^1P","^CY"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3021,"^=B","^=V","^9",3021,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^1P","^CY"]]]]]],"~$has-error-data?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",726,"^8",7,"^9",726,"^:",22,"^=:",["^1O",["^=;",["^1O",[["~$ex"]]]]],"^=<","^=="],"^11","^4X","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^C["]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",726,"^=B","^==","^9",726,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^C["]]]]]],"~$get-expander*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3800,"^8",7,"^9",3800,"^:",20,"^=:",["^1O",["^=;",["^1O",[["^=Z","^1D"]]]]]],"^11","^8?","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^=Z","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3800,"^=B",["^Y",["^=N","^=V"]],"^9",3800,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z","^1D"]]]]]],"~$fn-name-var",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2067,"^8",7,"^9",2067,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^1D","^>[","^>N"]]]]]],"^11","^8J","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["^1D","^>[","^>N"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2067,"^=B",["^Y",["^=N","^=V"]],"^9",2067,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>[","^>N"]]]]]],"~$munge-node-lib",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1007,"^8",7,"^9",1007,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^>N"]]]]]],"^11","^8G","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^>N"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1007,"^=B","^1E","^9",1007,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>N"]]]]]],"~$internal-js-module-exists?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",776,"^8",8,"^9",776,"^:",34,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$js-module-index","^??"]]]]]],"^=F",true,"^11","^8M","^6","cljs/analyzer.cljc","^:",34,"^=>",["^1O",[["^D4","^??"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",776,"^=B","^==","^9",776,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^D4","^??"]]]]]],"~$*load-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",62,"^8",16,"^9",62,"^:",29,"^>S",true],"^11","^7B","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>S",true,"^7",62,"^9",62,"^=<","^=N"],"~$add-types",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",926,"^8",7,"^9",926,"^:",16,"^=:",["^1O",["^=;",["^1O",[[],["~$t1"],["^D7","~$t2"],["^D7","^D8","~$&","~$ts"]]]]],"^>>","Produces a union of types.","^=R",["^ ","^=A",true,"^=S",2,"^=C",2,"^=>",[[],["^D7"],["^D7","^D8"]],"^=:",["^1O",[[],["^D7"],["^D7","^D8"],["^D7","^D8","~$&","^D9"]]],"^=@",["^1O",[null,null,null,null]]]],"^11","^59","^6","cljs/analyzer.cljc","^:",16,"^=R",["^ ","^=A",true,"^=S",2,"^=C",2,"^=>",[[],["^D7"],["^D7","^D8"]],"^=:",["^1O",[[],["^D7"],["^D7","^D8"],["^D7","^D8","~$&","^D9"]]],"^=@",["^1O",[null,null,null,null]]],"^=>",[[],["^D7"],["^D7","^D8"]],"^=?",null,"^=S",2,"^=@",["^1O",[null,null,null,null]],"^8",1,"^=A",true,"^=T",[["^ ","^=S",0,"^=A",false,"^=<","^9A"],["^ ","^=S",1,"^=A",false],["^ ","^=S",2,"^=A",false,"^=<",["^Y",[null,"^=M","^=N","^9A","^=V"]]],["^ ","^=S",2,"^=A",true,"^=<","^=N"]],"^7",926,"^9",926,"^=C",2,"^=D",true,"^=:",["^1O",[[],["^D7"],["^D7","^D8"],["^D7","^D8","~$&","^D9"]]],"^>>","Produces a union of types."],"~$excluded?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3773,"^8",7,"^9",3773,"^:",16,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^=<","^=="],"^11","^55","^6","cljs/analyzer.cljc","^:",16,"^=>",["^1O",[["^1D","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3773,"^=B","^==","^9",3773,"^=C",2,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]]],"~$empty-env",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",647,"^8",7,"^9",647,"^:",16,"^=:",["^1O",["^=;",["^1O",[[]]]]],"^>>","Construct an empty analysis environment. Required to analyze forms."],"^11","^7I","^6","cljs/analyzer.cljc","^:",16,"^=>",["^1O",[[]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",647,"^9",647,"^=C",0,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[]]]]],"^>>","Construct an empty analysis environment. Required to analyze forms."],"~$public-name?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",879,"^8",7,"^9",879,"^:",19,"^=:",["^1O",["^=;",["^1O",[["^1P","^=Z"]]]]],"^>>","Is sym public?","^=<","^=="],"^11","^6L","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^1P","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",879,"^=B","^==","^9",879,"^=C",2,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1P","^=Z"]]]]],"^>>","Is sym public?"],"~$default-warning-handler",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",475,"^8",7,"^9",475,"^:",30,"^=:",["^1O",["^=;",["^1O",[["~$warning-type","^1D","~$extra"]]]]]],"^11","^6P","^6","cljs/analyzer.cljc","^:",30,"^=>",["^1O",[["^D>","^1D","^D?"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",475,"^=B",["^Y",[null,"^=V"]],"^9",475,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^D>","^1D","^D?"]]]]]],"~$resolve-ns-alias",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",839,"^8",7,"^9",839,"^:",23,"^=:",["^1O",["^=;",["^1O",[["^1D","^>N"],["^1D","^>N","~$not-found"]]]]],"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^1D","^>N"],["^1D","^>N","^DA"]],"^=:",["^1O",[["^1D","^>N"],["^1D","^>N","^DA"]]],"^=@",["^1O",[null,null]]]],"^11","^7P","^6","cljs/analyzer.cljc","^:",23,"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^1D","^>N"],["^1D","^>N","^DA"]],"^=:",["^1O",[["^1D","^>N"],["^1D","^>N","^DA"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1D","^>N"],["^1D","^>N","^DA"]],"^=?",null,"^=S",3,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<",["^Y",[null,"^=N"]]]],"^7",839,"^9",839,"^=C",3,"^=D",true,"^=:",["^1O",[["^1D","^>N"],["^1D","^>N","^DA"]]]],"~$intern-macros",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",595,"^8",7,"^9",595,"^:",20,"^=:",["^1O",["^=;",["^1O",[["^1P"],["^1P","~$reload"]]]]],"^>>","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.","^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^1P"],["^1P","^DC"]],"^=:",["^1O",[["^1P"],["^1P","^DC"]]],"^=@",["^1O",[null,null]]]],"^11","^6Q","^6","cljs/analyzer.cljc","^:",20,"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^1P"],["^1P","^DC"]],"^=:",["^1O",[["^1P"],["^1P","^DC"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1P"],["^1P","^DC"]],"^=?",null,"^=S",2,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",1,"^=A",false,"^=<","^=N"],["^ ","^=S",2,"^=A",false,"^=<",["^Y",[null,"^=N","^=V"]]]],"^7",595,"^9",595,"^=C",2,"^=D",true,"^=:",["^1O",[["^1P"],["^1P","^DC"]]],"^>>","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment."],"~$const-expr->constant-value",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1790,"^8",7,"^9",1790,"^:",33,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>M"],"^1T","~$e"]]]]]]],"^11","^6R","^6","cljs/analyzer.cljc","^:",33,"^=>",["^1O",[["~$p__74740"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1790,"^9",1790,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[["^ ","^@4",["^>M"],"^1T","~$e"]]]]]]],"~$*macro-infer*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",64,"^8",16,"^9",64,"^:",29,"^>S",true],"^11","^6M","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>S",true,"^7",64,"^9",64,"^=<","^=N"],"~$gen-constant-id",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",506,"^8",7,"^9",506,"^:",22,"^=:",["^1O",["^=;",["^1O",[["~$value"]]]]]],"^11","^7T","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^DH"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",506,"^=B",["^Y",["^=N","^9A"]],"^9",506,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^DH"]]]]]],"~$lib&sublib",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",758,"^8",7,"^9",758,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^?["]]]]],"^>>","If a library name has the form foo$bar, return a vector of the library and\n   the sublibrary property."],"^11","^7Y","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^?["]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",758,"^=B","^=M","^9",758,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^?["]]]]],"^>>","If a library name has the form foo$bar, return a vector of the library and\n   the sublibrary property."],"~$macro-autoload-ns?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2899,"^8",7,"^9",2899,"^:",25,"^=:",["^1O",["^=;",["^1O",[["^>5"]]]]],"^>>","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.","^=<","^=="],"^11","^7X","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2899,"^=B","^==","^9",2899,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>5"]]]]],"^>>","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true."],"~$get-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1341,"^8",7,"^9",1341,"^:",14,"^=:",["^1O",["^=;",["^1O",[["~$e"]]]]]],"^11","^7[","^6","cljs/analyzer.cljc","^:",14,"^=>",["^1O",[["~$e"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1341,"^=B","^=N","^9",1341,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$e"]]]]]],"~$implicit-nses",["^ ","^11","^71","^6","cljs/analyzer.cljc","^7",742,"^8",1,"^9",742,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",742,"^8",6,"^9",742,"^:",19],"^=<","^>J"],"~$valid-proto",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1766,"^8",7,"^9",1766,"^:",18,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"^11","^4H","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1766,"^=B",["^Y",["^9A","^=V"]],"^9",1766,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"~$normalize-js-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",895,"^8",7,"^9",895,"^:",23,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"^11","^74","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",895,"^=B",["^Y",[null,"^=M","^BO","^=V"]],"^9",895,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"~$analyze-list",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3982,"^8",7,"^9",3982,"^:",19,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"^11","^:R","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3982,"^=B","^=N","^9",3982,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"~$warning",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",687,"^8",7,"^9",687,"^:",14,"^=:",["^1O",["^=;",["^1O",[["^D>","^1D","^D?"]]]]]],"^11","^9C","^6","cljs/analyzer.cljc","^:",14,"^=>",["^1O",[["^D>","^1D","^D?"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",687,"^=B","^=V","^9",687,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^D>","^1D","^D?"]]]]]],"~$implicit-import?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",744,"^8",7,"^9",744,"^:",23,"^=:",["^1O",["^=;",["^1O",[["^1D","^A5","^B?"]]]]],"^=<","^=="],"^11","^9D","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["^1D","^A5","^B?"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",744,"^=B","^==","^9",744,"^=C",3,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^A5","^B?"]]]]]],"~$missing-use-macros",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2643,"^8",7,"^9",2643,"^:",25,"^=:",["^1O",["^=;",["^1O",[["^B9","^1D"]]]]]],"^11","^3X","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^B9","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2643,"^=B",["^Y",[null,"^=M","^=N"]],"^9",2643,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^B9","^1D"]]]]]],"~$analyze*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4199,"^8",7,"^9",4199,"^:",15,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","^>N","^>O"]]]]]],"^11","^:S","^6","cljs/analyzer.cljc","^:",15,"^=>",["^1O",[["^1D","^>5","^>N","^>O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4199,"^=B",["^Y",[null,"^=N"]],"^9",4199,"^=C",4,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","^>N","^>O"]]]]]],"~$-cljs-macros-loaded",["^ ","^11","^3[","^6","cljs/analyzer.cljc","^7",123,"^8",1,"^9",123,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",123,"^8",6,"^9",123,"^:",25],"^=<","~$cljs.core/Atom"],"~$check-uses",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2656,"^8",7,"^9",2656,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^?X","^1D"]]]]]],"^11","^9G","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^?X","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2656,"^=B","^=V","^9",2656,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^?X","^1D"]]]]]],"~$set-test-induced-tags",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1621,"^8",8,"^9",1621,"^:",29,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^@O"]]]]],"^>>","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"^=F",true,"^11","^9H","^6","cljs/analyzer.cljc","^:",29,"^=>",["^1O",[["^1D","^@O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1621,"^=B",["^Y",[null,"^=M","^=N"]],"^9",1621,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^@O"]]]]],"^>>","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"~$find-matching-method",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1348,"^8",7,"^9",1348,"^:",27,"^=:",["^1O",["^=;",["^1O",[["~$f","~$params"]]]]]],"^11","^41","^6","cljs/analyzer.cljc","^:",27,"^=>",["^1O",[["~$f","^DY"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1348,"^=B",["^Y",["^=N","^=V"]],"^9",1348,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$f","^DY"]]]]]],"~$*private-var-access-nowarn*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",67,"^8",16,"^9",67,"^:",43,"^>S",true],"^11","^9Q","^6","cljs/analyzer.cljc","^:",43,"^8",1,"^>S",true,"^7",67,"^9",67,"^=<","^=N"],"~$invoke-arg-type-validators",["^ ","^11","^9L","^6","cljs/analyzer.cljc","^7",4125,"^8",1,"^9",4125,"^:",32,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4125,"^8",6,"^9",4125,"^:",32],"^=<","^=U"],"~$*cljs-file*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",52,"^8",16,"^9",52,"^:",27,"^>S",true],"^11","^9R","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>S",true,"^7",52,"^9",52,"^=<","^=N"],"~$*file-defs*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",66,"^8",16,"^9",66,"^:",27,"^>S",true],"^11","^9P","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>S",true,"^7",66,"^9",66,"^=<","^=N"],"~$infer-if",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1381,"^8",7,"^9",1381,"^:",15,"^=:",["^1O",["^=;",["^1O",[["^1D","~$e"]]]]]],"^11","^;6","^6","cljs/analyzer.cljc","^:",15,"^=>",["^1O",[["^1D","~$e"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1381,"^=B",["^Y",[null,"^=M","^=N","^9A"]],"^9",1381,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","~$e"]]]]]],"~$topo-sort",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",237,"^8",10,"^9",237,"^:",19,"^=:",["^1O",["^=;",["^1O",[["~$x","~$get-deps"],["~$x","~$depth","~$state","~$memo-get-deps"]]]]],"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["~$x","^E4"],["~$x","^E5","^E6","^E7"]],"^=:",["^1O",[["~$x","^E4"],["~$x","^E5","^E6","^E7"]]],"^=@",["^1O",[null,null]]]],"^11","^4>","^6","cljs/analyzer.cljc","^:",19,"^=R",["^ ","^=A",false,"^=S",4,"^=C",4,"^=>",[["~$x","^E4"],["~$x","^E5","^E6","^E7"]],"^=:",["^1O",[["~$x","^E4"],["~$x","^E5","^E6","^E7"]]],"^=@",["^1O",[null,null]]],"^=>",[["~$x","^E4"],["~$x","^E5","^E6","^E7"]],"^=?",null,"^=S",4,"^=@",["^1O",[null,null]],"^8",4,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",4,"^=A",false,"^=<",["^Y",["^4S","^=V"]]]],"^7",237,"^9",237,"^=C",4,"^=D",true,"^=:",["^1O",[["~$x","^E4"],["~$x","^E5","^E6","^E7"]]]],"~$*verbose*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",121,"^8",16,"^9",121,"^:",25,"^>S",true],"^11","^9T","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^>S",true,"^7",121,"^9",121,"^=<","^=N"],"~$analyze-js-value",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4000,"^8",7,"^9",4000,"^:",23,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"^11","^4=","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4000,"^=B","^=U","^9",4000,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"~$ns->module-type",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1030,"^8",7,"^9",1030,"^:",22,"^=:",["^1O",["^=;",["^1O",[["^1P"]]]]]],"^11","^8Q","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^1P"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1030,"^=B",["^Y",["^4@","^=V"]],"^9",1030,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1P"]]]]]],"~$source-info",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",667,"^8",7,"^9",667,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^1D"],["^>N","^1D"]]]]],"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^1D"],["^>N","^1D"]],"^=:",["^1O",[["^1D"],["^>N","^1D"]]],"^=@",["^1O",[null,null]]]],"^11","^:1","^6","cljs/analyzer.cljc","^:",18,"^=R",["^ ","^=A",false,"^=S",2,"^=C",2,"^=>",[["^1D"],["^>N","^1D"]],"^=:",["^1O",[["^1D"],["^>N","^1D"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1D"],["^>N","^1D"]],"^=?",null,"^=S",2,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",1,"^=A",false,"^=<",["^Y",["^=N","^=V"]]],["^ ","^=S",2,"^=A",false,"^=<",["^Y",["^=N","^=U","^=V"]]]],"^7",667,"^9",667,"^=C",2,"^=D",true,"^=:",["^1O",[["^1D"],["^>N","^1D"]]]],"~$analyze-fn-method-param",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1997,"^8",7,"^9",1997,"^:",30,"^=:",["^1O",["^=;",["^1O",[["^1D"]]]]]],"^11","^8U","^6","cljs/analyzer.cljc","^:",30,"^=>",["^1O",[["^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1997,"^=B","^?;","^9",1997,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D"]]]]]],"~$repl-self-require?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4077,"^8",8,"^9",4077,"^:",26,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^AS"]]]]]],"^=F",true,"^11","^90","^6","cljs/analyzer.cljc","^:",26,"^=>",["^1O",[["^1D","^AS"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4077,"^=B",["^Y",["^=N","^=V"]],"^9",4077,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^AS"]]]]]],"~$analyze-set",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3994,"^8",7,"^9",3994,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"^11","^8S","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["^1D","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3994,"^=B","^=N","^9",3994,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5"]]]]]],"~$numeric-type?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3467,"^8",7,"^9",3467,"^:",20,"^=:",["^1O",["^=;",["^1O",[["~$t"]]]]],"^=<","^=="],"^11","^8[","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["~$t"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3467,"^=B","^==","^9",3467,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$t"]]]]]],"~$munge-path",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",225,"^8",10,"^9",225,"^:",20,"^=:",["^1O",["^=;",["^1O",[["~$ss"]]]]]],"^11","^8O","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^EA"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",4,"^=A",false,"^7",225,"^=B",["^Y",["^=N","^1E","^9A"]],"^9",225,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^EA"]]]]]],"~$ast?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",252,"^8",7,"^9",252,"^:",11,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]],"^=<","^=="],"^11","^3@","^6","cljs/analyzer.cljc","^:",11,"^=>",["^1O",[["~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",252,"^=B","^==","^9",252,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"~$checked-arrays",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",175,"^8",7,"^9",175,"^:",21,"^=:",["^1O",["^=;",["^1O",[[]]]]],"^>>","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"^11","^3D","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[[]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",175,"^=B",["^Y",["^=N","^=V"]],"^9",175,"^=C",0,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[]]]]],"^>>","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"~$elide-env",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1769,"^8",7,"^9",1769,"^:",16,"^=:",["^1O",["^=;",["^1O",[["^1D","^@J","^>O"]]]]]],"^11","^91","^6","cljs/analyzer.cljc","^:",16,"^=>",["^1O",[["^1D","^@J","^>O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1769,"^=B",["^Y",["^=M","^=V"]],"^9",1769,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^@J","^>O"]]]]]],"~$js-module-exists?*",["^ ","^11","^:7","^6","cljs/analyzer.cljc","^7",787,"^8",1,"^9",787,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",787,"^8",6,"^9",787,"^:",24],"^=<","^?;"],"~$parse-require-spec",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2821,"^8",7,"^9",2821,"^:",25,"^=:",["^1O",["^=;",["^1O",[["^1D","^AM","^AS","~$aliases","^AN"]]]]]],"^11","^:C","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^1D","^AM","^AS","^EG","^AN"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2821,"^=B",["^Y",["^=N","^=V"]],"^9",2821,"^=C",5,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^AM","^AS","^EG","^AN"]]]]]],"~$analyze-wrap-meta",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4053,"^8",7,"^9",4053,"^:",24,"^=:",["^1O",["^=;",["^1O",[["^A8"]]]]]],"^11","^95","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["^A8"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4053,"^=B",["^Y",[null,"^=U"]],"^9",4053,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^A8"]]]]]],"~$property-symbol?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3304,"^8",16,"^9",3304,"^:",32,"^=F",true],"^=F",true,"^11","^3M","^6","cljs/analyzer.cljc","^:",32,"^=>",["^1O",[["~$p1__75294#"]]],"^=?",null,"^=@",["^1O",[]],"^8",1,"^=A",false,"^7",3304,"^=B","^==","^9",3304,"^=C",1,"^=D",true,"^=:",null],"~$analyze-js-star-args",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3510,"^8",8,"^9",3510,"^:",28,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$js-op","^1D","^>="]]]]]],"^=F",true,"^11","^3H","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["^EL","^1D","^>="]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3510,"^=B",["^Y",["^=N","^=V"]],"^9",3510,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^EL","^1D","^>="]]]]]],"~$get-js-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3436,"^8",7,"^9",3436,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^>5"]]]]]],"^11","^9:","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3436,"^=B",["^Y",["^=N","^9A","^=V"]],"^9",3436,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>5"]]]]]],"~$parse",["^ ","^11","^9>","^6","cljs/analyzer.cljc","^7",1455,"^8",1,"^9",1455,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1455,"^8",11,"^9",1455,"^:",16],"^=<","^2S"],"~$->t_cljs$analyzer74253",["^ ","^=9",null,"^5",["^ ","^?9",true,"^?4",["^Y",["^?5","^?6","^?7"]],"^?<",["^Y",["^?5","^?6","^?7"]],"~:factory","~:positional","^=:",["^1O",["^=;",["^1O",[["~$meta74254"]]]]],"^>>","Positional factory function for cljs.analyzer/t_cljs$analyzer74253.","^6",null],"^?4",["^Y",["^?5","^?6","^?7"]],"^11","^:J","^6","cljs/analyzer.cljc","^=>",["^1O",[["^ER"]]],"^=?",null,"^=@",["^1O",[null,null]],"^?9",true,"^8",6,"^=A",false,"^EP","^EQ","^7",562,"^=B","^3R","^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^ER"]]]]],"^?<",["^Y",["^?5","^?6","^?7"]],"^>>","Positional factory function for cljs.analyzer/t_cljs$analyzer74253."],"~$*analyze-deps*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",60,"^8",16,"^9",60,"^:",30,"^>S",true],"^11","^:G","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>S",true,"^7",60,"^9",60,"^=<","^=N"],"~$analyze-let-bindings*",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2268,"^8",7,"^9",2268,"^:",28,"^=:",["^1O",["^=;",["^1O",[["^>2","^>3","^>M"]]]]]],"^11","^7:","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["^>2","^>3","^>M"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2268,"^=B","^>F","^9",2268,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>2","^>3","^>M"]]]]]],"~$analysis-error?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",721,"^8",7,"^9",721,"^:",22,"^=:",["^1O",["^=;",["^1O",[["^C["]]]]],"^=<","^=="],"^11","^:I","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^C["]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",721,"^=B","^==","^9",721,"^=C",1,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^C["]]]]]],"~$replace-env-pass",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1772,"^8",7,"^9",1772,"^:",23,"^=:",["^1O",["^=;",["^1O",[["~$new-env"]]]]]],"^11","^:H","^6","cljs/analyzer.cljc","^:",23,"^=>",["^1O",[["^EW"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1772,"^=B","^?;","^9",1772,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^EW"]]]]]],"~$valid-arity?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3600,"^8",8,"^9",3600,"^:",20,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^=G","^=H"]]]]],"^=<","^=="],"^=F",true,"^11","^7=","^6","cljs/analyzer.cljc","^:",20,"^=>",["^1O",[["^=G","^=H"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3600,"^=B","^==","^9",3600,"^=C",2,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=G","^=H"]]]]]],"~$parse-ns-excludes",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2747,"^8",7,"^9",2747,"^:",24,"^=:",["^1O",["^=;",["^1O",[["^1D","^>="]]]]]],"^11","^:T","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["^1D","^>="]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2747,"^=B",["^Y",[null,"^=N"]],"^9",2747,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>="]]]]]],"~$analyze-fn-methods-pass2",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2089,"^8",7,"^9",2089,"^:",31,"^=:",["^1O",["^=;",["^1O",[["^C1","^>[","^?0","^C2"]]]]]],"^11","^:W","^6","cljs/analyzer.cljc","^:",31,"^=>",["^1O",[["^C1","^>[","^?0","^C2"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2089,"^=B","^=M","^9",2089,"^=C",4,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^C1","^>[","^?0","^C2"]]]]]],"~$core-name?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",868,"^8",7,"^9",868,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^>>","Is sym visible from core in the current compilation namespace?","^=<","^=="],"^11","^7?","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^1D","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",868,"^=B","^==","^9",868,"^=C",2,"^=<","^==","^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]],"^>>","Is sym visible from core in the current compilation namespace?"],"~$get-let-tag",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2261,"^8",7,"^9",2261,"^:",18,"^=:",["^1O",["^=;",["^1O",[["^>N","~$init-expr"]]]]]],"^11","^7D","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["^>N","^F1"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2261,"^=B","^=N","^9",2261,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>N","^F1"]]]]]],"~$specials",["^ ","^11","^:X","^6","cljs/analyzer.cljc","^7",1315,"^8",1,"^9",1315,"^:",14,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1315,"^8",6,"^9",1315,"^:",14],"^=<","^>J"],"~$elide-irrelevant-meta",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4050,"^8",7,"^9",4050,"^:",28,"^=:",["^1O",["^=;",["^1O",[["~$m"]]]]]],"^11","^:U","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["~$m"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4050,"^=B",["^Y",["^=M","^=V"]],"^9",4050,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$m"]]]]]],"~$resolve-macro-ns-alias",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",846,"^8",7,"^9",846,"^:",29,"^=:",["^1O",["^=;",["^1O",[["^1D","^>N"],["^1D","^>N","^DA"]]]]],"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^1D","^>N"],["^1D","^>N","^DA"]],"^=:",["^1O",[["^1D","^>N"],["^1D","^>N","^DA"]]],"^=@",["^1O",[null,null]]]],"^11","^7C","^6","cljs/analyzer.cljc","^:",29,"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^1D","^>N"],["^1D","^>N","^DA"]],"^=:",["^1O",[["^1D","^>N"],["^1D","^>N","^DA"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1D","^>N"],["^1D","^>N","^DA"]],"^=?",null,"^=S",3,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<",["^Y",[null,"^=N"]]]],"^7",846,"^9",846,"^=C",3,"^=D",true,"^=:",["^1O",[["^1D","^>N"],["^1D","^>N","^DA"]]]],"~$unsorted-map?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3574,"^8",8,"^9",3574,"^:",21,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"^=F",true,"^11","^:Y","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["~$x"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3574,"^=B","^==","^9",3574,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["~$x"]]]]]],"~$check-invoke-arg-types",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4137,"^8",7,"^9",4137,"^:",29,"^=:",["^1O",["^=;",["^1O",[["^1D",["^ ","^@4",["^>M"],"^1T","^@J"],"^>O"]]]]]],"^11","^:Z","^6","cljs/analyzer.cljc","^:",29,"^=>",["^1O",[["^1D","~$p__75426","^>O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4137,"^=B",["^Y",["^=M","^=N","^BO","^=V"]],"^9",4137,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D",["^ ","^@4",["^>M"],"^1T","^@J"],"^>O"]]]]]],"~$check-duplicate-aliases",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3039,"^8",8,"^9",3039,"^:",31,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>U","^>V"]]]]]],"^=F",true,"^11","^:[","^6","cljs/analyzer.cljc","^:",31,"^=>",["^1O",[["^1D","^>U","^>V"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3039,"^=B","^=V","^9",3039,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>U","^>V"]]]]]],"~$confirm-ns",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",853,"^8",7,"^9",853,"^:",17,"^=:",["^1O",["^=;",["^1O",[["^1D","^CM"]]]]],"^>>","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"^11","^9V","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^1D","^CM"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",853,"^=B","^=V","^9",853,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^CM"]]]]],"^>>","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"~$default-namespaces",["^ ","^11","^9Z","^6","cljs/analyzer.cljc","^7",546,"^8",1,"^9",546,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",546,"^8",6,"^9",546,"^:",24],"^=<","^=U"],"~$earmuffed?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1799,"^8",8,"^9",1799,"^:",18,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]]],"^=F",true,"^11","^6K","^6","cljs/analyzer.cljc","^:",18,"^=>",["^1O",[["^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1799,"^=B","^==","^9",1799,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=Z"]]]]]],"~$accumulating-warning-handler",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",691,"^8",8,"^9",691,"^:",36,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^>@"]]]]]],"^=F",true,"^11","^9[","^6","cljs/analyzer.cljc","^:",36,"^=>",["^1O",[["^>@"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",691,"^=B","^?;","^9",691,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>@"]]]]]],"~$canonicalize-specs",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2955,"^8",7,"^9",2955,"^:",25,"^=:",["^1O",["^=;",["^1O",[["^C8"]]]]]],"^11","^:0","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^C8"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",2955,"^9",2955,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^C8"]]]]]],"~$build-method-call",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3332,"^8",8,"^9",3332,"^:",25,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^>C","~$meth","^>="]]]]],"^>>","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"^=F",true,"^11","^8T","^6","cljs/analyzer.cljc","^:",25,"^=>",["^1O",[["^>C","^F?","^>="]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3332,"^=B","^=U","^9",3332,"^=C",3,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^>C","^F?","^>="]]]]],"^>>","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"~$confirm-var-exists-throw",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",833,"^8",7,"^9",833,"^:",31,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"^11","^8Y","^6","cljs/analyzer.cljc","^:",31,"^=>",["^1O",[[]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",833,"^=B","^?;","^9",833,"^=C",0,"^=D",true,"^=:",["^1O",["^=;",["^1O",[[]]]]]],"~$js-module-exists?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",789,"^8",7,"^9",789,"^:",24,"^=:",["^1O",["^=;",["^1O",[["^??"]]]]]],"^11","^8X","^6","cljs/analyzer.cljc","^:",24,"^=>",["^1O",[["^??"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",789,"^=B","^=N","^9",789,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^??"]]]]]],"~$analyze-form",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4174,"^8",10,"^9",4174,"^:",22,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","^>N","^>O"]]]]]],"^11","^:2","^6","cljs/analyzer.cljc","^:",22,"^=>",["^1O",[["^1D","^>5","^>N","^>O"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",4,"^=A",false,"^7",4174,"^=B",["^Y",["^=M","^=N","^=U","^=V"]],"^9",4174,"^=C",4,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^>5","^>N","^>O"]]]]]],"~$var-ast",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1482,"^8",7,"^9",1482,"^:",14,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]]],"^11","^94","^6","cljs/analyzer.cljc","^:",14,"^=>",["^1O",[["^1D","^=Z"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1482,"^9",1482,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1D","^=Z"]]]]]],"~$add-consts",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4229,"^8",7,"^9",4229,"^:",17,"^=:",["^1O",["^=;",["^1O",[["~$compiler-state","~$constants-map"]]]]],"^>>","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"^11","^:;","^6","cljs/analyzer.cljc","^:",17,"^=>",["^1O",[["^FE","^FF"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",4229,"^=B",["^Y",[null,"^=N"]],"^9",4229,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^FE","^FF"]]]]],"^>>","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"~$error",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",713,"^8",7,"^9",713,"^:",12,"^=:",["^1O",["^=;",["^1O",[["^1D","^AB"],["^1D","^AB","~$cause"]]]]],"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^1D","^AB"],["^1D","^AB","^FH"]],"^=:",["^1O",[["^1D","^AB"],["^1D","^AB","^FH"]]],"^=@",["^1O",[null,null]]]],"^11","^:<","^6","cljs/analyzer.cljc","^:",12,"^=R",["^ ","^=A",false,"^=S",3,"^=C",3,"^=>",[["^1D","^AB"],["^1D","^AB","^FH"]],"^=:",["^1O",[["^1D","^AB"],["^1D","^AB","^FH"]]],"^=@",["^1O",[null,null]]],"^=>",[["^1D","^AB"],["^1D","^AB","^FH"]],"^=?",null,"^=S",3,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^=T",[["^ ","^=S",2,"^=A",false,"^=<","^=N"],["^ ","^=S",3,"^=A",false,"^=<","^AD"]],"^7",713,"^9",713,"^=C",3,"^=D",true,"^=:",["^1O",[["^1D","^AB"],["^1D","^AB","^FH"]]]],"~$record-tag?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3606,"^8",8,"^9",3606,"^:",19,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^=L"]]]]]],"^=F",true,"^11","^:9","^6","cljs/analyzer.cljc","^:",19,"^=>",["^1O",[["^=L"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",3606,"^=B","^==","^9",3606,"^=C",1,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^=L"]]]]]],"~$invokeable-ns?",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1108,"^8",7,"^9",1108,"^:",21,"^=:",["^1O",["^=;",["^1O",[["^1P","^1D"]]]]],"^>>","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"^11","^::","^6","cljs/analyzer.cljc","^:",21,"^=>",["^1O",[["^1P","^1D"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",1,"^=A",false,"^7",1108,"^=B",["^Y",["^==","^=N"]],"^9",1108,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^1P","^1D"]]]]],"^>>","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"~$*cljs-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",51,"^8",16,"^9",51,"^:",25,"^>S",true],"^11","^:E","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^>S",true,"^7",51,"^9",51,"^=<","^=N"],"~$check-macro-arity",["^ ","^=9",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3858,"^8",11,"^9",3858,"^:",28,"^=F",true,"^=:",["^1O",["^=;",["^1O",[["^BV","^>5"]]]]]],"^=F",true,"^11","^73","^6","cljs/analyzer.cljc","^:",28,"^=>",["^1O",[["^BV","^>5"]]],"^=?",null,"^=@",["^1O",[null,null]],"^8",4,"^=A",false,"^7",3858,"^=B","^=V","^9",3858,"^=C",2,"^=D",true,"^=:",["^1O",["^=;",["^1O",[["^BV","^>5"]]]]]]],"^1L",["^ ","^P","^P","^W","^W","^1@","^1@","^1G","^1G","^1H","^1G"],"~:cljs.analyzer/constants",["^ ","^1J",["^Y",["~$cljs.core/array?","~:args","~$cljs.core/IRecord","~:invoke-ctor","~$&","~$seq","~:ns*","^3","~$console","^4","~$case*","~:extending-base-js-type","~:case-then","~$Window","~:cljs.analyzer/namespaces","~:tags","~:unsupported-preprocess-value","~$defrecord*","~:argc","~:finally","~:statement","~$cljs.spec.alpha$macros","~$js/Function","~$cljs.core/boolean?","~:suffix","^2O","~$cljs.core/PersistentHashMap","~:deftype","~$try","~$checked-aget'","~:fns","~$Object","~:defined","~:ret","^2T","~$cljs.core/checked-aset'","~:redef","~:fexpr","~:existing","~:children","^ER","~:fdef-ns","^1R","~$js/RegExp","~$cljs.core/when","~$cljs.core/keyword?","~:ctor","~$aget","~:recurs","~$cljs.core/implements?","~:body?","^1","~:fname","^=M","^==","~:js-shadowed-by-local","^>F","~$cljs.core/simple-symbol?","~$location","~:let","^=9","~$cljs.core/Reduced","^@Q","~$cljs.core/qualified-symbol?","~:unsupported-js-module-type","^BC","~:goog","~:only","~:invalid-protocol-symbol","~:done","~:group","^5","~:ev","~$cljs.core$macros","~:host-field","~:frame","~$cljs.core/IList","~$Symbol","~:valid?","~:externs","~$cljs.core/checked-aget'","~:fn-scope","~:do","~:private-var-access","~$String","~$registry-ref","~:macros-ns","~:macro-syntax-check","~$cljs.core/var?","~:pmasks","~:init","~:cljs.analyzer/property","~:numeric","^=F","~:exprs","~:else","~:protocol-duped-method","~:protocol-symbol","~:cblocks","~:clojure.error/phase","^=N","~$floats","~:protocol","~:cljs.analyzer/symbol","~$*warn-on-infer*","~:cljs.analyzer/externs","~$ns*","~$checked-aset'","~:if","~:fn-method","~$escape","~:global","~$cljs.core/Volatile","^N","^X","~:macros","~:locals","~:tests","~:js-globals","~:return","~$finally","^4@","~:method","~:use","~:segs","~$Function","~:default","~:repl-env","^?3","^1:","~:cljs.analyzer/call","~:new","~$loop*","~:property","~:case-test","^?4","~$cljs.core/map-entry?","^14","~:bindings","~:warn","~:global-exports","~:def-emits-var","^11","~:munged-namespace","~:binding-form?","~$cljs.core/double?","^1T","~$&form","~$cljs.core/Object","^4O","~$Array","~$cljs.core/Delay","~$*unchecked-arrays*","~:flag","~:loop-lets","~$cljs.core/qualified-ident?","~:clojure.error/symbol","~:unchecked","~$cljs.core.constants","^1@","~$cljs.core/qualified-keyword?","^6","~:fields","~:spec-skip-macros","~:extend-type","~$js","^>J","~:undeclared-macros-ns","~$long","~$double","^:","~:single-segment-namespace","~$cljs.core/Var","~$__hash","~:start","~$screen","~:inferred-ret-tag","~:fn-arity","^=R","~$cljs.core/Inst","^1K","~:params","~:warning-type","~:macro-present?","^1A","~:dblock","~:js-module-index","~:fn-self-name","~:nodejs","~$js/Boolean","~:val","~:advanced","~$longs","~:compile-syntax-check","~:recur","~:field","~:with-meta","^?8","~$.-cljs$lang$test","^;A","~$js/String","~$do","~$__meta","~:const-expr","~$-speced-vars","~:state","^=>","~:rename","~$number","~$objects","~:vals","~:js-dependency-index","~:ns-name","^=?","^=S","^13","~:current-symbol","^21","~:js-provide","~:env","~:cljs.analyzer/type","~:letfn","~:node","~:infer-warning","~:vector","~:variadic-max-arity","~$cljs.core/inst?","~$letfn*","~:export","~:cljs.analyzer/analyzed","~:protocol-with-variadic-method","~$if","^=@","^15","~:cljs.analyzer/protocol-inline","~$global","~:cljs.analyzer/constant-table","^>V","~:fn-deprecated","~$cljs.core/float?","^1P","^AC","~:literal?","~:sym","^?9","~:no-op","~:catches","~:prefix","^8","~$unquote","~:types","~:cljs.analyzer/protocol-impl","~:loop","~:dot-action","~:undeclared-var","~$cljs.core/true?","~:internal-ctor","~:module-type","~:case-node","^6U","~:root-source-info","~$cljs.core/let","~$process","~:nodejs-rt","~:declared-arglists-mismatch","~:cljs.analyzer/expr","~:include-macros","~$cljs.core/checked-aget","^72","~:clojure.error/column","^16","~:preamble-missing","~:clojure.error/line","~$cljs.core/volatile?","~:binding","~$cljs.core/ns-special-form","~$require","~$cljs.core/cond","^=A","~:unsynchronized-mutable","~$cljs.core/integer?","~:const","~:js-fn-var","~:cljs.analyzer/access","^@4","~$deftype*","~$let*","~$js/Array","~$cljs.core/infinite?","~:set!","^=T","~$js*","~$cljs.core/undefined?","~$cljs.core/ISeqable","~:undeclared-protocol-symbol","~$alert","~:build-options","~:protocol-with-overwriting-method","~:nodes","~:cljs.spec/speced-vars","^1J","~:js-array","^>S","~:clojure.error/source","^7","~:expr","~$Boolean","~:arg","~:list","~:var","~$history","~$fn*","~:cljs/analysis-error","~:protocol-info","~:quote","~$recur","~:macro","~$cljs.core/IMapEntry","~:invalid-array-access","~:unprovided","~:deprecation-nowarn","~$Math","~:ns-var-clash","~$cljs.core/uuid?","~:deprecated","^1M","~:case","~:undeclared-ns","^7S","~:class","~:preprocess","~:catch","~:arg-id","~:recur-frames","~$window","^?:","~$array","^=7","~$cljs.core/reduced?","~$cljs.core/tagged-literal?","~$cljs.core/nil?","~:cljs.spec/registry-ref","^1E","~:non-dynamic-earmuffed-var","~:quoted?","~:declared","~$cljs.core/zero?","~$cljs.core/false?","~:cljs.analyzer/not-found","~:defrecord","~:lib","^??","^8:","~:info","~:protocol-prop","~:code","~$cljs.core/simple-ident?","^=B","~:cljs.analyzer/error","^?;","~:then","~:js-object","~:def-var","^9","~:cljs.analyzer/no-resolve","~:js-op","~$exports","~:var-ast","~:context","~$Number","~:invoke","~:throw","~:reload","~:undeclared-ns-form","~$doubles","~:order","~:no-such-method","^1Q","~:error","~$document","~$checked-aset","~:def","~:reload-all","^1L","~:exception","^=C","~:t","~:options","~$set!","^1N","~:missing","^=<","~:invalid-arithmetic","^24","~:protocol-deprecated","~:target","^K","~$.","~$cljs.core/simple-keyword?","^>:","~:mutable","~:reloads","~$cljs.core/ITaggedLiteral","~$cljs.core/seqable?","~$aset","^=;","^FM","~:try","^9A","^9B","~:set","~:items","~:in-loop","~$prototype","~$chars","^=D","~:js-var","^=:","~:protocol-impl-recur-with-target","~:volatile-mutable","~:import","~$macroexpand-check","~$ints","~$cljs.core/and","~:impls","~:hierarchy","~$catch","~:shadow","~$js/Object","~:body","~:host-call","~:ns-sym","~:macroexpansion","^>>","^=","~:overload-arity","~:speced-vars","~:local","~:closure-lib","~:cljs.analyzer/numeric","^;>","^:5","~$cljs.core/IChunkedSeq","~:protocol-multiple-impls","~$navigator","~:jsdoc","~$js/Number","~$cljs.core/ISequential","~$cljs.core/delay?","~:redef-in-file","~:clj","~$constructor","~:protocol-invalid-method","~:invalid-arity","~$cljs.core/regexp?","^23","~:extend-type-invalid-method-shape","~:the-var","~:suggested-symbol","~:map","~$cljs.core/IUUID","~$__extmap","~:cljs.analyzer/list","~:object","~:test","~:foreign","~:multiple-variadic-overloads","~:warn-type","~$checked-aget","~$shorts","~$*unchecked-if*","~$throw","~:forms","~:fblock","^=U","~:dep-path","^=V","~:registry-ref","~$cljs.core/instance?","^1W","~$cljs.core/checked-aset","^1S","~:statements","~:goog-define","~$def","~:compilation","~$cljs.core/ident?","~:refer-macros","~$cljs.user","^;3","~$unescape","~:protocol-impl-with-variadic-method","~$bytes~$&","^FU","^G0","^G:","^HO","^I8","^JC","^JX","^K0","^>V","^1P","^KZ","^K[","^L3","^LD","^LH","^MW","~$.","^>:","^=;","^OA","^OJ","^J:","^JP","^KW","^4@","^=T","^=S","^=A","^HG","^G8","^6U","^LG","^L>","^O:","^M@","^=M","^@Q","^FO","^HR","^NH","^G?","^HA","^>>","^5","^GG","^JA","^=:","^=@","^GD","^O3","^FN","^G6","^2O","^2T","^GH","^GP","^GT","^H?","^I;","^IB","^4O","^IJ","^IN","^JW","^K5","^KA","^72","^KP","^KV","^L1","^L4","^LP","^7S","^L[","^M0","^M1","^M6","^M7","^8:","^M>","^N0","^N4","^9B","^:5","^NW","^O1","^OL","^;3","^NV","^9A","^IW","^LJ","^J1","^HU","^O6","^FP","^GS","^N3","^H3","^L5","^IF","^GF","^NQ","^GL","^OF","^IL","^HQ","^HX","^KD","^I:","^FW","^L:","^LR","^MU","^MJ","^HZ","^NE","^H[","^JG","^OB","^HH","^J5","^OC","^IY","^K9","^G2","^GY","^GM","^KF","^KT","^LV","^N6","^JU","^N7","^O5","^@4","^JK","^N8","^I[","^JY","^JE","^NC","^LF","^J2","^=?","^=9","^=R","^=C","^=>","^NT","^MS","^MB","^OI","^I?","^MF","^IA","^LW","^NF","^KQ","^L@","^IH","^FZ","^GK","^J7","^JQ","^K=","^K1","^N9","^II","^LX","^JR","^I<","^OH","^H9","^K>","^GR","^J>","^H2","^HD","^M4","^K6","^?:","^KB","^?3","^LT","^I7","^NG","^JB","^L0","^NU","^G5","^J9","^O@","^IG","^HM","^J?","^N1","^KU","^N>","^IQ","^K8","^L2","^M8","^GZ","^GV","^NO","^1T","^JH","^1S","^1Q","^1R","^GW","^1K","^I1","^G<","^N?","^KK","^OM","^MK","^MT","^H=","^1W","^N2","^FS","^M9","^JD","^O7","^IX","^?4","^H@","^IO","~:t~:ns-specs",["^ "],"~:ns-spec-vars",["^Y",[]],"~:compiler-options",["^;8",[["^OT","~:static-fns"],true,["^OT","~:shadow-tweaks"],null,["^OT","~:source-map-inline"],null,["^OT","~:elide-asserts"],false,["^OT","~:optimize-constants"],null,["^OT","^20"],null,["^OT","~:external-config"],null,["^OT","~:tooling-config"],null,["^OT","~:emit-constants"],null,["^OT","~:load-tests"],null,["^OT","~:form-size-threshold"],null,["^OT","~:data-readers"],null,["^OT","~:infer-externs"],"~:auto",["^OT","^22"],null,["~:js-options","~:js-provider"],"^NF",["~:mode"],"~:dev",["^OT","~:fn-invoke-direct"],null,["^OT","~:source-map"],"/dev/null"]]]