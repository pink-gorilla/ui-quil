["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__72862 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__72863 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__72863);\n\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5753__auto___72999 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5753__auto___72999)){\nvar new_db_73001 = temp__5753__auto___72999;\nvar fexpr__72864_73003 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__72864_73003.cljs$core$IFn$_invoke$arity$1 ? fexpr__72864_73003.cljs$core$IFn$_invoke$arity$1(new_db_73001) : fexpr__72864_73003.call(null,new_db_73001));\n} else {\n}\n\nvar seq__72865 = cljs.core.seq(effects_without_db);\nvar chunk__72866 = null;\nvar count__72867 = (0);\nvar i__72868 = (0);\nwhile(true){\nif((i__72868 < count__72867)){\nvar vec__72878 = chunk__72866.cljs$core$IIndexed$_nth$arity$2(null,i__72868);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72878,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72878,(1),null);\nvar temp__5751__auto___73011 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___73011)){\nvar effect_fn_73012 = temp__5751__auto___73011;\n(effect_fn_73012.cljs$core$IFn$_invoke$arity$1 ? effect_fn_73012.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_73012.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__73017 = seq__72865;\nvar G__73018 = chunk__72866;\nvar G__73019 = count__72867;\nvar G__73020 = (i__72868 + (1));\nseq__72865 = G__73017;\nchunk__72866 = G__73018;\ncount__72867 = G__73019;\ni__72868 = G__73020;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__72865);\nif(temp__5753__auto__){\nvar seq__72865__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__72865__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__72865__$1);\nvar G__73021 = cljs.core.chunk_rest(seq__72865__$1);\nvar G__73022 = c__4591__auto__;\nvar G__73023 = cljs.core.count(c__4591__auto__);\nvar G__73024 = (0);\nseq__72865 = G__73021;\nchunk__72866 = G__73022;\ncount__72867 = G__73023;\ni__72868 = G__73024;\ncontinue;\n} else {\nvar vec__72881 = cljs.core.first(seq__72865__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72881,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72881,(1),null);\nvar temp__5751__auto___73025 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___73025)){\nvar effect_fn_73026 = temp__5751__auto___73025;\n(effect_fn_73026.cljs$core$IFn$_invoke$arity$1 ? effect_fn_73026.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_73026.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__73027 = cljs.core.next(seq__72865__$1);\nvar G__73028 = null;\nvar G__73029 = (0);\nvar G__73030 = (0);\nseq__72865 = G__73027;\nchunk__72866 = G__73028;\ncount__72867 = G__73029;\ni__72868 = G__73030;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__72489__auto___73031 = re_frame.interop.now();\nvar duration__72490__auto___73032 = (end__72489__auto___73031 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__72490__auto___73032,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__72489__auto___73031);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__72862);\n}} else {\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5753__auto___73033 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5753__auto___73033)){\nvar new_db_73034 = temp__5753__auto___73033;\nvar fexpr__72891_73035 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__72891_73035.cljs$core$IFn$_invoke$arity$1 ? fexpr__72891_73035.cljs$core$IFn$_invoke$arity$1(new_db_73034) : fexpr__72891_73035.call(null,new_db_73034));\n} else {\n}\n\nvar seq__72892 = cljs.core.seq(effects_without_db);\nvar chunk__72893 = null;\nvar count__72894 = (0);\nvar i__72895 = (0);\nwhile(true){\nif((i__72895 < count__72894)){\nvar vec__72909 = chunk__72893.cljs$core$IIndexed$_nth$arity$2(null,i__72895);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72909,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72909,(1),null);\nvar temp__5751__auto___73039 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___73039)){\nvar effect_fn_73048 = temp__5751__auto___73039;\n(effect_fn_73048.cljs$core$IFn$_invoke$arity$1 ? effect_fn_73048.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_73048.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__73049 = seq__72892;\nvar G__73050 = chunk__72893;\nvar G__73051 = count__72894;\nvar G__73052 = (i__72895 + (1));\nseq__72892 = G__73049;\nchunk__72893 = G__73050;\ncount__72894 = G__73051;\ni__72895 = G__73052;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__72892);\nif(temp__5753__auto__){\nvar seq__72892__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__72892__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__72892__$1);\nvar G__73056 = cljs.core.chunk_rest(seq__72892__$1);\nvar G__73057 = c__4591__auto__;\nvar G__73058 = cljs.core.count(c__4591__auto__);\nvar G__73059 = (0);\nseq__72892 = G__73056;\nchunk__72893 = G__73057;\ncount__72894 = G__73058;\ni__72895 = G__73059;\ncontinue;\n} else {\nvar vec__72913 = cljs.core.first(seq__72892__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72913,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72913,(1),null);\nvar temp__5751__auto___73061 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___73061)){\nvar effect_fn_73063 = temp__5751__auto___73061;\n(effect_fn_73063.cljs$core$IFn$_invoke$arity$1 ? effect_fn_73063.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_73063.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__73064 = cljs.core.next(seq__72892__$1);\nvar G__73065 = null;\nvar G__73066 = (0);\nvar G__73067 = (0);\nseq__72892 = G__73064;\nchunk__72893 = G__73065;\ncount__72894 = G__73066;\ni__72895 = G__73067;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__72922){\nvar map__72923 = p__72922;\nvar map__72923__$1 = cljs.core.__destructure_map(map__72923);\nvar effect = map__72923__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72923__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72923__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__72930 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__72931 = null;\nvar count__72932 = (0);\nvar i__72933 = (0);\nwhile(true){\nif((i__72933 < count__72932)){\nvar effect = chunk__72931.cljs$core$IIndexed$_nth$arity$2(null,i__72933);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__73087 = seq__72930;\nvar G__73088 = chunk__72931;\nvar G__73089 = count__72932;\nvar G__73090 = (i__72933 + (1));\nseq__72930 = G__73087;\nchunk__72931 = G__73088;\ncount__72932 = G__73089;\ni__72933 = G__73090;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__72930);\nif(temp__5753__auto__){\nvar seq__72930__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__72930__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__72930__$1);\nvar G__73091 = cljs.core.chunk_rest(seq__72930__$1);\nvar G__73092 = c__4591__auto__;\nvar G__73093 = cljs.core.count(c__4591__auto__);\nvar G__73094 = (0);\nseq__72930 = G__73091;\nchunk__72931 = G__73092;\ncount__72932 = G__73093;\ni__72933 = G__73094;\ncontinue;\n} else {\nvar effect = cljs.core.first(seq__72930__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__73095 = cljs.core.next(seq__72930__$1);\nvar G__73096 = null;\nvar G__73097 = (0);\nvar G__73098 = (0);\nseq__72930 = G__73095;\nchunk__72931 = G__73096;\ncount__72932 = G__73097;\ni__72933 = G__73098;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__72950 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__72951 = null;\nvar count__72952 = (0);\nvar i__72953 = (0);\nwhile(true){\nif((i__72953 < count__72952)){\nvar vec__72966 = chunk__72951.cljs$core$IIndexed$_nth$arity$2(null,i__72953);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72966,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72966,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5751__auto___73099 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___73099)){\nvar effect_fn_73100 = temp__5751__auto___73099;\n(effect_fn_73100.cljs$core$IFn$_invoke$arity$1 ? effect_fn_73100.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_73100.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__73101 = seq__72950;\nvar G__73102 = chunk__72951;\nvar G__73103 = count__72952;\nvar G__73105 = (i__72953 + (1));\nseq__72950 = G__73101;\nchunk__72951 = G__73102;\ncount__72952 = G__73103;\ni__72953 = G__73105;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__72950);\nif(temp__5753__auto__){\nvar seq__72950__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__72950__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__72950__$1);\nvar G__73111 = cljs.core.chunk_rest(seq__72950__$1);\nvar G__73112 = c__4591__auto__;\nvar G__73113 = cljs.core.count(c__4591__auto__);\nvar G__73114 = (0);\nseq__72950 = G__73111;\nchunk__72951 = G__73112;\ncount__72952 = G__73113;\ni__72953 = G__73114;\ncontinue;\n} else {\nvar vec__72969 = cljs.core.first(seq__72950__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72969,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72969,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5751__auto___73119 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___73119)){\nvar effect_fn_73120 = temp__5751__auto___73119;\n(effect_fn_73120.cljs$core$IFn$_invoke$arity$1 ? effect_fn_73120.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_73120.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__73122 = cljs.core.next(seq__72950__$1);\nvar G__73123 = null;\nvar G__73124 = (0);\nvar G__73125 = (0);\nseq__72950 = G__73122;\nchunk__72951 = G__73123;\ncount__72952 = G__73124;\ni__72953 = G__73125;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__72975 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__72976 = null;\nvar count__72977 = (0);\nvar i__72978 = (0);\nwhile(true){\nif((i__72978 < count__72977)){\nvar event = chunk__72976.cljs$core$IIndexed$_nth$arity$2(null,i__72978);\nre_frame.router.dispatch(event);\n\n\nvar G__73127 = seq__72975;\nvar G__73128 = chunk__72976;\nvar G__73129 = count__72977;\nvar G__73130 = (i__72978 + (1));\nseq__72975 = G__73127;\nchunk__72976 = G__73128;\ncount__72977 = G__73129;\ni__72978 = G__73130;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__72975);\nif(temp__5753__auto__){\nvar seq__72975__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__72975__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__72975__$1);\nvar G__73139 = cljs.core.chunk_rest(seq__72975__$1);\nvar G__73140 = c__4591__auto__;\nvar G__73141 = cljs.core.count(c__4591__auto__);\nvar G__73142 = (0);\nseq__72975 = G__73139;\nchunk__72976 = G__73140;\ncount__72977 = G__73141;\ni__72978 = G__73142;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__72975__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__73144 = cljs.core.next(seq__72975__$1);\nvar G__73145 = null;\nvar G__73146 = (0);\nvar G__73147 = (0);\nseq__72975 = G__73144;\nchunk__72976 = G__73145;\ncount__72977 = G__73146;\ni__72978 = G__73147;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__72983 = cljs.core.seq(value);\nvar chunk__72984 = null;\nvar count__72985 = (0);\nvar i__72986 = (0);\nwhile(true){\nif((i__72986 < count__72985)){\nvar event = chunk__72984.cljs$core$IIndexed$_nth$arity$2(null,i__72986);\nclear_event(event);\n\n\nvar G__73148 = seq__72983;\nvar G__73149 = chunk__72984;\nvar G__73150 = count__72985;\nvar G__73151 = (i__72986 + (1));\nseq__72983 = G__73148;\nchunk__72984 = G__73149;\ncount__72985 = G__73150;\ni__72986 = G__73151;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__72983);\nif(temp__5753__auto__){\nvar seq__72983__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__72983__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__72983__$1);\nvar G__73155 = cljs.core.chunk_rest(seq__72983__$1);\nvar G__73156 = c__4591__auto__;\nvar G__73157 = cljs.core.count(c__4591__auto__);\nvar G__73158 = (0);\nseq__72983 = G__73155;\nchunk__72984 = G__73156;\ncount__72985 = G__73157;\ni__72986 = G__73158;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__72983__$1);\nclear_event(event);\n\n\nvar G__73159 = cljs.core.next(seq__72983__$1);\nvar G__73160 = null;\nvar G__73161 = (0);\nvar G__73162 = (0);\nseq__72983 = G__73159;\nchunk__72984 = G__73160;\ncount__72985 = G__73161;\ni__72986 = G__73162;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^W","~$re-frame.interceptor","^X","~$re-frame.events","^Y","~$re-frame.trace","^Z","~$re-frame.registrar","^[","~$cljs.core","^10","~$goog","^11","~$router","~$re-frame.router","^13","^13","~$trace","^Z","~$events","^Y","~$re-frame.loggers","^16","~$re-frame.db","^17"],"~:seen",["^P",["~:require"]],"~:uses",["^ ","~$app-db","^17","~$->interceptor","^X","~$set-timeout!","^W","~$get-handler","^[","~$clear-handlers","^[","~$register-handler","^[","~$console","^16"],"~:require-macros",["^ ","^Z","^Z","^14","^Z","^10","^10"],"~:form",["~#list",["~$ns","^R",["^1D",["^19",["^13","~:as","^12"],["^17","~:refer",["^1;"]],["^X","^1G",["^1<"]],["^W","^1G",["^1="]],["^Y","^1F","^15"],["^[","^1G",["^1>","^1?","^1@"]],["^16","^1G",["^1A"]],["^Z","^1F","^14","~:include-macros",true]]]]],"~:flags",["^ ","^19",["^P",[]]],"~:js-deps",["^ "],"~:deps",["^11","^10","^13","^17","^X","^W","^Y","^[","^16","^Z"]],"^T","^R","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1621210454112,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (let [effects            (:effects context)\n                     effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                 (when-let [new-db (:db effects)]\n                   ((get-handler kind :db false) new-db))\n                 (doseq [[effect-key effect-value] effects-without-db]\n                   (if-let [effect-fn (get-handler kind effect-key false)]\n                     (effect-fn effect-value)\n                     (console :warn \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\"))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (if (map? value)\n      (dispatch-later value)\n      (doseq [effect (remove nil? value)]\n        (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n  :fx\n  (fn [seq-of-effects]\n    (if-not (sequential? seq-of-effects)\n      (console :error \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n      (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n        (when (= :db effect-key)\n          (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n        (if-let [effect-fn (get-handler kind effect-key false)]\n          (effect-fn effect-value)\n          (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^P",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__72862","re-frame.trace/*current-trace*","*current-trace*-temp-val__72863","re-frame.trace/start-trace","end__72489__auto__","re-frame.interop/now","duration__72490__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5753__auto__","new-db","fexpr__72864","fexpr__72891","re_frame.registrar.get_handler","seq__72865","cljs.core/seq","chunk__72866","count__72867","i__72868","vec__72878","cljs.core.nth","cljs.core/chunked-seq?","c__4591__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__72881","cljs.core/first","cljs.core/next","seq__72892","chunk__72893","count__72894","i__72895","vec__72909","vec__72913","effect-key","effect-value","temp__5751__auto__","effect-fn","re_frame.loggers.console","p__72922","map__72923","cljs.core/--destructure-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__72930","chunk__72931","count__72932","i__72933","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__72950","chunk__72951","count__72952","i__72953","vec__72966","vec__72969","cljs.core._EQ_","cljs.core/vector?","seq__72975","chunk__72976","count__72977","i__72978","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__72983","chunk__72984","count__72985","i__72986","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^P",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1M","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^P",[]],"~:deps-syms",["^11","^10","~$reagent.debug","~$reagent.impl.util"]]],["^1M","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.dom.HtmlElement"]]],["^1M","goog/labs/useragent/platform.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.labs.userAgent.util","~$goog.string"]]],["^1M","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.array","~$goog.asserts"]]],["^1M","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/events/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1M","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^2W","~$goog.object","~$goog.string.internal"]]],["^1M","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^32"]]],["^1M","re_frame/loggers.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","~$clojure.set"]]],["^1M","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z"]]],["^1M","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","~$clojure.string","~$clojure.walk","^31","^2T"]]],["^1M","goog/useragent/useragent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2W","~$goog.reflect","^2X"]]],["^1M","re_frame/router.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^Y","^W","^16","^Z"]]],["^1M","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/events/events.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2[","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","~$goog.events.EventId","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1M","re_frame/registrar.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^W","^16","~$re-frame.settings"]]],["^1M","goog/events/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^30"]]],["^1M","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^2U","^2T","~$reagent.impl.batching","^39","^31"]]],["^1M","re_frame/interop.cljs"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1M","goog/events/eventtarget.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.Disposable","^2Z","^3M","~$goog.events.Event","^3B","^3C","^31","^3E","^3F","^3H"]]],["^1M","goog/disposable/disposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.disposable.IDisposable"]]],["^1M","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1M","shadow/js.js"],["e789e354d6afe7fd62e5f7505a5a195575db182b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","reagent/impl/template.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^C","^3:","^2U","~$reagent.impl.component","^3K","~$reagent.impl.input","~$reagent.impl.protocols","^3O","^2T","^31"]]],["^1M","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^3S","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^3T","~$module$node_modules$object_assign$index"]]],["^1M","re_frame/events.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^17","~$re-frame.utils","^W","^[","^16","^X","^Z"]]],["^1M","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","^3?"]]],["^1M","goog/events/listener.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^3H","^3B"]]],["^1M","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","~$goog.fs.blob","^33","~$goog.html.SafeScript","~$goog.html.trustedtypes","^35","^36","^37","^38"]]],["^1M","goog/debug/tracer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^2Z","~$goog.debug","~$goog.debug.Logger","~$goog.iter","~$goog.log","~$goog.structs.Map","~$goog.structs.SimplePool"]]],["^1M","goog/events/listenermap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^3I","^31","^3E","^3B","^3H"]]],["^1M","goog/events/eventid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/events/eventwrapper.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1M","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^2Z","~$goog.html.SafeUrl","^37","^38","^32"]]],["^1M","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^42","~$goog.html.SafeStyle","^4<","^34","~$goog.html.uncheckedconversions","^37","^32"]]],["^1M","reagent/impl/component.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^31","^C","^2U","^3K","^3Y","^3O","^2T"]]],["^1M","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10"]]],["^1M","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1M","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^2Z","~$goog.dom.TagName","~$goog.dom.tags","^42","^4@","~$goog.html.SafeStyleSheet","^4<","^34","^43","^35","^36","^3<","^31","^37","^38","^32"]]],["^1M","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^31"]]],["^1M","goog/math/size.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/labs/useragent/engine.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^2W","^2X"]]],["^1M","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y"]]],["^1M","re_frame/settings.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^W","^16"]]],["^1M","goog/dom/dom.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^2Z","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4D","~$goog.dom.safe","^4?","^4A","~$goog.math.Coordinate","~$goog.math.Size","^31","^2X","^37","~$goog.string.Unicode","^30"]]],["^1M","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.debug.Error","^4H"]]],["^1M","reagent/impl/protocols.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10"]]],["^1M","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^2Z","^2X","~$goog.structs","^48","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1M","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^3S","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","519ffd5a4c91b67302cc9947b794966d629860cd","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^3T"]]],["^1M","re_frame/db.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^W"]]],["^1M","goog/debug/errorhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^3P","^2Z","^44","~$goog.debug.EntryPointMonitor","^4M","~$goog.debug.Trace"]]],["^1M","goog/disposable/idisposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",[]]],["^1M","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^31"]]],["^1M","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^2X","~$goog.string.StringBuffer"]]],["^3S","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","6093d43b27c84de58b9ce55e3a930469339c9e54","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^3T","^3["]]],["^1M","goog/debug/entrypointregistry.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z"]]],["^1M","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^4I","^4A","^37","^32"]]],["^1M","re_frame/interceptor.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^16","^W","^Z","^39"]]],["^1M","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^32"]]],["^1M","reagent/core.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^C","~$reagent.impl.template","^3W","^2U","^3K","^3Y","^3O","^2T"]]],["^1M","goog/debug/debug.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","~$goog.debug.errorcontext","^30"]]],["^1M","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/math/coordinate.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.math"]]],["^1M","goog/debug/errorcontext.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Y","^2Z","^4>","^4W"]]],["^1M","goog/async/nexttick.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^3@","~$goog.dom","^4D","^4>","^3<","^3="]]],["^1M","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","^4?","^42","^4@","^4F","^4<","^34","^37","^32","^35"]]],["^1M","re_frame/utils.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^16"]]],["^1M","goog/debug/logger.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^44","^47","~$goog.log.Level","~$goog.log.LogRecord","~$goog.log.Logger"]]],["^1M","re_frame/fx.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^13","^17","^X","^W","^Y","^[","^16","^Z"]]],["^1M","reagent/impl/input.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^3W","^3K","^3Y"]]],["^1M","goog/events/event.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^3P","^3E"]]],["^1M","goog/events/eventhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^3P","^3M","^31","^3Q","^3E","~$goog.events.EventTarget","^3G"]]],["^1M","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11"]]],["^1M","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","~$goog.math.Long","~$goog.math.Integer","^2X","^31","^2Y","~$goog.Uri","^4T"]]],["^1M","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^37","^38","^43","^2Z"]]],["^1M","goog/log/log.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","^44"]]],["^1M","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10"]]],["^1M","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^37","^4@","^38","^2Y","^31","^2Z","^32"]]],["^1M","goog/events/browserevent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^44","^2[","^3Q","~$goog.events.EventType","^3?","^30"]]],["^1M","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^3?"]]],["^1M","goog/structs/simplepool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^3P"]]],["^1M","goog/dom/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^30"]]],["^1M","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10"]]],["^1M","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","^2X"]]],["^1M","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^2Z","^38"]]],["^1M","goog/events/listenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^3E","^3F"]]],["^1M","re_frame/trace.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2P",["^ ","^2Q",null,"^2R",["^P",[]],"^2S",["^11","^10","^W","^16","^4>"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1617405365000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/re-frame/re-frame/1.2.0/re-frame-1.2.0.jar!/re_frame/trace.cljc",1618720871000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/re-frame/re-frame/1.2.0/re-frame-1.2.0.jar!/re_frame/interop.clj",1618720871000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1618720871000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1618720871000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/core.clj",1618720871000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1618720871000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M"],"^N",null,"^O",["^P",[]],"^Q","^R","^U",null,"^V",["^ ","^W","^W","^X","^X","^Y","^Y","^Z","^Z","^[","^[","^10","^10","^11","^11","^12","^13","^13","^13","^14","^Z","^15","^Y","^16","^16","^17","^17"],"^18",["^P",["^19"]],"~:shadow/js-access-global",["^P",["Error"]],"^1:",["^ ","^1;","^17","^1<","^X","^1=","^W","^1>","^[","^1?","^[","^1@","^[","^1A","^16"],"~:defs",["^ ","~$kind",["^ ","^Q","^1Y","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1D",["~$quote",["^1D",[["~$id","~$handler"]]]]]],"^Q","^1[","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1D",[["^66","^67"]]],"~:protocol-impl",null,"~:arglists-meta",["^1D",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^64",["^1D",["^65",["^1D",[["^66","^67"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",24,"^8",6,"^9",24,"^:",11],"^Q","^21","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",24,"^9",24,"^60","~$cljs.core/IMap","~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^63",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",79,"^8",7,"^9",79,"^:",21,"^64",["^1D",["^65",["^1D",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1F","~$effect"]]]]]]],"^Q","^29","^6","re_frame/fx.cljc","^:",21,"^68",["^1D",[["~$p__72922"]]],"^69",null,"^6:",["^1D",[null,null]],"^8",1,"^6;",false,"^7",79,"^6<",["^P",["^6=","~$js"]],"^9",79,"^6>",1,"^6?",true,"^64",["^1D",["^65",["^1D",[[["^ ","^6D",["^6E","^6F"],"^1F","^6G"]]]]]]]],"^1B",["^ ","^Z","^Z","^14","^Z","^10","^10"],"~:cljs.analyzer/constants",["^ ","^18",["^P",["~:db","~:warn","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^6Z","^6U","^6M","^6S","^6[","^6T","^6N","^6P","^6X","^6V","^6K","^6L","^6Y","^6R","^6W","^70","^6O","^6Q"]],"^1I",["^ ","^19",["^P",[]]],"^1J",["^ "],"^1K",["^11","^10","^13","^17","^X","^W","^Y","^[","^16","^Z"]],"^T","^R","~:ns-specs",["^ "],"~:ns-spec-vars",["^P",[]],"~:compiler-options",["^2O",[["^74","~:static-fns"],true,["^74","~:shadow-tweaks"],null,["^74","~:source-map-inline"],null,["^74","~:elide-asserts"],false,["^74","~:optimize-constants"],null,["^74","^1P"],null,["^74","~:external-config"],null,["^74","~:tooling-config"],null,["^74","~:emit-constants"],null,["^74","~:load-tests"],null,["^74","~:form-size-threshold"],null,["^74","~:data-readers"],null,["^74","~:infer-externs"],"~:auto",["^74","^1R"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^74","~:fn-invoke-direct"],null,["^74","~:source-map"],"/dev/null"]]]