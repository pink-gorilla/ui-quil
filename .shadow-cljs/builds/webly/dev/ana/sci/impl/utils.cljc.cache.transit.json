["^ ","~:output",["^ ","~:js","goog.provide('sci.impl.utils');\ncljs.core.derive.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sci.error\",\"realized-beyond-max\",\"sci.error/realized-beyond-max\",-1094268187),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803));\ncljs.core.derive.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sci.error\",\"parse\",\"sci.error/parse\",-264338844),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803));\nsci.impl.utils.constant_QMARK_ = (function sci$impl$utils$constant_QMARK_(x){\nreturn ((typeof x === 'number') || (typeof x === 'string') || ((x instanceof cljs.core.Keyword)) || (cljs.core.boolean_QMARK_(x)));\n});\nsci.impl.utils.eval_QMARK_ = (function sci$impl$utils$eval_QMARK_(x){\nvar G__86414 = x;\nvar G__86414__$1 = (((G__86414 == null))?null:cljs.core.meta(G__86414));\nif((G__86414__$1 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978).cljs$core$IFn$_invoke$arity$1(G__86414__$1);\n}\n});\nsci.impl.utils.kw_identical_QMARK_ = cljs.core.keyword_identical_QMARK_;\nsci.impl.utils.mark_eval_call = (function sci$impl$utils$mark_eval_call(var_args){\nvar G__86420 = arguments.length;\nswitch (G__86420) {\ncase 1:\nreturn sci.impl.utils.mark_eval_call.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 3:\nreturn sci.impl.utils.mark_eval_call.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(sci.impl.utils.mark_eval_call.cljs$core$IFn$_invoke$arity$1 = (function (expr){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(expr,(function (m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978),new cljs.core.Keyword(null,\"call\",\"call\",-519999866)),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.deref(sci.impl.vars.current_ns)),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.deref(sci.impl.vars.current_file));\n}));\n}));\n\n(sci.impl.utils.mark_eval_call.cljs$core$IFn$_invoke$arity$3 = (function (expr,extra_key,extra_val){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(expr,(function (m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978),new cljs.core.Keyword(null,\"call\",\"call\",-519999866)),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.deref(sci.impl.vars.current_ns)),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.deref(sci.impl.vars.current_file)),extra_key,extra_val);\n}));\n}));\n\n(sci.impl.utils.mark_eval_call.cljs$lang$maxFixedArity = 3);\n\nsci.impl.utils.mark_eval = (function sci$impl$utils$mark_eval(expr){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(expr,(function (m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978),new cljs.core.Keyword(null,\"eval\",\"eval\",-1103567905));\n}));\n});\nsci.impl.utils.throw_error_with_location = (function sci$impl$utils$throw_error_with_location(var_args){\nvar G__86431 = arguments.length;\nswitch (G__86431) {\ncase 2:\nreturn sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$2 = (function (msg,iobj){\nreturn sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$3(msg,iobj,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$3 = (function (msg,iobj,data){\nvar map__86436 = cljs.core.meta(iobj);\nvar map__86436__$1 = cljs.core.__destructure_map(map__86436);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__86436__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__86436__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__86436__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.deref(sci.impl.vars.current_file));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(msg,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803),new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),file], null),data], 0)));\n}));\n\n(sci.impl.utils.throw_error_with_location.cljs$lang$maxFixedArity = 3);\n\nsci.impl.utils._STAR_in_try_STAR_ = false;\nsci.impl.utils.macro_QMARK_ = (function sci$impl$utils$macro_QMARK_(f){\nvar temp__5753__auto__ = cljs.core.meta(f);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar m = temp__5753__auto__;\nvar or__4160__auto__ = new cljs.core.Keyword(\"sci\",\"macro\",\"sci/macro\",-868536151).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(m);\n}\n} else {\nreturn null;\n}\n});\nsci.impl.utils.needs_ctx = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(\"needs-ctx\");\nsci.impl.utils.rethrow_with_location_of_node = (function sci$impl$utils$rethrow_with_location_of_node(ctx,e,raw_node){\nif(cljs.core.truth_(sci.impl.utils._STAR_in_try_STAR_)){\nthrow e;\n} else {\nvar node = sci.impl.types.sexpr(raw_node);\nvar m = cljs.core.meta(node);\nvar f = ((cljs.core.seqable_QMARK_(node))?cljs.core.first(node):null);\nvar fm = (function (){var G__86449 = f;\nif((G__86449 == null)){\nreturn null;\n} else {\nreturn cljs.core.meta(G__86449);\n}\n})();\nvar op = (cljs.core.truth_((function (){var and__4149__auto__ = fm;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn m;\n} else {\nreturn and__4149__auto__;\n}\n})())?m.get(new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978)):null);\nvar special_QMARK_ = (function (){var or__4160__auto__ = (((f instanceof cljs.core.Symbol)) && (cljs.core.not(op)));\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = (sci.impl.utils.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? sci.impl.utils.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),op) : sci.impl.utils.kw_identical_QMARK_.call(null,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),op));\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn (sci.impl.utils.needs_ctx === op);\n}\n}\n})();\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(ctx);\nvar id = new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(ctx);\nif(cljs.core.not(special_QMARK_)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(env,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"sci.impl\",\"callstack\",\"sci.impl/callstack\",-1621010557),id], null),(function (vt){\nif(cljs.core.truth_(vt)){\ncljs.core._vreset_BANG_(vt,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(vt),node));\n\nreturn vt;\n} else {\nreturn cljs.core.volatile_BANG_((new cljs.core.List(null,node,null,(1),null)));\n}\n}));\n} else {\n}\n\nvar d = cljs.core.ex_data(e);\nvar wrapping_sci_error_QMARK_ = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(d),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803));\nif(wrapping_sci_error_QMARK_){\nthrow e;\n} else {\nvar ex_msg = e.message;\nvar map__86454 = (function (){var or__4160__auto__ = (function (){var G__86456 = env;\nvar G__86456__$1 = (((G__86456 == null))?null:cljs.core.deref(G__86456));\nvar G__86456__$2 = (((G__86456__$1 == null))?null:new cljs.core.Keyword(\"sci.impl\",\"callstack\",\"sci.impl/callstack\",-1621010557).cljs$core$IFn$_invoke$arity$1(G__86456__$1));\nvar G__86456__$3 = (((G__86456__$2 == null))?null:cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__86456__$2,id));\nvar G__86456__$4 = (((G__86456__$3 == null))?null:cljs.core.deref(G__86456__$3));\nvar G__86456__$5 = (((G__86456__$4 == null))?null:cljs.core.last(G__86456__$4));\nif((G__86456__$5 == null)){\nreturn null;\n} else {\nreturn cljs.core.meta(G__86456__$5);\n}\n})();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.core.meta(node);\n}\n})();\nvar map__86454__$1 = cljs.core.__destructure_map(map__86454);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__86454__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__86454__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__86454__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nif(cljs.core.truth_((function (){var and__4149__auto__ = line;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn column;\n} else {\nreturn and__4149__auto__;\n}\n})())){\nvar ex_msg__$1 = (cljs.core.truth_((function (){var and__4149__auto__ = ex_msg;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(fm);\n} else {\nreturn and__4149__auto__;\n}\n})())?clojure.string.replace(ex_msg,/(sci\\.impl\\.)?fns\\/fun\\/[a-zA-Z0-9-]+--\\d+/,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(fm)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(fm))].join('')):ex_msg);\nvar new_exception = (function (){var new_d = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803),new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column,new cljs.core.Keyword(null,\"message\",\"message\",-406056002),ex_msg__$1,new cljs.core.Keyword(\"sci.impl\",\"callstack\",\"sci.impl/callstack\",-1621010557),(new cljs.core.Delay((function (){\nvar temp__5753__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(ctx)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"sci.impl\",\"callstack\",\"sci.impl/callstack\",-1621010557),new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(ctx)], null));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar v = temp__5753__auto__;\nreturn cljs.core.deref(v);\n} else {\nreturn null;\n}\n}),null)),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),file,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192).cljs$core$IFn$_invoke$arity$1(ctx)], null);\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(ex_msg__$1,new_d,e);\n})();\nthrow new_exception;\n} else {\nthrow e;\n}\n}\n}\n});\nsci.impl.utils.iobj_QMARK_ = (function sci$impl$utils$iobj_QMARK_(obj){\nif((((!((obj == null))))?(((((obj.cljs$lang$protocol_mask$partition0$ & (262144))) || ((cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IWithMeta$))))?true:false):false)){\nreturn cljs.core.meta(obj);\n} else {\nreturn false;\n}\n});\n/**\n * Only adds metadata to obj if d is not nil and if obj already has meta\n */\nsci.impl.utils.vary_meta_STAR_ = (function sci$impl$utils$vary_meta_STAR_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___86544 = arguments.length;\nvar i__4772__auto___86545 = (0);\nwhile(true){\nif((i__4772__auto___86545 < len__4771__auto___86544)){\nargs__4777__auto__.push((arguments[i__4772__auto___86545]));\n\nvar G__86546 = (i__4772__auto___86545 + (1));\ni__4772__auto___86545 = G__86546;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((2) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((2)),(0),null)):null);\nreturn sci.impl.utils.vary_meta_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4778__auto__);\n});\n\n(sci.impl.utils.vary_meta_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,f,args){\nif(cljs.core.truth_(sci.impl.utils.iobj_QMARK_(obj))){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.vary_meta,obj,f,args);\n} else {\nreturn obj;\n}\n}));\n\n(sci.impl.utils.vary_meta_STAR_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(sci.impl.utils.vary_meta_STAR_.cljs$lang$applyTo = (function (seq86460){\nvar G__86461 = cljs.core.first(seq86460);\nvar seq86460__$1 = cljs.core.next(seq86460);\nvar G__86462 = cljs.core.first(seq86460__$1);\nvar seq86460__$2 = cljs.core.next(seq86460__$1);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__86461,G__86462,seq86460__$2);\n}));\n\n/**\n * Only adds metadata to obj if d is not nil and if meta on obj isn't already nil.\n */\nsci.impl.utils.merge_meta = (function sci$impl$utils$merge_meta(obj,d){\nif(cljs.core.truth_((function (){var and__4149__auto__ = d;\nif(cljs.core.truth_(and__4149__auto__)){\nif((!((obj == null)))){\nif((((obj.cljs$lang$protocol_mask$partition0$ & (262144))) || ((cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IWithMeta$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n} else {\nreturn and__4149__auto__;\n}\n})())){\nvar temp__5751__auto__ = cljs.core.meta(obj);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar m = temp__5751__auto__;\n\nreturn cljs.core.with_meta(obj,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m,d], 0)));\n} else {\nreturn obj;\n}\n} else {\nreturn obj;\n}\n});\nsci.impl.utils.strip_core_ns = (function sci$impl$utils$strip_core_ns(sym){\nvar G__86464 = cljs.core.namespace(sym);\nswitch (G__86464) {\ncase \"clojure.core\":\ncase \"cljs.core\":\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\n\nbreak;\ndefault:\nreturn sym;\n\n}\n});\nsci.impl.utils.allowed_loop = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(\"loop\");\nsci.impl.utils.allowed_recur = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(\"recur\");\nsci.impl.utils.walk_STAR_ = (function sci$impl$utils$walk_STAR_(inner,form){\nif(cljs.core.truth_(new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form)))){\nreturn form;\n} else {\nif(cljs.core.list_QMARK_(form)){\nreturn cljs.core.with_meta(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form)),cljs.core.meta(form));\n} else {\nif(cljs.core.map_entry_QMARK_(form)){\nreturn (new cljs.core.MapEntry((function (){var G__86465 = cljs.core.key(form);\nreturn (inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(G__86465) : inner.call(null,G__86465));\n})(),(function (){var G__86466 = cljs.core.val(form);\nreturn (inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(G__86466) : inner.call(null,G__86466));\n})(),null));\n} else {\nif(cljs.core.seq_QMARK_(form)){\nreturn cljs.core.with_meta(cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form)),cljs.core.meta(form));\n} else {\nif(cljs.core.record_QMARK_(form)){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (r,x){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r,(inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(x) : inner.call(null,x)));\n}),form,form);\n} else {\nif(cljs.core.coll_QMARK_(form)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(form),cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form));\n} else {\nreturn form;\n\n}\n}\n}\n}\n}\n}\n});\n/**\n * Prewalk with metadata preservation. Does not prewalk :sci.impl/op nodes.\n */\nsci.impl.utils.prewalk = (function sci$impl$utils$prewalk(f,form){\nreturn sci.impl.utils.walk_STAR_(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(sci.impl.utils.prewalk,f),(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(form) : f.call(null,form)));\n});\n/**\n * Fetches namespaces from env if it exists. Else, if `create?`,\n *   produces one regardless of the existince of the namespace in env and\n *   adds it to env before returning it.\n */\nsci.impl.utils.namespace_object = (function sci$impl$utils$namespace_object(env,ns_sym,create_QMARK_,attr_map){\nvar env_STAR_ = cljs.core.deref(env);\nvar ns_map = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env_STAR_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"namespaces\",\"namespaces\",-1444157469),ns_sym], null));\nvar or__4160__auto__ = new cljs.core.Keyword(null,\"obj\",\"obj\",981763962).cljs$core$IFn$_invoke$arity$1(ns_map);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nif(cljs.core.truth_((function (){var or__4160__auto____$1 = ns_map;\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn create_QMARK_;\n}\n})())){\nvar ns_obj = sci.impl.vars.__GT_SciNamespace(ns_sym,attr_map);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(env,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"namespaces\",\"namespaces\",-1444157469),ns_sym,new cljs.core.Keyword(null,\"obj\",\"obj\",981763962)], null),ns_obj);\n\nreturn ns_obj;\n} else {\nreturn null;\n}\n}\n});\nsci.impl.utils.set_namespace_BANG_ = (function sci$impl$utils$set_namespace_BANG_(ctx,ns_sym,attr_map){\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(ctx);\nvar attr_map__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.meta(ns_sym),attr_map], 0));\nvar ns_obj = sci.impl.utils.namespace_object(env,ns_sym,true,attr_map__$1);\nreturn sci.impl.types.setVal(sci.impl.vars.current_ns,ns_obj);\n});\nsci.impl.utils.eval_form_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_require_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_use_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_resolve_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_refer_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.macroexpand_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.macroexpand_1_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_do_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_fn = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_string_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.lookup = cljs.core.volatile_BANG_(null);\n/**\n * Like partition-by but splits collection only when `pred` returns\n *   a truthy value. E.g. `(split-when odd? [1 2 3 4 5]) => ((1 2) (3 4) (5))`\n */\nsci.impl.utils.split_when = (function sci$impl$utils$split_when(pred,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5753__auto__ = cljs.core.seq(coll);\nif(temp__5753__auto__){\nvar s = temp__5753__auto__;\nvar fst = cljs.core.first(s);\nvar f = cljs.core.complement(pred);\nvar run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__86468_SHARP_){\nreturn f(p1__86468_SHARP_);\n}),cljs.core.next(s)));\nreturn cljs.core.cons(run,(function (){var G__86469 = pred;\nvar G__86470 = (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s);\n}),null,null));\nreturn (sci.impl.utils.split_when.cljs$core$IFn$_invoke$arity$2 ? sci.impl.utils.split_when.cljs$core$IFn$_invoke$arity$2(G__86469,G__86470) : sci.impl.utils.split_when.call(null,G__86469,G__86470));\n})());\n} else {\nreturn null;\n}\n}),null,null));\n});\nsci.impl.utils.ana_macros = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 28, [new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),\"null\",new cljs.core.Symbol(null,\"import\",\"import\",241030818,null),\"null\",new cljs.core.Symbol(null,\"doseq\",\"doseq\",221164135,null),\"null\",new cljs.core.Symbol(null,\"lazy-seq\",\"lazy-seq\",489632906,null),\"null\",new cljs.core.Symbol(null,\"let\",\"let\",358118826,null),\"null\",new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),\"null\",new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),\"null\",new cljs.core.Symbol(null,\"in-ns\",\"in-ns\",-2089468466,null),\"null\",new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null),\"null\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),\"null\",new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),\"null\",new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),\"null\",new cljs.core.Symbol(null,\"declare\",\"declare\",654042991,null),\"null\",new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),\"null\",new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),\"null\",new cljs.core.Symbol(null,\"loop\",\"loop\",1244978678,null),\"null\",new cljs.core.Symbol(null,\"for\",\"for\",316745208,null),\"null\",new cljs.core.Symbol(null,\"expand-constructor\",\"expand-constructor\",-343741576,null),\"null\",new cljs.core.Symbol(null,\"defmacro\",\"defmacro\",2054157304,null),\"null\",new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),\"null\",new cljs.core.Symbol(null,\".\",\".\",1975675962,null),\"null\",new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),\"null\",new cljs.core.Symbol(null,\"case\",\"case\",-1510733573,null),\"null\",new cljs.core.Symbol(null,\"comment\",\"comment\",-2122229700,null),\"null\",new cljs.core.Symbol(null,\"resolve\",\"resolve\",56086045,null),\"null\",new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),\"null\",new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),\"null\",new cljs.core.Symbol(null,\"expand-dot*\",\"expand-dot*\",-1946890561,null),\"null\"], null), null);\nsci.impl.utils.ctx_fn = (function sci$impl$utils$ctx_fn(f,expr){\nreturn sci.impl.types.__GT_EvalFn(f,null,expr);\n});\nsci.impl.utils.maybe_destructured = (function sci$impl$utils$maybe_destructured(params,body){\nif(cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,params)){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),body], null);\n} else {\nvar params__$1 = params;\nvar new_params = cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,cljs.core.meta(params__$1));\nvar lets = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.truth_(params__$1)){\nif((cljs.core.first(params__$1) instanceof cljs.core.Symbol)){\nvar G__86581 = cljs.core.next(params__$1);\nvar G__86582 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new_params,cljs.core.first(params__$1));\nvar G__86583 = lets;\nparams__$1 = G__86581;\nnew_params = G__86582;\nlets = G__86583;\ncontinue;\n} else {\nvar gparam = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"p__\");\nvar G__86584 = cljs.core.next(params__$1);\nvar G__86585 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new_params,gparam);\nvar G__86586 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lets,cljs.core.first(params__$1)),gparam);\nparams__$1 = G__86584;\nnew_params = G__86585;\nlets = G__86586;\ncontinue;\n}\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new_params,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,lets,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0))))], null)], null);\n}\nbreak;\n}\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:no-doc",true,"~:file","sci/impl/utils.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$cljs.loader","~$shadow.loader","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl","~$webly.user.tenx.events","~$webly.user.tenx.events-on"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$sci.impl.utils","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^X","~$str","^X","~$sci.impl.types","^Z","~$t","^Z","~$sci.impl.vars","^[","~$vars","^[","~$cljs.core","^11","~$goog","^12"],"~:seen",["^Q",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^11","^11","^[","^[","^10","^["],"~:form",["~#list",["~$ns","^S",["^ ","^6",true],["^18",["^14",["^X","~:as","^Y"],["^Z","^1:","~$t"],["^[","^1:","^10"]]]]],"~:flags",["^ ","^14",["^Q",[]]],"~:js-deps",["^ "],"~:deps",["^12","^11","^X","^Z","^["]],"^U","^S","~:resource-id",["~:shadow.build.classpath/resource","sci/impl/utils.cljc"],"~:compiled-at",1621210462719,"~:resource-name","sci/impl/utils.cljc","~:warnings",[],"~:source","(ns sci.impl.utils\n  {:no-doc true}\n  (:require [clojure.string :as str]\n            [sci.impl.types :as t]\n            [sci.impl.vars :as vars]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n(derive :sci.error/realized-beyond-max :sci/error)\n(derive :sci.error/parse :sci/error)\n\n(defn constant? [x]\n  (or (number? x) (string? x) (keyword? x) (boolean? x)))\n\n(defn eval? [x]\n  (some-> x meta :sci.impl/op))\n\n(def kw-identical? #?(:clj identical? :cljs keyword-identical?))\n\n(defn mark-eval-call\n  ([expr]\n   (vary-meta\n    expr\n    (fn [m]\n      (-> m\n          (assoc :sci.impl/op :call)\n          (assoc :ns @vars/current-ns)\n          (assoc :file @vars/current-file)))))\n  ([expr extra-key extra-val]\n   (vary-meta\n    expr\n    (fn [m]\n      (-> m\n          (assoc :sci.impl/op :call)\n          (assoc :ns @vars/current-ns)\n          (assoc :file @vars/current-file)\n          (assoc extra-key extra-val))))))\n\n(defn mark-eval\n  [expr]\n  (vary-meta\n   expr\n   (fn [m]\n     (assoc m :sci.impl/op :eval))))\n\n(defn throw-error-with-location\n  ([msg iobj] (throw-error-with-location msg iobj {}))\n  ([msg iobj data]\n   (let [{:keys [:line :column :file]\n          :or {file @vars/current-file}} (meta iobj)]\n     (throw (ex-info msg (merge {:type :sci/error\n                                 :line line\n                                 :column column\n                                 :file file} data))))))\n\n(def ^:dynamic *in-try* false)\n\n(defn macro? [f]\n  (when-let [m (meta f)]\n    (or (:sci/macro m)\n        (:macro m))))\n\n(def needs-ctx (symbol \"needs-ctx\"))\n\n(defn rethrow-with-location-of-node [ctx ^Throwable e raw-node]\n  (if *in-try* (throw e)\n      (let [node (t/sexpr raw-node)\n            m (meta node)\n            f (when (seqable? node) (first node))\n            fm (some-> f meta)\n            op (when (and fm m)\n                 (.get ^java.util.Map m :sci.impl/op))\n            special? (or\n                      ;; special call like def\n                      (and (symbol? f) (not op))\n                      ;; anonymous function\n                      (kw-identical? :fn op)\n                      ;; special thing like require\n                      (identical? needs-ctx op))\n            env (:env ctx)\n            id (:id ctx)]\n        (when (not special?)\n          (swap! env update-in [:sci.impl/callstack id]\n                 (fn [vt]\n                   (if vt\n                     (do (vswap! vt conj node)\n                         vt)\n                     (volatile! (list node))))))\n        (let [d (ex-data e)\n              wrapping-sci-error? (isa? (:type d) :sci/error)]\n          (if wrapping-sci-error?\n            (throw e)\n            (let [ex-msg #?(:clj (.getMessage e)\n                            :cljs (.-message e))\n                  {:keys [:line :column :file]}\n                  (or (some-> env deref\n                              :sci.impl/callstack (get id)\n                              deref last meta)\n                      (meta node))]\n              (if (and line column)\n                (let [ex-msg (if (and ex-msg (:name fm))\n                               (str/replace ex-msg #\"(sci\\.impl\\.)?fns/fun/[a-zA-Z0-9-]+--\\d+\"\n                                            (str (:ns fm) \"/\" (:name fm)))\n                               ex-msg)\n                      new-exception\n                      (let [new-d {:type :sci/error\n                                   :line line\n                                   :column column\n                                   :message ex-msg\n                                   :sci.impl/callstack\n                                   (delay (when-let\n                                              [v (get-in @(:env ctx) [:sci.impl/callstack (:id ctx)])]\n                                            @v))\n                                   :file file\n                                   :locals (:bindings ctx)}]\n                        (ex-info ex-msg new-d e))]\n                  (throw new-exception))\n                (throw e))))))))\n\n(defn iobj? [obj]\n  (and #?(:clj (instance? clojure.lang.IObj obj)\n          :cljs (implements? IWithMeta obj))\n       (meta obj)))\n\n(defn vary-meta*\n  \"Only adds metadata to obj if d is not nil and if obj already has meta\"\n  [obj f & args]\n  (if (iobj? obj)\n    (apply vary-meta obj f args)\n    obj))\n\n(defn merge-meta\n  \"Only adds metadata to obj if d is not nil and if meta on obj isn't already nil.\"\n  [obj d]\n  (if (and d #?(:clj (instance? clojure.lang.IObj obj)\n                :cljs (implements? IWithMeta obj)))\n    (if-let [m (meta obj)]\n      (do\n        nil\n        ;; this should not happen, turn on for debugging\n        #_(when (identical? m d) (prn :identical obj d m))\n        (with-meta obj (merge m d)))\n      obj)\n    obj))\n\n(defn strip-core-ns [sym]\n  (case (namespace sym)\n    (\"clojure.core\" \"cljs.core\") (symbol (name sym))\n    sym))\n\n(def allowed-loop (symbol \"loop\"))\n(def allowed-recur (symbol \"recur\"))\n\n(defn walk*\n  [inner form]\n  (cond\n    (:sci.impl/op (meta form)) form\n    (list? form) (with-meta (apply list (map inner form))\n                   (meta form))\n    #?(:clj (instance? clojure.lang.IMapEntry form) :cljs (map-entry? form))\n    #?(:clj (clojure.lang.MapEntry/create (inner (key form)) (inner (val form)))\n       :cljs (MapEntry. (inner (key form)) (inner (val form)) nil))\n    (seq? form) (with-meta (doall (map inner form))\n                  (meta form))\n    #?(:clj (instance? clojure.lang.IRecord form)\n       :cljs (record? form))\n    (reduce (fn [r x] (conj r (inner x))) form form)\n    (coll? form) (into (empty form) (map inner form))\n    :else form))\n\n(defn prewalk\n  \"Prewalk with metadata preservation. Does not prewalk :sci.impl/op nodes.\"\n  [f form]\n  (walk* (partial prewalk f) (f form)))\n\n(defn namespace-object\n  \"Fetches namespaces from env if it exists. Else, if `create?`,\n  produces one regardless of the existince of the namespace in env and\n  adds it to env before returning it.\"\n  [env ns-sym create? attr-map]\n  (let [env* @env\n        ns-map (get-in env* [:namespaces ns-sym])]\n    (or (:obj ns-map)\n        (when (or ns-map create?)\n          (let [ns-obj (vars/->SciNamespace ns-sym attr-map)]\n            (swap! env assoc-in [:namespaces ns-sym :obj] ns-obj)\n            ns-obj)))))\n\n(defn set-namespace! [ctx ns-sym attr-map]\n  (let [env (:env ctx)\n        attr-map (merge (meta ns-sym) attr-map)\n        ns-obj (namespace-object env ns-sym true attr-map)]\n    (t/setVal vars/current-ns ns-obj)))\n\n(def eval-form-state (volatile! nil))\n(def eval-require-state (volatile! nil))\n(def eval-use-state (volatile! nil))\n(def eval-resolve-state (volatile! nil))\n(def eval-refer-state (volatile! nil))\n(def macroexpand* (volatile! nil))\n(def macroexpand-1* (volatile! nil))\n(def eval* (volatile! nil))\n(def eval-do* (volatile! nil))\n(def eval-fn (volatile! nil))\n(def eval-string* (volatile! nil))\n(def lookup (volatile! nil))\n\n(defn split-when\n  \"Like partition-by but splits collection only when `pred` returns\n  a truthy value. E.g. `(split-when odd? [1 2 3 4 5]) => ((1 2) (3 4) (5))`\"\n  [pred coll]\n  (lazy-seq\n   (when-let [s (seq coll)]\n     (let [fst (first s)\n           f (complement pred)\n           run (cons fst (take-while #(f %) (next s)))]\n       (cons run (split-when pred (lazy-seq (drop (count run) s))))))))\n\n(def ana-macros\n  '#{do if and or let fn fn* def defn\n     comment loop lazy-seq for doseq case try defmacro\n     declare expand-dot* expand-constructor new . import in-ns ns var\n     set! resolve #_#_macroexpand-1 macroexpand})\n\n(defn ctx-fn [f expr]\n  (t/->EvalFn f nil expr))\n\n(defn maybe-destructured\n  [params body]\n  (if (every? symbol? params)\n    {:params params\n     :body body}\n    (loop [params params\n           new-params (with-meta [] (meta params))\n           lets []]\n      (if params\n        (if (symbol? (first params))\n          (recur (next params) (conj new-params (first params)) lets)\n          (let [gparam (gensym \"p__\")]\n            (recur (next params) (conj new-params gparam)\n                   (-> lets (conj (first params)) (conj gparam)))))\n        {:params new-params\n         :body [`(let ~lets\n                   ~@body)]}))))\n","~:reader-features",["^Q",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core.derive","sci.impl.utils/constant?","x","cljs.core/Keyword","cljs.core/boolean?","sci.impl.utils/eval?","G__86414","cljs.core/meta","sci.impl.utils/kw-identical?","cljs.core/keyword-identical?","var_args","G__86420","sci.impl.utils/mark-eval-call","js/Error","expr","cljs.core.vary_meta","m","cljs.core.assoc","cljs.core/deref","sci.impl.vars/current-ns","sci.impl.vars/current-file","extra-key","extra-val","sci.impl.utils/mark-eval","G__86431","sci.impl.utils/throw-error-with-location","msg","iobj","sci.impl.utils.throw_error_with_location","data","map__86436","cljs.core/--destructure-map","line","cljs.core.get","column","file","cljs.core.ex_info","cljs.core.merge","sci.impl.utils/*in-try*","sci.impl.utils/macro?","f","temp__5753__auto__","or__4160__auto__","sci.impl.utils/needs-ctx","cljs.core.symbol","sci.impl.utils/rethrow-with-location-of-node","ctx","e","raw-node","node","sci.impl.types/sexpr","cljs.core/seqable?","cljs.core/first","fm","G__86449","op","and__4149__auto__","special?","cljs.core/Symbol","cljs.core/not","env","id","cljs.core.swap_BANG_","cljs.core/update-in","vt","cljs.core/-vreset!","cljs.core/-deref","cljs.core.conj","cljs.core/volatile!","cljs.core/List","d","cljs.core/ex-data","wrapping-sci-error?","cljs.core.isa_QMARK_","map__86454","ex-msg","G__86456","cljs.core/last","clojure.string/replace","new-exception","new-d","cljs.core/Delay","v","cljs.core.get_in","sci.impl.utils/iobj?","obj","cljs.core/PROTOCOL_SENTINEL","args__4777__auto__","len__4771__auto__","i__4772__auto__","argseq__4778__auto__","cljs.core/IndexedSeq","sci.impl.utils/vary-meta*","seq86460","G__86461","cljs.core/next","G__86462","self__4758__auto__","args","cljs.core.apply","cljs.core/vary-meta","sci.impl.utils/merge-meta","temp__5751__auto__","cljs.core/with-meta","sci.impl.utils/strip-core-ns","sym","G__86464","cljs.core/namespace","cljs.core/name","sci.impl.utils/allowed-loop","sci.impl.utils/allowed-recur","sci.impl.utils/walk*","inner","form","cljs.core/list?","cljs.core/list","cljs.core.map","cljs.core/map-entry?","cljs.core/MapEntry","G__86465","cljs.core/key","G__86466","cljs.core/val","cljs.core/seq?","cljs.core.doall","cljs.core/record?","cljs.core.reduce","r","cljs.core/coll?","cljs.core.into","cljs.core/empty","sci.impl.utils/prewalk","cljs.core.partial","sci.impl.utils/namespace-object","ns-sym","create?","attr-map","env*","ns-map","ns-obj","sci.impl.vars/->SciNamespace","cljs.core/assoc-in","sci.impl.utils/set-namespace!","sci.impl.types/setVal","sci.impl.utils/eval-form-state","sci.impl.utils/eval-require-state","sci.impl.utils/eval-use-state","sci.impl.utils/eval-resolve-state","sci.impl.utils/eval-refer-state","sci.impl.utils/macroexpand*","sci.impl.utils/macroexpand-1*","sci.impl.utils/eval*","sci.impl.utils/eval-do*","sci.impl.utils/eval-fn","sci.impl.utils/eval-string*","sci.impl.utils/lookup","sci.impl.utils/split-when","pred","coll","cljs.core/LazySeq","s","cljs.core/seq","fst","cljs.core/complement","run","cljs.core/cons","p1__86468#","cljs.core.take_while","G__86469","G__86470","cljs.core.drop","cljs.core/count","sci.impl.utils/ana-macros","sci.impl.utils/ctx-fn","sci.impl.types/->EvalFn","sci.impl.utils/maybe-destructured","params","body","cljs.core/every?","cljs.core/symbol?","new-params","lets","cljs.core.sequence","cljs.core.concat","gparam","cljs.core.gensym"]],"~:used-vars",["^Q",["~$sci.impl.utils/mark-eval-call","~$cljs.core/PROTOCOL_SENTINEL","~$sci.impl.utils/eval-use-state","~$sci.impl.utils/*in-try*","~$cljs.core/boolean?","~$sci.impl.utils/iobj?","~$sci.impl.utils/split-when","~$sci.impl.types/->EvalFn","~$sci.impl.utils/lookup","~$cljs.core/partial","~$cljs.core/doall","~$sci.impl.vars/current-ns","~$cljs.core/-deref","~$sci.impl.utils/vary-meta*","~$cljs.core/deref","~$sci.impl.vars/current-file","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/apply","~$cljs.core/Keyword","~$sci.impl.utils/set-namespace!","~$cljs.core/map-entry?","~$cljs.core/MapEntry","~$cljs.core/keyword-identical?","~$cljs.core/LazySeq","~$cljs.core/concat","~$sci.impl.utils/merge-meta","~$sci.impl.types/setVal","~$sci.impl.utils/eval-refer-state","~$sci.impl.utils/eval?","~$sci.impl.utils/eval*","~$sci.impl.utils/macroexpand*","~$cljs.core/into","~$cljs.core/conj","~$cljs.core/vary-meta","~$cljs.core/with-meta","~$cljs.core/map","~$sci.impl.utils/eval-require-state","~$cljs.core/volatile!","~$sci.impl.utils/ana-macros","~$cljs.core/List","~$cljs.core/empty","~$cljs.core/swap!","~$sci.impl.utils/namespace-object","~$cljs.core/derive","~$cljs.core/-vreset!","~$cljs.core/symbol","~$cljs.core/record?","~$sci.impl.utils/rethrow-with-location-of-node","~$sci.impl.utils/macro?","~$sci.impl.utils/strip-core-ns","~$sci.impl.utils/constant?","~$sci.impl.utils/allowed-loop","~$cljs.core/ex-info","~$cljs.core/meta","~$sci.impl.utils/eval-string*","~$sci.impl.utils/eval-form-state","~$cljs.core/list?","~$sci.impl.utils/allowed-recur","~$sci.impl.utils/eval-do*","~$sci.impl.utils/macroexpand-1*","~$cljs.core/next","~$sci.impl.utils/prewalk","~$cljs.core/sequence","~$sci.impl.utils/ctx-fn","~$cljs.core/not","~$sci.impl.utils/eval-fn","~$cljs.core/cons","~$cljs.core/assoc","~$cljs.core/assoc-in","~$sci.impl.utils/walk*","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.core/coll?","~$sci.impl.utils/kw-identical?","~$cljs.core/first","~$sci.impl.utils/maybe-destructured","~$cljs.core/seq?","~$sci.impl.utils/needs-ctx","~$sci.impl.utils/throw-error-with-location","~$cljs.core/list","~$cljs.core/name","~$cljs.core/merge","~$cljs.core/every?","~$cljs.core/update-in","~$js/Error","~$sci.impl.utils/eval-resolve-state","~$sci.impl.utils/mark-eval"]]],"~:cache-keys",["~#cmap",[["^1?","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Q",[]],"~:deps-syms",["^12","~$goog.dom.HtmlElement"]]],["^1?","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","~$goog.array","~$goog.asserts"]]],["^1?","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3R","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1?","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3V"]]],["^1?","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S"]]],["^1?","sci/impl/unrestrict.cljc"],["2134f95b4bd92083c89c364288fc3cbe36d565b6","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^11"]]],["^1?","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S"]]],["^1?","sci/impl/macros.cljc"],["2134f95b4bd92083c89c364288fc3cbe36d565b6","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^11"]]],"~:SHADOW-TIMESTAMP",[1618720883000,1618720883000,1618720422000],["^1?","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S","~$goog.reflect"]]],["^1?","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S","~$goog.fs.blob","^3W","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3Y","^3Z","^3[","^40"]]],["^1?","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3R","^3S","~$goog.html.SafeUrl","^3[","^40","^3V"]]],["^1?","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^44","~$goog.html.SafeStyle","^46","^3X","~$goog.html.uncheckedconversions","^3[","^3V"]]],["^1?","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1?","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3R","^3S","~$goog.dom.TagName","~$goog.dom.tags","^44","^4:","~$goog.html.SafeStyleSheet","^46","^3X","^45","^3Y","^3Z","~$goog.labs.userAgent.browser","^3U","^3[","^40","^3V"]]],["^1?","sci/impl/types.cljc"],["2134f95b4bd92083c89c364288fc3cbe36d565b6","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^11"]]],["^1?","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3U"]]],["^1?","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3R"]]],["^1?","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1?","sci/impl/vars.cljc"],["2134f95b4bd92083c89c364288fc3cbe36d565b6","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^11","~$sci.impl.macros","^Z","~$sci.impl.unrestrict","~$sci.lang"]]],["^1?","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3R","^3S","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1?","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",[]]],["^1?","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3R","^3U"]]],["^1?","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^11","^4G","~$goog.string.StringBuffer"]]],["^1?","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","~$goog.dom.safe","^4;","^3[","^3V"]]],["^1?","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3V"]]],["^1?","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3R","^3S","^48","~$goog.math"]]],["^1?","sci/impl/utils.cljc"],["2134f95b4bd92083c89c364288fc3cbe36d565b6","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^11","^X","^Z","^["]]],["^1?","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S","^49","^44","^4:","^4@","^46","^3X","^3[","^3V","^3Y"]]],["^1?","sci/lang.cljc"],["2134f95b4bd92083c89c364288fc3cbe36d565b6","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^11"]]],["^1?","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12"]]],["^1?","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","~$goog.math.Long","~$goog.math.Integer","^4G","^3U","^3R","~$goog.Uri","^4M"]]],["^1?","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3[","^40","^45","^3S"]]],["^1?","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3[","^4:","^40","^3R","^3U","^3S","^3V"]]],["^1?","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^42"]]],["^1?","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S","^4G"]]],["^1?","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3M",["^ ","^3N",null,"^3O",["^Q",[]],"^3P",["^12","^3S","^40"]]]]],"~:clj-info",["^ ","jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/data.json/2.1.0/data.json-2.1.0.jar!/clojure/data/json.clj",1618502954000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/borkdude/sci/0.2.5/sci-0.2.5.jar!/sci/impl/types.cljc",1619741120000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/borkdude/sci/0.2.5/sci-0.2.5.jar!/sci/impl/macros.cljc",1619741120000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1618720434000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1618501370000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618720422000,"jar:file:/home/andreas/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1618716228000,"jar:file:/home/andreas/.m2/repository/borkdude/sci/0.2.5/sci-0.2.5.jar!/sci/impl/vars.cljc",1619741120000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6",true,"^7","sci/impl/utils.cljc","^8",1,"^9",5,"^:",1,"^;",19],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N"],"^O",null,"^P",["^Q",[]],"^R","^S","^V",null,"^W",["^ ","^X","^X","^Y","^X","^Z","^Z","~$t","^Z","^[","^[","^10","^[","^11","^11","^12","^12"],"^13",["^Q",["^14"]],"~:shadow/js-access-global",["^Q",["Error"]],"^15",null,"~:defs",["^ ","~$set-namespace!",["^ ","~:protocol-inline",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",189,"^9",7,"^:",189,"^;",21,"~:arglists",["^18",["~$quote",["^18",[["~$ctx","~$ns-sym","~$attr-map"]]]]]],"^R","^23","^7","sci/impl/utils.cljc","^;",21,"~:method-params",["^18",[["^5M","^5N","^5O"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^9",1,"~:variadic?",false,"^8",189,"~:ret-tag","~$any","^:",189,"~:max-fixed-arity",3,"~:fn-var",true,"^5K",["^18",["^5L",["^18",[["^5M","^5N","^5O"]]]]]],"~$ctx-fn",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",225,"^9",7,"^:",225,"^;",13,"^5K",["^18",["^5L",["^18",[["~$f","~$expr"]]]]]],"^R","^33","^7","sci/impl/utils.cljc","^;",13,"^5P",["^18",[["~$f","^5Y"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",225,"^5T","~$sci.impl.types/EvalFn","^:",225,"^5V",2,"^5W",true,"^5K",["^18",["^5L",["^18",[["~$f","^5Y"]]]]]],"~$eval-fn",["^ ","^R","^35","^7","sci/impl/utils.cljc","^8",204,"^9",1,"^:",204,"^;",13,"^5",["^ ","^7","sci/impl/utils.cljc","^8",204,"^9",6,"^:",204,"^;",13],"~:tag","~$cljs.core/Volatile"],"~$merge-meta",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",132,"^9",7,"^:",132,"^;",17,"^5K",["^18",["^5L",["^18",[["~$obj","~$d"]]]]],"~:doc","Only adds metadata to obj if d is not nil and if meta on obj isn't already nil."],"^R","^29","^7","sci/impl/utils.cljc","^;",17,"^5P",["^18",[["^63","~$d"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",132,"^5T",["^Q",[null,"~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^:",132,"^5V",2,"^5W",true,"^5K",["^18",["^5L",["^18",[["^63","~$d"]]]]],"^64","Only adds metadata to obj if d is not nil and if meta on obj isn't already nil."],"~$eval?",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",15,"^9",7,"^:",15,"^;",12,"^5K",["^18",["^5L",["^18",[["~$x"]]]]]],"^R","^2<","^7","sci/impl/utils.cljc","^;",12,"^5P",["^18",[["~$x"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",15,"^5T",["^Q",["^5U","^67"]],"^:",15,"^5V",1,"^5W",true,"^5K",["^18",["^5L",["^18",[["~$x"]]]]]],"~$needs-ctx",["^ ","^R","^3A","^7","sci/impl/utils.cljc","^8",63,"^9",1,"^:",63,"^;",15,"^5",["^ ","^7","sci/impl/utils.cljc","^8",63,"^9",6,"^:",63,"^;",15],"^60",["^Q",["^5U","^3:"]]],"~$throw-error-with-location",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",46,"^9",7,"^:",46,"^;",32,"^5K",["^18",["^5L",["^18",[["~$msg","~$iobj"],["^6;","^6<","~$data"]]]]],"~:top-fn",["^ ","^5S",false,"~:fixed-arity",3,"^5V",3,"^5P",[["^6;","^6<"],["^6;","^6<","^6="]],"^5K",["^18",[["^6;","^6<"],["^6;","^6<","^6="]]],"^5R",["^18",[null,null]]]],"^R","^3B","^7","sci/impl/utils.cljc","^;",32,"^6>",["^ ","^5S",false,"^6?",3,"^5V",3,"^5P",[["^6;","^6<"],["^6;","^6<","^6="]],"^5K",["^18",[["^6;","^6<"],["^6;","^6<","^6="]]],"^5R",["^18",[null,null]]],"^5P",[["^6;","^6<"],["^6;","^6<","^6="]],"^5Q",null,"^6?",3,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"~:methods",[["^ ","^6?",2,"^5S",false,"^60","^5U"],["^ ","^6?",3,"^5S",false,"^60","~$ignore"]],"^8",46,"^:",46,"^5V",3,"^5W",true,"^5K",["^18",[["^6;","^6<"],["^6;","^6<","^6="]]]],"~$macroexpand*",["^ ","^R","^2>","^7","sci/impl/utils.cljc","^8",200,"^9",1,"^:",200,"^;",18,"^5",["^ ","^7","sci/impl/utils.cljc","^8",200,"^9",6,"^:",200,"^;",18],"^60","^61"],"~$mark-eval",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",39,"^9",7,"^:",39,"^;",16,"^5K",["^18",["^5L",["^18",[["^5Y"]]]]]],"^R","^3J","^7","sci/impl/utils.cljc","^;",16,"^5P",["^18",[["^5Y"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",39,"^5T",["^Q",["^65","^66","^67"]],"^:",39,"^5V",1,"^5W",true,"^5K",["^18",["^5L",["^18",[["^5Y"]]]]]],"~$eval-resolve-state",["^ ","^R","^3I","^7","sci/impl/utils.cljc","^8",198,"^9",1,"^:",198,"^;",24,"^5",["^ ","^7","sci/impl/utils.cljc","^8",198,"^9",6,"^:",198,"^;",24],"^60","^61"],"~$*in-try*",["^ ","^5",["^ ","^7","sci/impl/utils.cljc","^8",56,"^9",16,"^:",56,"^;",24,"~:dynamic",true],"^R","^1N","^7","sci/impl/utils.cljc","^;",24,"^9",1,"^6F",true,"^8",56,"^:",56,"^60","^5U"],"~$iobj?",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",120,"^9",7,"^:",120,"^;",12,"^5K",["^18",["^5L",["^18",[["^63"]]]]]],"^R","^1P","^7","sci/impl/utils.cljc","^;",12,"^5P",["^18",[["^63"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",120,"^5T",["^Q",["~$boolean","~$clj-or-nil","^67"]],"^:",120,"^5V",1,"^5W",true,"^5K",["^18",["^5L",["^18",[["^63"]]]]]],"~$split-when",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",208,"^9",7,"^:",208,"^;",17,"^5K",["^18",["^5L",["^18",[["~$pred","~$coll"]]]]],"^64","Like partition-by but splits collection only when `pred` returns\n  a truthy value. E.g. `(split-when odd? [1 2 3 4 5]) => ((1 2) (3 4) (5))`"],"^R","^1Q","^7","sci/impl/utils.cljc","^;",17,"^5P",["^18",[["^6K","^6L"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",208,"^5T","^27","^:",208,"^5V",2,"^5W",true,"^5K",["^18",["^5L",["^18",[["^6K","^6L"]]]]],"^64","Like partition-by but splits collection only when `pred` returns\n  a truthy value. E.g. `(split-when odd? [1 2 3 4 5]) => ((1 2) (3 4) (5))`"],"~$lookup",["^ ","^R","^1S","^7","sci/impl/utils.cljc","^8",206,"^9",1,"^:",206,"^;",12,"^5",["^ ","^7","sci/impl/utils.cljc","^8",206,"^9",6,"^:",206,"^;",12],"^60","^61"],"~$rethrow-with-location-of-node",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",65,"^9",7,"^:",65,"^;",36,"^5K",["^18",["^5L",["^18",[["^5M","~$e","~$raw-node"]]]]]],"^R","^2O","^7","sci/impl/utils.cljc","^;",36,"^5P",["^18",[["^5M","~$e","^6O"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",65,"^5T","^6A","^:",65,"^5V",3,"^5W",true,"^5K",["^18",["^5L",["^18",[["^5M","~$e","^6O"]]]]]],"~$constant?",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",12,"^9",7,"^:",12,"^;",16,"^5K",["^18",["^5L",["^18",[["~$x"]]]]]],"^R","^2R","^7","sci/impl/utils.cljc","^;",16,"^5P",["^18",[["~$x"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",12,"^5T","^6H","^:",12,"^5V",1,"^5W",true,"^5K",["^18",["^5L",["^18",[["~$x"]]]]]],"~$eval-form-state",["^ ","^R","^2W","^7","sci/impl/utils.cljc","^8",195,"^9",1,"^:",195,"^;",21,"^5",["^ ","^7","sci/impl/utils.cljc","^8",195,"^9",6,"^:",195,"^;",21],"^60","^61"],"~$allowed-recur",["^ ","^R","^2Y","^7","sci/impl/utils.cljc","^8",152,"^9",1,"^:",152,"^;",19,"^5",["^ ","^7","sci/impl/utils.cljc","^8",152,"^9",6,"^:",152,"^;",19],"^60",["^Q",["^5U","^3:"]]],"~$vary-meta*",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",125,"^9",7,"^:",125,"^;",17,"^5K",["^18",["^5L",["^18",[["^63","~$f","~$&","~$args"]]]]],"^64","Only adds metadata to obj if d is not nil and if obj already has meta","^6>",["^ ","^5S",true,"^6?",2,"^5V",2,"^5P",[["^18",["^63","~$f","^6T"]]],"^5K",["^18",[["^63","~$f","~$&","^6T"]]],"^5R",["^18",[null]]]],"^R","^1X","^7","sci/impl/utils.cljc","^;",17,"^6>",["^ ","^5S",true,"^6?",2,"^5V",2,"^5P",[["^18",["^63","~$f","^6T"]]],"^5K",["^18",[["^63","~$f","~$&","^6T"]]],"^5R",["^18",[null]]],"^5P",[["^18",["^63","~$f","^6T"]]],"^5Q",null,"^6?",2,"^5R",["^18",[null]],"^9",1,"^5S",true,"^6@",[["^ ","^6?",2,"^5S",true,"^60",["^Q",[null,"^5U"]]]],"^8",125,"^5T","^5U","^:",125,"^5V",2,"^5W",true,"^5K",["^18",[["^63","~$f","~$&","^6T"]]],"^64","Only adds metadata to obj if d is not nil and if obj already has meta"],"~$eval-do*",["^ ","^R","^2Z","^7","sci/impl/utils.cljc","^8",203,"^9",1,"^:",203,"^;",14,"^5",["^ ","^7","sci/impl/utils.cljc","^8",203,"^9",6,"^:",203,"^;",14],"^60","^61"],"~$macroexpand-1*",["^ ","^R","^2[","^7","sci/impl/utils.cljc","^8",201,"^9",1,"^:",201,"^;",20,"^5",["^ ","^7","sci/impl/utils.cljc","^8",201,"^9",6,"^:",201,"^;",20],"^60","^61"],"~$prewalk",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",171,"^9",7,"^:",171,"^;",14,"^5K",["^18",["^5L",["^18",[["~$f","~$form"]]]]],"^64","Prewalk with metadata preservation. Does not prewalk :sci.impl/op nodes."],"^R","^31","^7","sci/impl/utils.cljc","^;",14,"^5P",["^18",[["~$f","^6X"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",171,"^5T",["^Q",[null,"^65","^5U","^25","^66","^67"]],"^:",171,"^5V",2,"^5W",true,"^5K",["^18",["^5L",["^18",[["~$f","^6X"]]]]],"^64","Prewalk with metadata preservation. Does not prewalk :sci.impl/op nodes."],"~$walk*",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",154,"^9",7,"^:",154,"^;",12,"^5K",["^18",["^5L",["^18",[["~$inner","^6X"]]]]]],"^R","^39","^7","sci/impl/utils.cljc","^;",12,"^5P",["^18",[["^6Z","^6X"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",154,"^5T",["^Q",[null,"^65","^5U","^25","^66","^67"]],"^:",154,"^5V",2,"^5W",true,"^5K",["^18",["^5L",["^18",[["^6Z","^6X"]]]]]],"~$kw-identical?",["^ ","^R","^3=","^7","sci/impl/utils.cljc","^8",18,"^9",1,"^:",18,"^;",19,"^5",["^ ","^7","sci/impl/utils.cljc","^8",18,"^9",6,"^:",18,"^;",19]],"~$eval-refer-state",["^ ","^R","^2;","^7","sci/impl/utils.cljc","^8",199,"^9",1,"^:",199,"^;",22,"^5",["^ ","^7","sci/impl/utils.cljc","^8",199,"^9",6,"^:",199,"^;",22],"^60","^61"],"~$eval*",["^ ","^R","^2=","^7","sci/impl/utils.cljc","^8",202,"^9",1,"^:",202,"^;",11,"^5",["^ ","^7","sci/impl/utils.cljc","^8",202,"^9",6,"^:",202,"^;",11],"^60","^61"],"~$maybe-destructured",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",228,"^9",7,"^:",228,"^;",25,"^5K",["^18",["^5L",["^18",[["~$params","~$body"]]]]]],"^R","^3?","^7","sci/impl/utils.cljc","^;",25,"^5P",["^18",[["^73","^74"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",228,"^5T","~$cljs.core/IMap","^:",228,"^5V",2,"^5W",true,"^5K",["^18",["^5L",["^18",[["^73","^74"]]]]]],"~$eval-require-state",["^ ","^R","^2D","^7","sci/impl/utils.cljc","^8",196,"^9",1,"^:",196,"^;",24,"^5",["^ ","^7","sci/impl/utils.cljc","^8",196,"^9",6,"^:",196,"^;",24],"^60","^61"],"~$ana-macros",["^ ","^R","^2F","^7","sci/impl/utils.cljc","^8",219,"^9",1,"^:",219,"^;",16,"^5",["^ ","^7","sci/impl/utils.cljc","^8",219,"^9",6,"^:",219,"^;",16],"^60","~$cljs.core/ISet"],"~$mark-eval-call",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",20,"^9",7,"^:",20,"^;",21,"^5K",["^18",["^5L",["^18",[["^5Y"],["^5Y","~$extra-key","~$extra-val"]]]]],"^6>",["^ ","^5S",false,"^6?",3,"^5V",3,"^5P",[["^5Y"],["^5Y","^7:","^7;"]],"^5K",["^18",[["^5Y"],["^5Y","^7:","^7;"]]],"^5R",["^18",[null,null]]]],"^R","^1K","^7","sci/impl/utils.cljc","^;",21,"^6>",["^ ","^5S",false,"^6?",3,"^5V",3,"^5P",[["^5Y"],["^5Y","^7:","^7;"]],"^5K",["^18",[["^5Y"],["^5Y","^7:","^7;"]]],"^5R",["^18",[null,null]]],"^5P",[["^5Y"],["^5Y","^7:","^7;"]],"^5Q",null,"^6?",3,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^6@",[["^ ","^6?",1,"^5S",false,"^60",["^Q",["^65","^66","^67"]]],["^ ","^6?",3,"^5S",false,"^60",["^Q",["^65","^66","^67"]]]],"^8",20,"^:",20,"^5V",3,"^5W",true,"^5K",["^18",[["^5Y"],["^5Y","^7:","^7;"]]]],"~$namespace-object",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",176,"^9",7,"^:",176,"^;",23,"^5K",["^18",["^5L",["^18",[["~$env","^5N","~$create?","^5O"]]]]],"^64","Fetches namespaces from env if it exists. Else, if `create?`,\n  produces one regardless of the existince of the namespace in env and\n  adds it to env before returning it."],"^R","^2J","^7","sci/impl/utils.cljc","^;",23,"^5P",["^18",[["^7=","^5N","^7>","^5O"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",176,"^5T",["^Q",["^5U","~$sci.impl.vars/SciNamespace","^67"]],"^:",176,"^5V",4,"^5W",true,"^5K",["^18",["^5L",["^18",[["^7=","^5N","^7>","^5O"]]]]],"^64","Fetches namespaces from env if it exists. Else, if `create?`,\n  produces one regardless of the existince of the namespace in env and\n  adds it to env before returning it."],"~$eval-use-state",["^ ","^R","^1M","^7","sci/impl/utils.cljc","^8",197,"^9",1,"^:",197,"^;",20,"^5",["^ ","^7","sci/impl/utils.cljc","^8",197,"^9",6,"^:",197,"^;",20],"^60","^61"],"~$strip-core-ns",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",146,"^9",7,"^:",146,"^;",20,"^5K",["^18",["^5L",["^18",[["~$sym"]]]]]],"^R","^2Q","^7","sci/impl/utils.cljc","^;",20,"^5P",["^18",[["^7B"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",146,"^:",146,"^5V",1,"^5W",true,"^5K",["^18",["^5L",["^18",[["^7B"]]]]]],"~$macro?",["^ ","^5J",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",58,"^9",7,"^:",58,"^;",13,"^5K",["^18",["^5L",["^18",[["~$f"]]]]]],"^R","^2P","^7","sci/impl/utils.cljc","^;",13,"^5P",["^18",[["~$f"]]],"^5Q",null,"^5R",["^18",[null,null]],"^9",1,"^5S",false,"^8",58,"^5T",["^Q",["^5U","^67"]],"^:",58,"^5V",1,"^5W",true,"^5K",["^18",["^5L",["^18",[["~$f"]]]]]],"~$allowed-loop",["^ ","^R","^2S","^7","sci/impl/utils.cljc","^8",151,"^9",1,"^:",151,"^;",18,"^5",["^ ","^7","sci/impl/utils.cljc","^8",151,"^9",6,"^:",151,"^;",18],"^60",["^Q",["^5U","^3:"]]],"~$eval-string*",["^ ","^R","^2V","^7","sci/impl/utils.cljc","^8",205,"^9",1,"^:",205,"^;",18,"^5",["^ ","^7","sci/impl/utils.cljc","^8",205,"^9",6,"^:",205,"^;",18],"^60","^61"]],"^16",["^ ","^11","^11","^[","^[","^10","^["],"~:cljs.analyzer/constants",["^ ","^13",["^Q",["~$try","~$import","~:sci.impl/callstack","~:namespaces","~:fn","~:sci.error/parse","~:sci.error/realized-beyond-max","~:else","~:call","~$doseq","~:locals","^U","~:bindings","^R","~:sci/macro","~$lazy-seq","~$let","^7","~:params","~$fn","~:type","~$do","~:sci/error","~:env","~$in-ns","~$defn","~$if","~$new","^19","^9","~$declare","~$or","~$cljs.core/let","^8","~$fn*","~:macro","~:id","~$loop","~$for","~$expand-constructor","~$defmacro","~$set!","~$.","~$var","~:obj","~:sci.impl/op","~$case","~:body","~$comment","~$resolve","~$and","~:message","~$def","~$expand-dot*","~:eval"]],"~:order",["^7M","^7Z","^7L","^8A","^7O","^U","^7","^8J","^8","^9","^7X","^7S","^88","^7K","^7[","^89","^7I","^R","^8G","^7Q","^7R","^7N","^7J","^8@","^7G","^7H","^7P","^7T","^7U","^7W","^7Y","^80","^81","^82","^83","^19","^84","^85","^87","^8:","^8;","^8<","^8=","^8>","~$.","^8?","^8B","^8D","^8E","^8F","^8H","^8I","^7V","^8C","^86"]],"^1;",["^ ","^14",["^Q",[]]],"^1<",["^ "],"^1=",["^12","^11","^X","^Z","^["]],"^U","^S","~:ns-specs",["^ "],"~:ns-spec-vars",["^Q",[]],"~:compiler-options",["^3L",[["^8N","~:static-fns"],true,["^8N","~:shadow-tweaks"],null,["^8N","~:source-map-inline"],null,["^8N","~:elide-asserts"],false,["^8N","~:optimize-constants"],null,["^8N","^1B"],null,["^8N","~:external-config"],null,["^8N","~:tooling-config"],null,["^8N","~:emit-constants"],null,["^8N","~:load-tests"],null,["^8N","~:form-size-threshold"],null,["^8N","~:data-readers"],null,["^8N","~:infer-externs"],"~:auto",["^8N","^1D"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8N","~:fn-invoke-direct"],null,["^8N","~:source-map"],"/dev/null"]]]