["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/flatten.js"],"~:js","shadow$provide.module$node_modules$lodash$flatten=function(global,require,module,exports){var baseFlatten=require(\"module$node_modules$lodash$_baseFlatten\");module.exports=function(array){return(null==array?0:array.length)?baseFlatten(array,1):[]}}","~:source","shadow$provide[\"module$node_modules$lodash$flatten\"] = function(global,require,module,exports) {\nvar baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseFlatten","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1621210442101,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$flatten.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,kCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC/F,IAAIC,YAAcH,OAAA,CAAQ,yCAAR,CAqBlBC,OAAOC,CAAAA,OAAP,CALAE,QAAgB,CAACC,KAAD,CAAQ,CAEtB,MAAO,CADe,IAATC,EAAAD,KAAAC,CAAgB,CAAhBA,CAAoBD,KAAMC,CAAAA,MAChC,EAASH,WAAA,CAAYE,KAAZ,CAAmB,CAAnB,CAAT,CAAiC,EAFlB,CAjBuE;\",\n\"sources\":[\"node_modules/lodash/flatten.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$flatten\\\"] = function(global,require,module,exports) {\\nvar baseFlatten = require('./_baseFlatten');\\n\\n/**\\n * Flattens `array` a single level deep.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Array\\n * @param {Array} array The array to flatten.\\n * @returns {Array} Returns the new flattened array.\\n * @example\\n *\\n * _.flatten([1, [2, [3, [4]], 5]]);\\n * // => [1, 2, [3, [4]], 5]\\n */\\nfunction flatten(array) {\\n  var length = array == null ? 0 : array.length;\\n  return length ? baseFlatten(array, 1) : [];\\n}\\n\\nmodule.exports = flatten;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseFlatten\",\"flatten\",\"array\",\"length\"]\n}\n"]