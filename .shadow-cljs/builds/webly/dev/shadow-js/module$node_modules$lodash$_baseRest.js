["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseRest.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseRest=function(global,require,module,exports){var identity=require(\"module$node_modules$lodash$identity\"),overRest=require(\"module$node_modules$lodash$_overRest\"),setToString=require(\"module$node_modules$lodash$_setToString\");module.exports=function(func,start){return setToString(overRest(func,start,identity),func+\"\")}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseRest\"] = function(global,require,module,exports) {\nvar identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_overRest","~$shadow.js","~$module$node_modules$lodash$identity","~$module$node_modules$lodash$_setToString"]],"~:properties",["^5",[]],"~:compiled-at",1621210442088,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseRest.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC7FC,SAAWH,OAAA,CAAQ,qCAAR,CADkF,CAE7FI,SAAWJ,OAAA,CAAQ,sCAAR,CAFkF,CAG7FK,YAAcL,OAAA,CAAQ,yCAAR,CAclBC,OAAOC,CAAAA,OAAP,CAJAI,QAAiB,CAACC,IAAD,CAAOC,KAAP,CAAc,CAC7B,MAAOH,YAAA,CAAYD,QAAA,CAASG,IAAT,CAAeC,KAAf,CAAsBL,QAAtB,CAAZ,CAA6CI,IAA7C,CAAoD,EAApD,CADsB,CAbkE;\",\n\"sources\":[\"node_modules/lodash/_baseRest.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseRest\\\"] = function(global,require,module,exports) {\\nvar identity = require('./identity'),\\n    overRest = require('./_overRest'),\\n    setToString = require('./_setToString');\\n\\n/**\\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\\n *\\n * @private\\n * @param {Function} func The function to apply a rest parameter to.\\n * @param {number} [start=func.length-1] The start position of the rest parameter.\\n * @returns {Function} Returns the new function.\\n */\\nfunction baseRest(func, start) {\\n  return setToString(overRest(func, start, identity), func + '');\\n}\\n\\nmodule.exports = baseRest;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"identity\",\"overRest\",\"setToString\",\"baseRest\",\"func\",\"start\"]\n}\n"]