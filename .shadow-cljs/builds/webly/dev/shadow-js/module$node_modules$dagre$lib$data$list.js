["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/dagre/lib/data/list.js"],"~:js","shadow$provide.module$node_modules$dagre$lib$data$list=function(global,require,module,exports){function List(){var sentinel={};this._sentinel=sentinel._next=sentinel._prev=sentinel}function unlink(entry){entry._prev._next=entry._next;entry._next._prev=entry._prev;delete entry._next;delete entry._prev}function filterOutLinks(k,v){if(\"_next\"!==k&&\"_prev\"!==k)return v}module.exports=List;List.prototype.dequeue=function(){var sentinel=this._sentinel,entry=sentinel._prev;if(entry!==sentinel)return unlink(entry),\nentry};List.prototype.enqueue=function(entry){var sentinel=this._sentinel;entry._prev&&entry._next&&unlink(entry);entry._next=sentinel._next;sentinel._next._prev=entry;sentinel._next=entry;entry._prev=sentinel};List.prototype.toString=function(){for(var strs=[],sentinel=this._sentinel,curr=sentinel._prev;curr!==sentinel;)strs.push(JSON.stringify(curr,filterOutLinks)),curr=curr._prev;return\"[\"+strs.join(\", \")+\"]\"}}","~:source","shadow$provide[\"module$node_modules$dagre$lib$data$list\"] = function(global,require,module,exports) {\n/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["toString","_prev","dequeue","enqueue","_sentinel","_next"]],"~:compiled-at",1621210442116,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$dagre$lib$data$list.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAQpGC,QAASA,KAAI,EAAG,CACd,IAAIC,SAAW,EAEf,KAAKC,CAAAA,SAAL,CADAD,QAASE,CAAAA,KACT,CADiBF,QAASG,CAAAA,KAC1B,CADkCH,QAFpB,CAqChBI,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMF,CAAAA,KAAMD,CAAAA,KAAZ,CAAoBG,KAAMH,CAAAA,KAC1BG,MAAMH,CAAAA,KAAMC,CAAAA,KAAZ,CAAoBE,KAAMF,CAAAA,KAC1B,QAAOE,KAAMH,CAAAA,KACb,QAAOG,KAAMF,CAAAA,KAJQ,CAOvBG,QAASA,eAAc,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC5B,GAAU,OAAV,GAAID,CAAJ,EAA2B,OAA3B,GAAqBA,CAArB,CACE,MAAOC,EAFmB,CA9C9BX,MAAOC,CAAAA,OAAP,CAAiBC,IAQjBA,KAAKU,CAAAA,SAAUC,CAAAA,OAAf,CAAyBC,QAAQ,EAAG,CAClC,IAAIX,SAAW,IAAKC,CAAAA,SAApB,CACII,MAAQL,QAASG,CAAAA,KACrB,IAAIE,KAAJ,GAAcL,QAAd,CAEE,MADAI,OAAA,CAAOC,KAAP,CACOA;AAAAA,KALyB,CASpCN,KAAKU,CAAAA,SAAUG,CAAAA,OAAf,CAAyBC,QAAQ,CAACR,KAAD,CAAQ,CACvC,IAAIL,SAAW,IAAKC,CAAAA,SAChBI,MAAMF,CAAAA,KAAV,EAAmBE,KAAMH,CAAAA,KAAzB,EACEE,MAAA,CAAOC,KAAP,CAEFA,MAAMH,CAAAA,KAAN,CAAcF,QAASE,CAAAA,KACvBF,SAASE,CAAAA,KAAMC,CAAAA,KAAf,CAAuBE,KACvBL,SAASE,CAAAA,KAAT,CAAiBG,KACjBA,MAAMF,CAAAA,KAAN,CAAcH,QARyB,CAWzCD,KAAKU,CAAAA,SAAUK,CAAAA,QAAf,CAA0BC,QAAQ,EAAG,CAInC,IAHA,IAAIC,KAAO,EAAX,CACIhB,SAAW,IAAKC,CAAAA,SADpB,CAEIgB,KAAOjB,QAASG,CAAAA,KACpB,CAAOc,IAAP,GAAgBjB,QAAhB,CAAA,CACEgB,IAAKE,CAAAA,IAAL,CAAUC,IAAKC,CAAAA,SAAL,CAAeH,IAAf,CAAqBX,cAArB,CAAV,CACA,CAAAW,IAAA,CAAOA,IAAKd,CAAAA,KAEd,OAAO,GAAP,CAAaa,IAAKK,CAAAA,IAAL,CAAU,IAAV,CAAb,CAA+B,GARI,CAlC+D;\",\n\"sources\":[\"node_modules/dagre/lib/data/list.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$dagre$lib$data$list\\\"] = function(global,require,module,exports) {\\n/*\\n * Simple doubly linked list implementation derived from Cormen, et al.,\\n * \\\"Introduction to Algorithms\\\".\\n */\\n\\nmodule.exports = List;\\n\\nfunction List() {\\n  var sentinel = {};\\n  sentinel._next = sentinel._prev = sentinel;\\n  this._sentinel = sentinel;\\n}\\n\\nList.prototype.dequeue = function() {\\n  var sentinel = this._sentinel;\\n  var entry = sentinel._prev;\\n  if (entry !== sentinel) {\\n    unlink(entry);\\n    return entry;\\n  }\\n};\\n\\nList.prototype.enqueue = function(entry) {\\n  var sentinel = this._sentinel;\\n  if (entry._prev && entry._next) {\\n    unlink(entry);\\n  }\\n  entry._next = sentinel._next;\\n  sentinel._next._prev = entry;\\n  sentinel._next = entry;\\n  entry._prev = sentinel;\\n};\\n\\nList.prototype.toString = function() {\\n  var strs = [];\\n  var sentinel = this._sentinel;\\n  var curr = sentinel._prev;\\n  while (curr !== sentinel) {\\n    strs.push(JSON.stringify(curr, filterOutLinks));\\n    curr = curr._prev;\\n  }\\n  return \\\"[\\\" + strs.join(\\\", \\\") + \\\"]\\\";\\n};\\n\\nfunction unlink(entry) {\\n  entry._prev._next = entry._next;\\n  entry._next._prev = entry._prev;\\n  delete entry._next;\\n  delete entry._prev;\\n}\\n\\nfunction filterOutLinks(k, v) {\\n  if (k !== \\\"_next\\\" && k !== \\\"_prev\\\") {\\n    return v;\\n  }\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"List\",\"sentinel\",\"_sentinel\",\"_next\",\"_prev\",\"unlink\",\"entry\",\"filterOutLinks\",\"k\",\"v\",\"prototype\",\"dequeue\",\"List.prototype.dequeue\",\"enqueue\",\"List.prototype.enqueue\",\"toString\",\"List.prototype.toString\",\"strs\",\"curr\",\"push\",\"JSON\",\"stringify\",\"join\"]\n}\n"]