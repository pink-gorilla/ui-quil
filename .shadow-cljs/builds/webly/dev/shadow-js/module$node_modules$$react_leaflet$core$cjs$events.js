["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@react-leaflet/core/cjs/events.js"],"~:js","shadow$provide.module$node_modules$$react_leaflet$core$cjs$events=function(global,require,module,exports){exports.__esModule=!0;exports.useEventHandlers=function(element,eventHandlers){const eventHandlersRef=(0,_react.useRef)();(0,_react.useEffect)(function(){if(null!=eventHandlers)element.instance.on(eventHandlers);eventHandlersRef.current=eventHandlers;return function(){null!=eventHandlersRef.current&&element.instance.off(eventHandlersRef.current);eventHandlersRef.current=null}},[element,eventHandlers])};\nvar _react=require(\"module$node_modules$react$index\")}","~:source","shadow$provide[\"module$node_modules$$react_leaflet$core$cjs$events\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.useEventHandlers = useEventHandlers;\n\nvar _react = require(\"react\");\n\nfunction useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = (0, _react.useRef)();\n  (0, _react.useEffect)(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["__esModule","current","useEventHandlers"]],"~:compiled-at",1621210442205,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$react_leaflet$core$cjs$events.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/GA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,gBAAR,CAIAA,QAAyB,CAACC,OAAD,CAAUC,aAAV,CAAyB,CAChD,MAAMC,iBAAmB,CAAC,CAAA,CAAGC,MAAOC,CAAAA,MAAX,GACzB,EAAC,CAAA,CAAGD,MAAOE,CAAAA,SAAX,EAAsBC,QAAyB,EAAG,CAChD,GAAqB,IAArB,EAAIL,aAAJ,CACED,OAAQO,CAAAA,QAASC,CAAAA,EAAjB,CAAoBP,aAApB,CAGFC,iBAAiBO,CAAAA,OAAjB,CAA2BR,aAC3B,OAAOS,SAA4B,EAAG,CACJ,IAAhC,EAAIR,gBAAiBO,CAAAA,OAArB,EACET,OAAQO,CAAAA,QAASI,CAAAA,GAAjB,CAAqBT,gBAAiBO,CAAAA,OAAtC,CAGFP,iBAAiBO,CAAAA,OAAjB,CAA2B,IALS,CANU,CAAlD,CAaG,CAACT,OAAD,CAAUC,aAAV,CAbH,CAFgD,CAFlD;IAAIE,OAASR,OAAA,CAAQ,iCAAR,CANkG;\",\n\"sources\":[\"node_modules/@react-leaflet/core/cjs/events.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$react_leaflet$core$cjs$events\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.useEventHandlers = useEventHandlers;\\n\\nvar _react = require(\\\"react\\\");\\n\\nfunction useEventHandlers(element, eventHandlers) {\\n  const eventHandlersRef = (0, _react.useRef)();\\n  (0, _react.useEffect)(function addEventHandlers() {\\n    if (eventHandlers != null) {\\n      element.instance.on(eventHandlers);\\n    }\\n\\n    eventHandlersRef.current = eventHandlers;\\n    return function removeEventHandlers() {\\n      if (eventHandlersRef.current != null) {\\n        element.instance.off(eventHandlersRef.current);\\n      }\\n\\n      eventHandlersRef.current = null;\\n    };\\n  }, [element, eventHandlers]);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"useEventHandlers\",\"element\",\"eventHandlers\",\"eventHandlersRef\",\"_react\",\"useRef\",\"useEffect\",\"addEventHandlers\",\"instance\",\"on\",\"current\",\"removeEventHandlers\",\"off\"]\n}\n"]