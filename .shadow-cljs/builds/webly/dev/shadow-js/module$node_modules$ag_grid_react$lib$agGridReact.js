["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/ag-grid-react/lib/agGridReact.js"],"~:js","shadow$provide.module$node_modules$ag_grid_react$lib$agGridReact=function(global,require,module,exports){function addProperties(listOfProps,propType){listOfProps.forEach(function(propKey){AgGridReact[propKey]=propType})}var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,\nb$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}(),__assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};return __assign.apply(this,arguments)},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<\nil;i++)s+=arguments[i].length;s=Array(s);var k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)s[k]=a[j];return s};Object.defineProperty(exports,\"__esModule\",{value:!0});var React=require(\"module$node_modules$react$index\");global=require(\"module$node_modules$react$index\");module=require(\"module$node_modules$prop_types$index\");var ag_grid_community_1=require(\"module$node_modules$ag_grid_community$dist$ag_grid_community_cjs\"),agGridColumn_1=require(\"module$node_modules$ag_grid_react$lib$agGridColumn\"),\nchangeDetectionService_1=require(\"module$node_modules$ag_grid_react$lib$changeDetectionService\"),legacyReactComponent_1=require(\"module$node_modules$ag_grid_react$lib$legacyReactComponent\"),newReactComponent_1=require(\"module$node_modules$ag_grid_react$lib$newReactComponent\"),AgGridReact=function(_super){function AgGridReact(props){var _this=_super.call(this,props)||this;_this.props=props;_this.changeDetectionService=new changeDetectionService_1.ChangeDetectionService;_this.api=null;_this.portals=\n[];_this.hasPendingPortalUpdate=!1;_this.destroyed=!1;_this.SYNCHRONOUS_CHANGE_PROPERTIES=[\"context\"];return _this}__extends(AgGridReact,_super);AgGridReact.prototype.render=function(){var _this=this;return React.createElement(\"div\",{style:this.createStyleForDiv(),className:this.props.className,ref:function(e){_this.eGridDiv=e}},this.portals)};AgGridReact.prototype.createStyleForDiv=function(){return __assign({height:\"100%\"},this.props.containerStyle||{})};AgGridReact.prototype.componentDidMount=\nfunction(){var modules=this.props.modules||[];modules={providedBeanInstances:{agGridReact:this,frameworkComponentWrapper:new ReactFrameworkComponentWrapper(this)},modules};var gridOptions=this.props.gridOptions||{},children=this.props.children;agGridColumn_1.AgGridColumn.hasChildColumns(children)&&(gridOptions.columnDefs=agGridColumn_1.AgGridColumn.mapChildColumnDefs(children));this.gridOptions=ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions,this.props);new ag_grid_community_1.Grid(this.eGridDiv,\nthis.gridOptions,modules);this.api=this.gridOptions.api;this.columnApi=this.gridOptions.columnApi};AgGridReact.prototype.waitForInstance=function(reactComponent,resolve,startTime){var _this=this;void 0===startTime&&(startTime=Date.now());this.destroyed?resolve(null):reactComponent.rendered()?resolve(reactComponent):Date.now()-startTime>=this.props.maxComponentCreationTimeMs&&!this.hasPendingPortalUpdate?reactComponent.isNullValue()?resolve(reactComponent):console.error(\"AG Grid: React Component '\"+\nreactComponent.getReactComponentName()+\"' not created within \"+AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS+\"ms\"):window.setTimeout(function(){_this.waitForInstance(reactComponent,resolve,startTime)})};AgGridReact.prototype.mountReactPortal=function(portal,reactComponent,resolve){this.portals=__spreadArrays(this.portals,[portal]);this.waitForInstance(reactComponent,resolve);this.batchUpdate()};AgGridReact.prototype.updateReactPortal=function(oldPortal,newPortal){this.portals[this.portals.indexOf(oldPortal)]=\nnewPortal;this.batchUpdate()};AgGridReact.prototype.batchUpdate=function(){var _this=this;this.hasPendingPortalUpdate||(setTimeout(function(){_this.api&&_this.forceUpdate(function(){_this.hasPendingPortalUpdate=!1})}),this.hasPendingPortalUpdate=!0)};AgGridReact.prototype.destroyPortal=function(portal){this.portals=this.portals.filter(function(curPortal){return curPortal!==portal});this.batchUpdate()};AgGridReact.prototype.getStrategyTypeForProp=function(propKey){if(\"rowData\"===propKey){if(this.props.rowDataChangeDetectionStrategy)return this.props.rowDataChangeDetectionStrategy;\nif(this.isImmutableDataActive())return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck}return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck};AgGridReact.prototype.isImmutableDataActive=function(){return this.props.deltaRowDataMode||this.props.immutableData||this.props.gridOptions&&(this.props.gridOptions.deltaRowDataMode||this.props.gridOptions.immutableData)};AgGridReact.prototype.shouldComponentUpdate=function(nextProps){this.processPropsChanges(this.props,\nnextProps);return!1};AgGridReact.prototype.componentDidUpdate=function(prevProps){this.processPropsChanges(prevProps,this.props)};AgGridReact.prototype.processPropsChanges=function(prevProps,nextProps){var changes={};this.extractGridPropertyChanges(prevProps,nextProps,changes);this.extractDeclarativeColDefChanges(nextProps,changes);this.processSynchronousChanges(changes);this.processAsynchronousChanges(changes)};AgGridReact.prototype.extractDeclarativeColDefChanges=function(nextProps,changes){if(!(this.props.gridOptions&&\nthis.props.gridOptions.columnDefs||this.props.columnDefs)){var debugLogging=!!nextProps.debug,currentColDefs=this.gridOptions.columnDefs;if(agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)){var detectionStrategy=this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(\"columnDefs\"));nextProps=agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);detectionStrategy.areEqual(currentColDefs,nextProps)||(debugLogging&&console.log(\"agGridReact: colDefs definitions changed\"),\nchanges.columnDefs={previousValue:currentColDefs,currentValue:nextProps})}else currentColDefs&&0<currentColDefs.length&&(changes.columnDefs={previousValue:currentColDefs,currentValue:[]})}};AgGridReact.prototype.extractGridPropertyChanges=function(prevProps,nextProps,changes){var _this=this,debugLogging=!!nextProps.debug;Object.keys(nextProps).forEach(function(propKey){ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES,propKey)&&!_this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey)).areEqual(prevProps[propKey],\nnextProps[propKey])&&(debugLogging&&console.log(\"agGridReact: [\"+propKey+\"] property changed\"),changes[propKey]={previousValue:prevProps[propKey],currentValue:nextProps[propKey]})});ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function(funcName){_this.props[funcName]!==nextProps[funcName]&&(debugLogging&&console.log(\"agGridReact: [\"+funcName+\"] event callback changed\"),changes[funcName]={previousValue:prevProps[funcName],currentValue:nextProps[funcName]})})};AgGridReact.prototype.componentWillUnmount=\nfunction(){this.api&&(this.api.destroy(),this.api=null);this.destroyed=!0};AgGridReact.prototype.isDisableStaticMarkup=function(){return this.props.disableStaticMarkup};AgGridReact.prototype.isLegacyComponentRendering=function(){return this.props.legacyComponentRendering};AgGridReact.prototype.processSynchronousChanges=function(changes){var asyncChanges=__assign({},changes);if(0<Object.keys(asyncChanges).length){var synchronousChanges_1={};this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach(function(synchronousChangeProperty){asyncChanges[synchronousChangeProperty]&&\n(synchronousChanges_1[synchronousChangeProperty]=asyncChanges[synchronousChangeProperty],delete asyncChanges.context)});0<Object.keys(synchronousChanges_1).length&&this.api&&ag_grid_community_1.ComponentUtil.processOnChange(synchronousChanges_1,this.gridOptions,this.api,this.columnApi)}return asyncChanges};AgGridReact.prototype.processAsynchronousChanges=function(changes){var _this=this;0<Object.keys(changes).length&&window.setTimeout(function(){_this.api&&ag_grid_community_1.ComponentUtil.processOnChange(changes,\n_this.gridOptions,_this.api,_this.columnApi)})};AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS=1E3;AgGridReact.defaultProps={legacyComponentRendering:!1,disableStaticMarkup:!1,maxComponentCreationTimeMs:AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS};return AgGridReact}(global.Component);exports.AgGridReact=AgGridReact;AgGridReact.propTypes={gridOptions:module.object};addProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(),module.func);addProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES,\nmodule.bool);addProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES,module.string);addProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES,module.object);addProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES,module.array);addProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES,module.number);addProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES,module.func);var ReactFrameworkComponentWrapper=function(_super){function ReactFrameworkComponentWrapper(agGridReact){var _this=\n_super.call(this)||this;_this.agGridReact=agGridReact;return _this}__extends(ReactFrameworkComponentWrapper,_super);ReactFrameworkComponentWrapper.prototype.createWrapper=function(UserReactComponent,componentType){return this.agGridReact.isLegacyComponentRendering()?new legacyReactComponent_1.LegacyReactComponent(UserReactComponent,this.agGridReact,componentType):new newReactComponent_1.NewReactComponent(UserReactComponent,this.agGridReact,componentType)};return ReactFrameworkComponentWrapper}(ag_grid_community_1.BaseComponentWrapper)}","~:source","shadow$provide[\"module$node_modules$ag_grid_react$lib$agGridReact\"] = function(global,require,module,exports) {\n// ag-grid-react v25.2.0\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_1 = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar agGridColumn_1 = require(\"./agGridColumn\");\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\nvar legacyReactComponent_1 = require(\"./legacyReactComponent\");\nvar newReactComponent_1 = require(\"./newReactComponent\");\nvar AgGridReact = /** @class */ (function (_super) {\n    __extends(AgGridReact, _super);\n    function AgGridReact(props) {\n        var _this = _super.call(this, props) || this;\n        _this.props = props;\n        _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n        _this.api = null;\n        _this.portals = [];\n        _this.hasPendingPortalUpdate = false;\n        _this.destroyed = false;\n        _this.SYNCHRONOUS_CHANGE_PROPERTIES = ['context'];\n        return _this;\n    }\n    AgGridReact.prototype.render = function () {\n        var _this = this;\n        return React.createElement('div', {\n            style: this.createStyleForDiv(),\n            className: this.props.className,\n            ref: function (e) {\n                _this.eGridDiv = e;\n            }\n        }, this.portals);\n    };\n    AgGridReact.prototype.createStyleForDiv = function () {\n        return __assign({ height: '100%' }, (this.props.containerStyle || {}));\n    };\n    AgGridReact.prototype.componentDidMount = function () {\n        var modules = this.props.modules || [];\n        var gridParams = {\n            providedBeanInstances: {\n                agGridReact: this,\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this)\n            },\n            modules: modules\n        };\n        var gridOptions = this.props.gridOptions || {};\n        var children = this.props.children;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(children)) {\n            gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(children);\n        }\n        this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\n        // don't need the return value\n        new ag_grid_community_1.Grid(this.eGridDiv, this.gridOptions, gridParams);\n        this.api = this.gridOptions.api;\n        this.columnApi = this.gridOptions.columnApi;\n    };\n    AgGridReact.prototype.waitForInstance = function (reactComponent, resolve, startTime) {\n        var _this = this;\n        if (startTime === void 0) { startTime = Date.now(); }\n        // if the grid has been destroyed in the meantime just resolve\n        if (this.destroyed) {\n            resolve(null);\n            return;\n        }\n        if (reactComponent.rendered()) {\n            resolve(reactComponent);\n        }\n        else {\n            if (Date.now() - startTime >= this.props.maxComponentCreationTimeMs && !this.hasPendingPortalUpdate) {\n                // last check - we check if this is a null value being rendered - we do this last as using SSR to check the value\n                // can mess up contexts\n                if (reactComponent.isNullValue()) {\n                    resolve(reactComponent);\n                    return;\n                }\n                console.error(\"AG Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS + \"ms\");\n                return;\n            }\n            window.setTimeout(function () {\n                _this.waitForInstance(reactComponent, resolve, startTime);\n            });\n        }\n    };\n    /**\n     * Mounts a react portal for components registered under the componentFramework.\n     * We do this because we want all portals to be in the same tree - in order to get\n     * Context to work properly.\n     */\n    AgGridReact.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n        this.portals = __spreadArrays(this.portals, [portal]);\n        this.waitForInstance(reactComponent, resolve);\n        this.batchUpdate();\n    };\n    AgGridReact.prototype.updateReactPortal = function (oldPortal, newPortal) {\n        this.portals[this.portals.indexOf(oldPortal)] = newPortal;\n        this.batchUpdate();\n    };\n    AgGridReact.prototype.batchUpdate = function () {\n        var _this = this;\n        if (this.hasPendingPortalUpdate) {\n            return;\n        }\n        setTimeout(function () {\n            if (_this.api) { // destroyed?\n                _this.forceUpdate(function () {\n                    _this.hasPendingPortalUpdate = false;\n                });\n            }\n        });\n        this.hasPendingPortalUpdate = true;\n    };\n    AgGridReact.prototype.destroyPortal = function (portal) {\n        this.portals = this.portals.filter(function (curPortal) { return curPortal !== portal; });\n        this.batchUpdate();\n    };\n    AgGridReact.prototype.getStrategyTypeForProp = function (propKey) {\n        if (propKey === 'rowData') {\n            if (this.props.rowDataChangeDetectionStrategy) {\n                return this.props.rowDataChangeDetectionStrategy;\n            }\n            else if (this.isImmutableDataActive()) {\n                return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n            }\n        }\n        // all other cases will default to DeepValueCheck\n        return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n    };\n    AgGridReact.prototype.isImmutableDataActive = function () {\n        return (this.props.deltaRowDataMode || this.props.immutableData) ||\n            (this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData));\n    };\n    AgGridReact.prototype.shouldComponentUpdate = function (nextProps) {\n        this.processPropsChanges(this.props, nextProps);\n        // we want full control of the dom, as AG Grid doesn't use React internally,\n        // so for performance reasons we tell React we don't need render called after\n        // property changes.\n        return false;\n    };\n    AgGridReact.prototype.componentDidUpdate = function (prevProps) {\n        this.processPropsChanges(prevProps, this.props);\n    };\n    AgGridReact.prototype.processPropsChanges = function (prevProps, nextProps) {\n        var changes = {};\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n        this.extractDeclarativeColDefChanges(nextProps, changes);\n        this.processSynchronousChanges(changes);\n        this.processAsynchronousChanges(changes);\n    };\n    AgGridReact.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n        // if columnDefs are provided on gridOptions we use those - you can't combine both\n        // we also skip if columnDefs are provided as a prop directly on AgGridReact\n        if ((this.props.gridOptions && this.props.gridOptions.columnDefs) || this.props.columnDefs) {\n            return;\n        }\n        var debugLogging = !!nextProps.debug;\n        var propKey = 'columnDefs';\n        var currentColDefs = this.gridOptions.columnDefs;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)) {\n            var detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n            var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);\n            if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: colDefs definitions changed\");\n                }\n                changes[propKey] =\n                    {\n                        previousValue: currentColDefs,\n                        currentValue: newColDefs\n                    };\n            }\n        }\n        else if (currentColDefs && currentColDefs.length > 0) {\n            changes[propKey] =\n                {\n                    previousValue: currentColDefs,\n                    currentValue: []\n                };\n        }\n    };\n    AgGridReact.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n        var _this = this;\n        var debugLogging = !!nextProps.debug;\n        Object.keys(nextProps).forEach(function (propKey) {\n            if (ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES, propKey)) {\n                var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n                if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n                    if (debugLogging) {\n                        console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n                    }\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n        ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (_this.props[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n                }\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    };\n    AgGridReact.prototype.componentWillUnmount = function () {\n        if (this.api) {\n            this.api.destroy();\n            this.api = null;\n        }\n        this.destroyed = true;\n    };\n    AgGridReact.prototype.isDisableStaticMarkup = function () {\n        return this.props.disableStaticMarkup;\n    };\n    AgGridReact.prototype.isLegacyComponentRendering = function () {\n        return this.props.legacyComponentRendering;\n    };\n    AgGridReact.prototype.processSynchronousChanges = function (changes) {\n        var asyncChanges = __assign({}, changes);\n        if (Object.keys(asyncChanges).length > 0) {\n            var synchronousChanges_1 = {};\n            this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach(function (synchronousChangeProperty) {\n                if (asyncChanges[synchronousChangeProperty]) {\n                    synchronousChanges_1[synchronousChangeProperty] = asyncChanges[synchronousChangeProperty];\n                    delete asyncChanges.context;\n                }\n            });\n            if (Object.keys(synchronousChanges_1).length > 0 && !!this.api) {\n                ag_grid_community_1.ComponentUtil.processOnChange(synchronousChanges_1, this.gridOptions, this.api, this.columnApi);\n            }\n        }\n        return asyncChanges;\n    };\n    AgGridReact.prototype.processAsynchronousChanges = function (changes) {\n        var _this = this;\n        if (Object.keys(changes).length > 0) {\n            window.setTimeout(function () {\n                // destroyed?\n                if (_this.api) {\n                    ag_grid_community_1.ComponentUtil.processOnChange(changes, _this.gridOptions, _this.api, _this.columnApi);\n                }\n            });\n        }\n    };\n    AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS = 1000; // a second should be more than enough to instantiate a component\n    AgGridReact.defaultProps = {\n        legacyComponentRendering: false,\n        disableStaticMarkup: false,\n        maxComponentCreationTimeMs: AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS\n    };\n    return AgGridReact;\n}(react_1.Component));\nexports.AgGridReact = AgGridReact;\nAgGridReact.propTypes = {\n    gridOptions: PropTypes.object\n};\naddProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(), PropTypes.func);\naddProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\nfunction addProperties(listOfProps, propType) {\n    listOfProps.forEach(function (propKey) {\n        AgGridReact[propKey] = propType;\n    });\n}\nvar ReactFrameworkComponentWrapper = /** @class */ (function (_super) {\n    __extends(ReactFrameworkComponentWrapper, _super);\n    function ReactFrameworkComponentWrapper(agGridReact) {\n        var _this = _super.call(this) || this;\n        _this.agGridReact = agGridReact;\n        return _this;\n    }\n    ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n        return this.agGridReact.isLegacyComponentRendering() ?\n            new legacyReactComponent_1.LegacyReactComponent(UserReactComponent, this.agGridReact, componentType) :\n            new newReactComponent_1.NewReactComponent(UserReactComponent, this.agGridReact, componentType);\n    };\n    return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$ag_grid_react$lib$newReactComponent","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$ag_grid_react$lib$changeDetectionService","~$module$node_modules$ag_grid_react$lib$legacyReactComponent","~$module$node_modules$ag_grid_community$dist$ag_grid_community_cjs","~$module$node_modules$ag_grid_react$lib$agGridColumn"]],"~:properties",["^5",["columnApi","previousValue","destroyPortal","frameworkComponentWrapper","maxComponentCreationTimeMs","prototype","height","mountReactPortal","modules","className","getStrategyTypeForProp","changeDetectionService","batchUpdate","disableStaticMarkup","__esModule","waitForInstance","gridOptions","isDisableStaticMarkup","propTypes","SYNCHRONOUS_CHANGE_PROPERTIES","MAX_COMPONENT_CREATION_TIME_IN_MS","updateReactPortal","processSynchronousChanges","style","providedBeanInstances","value","AgGridReact","createWrapper","componentDidUpdate","legacyComponentRendering","componentDidMount","props","defaultProps","isImmutableDataActive","agGridReact","processAsynchronousChanges","shouldComponentUpdate","render","api","currentValue","ref","__proto__","extractGridPropertyChanges","componentWillUnmount","hasPendingPortalUpdate","destroyed","extractDeclarativeColDefChanges","createStyleForDiv","processPropsChanges","portals","eGridDiv","columnDefs","constructor","isLegacyComponentRendering"]],"~:compiled-at",1621210441679,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$ag_grid_react$lib$agGridReact.js\",\n\"lineCount\":19,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/ag-grid-react/lib/agGridReact.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$ag_grid_react$lib$agGridReact\\\"] = function(global,require,module,exports) {\\n// ag-grid-react v25.2.0\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nvar __assign = (this && this.__assign) || function () {\\n    __assign = Object.assign || function(t) {\\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\\n            s = arguments[i];\\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\\n                t[p] = s[p];\\n        }\\n        return t;\\n    };\\n    return __assign.apply(this, arguments);\\n};\\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\\n            r[k] = a[j];\\n    return r;\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar React = require(\\\"react\\\");\\nvar react_1 = require(\\\"react\\\");\\nvar PropTypes = require(\\\"prop-types\\\");\\nvar ag_grid_community_1 = require(\\\"ag-grid-community\\\");\\nvar agGridColumn_1 = require(\\\"./agGridColumn\\\");\\nvar changeDetectionService_1 = require(\\\"./changeDetectionService\\\");\\nvar legacyReactComponent_1 = require(\\\"./legacyReactComponent\\\");\\nvar newReactComponent_1 = require(\\\"./newReactComponent\\\");\\nvar AgGridReact = /** @class */ (function (_super) {\\n    __extends(AgGridReact, _super);\\n    function AgGridReact(props) {\\n        var _this = _super.call(this, props) || this;\\n        _this.props = props;\\n        _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\\n        _this.api = null;\\n        _this.portals = [];\\n        _this.hasPendingPortalUpdate = false;\\n        _this.destroyed = false;\\n        _this.SYNCHRONOUS_CHANGE_PROPERTIES = ['context'];\\n        return _this;\\n    }\\n    AgGridReact.prototype.render = function () {\\n        var _this = this;\\n        return React.createElement('div', {\\n            style: this.createStyleForDiv(),\\n            className: this.props.className,\\n            ref: function (e) {\\n                _this.eGridDiv = e;\\n            }\\n        }, this.portals);\\n    };\\n    AgGridReact.prototype.createStyleForDiv = function () {\\n        return __assign({ height: '100%' }, (this.props.containerStyle || {}));\\n    };\\n    AgGridReact.prototype.componentDidMount = function () {\\n        var modules = this.props.modules || [];\\n        var gridParams = {\\n            providedBeanInstances: {\\n                agGridReact: this,\\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this)\\n            },\\n            modules: modules\\n        };\\n        var gridOptions = this.props.gridOptions || {};\\n        var children = this.props.children;\\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(children)) {\\n            gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(children);\\n        }\\n        this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\\n        // don't need the return value\\n        new ag_grid_community_1.Grid(this.eGridDiv, this.gridOptions, gridParams);\\n        this.api = this.gridOptions.api;\\n        this.columnApi = this.gridOptions.columnApi;\\n    };\\n    AgGridReact.prototype.waitForInstance = function (reactComponent, resolve, startTime) {\\n        var _this = this;\\n        if (startTime === void 0) { startTime = Date.now(); }\\n        // if the grid has been destroyed in the meantime just resolve\\n        if (this.destroyed) {\\n            resolve(null);\\n            return;\\n        }\\n        if (reactComponent.rendered()) {\\n            resolve(reactComponent);\\n        }\\n        else {\\n            if (Date.now() - startTime >= this.props.maxComponentCreationTimeMs && !this.hasPendingPortalUpdate) {\\n                // last check - we check if this is a null value being rendered - we do this last as using SSR to check the value\\n                // can mess up contexts\\n                if (reactComponent.isNullValue()) {\\n                    resolve(reactComponent);\\n                    return;\\n                }\\n                console.error(\\\"AG Grid: React Component '\\\" + reactComponent.getReactComponentName() + \\\"' not created within \\\" + AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS + \\\"ms\\\");\\n                return;\\n            }\\n            window.setTimeout(function () {\\n                _this.waitForInstance(reactComponent, resolve, startTime);\\n            });\\n        }\\n    };\\n    /**\\n     * Mounts a react portal for components registered under the componentFramework.\\n     * We do this because we want all portals to be in the same tree - in order to get\\n     * Context to work properly.\\n     */\\n    AgGridReact.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\\n        this.portals = __spreadArrays(this.portals, [portal]);\\n        this.waitForInstance(reactComponent, resolve);\\n        this.batchUpdate();\\n    };\\n    AgGridReact.prototype.updateReactPortal = function (oldPortal, newPortal) {\\n        this.portals[this.portals.indexOf(oldPortal)] = newPortal;\\n        this.batchUpdate();\\n    };\\n    AgGridReact.prototype.batchUpdate = function () {\\n        var _this = this;\\n        if (this.hasPendingPortalUpdate) {\\n            return;\\n        }\\n        setTimeout(function () {\\n            if (_this.api) { // destroyed?\\n                _this.forceUpdate(function () {\\n                    _this.hasPendingPortalUpdate = false;\\n                });\\n            }\\n        });\\n        this.hasPendingPortalUpdate = true;\\n    };\\n    AgGridReact.prototype.destroyPortal = function (portal) {\\n        this.portals = this.portals.filter(function (curPortal) { return curPortal !== portal; });\\n        this.batchUpdate();\\n    };\\n    AgGridReact.prototype.getStrategyTypeForProp = function (propKey) {\\n        if (propKey === 'rowData') {\\n            if (this.props.rowDataChangeDetectionStrategy) {\\n                return this.props.rowDataChangeDetectionStrategy;\\n            }\\n            else if (this.isImmutableDataActive()) {\\n                return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\\n            }\\n        }\\n        // all other cases will default to DeepValueCheck\\n        return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\\n    };\\n    AgGridReact.prototype.isImmutableDataActive = function () {\\n        return (this.props.deltaRowDataMode || this.props.immutableData) ||\\n            (this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData));\\n    };\\n    AgGridReact.prototype.shouldComponentUpdate = function (nextProps) {\\n        this.processPropsChanges(this.props, nextProps);\\n        // we want full control of the dom, as AG Grid doesn't use React internally,\\n        // so for performance reasons we tell React we don't need render called after\\n        // property changes.\\n        return false;\\n    };\\n    AgGridReact.prototype.componentDidUpdate = function (prevProps) {\\n        this.processPropsChanges(prevProps, this.props);\\n    };\\n    AgGridReact.prototype.processPropsChanges = function (prevProps, nextProps) {\\n        var changes = {};\\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\\n        this.extractDeclarativeColDefChanges(nextProps, changes);\\n        this.processSynchronousChanges(changes);\\n        this.processAsynchronousChanges(changes);\\n    };\\n    AgGridReact.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\\n        // if columnDefs are provided on gridOptions we use those - you can't combine both\\n        // we also skip if columnDefs are provided as a prop directly on AgGridReact\\n        if ((this.props.gridOptions && this.props.gridOptions.columnDefs) || this.props.columnDefs) {\\n            return;\\n        }\\n        var debugLogging = !!nextProps.debug;\\n        var propKey = 'columnDefs';\\n        var currentColDefs = this.gridOptions.columnDefs;\\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)) {\\n            var detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\\n            var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);\\n            if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\\n                if (debugLogging) {\\n                    console.log(\\\"agGridReact: colDefs definitions changed\\\");\\n                }\\n                changes[propKey] =\\n                    {\\n                        previousValue: currentColDefs,\\n                        currentValue: newColDefs\\n                    };\\n            }\\n        }\\n        else if (currentColDefs && currentColDefs.length > 0) {\\n            changes[propKey] =\\n                {\\n                    previousValue: currentColDefs,\\n                    currentValue: []\\n                };\\n        }\\n    };\\n    AgGridReact.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\\n        var _this = this;\\n        var debugLogging = !!nextProps.debug;\\n        Object.keys(nextProps).forEach(function (propKey) {\\n            if (ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES, propKey)) {\\n                var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\\n                if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\\n                    if (debugLogging) {\\n                        console.log(\\\"agGridReact: [\\\" + propKey + \\\"] property changed\\\");\\n                    }\\n                    changes[propKey] = {\\n                        previousValue: prevProps[propKey],\\n                        currentValue: nextProps[propKey]\\n                    };\\n                }\\n            }\\n        });\\n        ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\\n            if (_this.props[funcName] !== nextProps[funcName]) {\\n                if (debugLogging) {\\n                    console.log(\\\"agGridReact: [\\\" + funcName + \\\"] event callback changed\\\");\\n                }\\n                changes[funcName] = {\\n                    previousValue: prevProps[funcName],\\n                    currentValue: nextProps[funcName]\\n                };\\n            }\\n        });\\n    };\\n    AgGridReact.prototype.componentWillUnmount = function () {\\n        if (this.api) {\\n            this.api.destroy();\\n            this.api = null;\\n        }\\n        this.destroyed = true;\\n    };\\n    AgGridReact.prototype.isDisableStaticMarkup = function () {\\n        return this.props.disableStaticMarkup;\\n    };\\n    AgGridReact.prototype.isLegacyComponentRendering = function () {\\n        return this.props.legacyComponentRendering;\\n    };\\n    AgGridReact.prototype.processSynchronousChanges = function (changes) {\\n        var asyncChanges = __assign({}, changes);\\n        if (Object.keys(asyncChanges).length > 0) {\\n            var synchronousChanges_1 = {};\\n            this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach(function (synchronousChangeProperty) {\\n                if (asyncChanges[synchronousChangeProperty]) {\\n                    synchronousChanges_1[synchronousChangeProperty] = asyncChanges[synchronousChangeProperty];\\n                    delete asyncChanges.context;\\n                }\\n            });\\n            if (Object.keys(synchronousChanges_1).length > 0 && !!this.api) {\\n                ag_grid_community_1.ComponentUtil.processOnChange(synchronousChanges_1, this.gridOptions, this.api, this.columnApi);\\n            }\\n        }\\n        return asyncChanges;\\n    };\\n    AgGridReact.prototype.processAsynchronousChanges = function (changes) {\\n        var _this = this;\\n        if (Object.keys(changes).length > 0) {\\n            window.setTimeout(function () {\\n                // destroyed?\\n                if (_this.api) {\\n                    ag_grid_community_1.ComponentUtil.processOnChange(changes, _this.gridOptions, _this.api, _this.columnApi);\\n                }\\n            });\\n        }\\n    };\\n    AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS = 1000; // a second should be more than enough to instantiate a component\\n    AgGridReact.defaultProps = {\\n        legacyComponentRendering: false,\\n        disableStaticMarkup: false,\\n        maxComponentCreationTimeMs: AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS\\n    };\\n    return AgGridReact;\\n}(react_1.Component));\\nexports.AgGridReact = AgGridReact;\\nAgGridReact.propTypes = {\\n    gridOptions: PropTypes.object\\n};\\naddProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(), PropTypes.func);\\naddProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\\naddProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES, PropTypes.string);\\naddProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\\naddProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\\naddProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\\naddProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\\nfunction addProperties(listOfProps, propType) {\\n    listOfProps.forEach(function (propKey) {\\n        AgGridReact[propKey] = propType;\\n    });\\n}\\nvar ReactFrameworkComponentWrapper = /** @class */ (function (_super) {\\n    __extends(ReactFrameworkComponentWrapper, _super);\\n    function ReactFrameworkComponentWrapper(agGridReact) {\\n        var _this = _super.call(this) || this;\\n        _this.agGridReact = agGridReact;\\n        return _this;\\n    }\\n    ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\\n        return this.agGridReact.isLegacyComponentRendering() ?\\n            new legacyReactComponent_1.LegacyReactComponent(UserReactComponent, this.agGridReact, componentType) :\\n            new newReactComponent_1.NewReactComponent(UserReactComponent, this.agGridReact, componentType);\\n    };\\n    return ReactFrameworkComponentWrapper;\\n}(ag_grid_community_1.BaseComponentWrapper));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"addProperties\",\"listOfProps\",\"propType\",\"forEach\",\"propKey\",\"AgGridReact\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"p\",\"hasOwnProperty\",\"__\",\"constructor\",\"prototype\",\"create\",\"__assign\",\"assign\",\"t\",\"s\",\"i\",\"n\",\"arguments\",\"length\",\"call\",\"apply\",\"__spreadArrays\",\"il\",\"r\",\"k\",\"a\",\"j\",\"jl\",\"defineProperty\",\"value\",\"React\",\"react_1\",\"PropTypes\",\"ag_grid_community_1\",\"agGridColumn_1\",\"changeDetectionService_1\",\"legacyReactComponent_1\",\"newReactComponent_1\",\"_super\",\"props\",\"_this\",\"changeDetectionService\",\"ChangeDetectionService\",\"api\",\"portals\",\"hasPendingPortalUpdate\",\"destroyed\",\"SYNCHRONOUS_CHANGE_PROPERTIES\",\"render\",\"AgGridReact.prototype.render\",\"createElement\",\"style\",\"createStyleForDiv\",\"className\",\"ref\",\"e\",\"eGridDiv\",\"AgGridReact.prototype.createStyleForDiv\",\"height\",\"containerStyle\",\"componentDidMount\",\"AgGridReact.prototype.componentDidMount\",\"modules\",\"gridParams\",\"providedBeanInstances\",\"agGridReact\",\"frameworkComponentWrapper\",\"ReactFrameworkComponentWrapper\",\"gridOptions\",\"children\",\"AgGridColumn\",\"hasChildColumns\",\"columnDefs\",\"mapChildColumnDefs\",\"ComponentUtil\",\"copyAttributesToGridOptions\",\"Grid\",\"columnApi\",\"waitForInstance\",\"AgGridReact.prototype.waitForInstance\",\"reactComponent\",\"resolve\",\"startTime\",\"Date\",\"now\",\"rendered\",\"maxComponentCreationTimeMs\",\"isNullValue\",\"console\",\"error\",\"getReactComponentName\",\"MAX_COMPONENT_CREATION_TIME_IN_MS\",\"window\",\"setTimeout\",\"mountReactPortal\",\"AgGridReact.prototype.mountReactPortal\",\"portal\",\"batchUpdate\",\"updateReactPortal\",\"AgGridReact.prototype.updateReactPortal\",\"oldPortal\",\"newPortal\",\"indexOf\",\"AgGridReact.prototype.batchUpdate\",\"forceUpdate\",\"destroyPortal\",\"AgGridReact.prototype.destroyPortal\",\"filter\",\"curPortal\",\"getStrategyTypeForProp\",\"AgGridReact.prototype.getStrategyTypeForProp\",\"rowDataChangeDetectionStrategy\",\"isImmutableDataActive\",\"ChangeDetectionStrategyType\",\"IdentityCheck\",\"DeepValueCheck\",\"AgGridReact.prototype.isImmutableDataActive\",\"deltaRowDataMode\",\"immutableData\",\"shouldComponentUpdate\",\"AgGridReact.prototype.shouldComponentUpdate\",\"nextProps\",\"processPropsChanges\",\"componentDidUpdate\",\"AgGridReact.prototype.componentDidUpdate\",\"prevProps\",\"AgGridReact.prototype.processPropsChanges\",\"changes\",\"extractGridPropertyChanges\",\"extractDeclarativeColDefChanges\",\"processSynchronousChanges\",\"processAsynchronousChanges\",\"AgGridReact.prototype.extractDeclarativeColDefChanges\",\"debugLogging\",\"debug\",\"currentColDefs\",\"detectionStrategy\",\"getStrategy\",\"newColDefs\",\"areEqual\",\"log\",\"previousValue\",\"currentValue\",\"AgGridReact.prototype.extractGridPropertyChanges\",\"keys\",\"_\",\"includes\",\"ALL_PROPERTIES\",\"changeDetectionStrategy\",\"getEventCallbacks\",\"funcName\",\"componentWillUnmount\",\"AgGridReact.prototype.componentWillUnmount\",\"destroy\",\"isDisableStaticMarkup\",\"AgGridReact.prototype.isDisableStaticMarkup\",\"disableStaticMarkup\",\"isLegacyComponentRendering\",\"AgGridReact.prototype.isLegacyComponentRendering\",\"legacyComponentRendering\",\"AgGridReact.prototype.processSynchronousChanges\",\"asyncChanges\",\"synchronousChanges_1\",\"synchronousChangeProperty\",\"context\",\"processOnChange\",\"AgGridReact.prototype.processAsynchronousChanges\",\"defaultProps\",\"Component\",\"propTypes\",\"object\",\"func\",\"BOOLEAN_PROPERTIES\",\"bool\",\"STRING_PROPERTIES\",\"string\",\"OBJECT_PROPERTIES\",\"ARRAY_PROPERTIES\",\"array\",\"NUMBER_PROPERTIES\",\"number\",\"FUNCTION_PROPERTIES\",\"createWrapper\",\"ReactFrameworkComponentWrapper.prototype.createWrapper\",\"UserReactComponent\",\"componentType\",\"LegacyReactComponent\",\"NewReactComponent\",\"BaseComponentWrapper\"]\n}\n"]