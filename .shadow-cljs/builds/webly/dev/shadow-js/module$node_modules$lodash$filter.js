["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/filter.js"],"~:js","shadow$provide.module$node_modules$lodash$filter=function(global,require,module,exports){var arrayFilter=require(\"module$node_modules$lodash$_arrayFilter\"),baseFilter=require(\"module$node_modules$lodash$_baseFilter\"),baseIteratee=require(\"module$node_modules$lodash$_baseIteratee\"),isArray=require(\"module$node_modules$lodash$isArray\");module.exports=function(collection,predicate){return(isArray(collection)?arrayFilter:baseFilter)(collection,baseIteratee(predicate,3))}}","~:source","shadow$provide[\"module$node_modules$lodash$filter\"] = function(global,require,module,exports) {\nvar arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_baseFilter","~$module$node_modules$lodash$_arrayFilter","~$module$node_modules$lodash$_baseIteratee","~$module$node_modules$lodash$isArray"]],"~:properties",["^5",[]],"~:compiled-at",1621210442081,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$filter.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,iCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC1FC,YAAcH,OAAA,CAAQ,yCAAR,CAD4E,CAE1FI,WAAaJ,OAAA,CAAQ,wCAAR,CAF6E,CAG1FK,aAAeL,OAAA,CAAQ,0CAAR,CAH2E,CAI1FM,QAAUN,OAAA,CAAQ,oCAAR,CAgDdC,OAAOC,CAAAA,OAAP,CALAK,QAAe,CAACC,UAAD,CAAaC,SAAb,CAAwB,CAErC,MAAO,CADIH,OAAA,CAAQE,UAAR,CAAAE,CAAsBP,WAAtBO,CAAoCN,UACxC,EAAKI,UAAL,CAAiBH,YAAA,CAAaI,SAAb,CAAwB,CAAxB,CAAjB,CAF8B,CA/CuD;\",\n\"sources\":[\"node_modules/lodash/filter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$filter\\\"] = function(global,require,module,exports) {\\nvar arrayFilter = require('./_arrayFilter'),\\n    baseFilter = require('./_baseFilter'),\\n    baseIteratee = require('./_baseIteratee'),\\n    isArray = require('./isArray');\\n\\n/**\\n * Iterates over elements of `collection`, returning an array of all elements\\n * `predicate` returns truthy for. The predicate is invoked with three\\n * arguments: (value, index|key, collection).\\n *\\n * **Note:** Unlike `_.remove`, this method returns a new array.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Collection\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n * @returns {Array} Returns the new filtered array.\\n * @see _.reject\\n * @example\\n *\\n * var users = [\\n *   { 'user': 'barney', 'age': 36, 'active': true },\\n *   { 'user': 'fred',   'age': 40, 'active': false }\\n * ];\\n *\\n * _.filter(users, function(o) { return !o.active; });\\n * // => objects for ['fred']\\n *\\n * // The `_.matches` iteratee shorthand.\\n * _.filter(users, { 'age': 36, 'active': true });\\n * // => objects for ['barney']\\n *\\n * // The `_.matchesProperty` iteratee shorthand.\\n * _.filter(users, ['active', false]);\\n * // => objects for ['fred']\\n *\\n * // The `_.property` iteratee shorthand.\\n * _.filter(users, 'active');\\n * // => objects for ['barney']\\n *\\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\\n * // => objects for ['fred', 'barney']\\n */\\nfunction filter(collection, predicate) {\\n  var func = isArray(collection) ? arrayFilter : baseFilter;\\n  return func(collection, baseIteratee(predicate, 3));\\n}\\n\\nmodule.exports = filter;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"arrayFilter\",\"baseFilter\",\"baseIteratee\",\"isArray\",\"filter\",\"collection\",\"predicate\",\"func\"]\n}\n"]