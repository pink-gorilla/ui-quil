["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_assignMergeValue.js"],"~:js","shadow$provide.module$node_modules$lodash$_assignMergeValue=function(global,require,module,exports){var baseAssignValue=require(\"module$node_modules$lodash$_baseAssignValue\"),eq=require(\"module$node_modules$lodash$eq\");module.exports=function(object,key,value){(void 0===value||eq(object[key],value))&&(void 0!==value||key in object)||baseAssignValue(object,key,value)}}","~:source","shadow$provide[\"module$node_modules$lodash$_assignMergeValue\"] = function(global,require,module,exports) {\nvar baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$eq","~$module$node_modules$lodash$_baseAssignValue"]],"~:properties",["^5",[]],"~:compiled-at",1621210442103,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_assignMergeValue.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACrGC,gBAAkBH,OAAA,CAAQ,6CAAR,CADmF,CAErGI,GAAKJ,OAAA,CAAQ,+BAAR,CAkBTC,OAAOC,CAAAA,OAAP,CAPAG,QAAyB,CAACC,MAAD,CAASC,GAAT,CAAcC,KAAd,CAAqB,CAC5C,CAAeC,IAAAA,EAAf,GAAKD,KAAL,EAA6BJ,EAAA,CAAGE,MAAA,CAAOC,GAAP,CAAH,CAAgBC,KAAhB,CAA7B,IACeC,IAAAA,EADf,GACKD,KADL,EAC8BD,GAD9B,GACqCD,OADrC,GAEEH,eAAA,CAAgBG,MAAhB,CAAwBC,GAAxB,CAA6BC,KAA7B,CAH0C,CAb2D;\",\n\"sources\":[\"node_modules/lodash/_assignMergeValue.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_assignMergeValue\\\"] = function(global,require,module,exports) {\\nvar baseAssignValue = require('./_baseAssignValue'),\\n    eq = require('./eq');\\n\\n/**\\n * This function is like `assignValue` except that it doesn't assign\\n * `undefined` values.\\n *\\n * @private\\n * @param {Object} object The object to modify.\\n * @param {string} key The key of the property to assign.\\n * @param {*} value The value to assign.\\n */\\nfunction assignMergeValue(object, key, value) {\\n  if ((value !== undefined && !eq(object[key], value)) ||\\n      (value === undefined && !(key in object))) {\\n    baseAssignValue(object, key, value);\\n  }\\n}\\n\\nmodule.exports = assignMergeValue;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseAssignValue\",\"eq\",\"assignMergeValue\",\"object\",\"key\",\"value\",\"undefined\"]\n}\n"]