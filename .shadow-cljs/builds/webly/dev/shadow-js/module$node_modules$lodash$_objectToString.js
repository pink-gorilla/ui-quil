["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_objectToString.js"],"~:js","shadow$provide.module$node_modules$lodash$_objectToString=function(global,require,module,exports){var nativeObjectToString=Object.prototype.toString;module.exports=function(value){return nativeObjectToString.call(value)}}","~:source","shadow$provide[\"module$node_modules$lodash$_objectToString\"] = function(global,require,module,exports) {\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1621210442007,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_objectToString.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,0CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CASvG,IAAIC,qBAPcC,MAAOC,CAAAA,SAOcC,CAAAA,QAavCL,OAAOC,CAAAA,OAAP,CAJAK,QAAuB,CAACC,KAAD,CAAQ,CAC7B,MAAOL,qBAAqBM,CAAAA,IAArB,CAA0BD,KAA1B,CADsB,CAlBwE;\",\n\"sources\":[\"node_modules/lodash/_objectToString.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_objectToString\\\"] = function(global,require,module,exports) {\\n/** Used for built-in method references. */\\nvar objectProto = Object.prototype;\\n\\n/**\\n * Used to resolve the\\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\n * of values.\\n */\\nvar nativeObjectToString = objectProto.toString;\\n\\n/**\\n * Converts `value` to a string using `Object.prototype.toString`.\\n *\\n * @private\\n * @param {*} value The value to convert.\\n * @returns {string} Returns the converted string.\\n */\\nfunction objectToString(value) {\\n  return nativeObjectToString.call(value);\\n}\\n\\nmodule.exports = objectToString;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"nativeObjectToString\",\"Object\",\"prototype\",\"toString\",\"objectToString\",\"value\",\"call\"]\n}\n"]