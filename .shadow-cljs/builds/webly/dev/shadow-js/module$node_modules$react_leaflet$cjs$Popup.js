["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-leaflet/cjs/Popup.js"],"~:js","shadow$provide.module$node_modules$react_leaflet$cjs$Popup=function(global,require,module,exports){exports.__esModule=!0;exports.Popup=void 0;global=require(\"module$node_modules$$react_leaflet$core$cjs$index\");var _leaflet=require(\"module$node_modules$leaflet$dist$leaflet_src\"),_react=require(\"module$node_modules$react$index\");require=(0,global.createOverlayComponent)(function(props,context){return{instance:new _leaflet.Popup(props,context.overlayContainer),context}},function(element,context,props,\nsetOpen){const {onClose,onOpen,position}=props;(0,_react.useEffect)(function(){function onPopupOpen(event){event.popup===instance&&(instance.update(),setOpen(!0),null==onOpen?void 0:onOpen())}function onPopupClose(event){event.popup===instance&&(setOpen(!1),null==onClose?void 0:onClose())}const {instance}=element;context.map.on({popupopen:onPopupOpen,popupclose:onPopupClose});null==context.overlayContainer?(null!=position&&instance.setLatLng(position),instance.openOn(context.map)):context.overlayContainer.bindPopup(instance);\nreturn function(){context.map.off({popupopen:onPopupOpen,popupclose:onPopupClose});context.map.removeLayer(instance)}},[element,context,setOpen,onClose,onOpen,position])});exports.Popup=require}","~:source","shadow$provide[\"module$node_modules$react_leaflet$cjs$Popup\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.Popup = void 0;\n\nvar _core = require(\"@react-leaflet/core\");\n\nvar _leaflet = require(\"leaflet\");\n\nvar _react = require(\"react\");\n\nconst Popup = (0, _core.createOverlayComponent)(function createPopup(props, context) {\n  return {\n    instance: new _leaflet.Popup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  (0, _react.useEffect)(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});\nexports.Popup = Popup;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$react_leaflet$core$cjs$index","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$leaflet$dist$leaflet_src"]],"~:properties",["^5",["__esModule","popupopen","context","popupclose","instance","Popup"]],"~:compiled-at",1621210442253,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_leaflet$cjs$Popup.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxGA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,KAAR,CAAgB,IAAK,EAEjBC,OAAAA,CAAQL,OAAA,CAAQ,mDAAR,CAEZ,KAAIM,SAAWN,OAAA,CAAQ,8CAAR,CAAf,CAEIO,OAASP,OAAA,CAAQ,iCAAR,CAEPI,QAAAA,CAAQ,CAAC,CAAA,CAAGC,MAAMG,CAAAA,sBAAV,EAAkCC,QAAoB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CACnF,MAAO,CACLC,SAAU,IAAIN,QAASF,CAAAA,KAAb,CAAmBM,KAAnB,CAA0BC,OAAQE,CAAAA,gBAAlC,CADL,CAELF,OAFK,CAD4E,CAAvE,CAKXG,QAA0B,CAACC,OAAD,CAAUJ,OAAV,CAAmBD,KAAnB;AAA0BM,OAA1B,CAAmC,CAC9D,MAAM,CACJC,OADI,CAEJC,MAFI,CAGJC,QAHI,CAAA,CAIFT,KACJ,EAAC,CAAA,CAAGH,MAAOa,CAAAA,SAAX,EAAsBC,QAAiB,EAAG,CAKxCC,QAASA,YAAW,CAACC,KAAD,CAAQ,CACtBA,KAAMC,CAAAA,KAAV,GAAoBZ,QAApB,GACEA,QAASa,CAAAA,MAAT,EAEA,CADAT,OAAA,CAAQ,CAAA,CAAR,CACA,CAAU,IAAV,EAAAE,MAAA,CAAiB,IAAK,EAAtB,CAA0BA,MAAA,EAH5B,CAD0B,CAQ5BQ,QAASA,aAAY,CAACH,KAAD,CAAQ,CACvBA,KAAMC,CAAAA,KAAV,GAAoBZ,QAApB,GACEI,OAAA,CAAQ,CAAA,CAAR,CACA,CAAW,IAAX,EAAAC,OAAA,CAAkB,IAAK,EAAvB,CAA2BA,OAAA,EAF7B,CAD2B,CAZ7B,MAAM,CACJL,QADI,CAAA,CAEFG,OAiBJJ,QAAQgB,CAAAA,GAAIC,CAAAA,EAAZ,CAAe,CACbC,UAAWP,WADE,CAEbQ,WAAYJ,YAFC,CAAf,CAKgC,KAAhC,EAAIf,OAAQE,CAAAA,gBAAZ,EAEkB,IAIhB,EAJIM,QAIJ,EAHEP,QAASmB,CAAAA,SAAT,CAAmBZ,QAAnB,CAGF,CAAAP,QAASoB,CAAAA,MAAT,CAAgBrB,OAAQgB,CAAAA,GAAxB,CANF,EASEhB,OAAQE,CAAAA,gBAAiBoB,CAAAA,SAAzB,CAAmCrB,QAAnC,CAGF;MAAOsB,SAAoB,EAAG,CAC5BvB,OAAQgB,CAAAA,GAAIQ,CAAAA,GAAZ,CAAgB,CACdN,UAAWP,WADG,CAEdQ,WAAYJ,YAFE,CAAhB,CAIAf,QAAQgB,CAAAA,GAAIS,CAAAA,WAAZ,CAAwBxB,QAAxB,CAL4B,CArCU,CAA1C,CA4CG,CAACG,OAAD,CAAUJ,OAAV,CAAmBK,OAAnB,CAA4BC,OAA5B,CAAqCC,MAArC,CAA6CC,QAA7C,CA5CH,CAN8D,CALlD,CAyDdjB,QAAQE,CAAAA,KAAR,CAAgBA,OArEwF;\",\n\"sources\":[\"node_modules/react-leaflet/cjs/Popup.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_leaflet$cjs$Popup\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.Popup = void 0;\\n\\nvar _core = require(\\\"@react-leaflet/core\\\");\\n\\nvar _leaflet = require(\\\"leaflet\\\");\\n\\nvar _react = require(\\\"react\\\");\\n\\nconst Popup = (0, _core.createOverlayComponent)(function createPopup(props, context) {\\n  return {\\n    instance: new _leaflet.Popup(props, context.overlayContainer),\\n    context\\n  };\\n}, function usePopupLifecycle(element, context, props, setOpen) {\\n  const {\\n    onClose,\\n    onOpen,\\n    position\\n  } = props;\\n  (0, _react.useEffect)(function addPopup() {\\n    const {\\n      instance\\n    } = element;\\n\\n    function onPopupOpen(event) {\\n      if (event.popup === instance) {\\n        instance.update();\\n        setOpen(true);\\n        onOpen == null ? void 0 : onOpen();\\n      }\\n    }\\n\\n    function onPopupClose(event) {\\n      if (event.popup === instance) {\\n        setOpen(false);\\n        onClose == null ? void 0 : onClose();\\n      }\\n    }\\n\\n    context.map.on({\\n      popupopen: onPopupOpen,\\n      popupclose: onPopupClose\\n    });\\n\\n    if (context.overlayContainer == null) {\\n      // Attach to a Map\\n      if (position != null) {\\n        instance.setLatLng(position);\\n      }\\n\\n      instance.openOn(context.map);\\n    } else {\\n      // Attach to container component\\n      context.overlayContainer.bindPopup(instance);\\n    }\\n\\n    return function removePopup() {\\n      context.map.off({\\n        popupopen: onPopupOpen,\\n        popupclose: onPopupClose\\n      });\\n      context.map.removeLayer(instance);\\n    };\\n  }, [element, context, setOpen, onClose, onOpen, position]);\\n});\\nexports.Popup = Popup;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"Popup\",\"_core\",\"_leaflet\",\"_react\",\"createOverlayComponent\",\"createPopup\",\"props\",\"context\",\"instance\",\"overlayContainer\",\"usePopupLifecycle\",\"element\",\"setOpen\",\"onClose\",\"onOpen\",\"position\",\"useEffect\",\"addPopup\",\"onPopupOpen\",\"event\",\"popup\",\"update\",\"onPopupClose\",\"map\",\"on\",\"popupopen\",\"popupclose\",\"setLatLng\",\"openOn\",\"bindPopup\",\"removePopup\",\"off\",\"removeLayer\"]\n}\n"]