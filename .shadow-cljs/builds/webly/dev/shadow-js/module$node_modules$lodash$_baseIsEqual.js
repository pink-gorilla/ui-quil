["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseIsEqual.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseIsEqual=function(global,require,module,exports){function baseIsEqual(value,other,bitmask,customizer,stack){return value===other?!0:null==value||null==other||!isObjectLike(value)&&!isObjectLike(other)?value!==value&&other!==other:baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack)}var baseIsEqualDeep=require(\"module$node_modules$lodash$_baseIsEqualDeep\"),isObjectLike=require(\"module$node_modules$lodash$isObjectLike\");module.exports=baseIsEqual}","~:source","shadow$provide[\"module$node_modules$lodash$_baseIsEqual\"] = function(global,require,module,exports) {\nvar baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$isObjectLike","~$module$node_modules$lodash$_baseIsEqualDeep","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1621210442074,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseIsEqual.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkBpGC,QAASA,YAAW,CAACC,KAAD,CAAQC,KAAR,CAAeC,OAAf,CAAwBC,UAAxB,CAAoCC,KAApC,CAA2C,CAC7D,MAAIJ,MAAJ,GAAcC,KAAd,CACS,CAAA,CADT,CAGa,IAAb,EAAID,KAAJ,EAA8B,IAA9B,EAAqBC,KAArB,EAAuC,CAACI,YAAA,CAAaL,KAAb,CAAxC,EAA+D,CAACK,YAAA,CAAaJ,KAAb,CAAhE,CACSD,KADT,GACmBA,KADnB,EAC4BC,KAD5B,GACsCA,KADtC,CAGOK,eAAA,CAAgBN,KAAhB,CAAuBC,KAAvB,CAA8BC,OAA9B,CAAuCC,UAAvC,CAAmDJ,WAAnD,CAAgEK,KAAhE,CAPsD,CAlBqC,IAChGE,gBAAkBV,OAAA,CAAQ,6CAAR,CAD8E,CAEhGS,aAAeT,OAAA,CAAQ,yCAAR,CA0BnBC,OAAOC,CAAAA,OAAP,CAAiBC,WA5BmF;\",\n\"sources\":[\"node_modules/lodash/_baseIsEqual.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseIsEqual\\\"] = function(global,require,module,exports) {\\nvar baseIsEqualDeep = require('./_baseIsEqualDeep'),\\n    isObjectLike = require('./isObjectLike');\\n\\n/**\\n * The base implementation of `_.isEqual` which supports partial comparisons\\n * and tracks traversed objects.\\n *\\n * @private\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @param {boolean} bitmask The bitmask flags.\\n *  1 - Unordered comparison\\n *  2 - Partial comparison\\n * @param {Function} [customizer] The function to customize comparisons.\\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n */\\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\\n  if (value === other) {\\n    return true;\\n  }\\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\\n    return value !== value && other !== other;\\n  }\\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\\n}\\n\\nmodule.exports = baseIsEqual;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseIsEqual\",\"value\",\"other\",\"bitmask\",\"customizer\",\"stack\",\"isObjectLike\",\"baseIsEqualDeep\"]\n}\n"]