["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_cloneDataView.js"],"~:js","shadow$provide.module$node_modules$lodash$_cloneDataView=function(global,require,module,exports){var cloneArrayBuffer=require(\"module$node_modules$lodash$_cloneArrayBuffer\");module.exports=function(dataView,isDeep){isDeep=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(isDeep,dataView.byteOffset,dataView.byteLength)}}","~:source","shadow$provide[\"module$node_modules$lodash$_cloneDataView\"] = function(global,require,module,exports) {\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_cloneArrayBuffer"]],"~:properties",["^5",[]],"~:compiled-at",1621210442060,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_cloneDataView.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACtG,IAAIC,iBAAmBH,OAAA,CAAQ,8CAAR,CAevBC,OAAOC,CAAAA,OAAP,CALAE,QAAsB,CAACC,QAAD,CAAWC,MAAX,CAAmB,CACnCC,MAAAA,CAASD,MAAA,CAASH,gBAAA,CAAiBE,QAASE,CAAAA,MAA1B,CAAT,CAA6CF,QAASE,CAAAA,MACnE,OAAO,KAAIF,QAASG,CAAAA,WAAb,CAAyBD,MAAzB,CAAiCF,QAASI,CAAAA,UAA1C,CAAsDJ,QAASK,CAAAA,UAA/D,CAFgC,CAX6D;\",\n\"sources\":[\"node_modules/lodash/_cloneDataView.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_cloneDataView\\\"] = function(global,require,module,exports) {\\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\\n\\n/**\\n * Creates a clone of `dataView`.\\n *\\n * @private\\n * @param {Object} dataView The data view to clone.\\n * @param {boolean} [isDeep] Specify a deep clone.\\n * @returns {Object} Returns the cloned data view.\\n */\\nfunction cloneDataView(dataView, isDeep) {\\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\\n}\\n\\nmodule.exports = cloneDataView;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"cloneArrayBuffer\",\"cloneDataView\",\"dataView\",\"isDeep\",\"buffer\",\"constructor\",\"byteOffset\",\"byteLength\"]\n}\n"]