["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/vega-view/build/vega-view.js"],"~:js","shadow$provide.module$node_modules$vega_view$build$vega_view=function(global$jscomp$0,require,module$jscomp$0,exports$jscomp$0){(function(global,factory){\"object\"===typeof exports$jscomp$0&&\"undefined\"!==typeof module$jscomp$0?factory(exports$jscomp$0,require(\"module$node_modules$vega_util$build$vega_util\"),require(\"module$node_modules$vega_dataflow$build$vega_dataflow\"),require(\"module$node_modules$vega_scenegraph$build$vega_scenegraph\"),require(\"module$node_modules$d3_array$dist$d3_array\"),require(\"module$node_modules$vega_functions$build$vega_functions\"),\nrequire(\"module$node_modules$vega_runtime$build$vega_runtime\"),require(\"module$node_modules$d3_timer$dist$d3_timer\"),require(\"module$node_modules$vega_format$build$vega_format\")):\"function\"===typeof define&&define.amd?define(\"exports vega-util vega-dataflow vega-scenegraph d3-array vega-functions vega-runtime d3-timer vega-format\".split(\" \"),factory):(global=\"undefined\"!==typeof globalThis?globalThis:global||self,factory(global.vega={},global.vega,global.vega,global.vega,global.d3,global.vega,global.vega,\nglobal.d3,global.vega))})(this,function(exports,vegaUtil,vegaDataflow,vegaScenegraph,d3Array,vegaFunctions,vegaRuntime,d3Timer,vegaFormat){function initializeAria(view){const el=view.container();el&&(el.setAttribute(\"role\",\"graphics-document\"),el.setAttribute(\"aria-roleDescription\",\"visualization\"),ariaLabel(el,view.description()))}function ariaLabel(el,desc){el&&(null==desc?el.removeAttribute(\"aria-label\"):el.setAttribute(\"aria-label\",desc))}function background(view){view.add(null,_=>{view._background=\n_.bg;view._resize=1;return _.bg},{bg:view._signals.background})}function cursor$jscomp$0(view){const cursor=view._signals.cursor||(view._signals.cursor=view.add({user:\"default\",item:null}));view.on(view.events(\"view\",\"mousemove\"),cursor,(_,event)=>{const user=(_=cursor.value)?vegaUtil.isString(_)?_:_.user:\"default\";event=event.item&&event.item.cursor||null;return _&&user===_.user&&event==_.item?_:{user,item:event}});view.add(null,function(_){_=_.cursor;let item=this.value;vegaUtil.isString(_)||(item=\n_.item,_=_.user);setCursor(view,_&&\"default\"!==_?_:item||_);return item},{cursor})}function setCursor(view,cursor){if(view=view.globalCursor()?\"undefined\"!==typeof document&&document.body:view.container())return null==cursor?view.style.removeProperty(\"cursor\"):view.style.cursor=cursor}function dataref(view,name){view=view._runtime.data;vegaUtil.hasOwnProperty(view,name)||vegaUtil.error(\"Unrecognized data set: \"+name);return view[name]}function change(name,changes){vegaDataflow.isChangeSet(changes)||\nvegaUtil.error(\"Second argument to changes must be a changeset.\");name=dataref(this,name);name.modified=!0;return this.pulse(name.input,changes)}function width$jscomp$0(view){var padding=view.padding();return Math.max(0,view._viewWidth+padding.left+padding.right)}function height$jscomp$0(view){var padding=view.padding();return Math.max(0,view._viewHeight+padding.top+padding.bottom)}function offset(view){var padding=view.padding();view=view._origin;return[padding.left+view[0],padding.top+view[1]]}\nfunction resizeRenderer(view){var origin=offset(view),w=width$jscomp$0(view),h=height$jscomp$0(view);view._renderer.background(view.background());view._renderer.resize(w,h,origin);view._handler.origin(origin);view._resizeListeners.forEach(handler=>{try{handler(w,h)}catch(error){view.error(error)}})}function extension(view,item$jscomp$0,point){function group(name){var g=itemGroup,i;if(name)for(i=item$jscomp$0;i;i=i.mark.group)if(i.mark.name===name){g=i;break}return g&&g.mark&&g.mark.interactive?g:\n{}}function xy(item){if(!item)return point;vegaUtil.isString(item)&&(item=group(item));const p=point.slice();for(;item;)p[0]-=item.x||0,p[1]-=item.y||0,item=item.mark&&item.mark.group;return p}const itemGroup=item$jscomp$0?\"group\"===item$jscomp$0.mark.marktype?item$jscomp$0:item$jscomp$0.mark.group:null;return{view:vegaUtil.constant(view),item:vegaUtil.constant(item$jscomp$0||{}),group,xy,x:item=>xy(item)[0],y:item=>xy(item)[1]}}function initializeEventConfig(config){config=vegaUtil.extend({defaults:{}},\nconfig);const unpack=(obj,keys)=>{keys.forEach(k=>{vegaUtil.isArray(obj[k])&&(obj[k]=vegaUtil.toSet(obj[k]))})};unpack(config.defaults,[\"prevent\",\"allow\"]);unpack(config,[\"view\",\"window\",\"selector\"]);return config}function trackEventListener(view,sources,type,handler){view._eventListeners.push({type,sources:vegaUtil.array(sources),handler})}function permit(view,key,type){const rule=view._eventConfig&&view._eventConfig[key];return!1===rule||vegaUtil.isObject(rule)&&!rule[type]?(view.warn(`Blocked ${key} ${type} event listener.`),\n!1):!0}function itemFilter(event){return event.item}function markTarget(event){return event.item.mark.source}function invoke(name){return function(_,event){return event.vega.view().changeset().encode(event.item,name)}}function element(tag,attr,text){tag=document.createElement(tag);for(const key in attr)tag.setAttribute(key,attr[key]);null!=text&&(tag.textContent=text);return tag}function bind$jscomp$0(view,el,binding){if(el){var param=binding.param,bind=binding.state;bind||(bind=binding.state={elements:null,\nactive:!1,set:null,update:value=>{value!=view.signal(param.signal)&&view.runAsync(null,()=>{bind.source=!0;view.signal(param.signal,value)})}},param.debounce&&(bind.update=vegaUtil.debounce(param.debounce,bind.update)));(null==param.input&&param.element?target:generate)(bind,el,param,view);bind.active||(view.on(view._signals[param.signal],null,()=>{bind.source?bind.source=!1:bind.set(view.signal(param.signal))}),bind.active=!0);return bind}}function target(bind,node,param,view){const type=param.event||\n\"input\",handler=()=>bind.update(node.value);view.signal(param.signal,node.value);node.addEventListener(type,handler);trackEventListener(view,node,type,handler);bind.set=value=>{node.value=value;value=node.dispatchEvent;var JSCompiler_inline_result=\"undefined\"!==typeof Event?new Event(type):{type};value.call(node,JSCompiler_inline_result)}}function generate(bind,el,param,view){view=view.signal(param.signal);const div=element(\"div\",{\"class\":\"vega-bind\"}),wrapper=\"radio\"===param.input?div:div.appendChild(element(\"label\"));\nwrapper.appendChild(element(\"span\",{\"class\":\"vega-bind-name\"},param.name||param.signal));el.appendChild(div);el=form;switch(param.input){case \"checkbox\":el=checkbox;break;case \"select\":el=select;break;case \"radio\":el=radio;break;case \"range\":el=range}el(bind,wrapper,param,view)}function form(bind,el,param,value$jscomp$0){const node=element(\"input\");for(const key in param)\"signal\"!==key&&\"element\"!==key&&node.setAttribute(\"input\"===key?\"type\":key,param[key]);node.setAttribute(\"name\",param.signal);\nnode.value=value$jscomp$0;el.appendChild(node);node.addEventListener(\"input\",()=>bind.update(node.value));bind.elements=[node];bind.set=value=>node.value=value}function checkbox(bind,el,param,value$jscomp$0){param={type:\"checkbox\",name:param.signal};value$jscomp$0&&(param.checked=!0);const node=element(\"input\",param);el.appendChild(node);node.addEventListener(\"change\",()=>bind.update(node.checked));bind.elements=[node];bind.set=value=>node.checked=!!value||null}function select(bind,el,param,value$jscomp$0){const node=\nelement(\"select\",{name:param.signal}),labels=param.labels||[];param.options.forEach((option,i)=>{const attr={value:option};valuesEqual(option,value$jscomp$0)&&(attr.selected=!0);node.appendChild(element(\"option\",attr,(labels[i]||option)+\"\"))});el.appendChild(node);node.addEventListener(\"change\",()=>{bind.update(param.options[node.selectedIndex])});bind.elements=[node];bind.set=value=>{for(let i=0,n=param.options.length;i<n;++i)if(valuesEqual(param.options[i],value)){node.selectedIndex=i;break}}}function radio(bind,\nel,param,value$jscomp$0){const group=element(\"span\",{\"class\":\"vega-bind-radio\"}),labels=param.labels||[];el.appendChild(group);bind.elements=param.options.map((option,i)=>{var attr={type:\"radio\",name:param.signal,value:option};valuesEqual(option,value$jscomp$0)&&(attr.checked=!0);attr=element(\"input\",attr);attr.addEventListener(\"change\",()=>bind.update(option));i=element(\"label\",{},(labels[i]||option)+\"\");i.prepend(attr);group.appendChild(i);return attr});bind.set=value=>{const nodes=bind.elements,\nn=nodes.length;for(let i=0;i<n;++i)valuesEqual(nodes[i].value,value)&&(nodes[i].checked=!0)}}function range(bind,el,param,value$jscomp$0){value$jscomp$0=void 0!==value$jscomp$0?value$jscomp$0:(+param.max+ +param.min)/2;const max=null!=param.max?param.max:Math.max(100,+value$jscomp$0)||100,min=param.min||Math.min(0,max,+value$jscomp$0)||0,step=param.step||d3Array.tickStep(min,max,100),node=element(\"input\",{type:\"range\",name:param.signal,min,max,step});node.value=value$jscomp$0;const span=element(\"span\",\n{},+value$jscomp$0);el.appendChild(node);el.appendChild(span);el=()=>{span.textContent=node.value;bind.update(+node.value)};node.addEventListener(\"input\",el);node.addEventListener(\"change\",el);bind.elements=[node];bind.set=value=>{node.value=value;span.textContent=value}}function valuesEqual(a,b){return a===b||a+\"\"===b+\"\"}function initializeRenderer(view,r,el,constructor,scaleFactor,opt){r=r||new constructor(view.loader());return r.initialize(el,width$jscomp$0(view),height$jscomp$0(view),offset(view),\nscaleFactor,opt).background(view.background())}function trap(view,fn){return fn?function(){try{fn.apply(this,arguments)}catch(error){view.error(error)}}:null}function initializeHandler(view,prevHandler,el,constructor){const handler=(new constructor(view.loader(),trap(view,view.tooltip()))).scene(view.scenegraph().root).initialize(el,offset(view),view);prevHandler&&prevHandler.handlers().forEach(h=>{handler.on(h.type,h.handler)});return handler}function lookup(view,el,clear){if(\"string\"===typeof el)if(\"undefined\"!==\ntypeof document){if(el=document.querySelector(el),!el)return view.error(\"Signal bind element not found: \"+el),null}else return view.error(\"DOM document instance not found.\"),null;if(el&&clear)try{el.innerHTML=\"\"}catch(e){el=null,view.error(e)}return el}function padding$jscomp$0(_){vegaUtil.isObject(_)?_={top:+_.top||0,bottom:+_.bottom||0,left:+_.left||0,right:+_.right||0}:(_=+_||0,_={top:_,bottom:_,left:_,right:_});return _}async function renderHeadless(view,type,scaleFactor,opt){var module=vegaScenegraph.renderModule(type);\n(module=module&&module.headless)||vegaUtil.error(\"Unrecognized renderer type: \"+type);await view.runAsync();return initializeRenderer(view,null,null,module,scaleFactor,opt).renderAsync(view._scenegraph.root)}function runtime(view,spec,expr){return vegaRuntime.context(view,vegaDataflow.transforms,vegaFunctions.functionContext,expr).parse(spec)}function viewWidth$jscomp$0(view,width){var a=view.autosize();view=view.padding();return width-(a&&\"padding\"===a.contains?view.left+view.right:0)}function viewHeight$jscomp$0(view,\nheight){var a=view.autosize();view=view.padding();return height-(a&&\"padding\"===a.contains?view.top+view.bottom:0)}function initializeResize(view){function resetSize(){view._autosize=view._resize=1}var s=view._signals,w=s.width,h=s.height;s=s.padding;view._resizeWidth=view.add(null,_=>{view._width=_.size;view._viewWidth=viewWidth$jscomp$0(view,_.size);resetSize()},{size:w});view._resizeHeight=view.add(null,_=>{view._height=_.size;view._viewHeight=viewHeight$jscomp$0(view,_.size);resetSize()},{size:h});\nconst resizePadding=view.add(null,resetSize,{pad:s});view._resizeWidth.rank=w.rank+1;view._resizeHeight.rank=h.rank+1;resizePadding.rank=s.rank+1}function dataTest(name,data){return data.modified&&vegaUtil.isArray(data.input.value)&&name.indexOf(\"_:vega:_\")}function signalTest(name,op){return!(\"parent\"===name||op instanceof vegaDataflow.transforms.proxy)}function defaultTooltip(handler,event,item,value){if(handler=handler.element())event=handler.setAttribute,value=null==value?\"\":vegaUtil.isArray(value)?\n\"[\"+value.map(formatValue).join(\", \")+\"]\":vegaUtil.isObject(value)&&!vegaUtil.isDate(value)?formatObject(value):value+\"\",event.call(handler,\"title\",value)}function formatObject(obj){return Object.keys(obj).map(key=>{const v=obj[key];return key+\": \"+(vegaUtil.isArray(v)?\"[\"+v.map(formatValue).join(\", \")+\"]\":formatValue(v))}).join(\"\\n\")}function formatValue(value){return vegaUtil.isArray(value)?\"[…]\":vegaUtil.isObject(value)&&!vegaUtil.isDate(value)?\"{…}\":value}function View(spec,options){options=options||\n{};vegaDataflow.Dataflow.call(this);options.loader&&this.loader(options.loader);options.logger&&this.logger(options.logger);null!=options.logLevel&&this.logLevel(options.logLevel);if(options.locale||spec.locale){var loc=vegaUtil.extend({},spec.locale,options.locale);this.locale(vegaFormat.locale(loc.number,loc.time))}this._elBind=this._el=null;this._renderType=options.renderer||vegaScenegraph.RenderType.Canvas;this._scenegraph=new vegaScenegraph.Scenegraph;loc=this._scenegraph.root;this._renderer=\nnull;this._tooltip=options.tooltip||defaultTooltip;this._redraw=!0;this._handler=(new vegaScenegraph.CanvasHandler).scene(loc);this._preventDefault=this._globalCursor=!1;this._timers=[];this._eventListeners=[];this._resizeListeners=[];this._eventConfig=initializeEventConfig(spec.eventConfig);this.globalCursor(this._eventConfig.globalCursor);const ctx=runtime(this,spec,options.expr);this._runtime=ctx;this._signals=ctx.signals;this._bind=(spec.bindings||[]).map(_=>({state:null,param:vegaUtil.extend({},\n_)}));ctx.root&&ctx.root.set(loc);loc.source=ctx.data.root.input;this.pulse(ctx.data.root.input,this.changeset().insert(loc.items));this._width=this.width();this._height=this.height();this._viewWidth=viewWidth$jscomp$0(this,this._width);this._viewHeight=viewHeight$jscomp$0(this,this._height);this._origin=[0,0];this._resize=0;this._autosize=1;initializeResize(this);background(this);cursor$jscomp$0(this);this.description(spec.description);options.hover&&this.hover();options.container&&this.initialize(options.container,\noptions.bind)}function lookupSignal(view,name){return vegaUtil.hasOwnProperty(view._signals,name)?view._signals[name]:vegaUtil.error(\"Unrecognized signal name: \"+vegaUtil.stringValue(name))}function findOperatorHandler(op$jscomp$0,handler){op$jscomp$0=(op$jscomp$0._targets||[]).filter(op=>op._update&&op._update.handler===handler);return op$jscomp$0.length?op$jscomp$0[0]:null}function addOperatorListener(view,name,op,handler){let h=findOperatorHandler(op,handler);h||(h=trap(view,()=>handler(name,op.value)),\nh.handler=handler,view.on(op,null,h));return view}function removeOperatorListener(view,op,handler){(handler=findOperatorHandler(op,handler))&&op._targets.remove(handler);return view}const NO_TRAP={trap:!1};var Skip={skip:!0};vegaUtil.inherits(View,vegaDataflow.Dataflow,{async evaluate(encode,prerun,postrun){await vegaDataflow.Dataflow.prototype.evaluate.call(this,encode,prerun);if(this._redraw||this._resize)try{this._renderer&&(this._resize&&(this._resize=0,resizeRenderer(this)),await this._renderer.renderAsync(this._scenegraph.root)),\nthis._redraw=!1}catch(e){this.error(e)}postrun&&vegaDataflow.asyncCallback(this,postrun);return this},dirty(item){this._redraw=!0;this._renderer&&this._renderer.dirty(item)},description(text){if(arguments.length){const desc=null!=text?text+\"\":null;desc!==this._desc&&ariaLabel(this._el,this._desc=desc);return this}return this._desc},container(){return this._el},scenegraph(){return this._scenegraph},origin(){return this._origin.slice()},signal(name,value,options){const op=lookupSignal(this,name);return 1===\narguments.length?op.value:this.update(op,value,options)},width(_){return arguments.length?this.signal(\"width\",_):this.signal(\"width\")},height(_){return arguments.length?this.signal(\"height\",_):this.signal(\"height\")},padding(_){return arguments.length?this.signal(\"padding\",padding$jscomp$0(_)):padding$jscomp$0(this.signal(\"padding\"))},autosize(_){return arguments.length?this.signal(\"autosize\",_):this.signal(\"autosize\")},background(_){return arguments.length?this.signal(\"background\",_):this.signal(\"background\")},\nrenderer(type){if(!arguments.length)return this._renderType;vegaScenegraph.renderModule(type)||vegaUtil.error(\"Unrecognized renderer type: \"+type);type!==this._renderType&&(this._renderType=type,this._resetRenderer());return this},tooltip(handler){if(!arguments.length)return this._tooltip;handler!==this._tooltip&&(this._tooltip=handler,this._resetRenderer());return this},loader(loader){if(!arguments.length)return this._loader;loader!==this._loader&&(vegaDataflow.Dataflow.prototype.loader.call(this,\nloader),this._resetRenderer());return this},resize(){this._autosize=1;return this.touch(lookupSignal(this,\"autosize\"))},_resetRenderer(){this._renderer&&(this._renderer=null,this.initialize(this._el,this._elBind))},_resizeView:function(viewWidth,viewHeight,width,height,origin,auto){this.runAfter(view=>{let rerun=0;view._autosize=0;view.width()!==width&&(rerun=1,view.signal(\"width\",width,Skip),view._resizeWidth.skip(!0));view.height()!==height&&(rerun=1,view.signal(\"height\",height,Skip),view._resizeHeight.skip(!0));\nview._viewWidth!==viewWidth&&(view._resize=1,view._viewWidth=viewWidth);view._viewHeight!==viewHeight&&(view._resize=1,view._viewHeight=viewHeight);if(view._origin[0]!==origin[0]||view._origin[1]!==origin[1])view._resize=1,view._origin=origin;rerun&&view.run(\"enter\");auto&&view.runAfter(v=>v.resize())},!1,1)},addEventListener(type,handler,options){let callback=handler;options&&!1===options.trap||(callback=trap(this,handler),callback.raw=handler);this._handler.on(type,callback);return this},removeEventListener(type,\nhandler){for(var handlers=this._handler.handlers(type),i=handlers.length,h,t;0<=--i;)if(t=handlers[i].type,h=handlers[i].handler,type===t&&(handler===h||handler===h.raw)){this._handler.off(t,h);break}return this},addResizeListener(handler){const l=this._resizeListeners;0>l.indexOf(handler)&&l.push(handler);return this},removeResizeListener(handler){var l=this._resizeListeners;handler=l.indexOf(handler);0<=handler&&l.splice(handler,1);return this},addSignalListener(name,handler){return addOperatorListener(this,\nname,lookupSignal(this,name),handler)},removeSignalListener(name,handler){return removeOperatorListener(this,lookupSignal(this,name),handler)},addDataListener(name,handler){return addOperatorListener(this,name,dataref(this,name).values,handler)},removeDataListener(name,handler){return removeOperatorListener(this,dataref(this,name).values,handler)},globalCursor(_){if(arguments.length){if(this._globalCursor!==!!_){const prev=setCursor(this,null);this._globalCursor=!!_;prev&&setCursor(this,prev)}return this}return this._globalCursor},\npreventDefault(_){return arguments.length?(this._preventDefault=_,this):this._preventDefault},timer:function(callback,delay){this._timers.push(d3Timer.interval(function(elapsed){callback({timestamp:Date.now(),elapsed})},delay))},events:function(source,type,filter){var view=this,s=new vegaDataflow.EventStream(filter);filter=function(e,item){view.runAsync(null,()=>{var JSCompiler_temp;if(JSCompiler_temp=\"view\"===source){var def=view._eventConfig.defaults;JSCompiler_temp=def.prevent;def=def.allow;JSCompiler_temp=\n!1===JSCompiler_temp||!0===def?!1:!0===JSCompiler_temp||!1===def?!0:JSCompiler_temp?JSCompiler_temp[type]:def?!def[type]:view.preventDefault()}JSCompiler_temp&&e.preventDefault();JSCompiler_temp=s.receive;def=(def=view._renderer)&&def.canvas();if(def){var translate=offset(view);var p=e.changedTouches?e.changedTouches[0]:e;p=vegaScenegraph.point(p,def);p[0]-=translate[0];p[1]-=translate[1]}e.dataflow=view;e.item=item;e.vega=extension(view,item,p);JSCompiler_temp.call(s,e)})};var sources;if(\"timer\"===\nsource)permit(view,\"timer\",type)&&view.timer(filter,type);else if(\"view\"===source)permit(view,\"view\",type)&&view.addEventListener(type,filter,NO_TRAP);else if(\"window\"===source?permit(view,\"window\",type)&&\"undefined\"!==typeof window&&(sources=[window]):\"undefined\"!==typeof document&&permit(view,\"selector\",type)&&(sources=document.querySelectorAll(source)),sources){for(var i=0,n=sources.length;i<n;++i)sources[i].addEventListener(type,filter);trackEventListener(view,sources,type,filter)}else view.warn(\"Can not resolve event source: \"+\nsource);return s},finalize:function(){var tooltip=this._tooltip,timers=this._timers,listeners=this._eventListeners,n;for(n=timers.length;0<=--n;)timers[n].stop();for(n=listeners.length;0<=--n;){var e=listeners[n];for(timers=e.sources.length;0<=--timers;)e.sources[timers].removeEventListener(e.type,e.handler)}tooltip&&tooltip.call(this,this._handler,null,null,null);return this},hover:function(hoverSet,leaveSet){hoverSet=[hoverSet||\"hover\"];leaveSet=[leaveSet||\"update\",hoverSet[0]];this.on(this.events(\"view\",\n\"mouseover\",itemFilter),markTarget,invoke(hoverSet));this.on(this.events(\"view\",\"mouseout\",itemFilter),markTarget,invoke(leaveSet));return this},data:function(name,values){return 2>arguments.length?dataref(this,name).values.value:change.call(this,name,vegaDataflow.changeset().remove(vegaUtil.truthy).insert(values))},change,insert:function(name,_){return change.call(this,name,vegaDataflow.changeset().insert(_))},remove:function(name,_){return change.call(this,name,vegaDataflow.changeset().remove(_))},\nscale:function(name){var scales=this._runtime.scales;vegaUtil.hasOwnProperty(scales,name)||vegaUtil.error(\"Unrecognized scale or projection: \"+name);return scales[name].value},initialize:function(el,elBind){const view=this;var type=view._renderType;const config=view._eventConfig.bind;var module=vegaScenegraph.renderModule(type);el=view._el=el?lookup(view,el,!0):null;initializeAria(view);module||view.error(\"Unrecognized renderer type: \"+type);type=module.handler||vegaScenegraph.CanvasHandler;module=\nel?module.renderer:module.headless;view._renderer=module?initializeRenderer(view,view._renderer,el,module):null;view._handler=initializeHandler(view,view._handler,el,type);view._redraw=!0;el&&\"none\"!==config&&(elBind=elBind?view._elBind=lookup(view,elBind,!0):el.appendChild(element(\"form\",{\"class\":\"vega-bindings\"})),view._bind.forEach(_=>{_.param.element&&\"container\"!==config&&(_.element=lookup(view,_.param.element,!!_.param.input))}),view._bind.forEach(_=>{bind$jscomp$0(view,_.element||elBind,_)}));\nreturn view},toImageURL:async function(type,scaleFactor){type!==vegaScenegraph.RenderType.Canvas&&type!==vegaScenegraph.RenderType.SVG&&type!==vegaScenegraph.RenderType.PNG&&vegaUtil.error(\"Unrecognized image type: \"+type);scaleFactor=await renderHeadless(this,type,scaleFactor);type===vegaScenegraph.RenderType.SVG?(type=scaleFactor.svg(),type=new Blob([type],{type:\"image/svg+xml\"}),type=window.URL.createObjectURL(type)):type=scaleFactor.canvas().toDataURL(\"image/png\");return type},toCanvas:async function(scaleFactor,\nopt){return(await renderHeadless(this,vegaScenegraph.RenderType.Canvas,scaleFactor,opt)).canvas()},toSVG:async function(scaleFactor){return(await renderHeadless(this,vegaScenegraph.RenderType.SVG,scaleFactor)).svg()},getState:function(options){return this._runtime.getState(options||{data:dataTest,signals:signalTest,recurse:!0})},setState:function(state){this.runAsync(null,v=>{v._trigger=!1;v._runtime.setState(state)},v=>{v._trigger=!0});return this}});exports.View=View;Object.defineProperty(exports,\n\"__esModule\",{value:!0})})}","~:source","shadow$provide[\"module$node_modules$vega_view$build$vega_view\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('vega-dataflow'), require('vega-scenegraph'), require('d3-array'), require('vega-functions'), require('vega-runtime'), require('d3-timer'), require('vega-format')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'vega-dataflow', 'vega-scenegraph', 'd3-array', 'vega-functions', 'vega-runtime', 'd3-timer', 'vega-format'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.vega, global.vega, global.d3, global.vega, global.vega, global.d3, global.vega));\n}(this, (function (exports, vegaUtil, vegaDataflow, vegaScenegraph, d3Array, vegaFunctions, vegaRuntime, d3Timer, vegaFormat) { 'use strict';\n\n  // initialize aria role and label attributes\n  function initializeAria(view) {\n    const el = view.container();\n\n    if (el) {\n      el.setAttribute('role', 'graphics-document');\n      el.setAttribute('aria-roleDescription', 'visualization');\n      ariaLabel(el, view.description());\n    }\n  } // update aria-label if we have a DOM container element\n\n  function ariaLabel(el, desc) {\n    if (el) desc == null ? el.removeAttribute('aria-label') : el.setAttribute('aria-label', desc);\n  }\n\n  function background (view) {\n    // respond to background signal\n    view.add(null, _ => {\n      view._background = _.bg;\n      view._resize = 1;\n      return _.bg;\n    }, {\n      bg: view._signals.background\n    });\n  }\n\n  const Default = 'default';\n  function cursor (view) {\n    // get cursor signal, add to dataflow if needed\n    const cursor = view._signals.cursor || (view._signals.cursor = view.add({\n      user: Default,\n      item: null\n    })); // evaluate cursor on each mousemove event\n\n    view.on(view.events('view', 'mousemove'), cursor, (_, event) => {\n      const value = cursor.value,\n            user = value ? vegaUtil.isString(value) ? value : value.user : Default,\n            item = event.item && event.item.cursor || null;\n      return value && user === value.user && item == value.item ? value : {\n        user: user,\n        item: item\n      };\n    }); // when cursor signal updates, set visible cursor\n\n    view.add(null, function (_) {\n      let user = _.cursor,\n          item = this.value;\n\n      if (!vegaUtil.isString(user)) {\n        item = user.item;\n        user = user.user;\n      }\n\n      setCursor(view, user && user !== Default ? user : item || user);\n      return item;\n    }, {\n      cursor: cursor\n    });\n  }\n  function setCursor(view, cursor) {\n    const el = view.globalCursor() ? typeof document !== 'undefined' && document.body : view.container();\n\n    if (el) {\n      return cursor == null ? el.style.removeProperty('cursor') : el.style.cursor = cursor;\n    }\n  }\n\n  function dataref(view, name) {\n    var data = view._runtime.data;\n\n    if (!vegaUtil.hasOwnProperty(data, name)) {\n      vegaUtil.error('Unrecognized data set: ' + name);\n    }\n\n    return data[name];\n  }\n  function data(name, values) {\n    return arguments.length < 2 ? dataref(this, name).values.value : change.call(this, name, vegaDataflow.changeset().remove(vegaUtil.truthy).insert(values));\n  }\n  function change(name, changes) {\n    if (!vegaDataflow.isChangeSet(changes)) {\n      vegaUtil.error('Second argument to changes must be a changeset.');\n    }\n\n    const dataset = dataref(this, name);\n    dataset.modified = true;\n    return this.pulse(dataset.input, changes);\n  }\n  function insert(name, _) {\n    return change.call(this, name, vegaDataflow.changeset().insert(_));\n  }\n  function remove(name, _) {\n    return change.call(this, name, vegaDataflow.changeset().remove(_));\n  }\n\n  function width(view) {\n    var padding = view.padding();\n    return Math.max(0, view._viewWidth + padding.left + padding.right);\n  }\n  function height(view) {\n    var padding = view.padding();\n    return Math.max(0, view._viewHeight + padding.top + padding.bottom);\n  }\n  function offset(view) {\n    var padding = view.padding(),\n        origin = view._origin;\n    return [padding.left + origin[0], padding.top + origin[1]];\n  }\n  function resizeRenderer(view) {\n    var origin = offset(view),\n        w = width(view),\n        h = height(view);\n\n    view._renderer.background(view.background());\n\n    view._renderer.resize(w, h, origin);\n\n    view._handler.origin(origin);\n\n    view._resizeListeners.forEach(handler => {\n      try {\n        handler(w, h);\n      } catch (error) {\n        view.error(error);\n      }\n    });\n  }\n\n  /**\n   * Extend an event with additional view-specific methods.\n   * Adds a new property ('vega') to an event that provides a number\n   * of methods for querying information about the current interaction.\n   * The vega object provides the following methods:\n   *   view - Returns the backing View instance.\n   *   item - Returns the currently active scenegraph item (if any).\n   *   group - Returns the currently active scenegraph group (if any).\n   *     This method accepts a single string-typed argument indicating the name\n   *     of the desired parent group. The scenegraph will be traversed from\n   *     the item up towards the root to search for a matching group. If no\n   *     argument is provided the enclosing group for the active item is\n   *     returned, unless the item it itself a group, in which case it is\n   *     returned directly.\n   *   xy - Returns a two-element array containing the x and y coordinates for\n   *     mouse or touch events. For touch events, this is based on the first\n   *     elements in the changedTouches array. This method accepts a single\n   *     argument: either an item instance or mark name that should serve as\n   *     the reference coordinate system. If no argument is provided the\n   *     top-level view coordinate system is assumed.\n   *   x - Returns the current x-coordinate, accepts the same arguments as xy.\n   *   y - Returns the current y-coordinate, accepts the same arguments as xy.\n   * @param {Event} event - The input event to extend.\n   * @param {Item} item - The currently active scenegraph item (if any).\n   * @return {Event} - The extended input event.\n   */\n\n  function eventExtend (view, event, item) {\n    var r = view._renderer,\n        el = r && r.canvas(),\n        p,\n        e,\n        translate;\n\n    if (el) {\n      translate = offset(view);\n      e = event.changedTouches ? event.changedTouches[0] : event;\n      p = vegaScenegraph.point(e, el);\n      p[0] -= translate[0];\n      p[1] -= translate[1];\n    }\n\n    event.dataflow = view;\n    event.item = item;\n    event.vega = extension(view, item, p);\n    return event;\n  }\n\n  function extension(view, item, point) {\n    const itemGroup = item ? item.mark.marktype === 'group' ? item : item.mark.group : null;\n\n    function group(name) {\n      var g = itemGroup,\n          i;\n      if (name) for (i = item; i; i = i.mark.group) {\n        if (i.mark.name === name) {\n          g = i;\n          break;\n        }\n      }\n      return g && g.mark && g.mark.interactive ? g : {};\n    }\n\n    function xy(item) {\n      if (!item) return point;\n      if (vegaUtil.isString(item)) item = group(item);\n      const p = point.slice();\n\n      while (item) {\n        p[0] -= item.x || 0;\n        p[1] -= item.y || 0;\n        item = item.mark && item.mark.group;\n      }\n\n      return p;\n    }\n\n    return {\n      view: vegaUtil.constant(view),\n      item: vegaUtil.constant(item || {}),\n      group: group,\n      xy: xy,\n      x: item => xy(item)[0],\n      y: item => xy(item)[1]\n    };\n  }\n\n  const VIEW = 'view',\n        TIMER = 'timer',\n        WINDOW = 'window',\n        NO_TRAP = {\n    trap: false\n  };\n  /**\n   * Initialize event handling configuration.\n   * @param {object} config - The configuration settings.\n   * @return {object}\n   */\n\n  function initializeEventConfig(config) {\n    const events = vegaUtil.extend({\n      defaults: {}\n    }, config);\n\n    const unpack = (obj, keys) => {\n      keys.forEach(k => {\n        if (vegaUtil.isArray(obj[k])) obj[k] = vegaUtil.toSet(obj[k]);\n      });\n    };\n\n    unpack(events.defaults, ['prevent', 'allow']);\n    unpack(events, ['view', 'window', 'selector']);\n    return events;\n  }\n  function trackEventListener(view, sources, type, handler) {\n    view._eventListeners.push({\n      type: type,\n      sources: vegaUtil.array(sources),\n      handler: handler\n    });\n  }\n\n  function prevent(view, type) {\n    var def = view._eventConfig.defaults,\n        prevent = def.prevent,\n        allow = def.allow;\n    return prevent === false || allow === true ? false : prevent === true || allow === false ? true : prevent ? prevent[type] : allow ? !allow[type] : view.preventDefault();\n  }\n\n  function permit(view, key, type) {\n    const rule = view._eventConfig && view._eventConfig[key];\n\n    if (rule === false || vegaUtil.isObject(rule) && !rule[type]) {\n      view.warn(`Blocked ${key} ${type} event listener.`);\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Create a new event stream from an event source.\n   * @param {object} source - The event source to monitor.\n   * @param {string} type - The event type.\n   * @param {function(object): boolean} [filter] - Event filter function.\n   * @return {EventStream}\n   */\n\n\n  function events(source, type, filter) {\n    var view = this,\n        s = new vegaDataflow.EventStream(filter),\n        send = function (e, item) {\n      view.runAsync(null, () => {\n        if (source === VIEW && prevent(view, type)) {\n          e.preventDefault();\n        }\n\n        s.receive(eventExtend(view, e, item));\n      });\n    },\n        sources;\n\n    if (source === TIMER) {\n      if (permit(view, 'timer', type)) {\n        view.timer(send, type);\n      }\n    } else if (source === VIEW) {\n      if (permit(view, 'view', type)) {\n        // send traps errors, so use {trap: false} option\n        view.addEventListener(type, send, NO_TRAP);\n      }\n    } else {\n      if (source === WINDOW) {\n        if (permit(view, 'window', type) && typeof window !== 'undefined') {\n          sources = [window];\n        }\n      } else if (typeof document !== 'undefined') {\n        if (permit(view, 'selector', type)) {\n          sources = document.querySelectorAll(source);\n        }\n      }\n\n      if (!sources) {\n        view.warn('Can not resolve event source: ' + source);\n      } else {\n        for (var i = 0, n = sources.length; i < n; ++i) {\n          sources[i].addEventListener(type, send);\n        }\n\n        trackEventListener(view, sources, type, send);\n      }\n    }\n\n    return s;\n  }\n\n  function itemFilter(event) {\n    return event.item;\n  }\n\n  function markTarget(event) {\n    // grab upstream collector feeding the mark operator\n    return event.item.mark.source;\n  }\n\n  function invoke(name) {\n    return function (_, event) {\n      return event.vega.view().changeset().encode(event.item, name);\n    };\n  }\n\n  function hover (hoverSet, leaveSet) {\n    hoverSet = [hoverSet || 'hover'];\n    leaveSet = [leaveSet || 'update', hoverSet[0]]; // invoke hover set upon mouseover\n\n    this.on(this.events('view', 'mouseover', itemFilter), markTarget, invoke(hoverSet)); // invoke leave set upon mouseout\n\n    this.on(this.events('view', 'mouseout', itemFilter), markTarget, invoke(leaveSet));\n    return this;\n  }\n\n  /**\n   * Finalize a View instance that is being removed.\n   * Cancel any running timers.\n   * Remove all external event listeners.\n   * Remove any currently displayed tooltip.\n   */\n  function finalize () {\n    var tooltip = this._tooltip,\n        timers = this._timers,\n        listeners = this._eventListeners,\n        n,\n        m,\n        e;\n    n = timers.length;\n\n    while (--n >= 0) {\n      timers[n].stop();\n    }\n\n    n = listeners.length;\n\n    while (--n >= 0) {\n      e = listeners[n];\n      m = e.sources.length;\n\n      while (--m >= 0) {\n        e.sources[m].removeEventListener(e.type, e.handler);\n      }\n    }\n\n    if (tooltip) {\n      tooltip.call(this, this._handler, null, null, null);\n    }\n\n    return this;\n  }\n\n  function element (tag, attr, text) {\n    const el = document.createElement(tag);\n\n    for (const key in attr) el.setAttribute(key, attr[key]);\n\n    if (text != null) el.textContent = text;\n    return el;\n  }\n\n  const BindClass = 'vega-bind',\n        NameClass = 'vega-bind-name',\n        RadioClass = 'vega-bind-radio';\n  /**\n   * Bind a signal to an external HTML input element. The resulting two-way\n   * binding will propagate input changes to signals, and propagate signal\n   * changes to the input element state. If this view instance has no parent\n   * element, we assume the view is headless and no bindings are created.\n   * @param {Element|string} el - The parent DOM element to which the input\n   *   element should be appended as a child. If string-valued, this argument\n   *   will be treated as a CSS selector. If null or undefined, the parent\n   *   element of this view will be used as the element.\n   * @param {object} param - The binding parameters which specify the signal\n   *   to bind to, the input element type, and type-specific configuration.\n   * @return {View} - This view instance.\n   */\n\n  function bind (view, el, binding) {\n    if (!el) return;\n    const param = binding.param;\n    let bind = binding.state;\n\n    if (!bind) {\n      bind = binding.state = {\n        elements: null,\n        active: false,\n        set: null,\n        update: value => {\n          if (value != view.signal(param.signal)) {\n            view.runAsync(null, () => {\n              bind.source = true;\n              view.signal(param.signal, value);\n            });\n          }\n        }\n      };\n\n      if (param.debounce) {\n        bind.update = vegaUtil.debounce(param.debounce, bind.update);\n      }\n    }\n\n    const create = param.input == null && param.element ? target : generate;\n    create(bind, el, param, view);\n\n    if (!bind.active) {\n      view.on(view._signals[param.signal], null, () => {\n        bind.source ? bind.source = false : bind.set(view.signal(param.signal));\n      });\n      bind.active = true;\n    }\n\n    return bind;\n  }\n  /**\n   * Bind the signal to an external EventTarget.\n   */\n\n  function target(bind, node, param, view) {\n    const type = param.event || 'input';\n\n    const handler = () => bind.update(node.value); // initialize signal value to external input value\n\n\n    view.signal(param.signal, node.value); // listen for changes on the element\n\n    node.addEventListener(type, handler); // register with view, so we can remove it upon finalization\n\n    trackEventListener(view, node, type, handler); // propagate change to element\n\n    bind.set = value => {\n      node.value = value;\n      node.dispatchEvent(event(type));\n    };\n  }\n\n  function event(type) {\n    return typeof Event !== 'undefined' ? new Event(type) : {\n      type\n    };\n  }\n  /**\n   * Generate an HTML input form element and bind it to a signal.\n   */\n\n\n  function generate(bind, el, param, view) {\n    const value = view.signal(param.signal);\n    const div = element('div', {\n      'class': BindClass\n    });\n    const wrapper = param.input === 'radio' ? div : div.appendChild(element('label'));\n    wrapper.appendChild(element('span', {\n      'class': NameClass\n    }, param.name || param.signal));\n    el.appendChild(div);\n    let input = form;\n\n    switch (param.input) {\n      case 'checkbox':\n        input = checkbox;\n        break;\n\n      case 'select':\n        input = select;\n        break;\n\n      case 'radio':\n        input = radio;\n        break;\n\n      case 'range':\n        input = range;\n        break;\n    }\n\n    input(bind, wrapper, param, value);\n  }\n  /**\n   * Generates an arbitrary input form element.\n   * The input type is controlled via user-provided parameters.\n   */\n\n\n  function form(bind, el, param, value) {\n    const node = element('input');\n\n    for (const key in param) {\n      if (key !== 'signal' && key !== 'element') {\n        node.setAttribute(key === 'input' ? 'type' : key, param[key]);\n      }\n    }\n\n    node.setAttribute('name', param.signal);\n    node.value = value;\n    el.appendChild(node);\n    node.addEventListener('input', () => bind.update(node.value));\n    bind.elements = [node];\n\n    bind.set = value => node.value = value;\n  }\n  /**\n   * Generates a checkbox input element.\n   */\n\n\n  function checkbox(bind, el, param, value) {\n    const attr = {\n      type: 'checkbox',\n      name: param.signal\n    };\n    if (value) attr.checked = true;\n    const node = element('input', attr);\n    el.appendChild(node);\n    node.addEventListener('change', () => bind.update(node.checked));\n    bind.elements = [node];\n\n    bind.set = value => node.checked = !!value || null;\n  }\n  /**\n   * Generates a selection list input element.\n   */\n\n\n  function select(bind, el, param, value) {\n    const node = element('select', {\n      name: param.signal\n    }),\n          labels = param.labels || [];\n    param.options.forEach((option, i) => {\n      const attr = {\n        value: option\n      };\n      if (valuesEqual(option, value)) attr.selected = true;\n      node.appendChild(element('option', attr, (labels[i] || option) + ''));\n    });\n    el.appendChild(node);\n    node.addEventListener('change', () => {\n      bind.update(param.options[node.selectedIndex]);\n    });\n    bind.elements = [node];\n\n    bind.set = value => {\n      for (let i = 0, n = param.options.length; i < n; ++i) {\n        if (valuesEqual(param.options[i], value)) {\n          node.selectedIndex = i;\n          return;\n        }\n      }\n    };\n  }\n  /**\n   * Generates a radio button group.\n   */\n\n\n  function radio(bind, el, param, value) {\n    const group = element('span', {\n      'class': RadioClass\n    }),\n          labels = param.labels || [];\n    el.appendChild(group);\n    bind.elements = param.options.map((option, i) => {\n      const attr = {\n        type: 'radio',\n        name: param.signal,\n        value: option\n      };\n      if (valuesEqual(option, value)) attr.checked = true;\n      const input = element('input', attr);\n      input.addEventListener('change', () => bind.update(option));\n      const label = element('label', {}, (labels[i] || option) + '');\n      label.prepend(input);\n      group.appendChild(label);\n      return input;\n    });\n\n    bind.set = value => {\n      const nodes = bind.elements,\n            n = nodes.length;\n\n      for (let i = 0; i < n; ++i) {\n        if (valuesEqual(nodes[i].value, value)) nodes[i].checked = true;\n      }\n    };\n  }\n  /**\n   * Generates a slider input element.\n   */\n\n\n  function range(bind, el, param, value) {\n    value = value !== undefined ? value : (+param.max + +param.min) / 2;\n    const max = param.max != null ? param.max : Math.max(100, +value) || 100,\n          min = param.min || Math.min(0, max, +value) || 0,\n          step = param.step || d3Array.tickStep(min, max, 100);\n    const node = element('input', {\n      type: 'range',\n      name: param.signal,\n      min: min,\n      max: max,\n      step: step\n    });\n    node.value = value;\n    const span = element('span', {}, +value);\n    el.appendChild(node);\n    el.appendChild(span);\n\n    const update = () => {\n      span.textContent = node.value;\n      bind.update(+node.value);\n    }; // subscribe to both input and change\n\n\n    node.addEventListener('input', update);\n    node.addEventListener('change', update);\n    bind.elements = [node];\n\n    bind.set = value => {\n      node.value = value;\n      span.textContent = value;\n    };\n  }\n\n  function valuesEqual(a, b) {\n    return a === b || a + '' === b + '';\n  }\n\n  function initializeRenderer (view, r, el, constructor, scaleFactor, opt) {\n    r = r || new constructor(view.loader());\n    return r.initialize(el, width(view), height(view), offset(view), scaleFactor, opt).background(view.background());\n  }\n\n  function trap (view, fn) {\n    return !fn ? null : function () {\n      try {\n        fn.apply(this, arguments);\n      } catch (error) {\n        view.error(error);\n      }\n    };\n  }\n\n  function initializeHandler (view, prevHandler, el, constructor) {\n    // instantiate scenegraph handler\n    const handler = new constructor(view.loader(), trap(view, view.tooltip())).scene(view.scenegraph().root).initialize(el, offset(view), view); // transfer event handlers\n\n    if (prevHandler) {\n      prevHandler.handlers().forEach(h => {\n        handler.on(h.type, h.handler);\n      });\n    }\n\n    return handler;\n  }\n\n  function initialize (el, elBind) {\n    const view = this,\n          type = view._renderType,\n          config = view._eventConfig.bind,\n          module = vegaScenegraph.renderModule(type); // containing dom element\n\n    el = view._el = el ? lookup(view, el, true) : null; // initialize aria attributes\n\n    initializeAria(view); // select appropriate renderer & handler\n\n    if (!module) view.error('Unrecognized renderer type: ' + type);\n    const Handler = module.handler || vegaScenegraph.CanvasHandler,\n          Renderer = el ? module.renderer : module.headless; // initialize renderer and input handler\n\n    view._renderer = !Renderer ? null : initializeRenderer(view, view._renderer, el, Renderer);\n    view._handler = initializeHandler(view, view._handler, el, Handler);\n    view._redraw = true; // initialize signal bindings\n\n    if (el && config !== 'none') {\n      elBind = elBind ? view._elBind = lookup(view, elBind, true) : el.appendChild(element('form', {\n        'class': 'vega-bindings'\n      }));\n\n      view._bind.forEach(_ => {\n        if (_.param.element && config !== 'container') {\n          _.element = lookup(view, _.param.element, !!_.param.input);\n        }\n      });\n\n      view._bind.forEach(_ => {\n        bind(view, _.element || elBind, _);\n      });\n    }\n\n    return view;\n  }\n\n  function lookup(view, el, clear) {\n    if (typeof el === 'string') {\n      if (typeof document !== 'undefined') {\n        el = document.querySelector(el);\n\n        if (!el) {\n          view.error('Signal bind element not found: ' + el);\n          return null;\n        }\n      } else {\n        view.error('DOM document instance not found.');\n        return null;\n      }\n    }\n\n    if (el && clear) {\n      try {\n        el.innerHTML = '';\n      } catch (e) {\n        el = null;\n        view.error(e);\n      }\n    }\n\n    return el;\n  }\n\n  const number = _ => +_ || 0;\n\n  const paddingObject = _ => ({\n    top: _,\n    bottom: _,\n    left: _,\n    right: _\n  });\n\n  function padding (_) {\n    return vegaUtil.isObject(_) ? {\n      top: number(_.top),\n      bottom: number(_.bottom),\n      left: number(_.left),\n      right: number(_.right)\n    } : paddingObject(number(_));\n  }\n\n  /**\n   * Render the current scene in a headless fashion.\n   * This method is asynchronous, returning a Promise instance.\n   * @return {Promise} - A Promise that resolves to a renderer.\n   */\n\n  async function renderHeadless (view, type, scaleFactor, opt) {\n    const module = vegaScenegraph.renderModule(type),\n          ctr = module && module.headless;\n    if (!ctr) vegaUtil.error('Unrecognized renderer type: ' + type);\n    await view.runAsync();\n    return initializeRenderer(view, null, null, ctr, scaleFactor, opt).renderAsync(view._scenegraph.root);\n  }\n\n  /**\n   * Produce an image URL for the visualization. Depending on the type\n   * parameter, the generated URL contains data for either a PNG or SVG image.\n   * The URL can be used (for example) to download images of the visualization.\n   * This method is asynchronous, returning a Promise instance.\n   * @param {string} type - The image type. One of 'svg', 'png' or 'canvas'.\n   *   The 'canvas' and 'png' types are synonyms for a PNG image.\n   * @return {Promise} - A promise that resolves to an image URL.\n   */\n\n  async function renderToImageURL (type, scaleFactor) {\n    if (type !== vegaScenegraph.RenderType.Canvas && type !== vegaScenegraph.RenderType.SVG && type !== vegaScenegraph.RenderType.PNG) {\n      vegaUtil.error('Unrecognized image type: ' + type);\n    }\n\n    const r = await renderHeadless(this, type, scaleFactor);\n    return type === vegaScenegraph.RenderType.SVG ? toBlobURL(r.svg(), 'image/svg+xml') : r.canvas().toDataURL('image/png');\n  }\n\n  function toBlobURL(data, mime) {\n    const blob = new Blob([data], {\n      type: mime\n    });\n    return window.URL.createObjectURL(blob);\n  }\n\n  /**\n   * Produce a Canvas instance containing a rendered visualization.\n   * This method is asynchronous, returning a Promise instance.\n   * @return {Promise} - A promise that resolves to a Canvas instance.\n   */\n\n  async function renderToCanvas (scaleFactor, opt) {\n    const r = await renderHeadless(this, vegaScenegraph.RenderType.Canvas, scaleFactor, opt);\n    return r.canvas();\n  }\n\n  /**\n   * Produce a rendered SVG string of the visualization.\n   * This method is asynchronous, returning a Promise instance.\n   * @return {Promise} - A promise that resolves to an SVG string.\n   */\n\n  async function renderToSVG (scaleFactor) {\n    const r = await renderHeadless(this, vegaScenegraph.RenderType.SVG, scaleFactor);\n    return r.svg();\n  }\n\n  function runtime (view, spec, expr) {\n    return vegaRuntime.context(view, vegaDataflow.transforms, vegaFunctions.functionContext, expr).parse(spec);\n  }\n\n  function scale(name) {\n    var scales = this._runtime.scales;\n\n    if (!vegaUtil.hasOwnProperty(scales, name)) {\n      vegaUtil.error('Unrecognized scale or projection: ' + name);\n    }\n\n    return scales[name].value;\n  }\n\n  var Width = 'width',\n      Height = 'height',\n      Padding = 'padding',\n      Skip = {\n    skip: true\n  };\n  function viewWidth(view, width) {\n    var a = view.autosize(),\n        p = view.padding();\n    return width - (a && a.contains === Padding ? p.left + p.right : 0);\n  }\n  function viewHeight(view, height) {\n    var a = view.autosize(),\n        p = view.padding();\n    return height - (a && a.contains === Padding ? p.top + p.bottom : 0);\n  }\n  function initializeResize(view) {\n    var s = view._signals,\n        w = s[Width],\n        h = s[Height],\n        p = s[Padding];\n\n    function resetSize() {\n      view._autosize = view._resize = 1;\n    } // respond to width signal\n\n\n    view._resizeWidth = view.add(null, _ => {\n      view._width = _.size;\n      view._viewWidth = viewWidth(view, _.size);\n      resetSize();\n    }, {\n      size: w\n    }); // respond to height signal\n\n    view._resizeHeight = view.add(null, _ => {\n      view._height = _.size;\n      view._viewHeight = viewHeight(view, _.size);\n      resetSize();\n    }, {\n      size: h\n    }); // respond to padding signal\n\n    const resizePadding = view.add(null, resetSize, {\n      pad: p\n    }); // set rank to run immediately after source signal\n\n    view._resizeWidth.rank = w.rank + 1;\n    view._resizeHeight.rank = h.rank + 1;\n    resizePadding.rank = p.rank + 1;\n  }\n  function resizeView(viewWidth, viewHeight, width, height, origin, auto) {\n    this.runAfter(view => {\n      let rerun = 0; // reset autosize flag\n\n      view._autosize = 0; // width value changed: update signal, skip resize op\n\n      if (view.width() !== width) {\n        rerun = 1;\n        view.signal(Width, width, Skip); // set width, skip update calc\n\n        view._resizeWidth.skip(true); // skip width resize handler\n\n      } // height value changed: update signal, skip resize op\n\n\n      if (view.height() !== height) {\n        rerun = 1;\n        view.signal(Height, height, Skip); // set height, skip update calc\n\n        view._resizeHeight.skip(true); // skip height resize handler\n\n      } // view width changed: update view property, set resize flag\n\n\n      if (view._viewWidth !== viewWidth) {\n        view._resize = 1;\n        view._viewWidth = viewWidth;\n      } // view height changed: update view property, set resize flag\n\n\n      if (view._viewHeight !== viewHeight) {\n        view._resize = 1;\n        view._viewHeight = viewHeight;\n      } // origin changed: update view property, set resize flag\n\n\n      if (view._origin[0] !== origin[0] || view._origin[1] !== origin[1]) {\n        view._resize = 1;\n        view._origin = origin;\n      } // run dataflow on width/height signal change\n\n\n      if (rerun) view.run('enter');\n      if (auto) view.runAfter(v => v.resize());\n    }, false, 1);\n  }\n\n  /**\n   * Get the current view state, consisting of signal values and/or data sets.\n   * @param {object} [options] - Options flags indicating which state to export.\n   *   If unspecified, all signals and data sets will be exported.\n   * @param {function(string, Operator):boolean} [options.signals] - Optional\n   *   predicate function for testing if a signal should be included in the\n   *   exported state. If unspecified, all signals will be included, except for\n   *   those named 'parent' or those which refer to a Transform value.\n   * @param {function(string, object):boolean} [options.data] - Optional\n   *   predicate function for testing if a data set's input should be included\n   *   in the exported state. If unspecified, all data sets that have been\n   *   explicitly modified will be included.\n   * @param {boolean} [options.recurse=true] - Flag indicating if the exported\n   *   state should recursively include state from group mark sub-contexts.\n   * @return {object} - An object containing the exported state values.\n   */\n\n  function getState(options) {\n    return this._runtime.getState(options || {\n      data: dataTest,\n      signals: signalTest,\n      recurse: true\n    });\n  }\n\n  function dataTest(name, data) {\n    return data.modified && vegaUtil.isArray(data.input.value) && name.indexOf('_:vega:_');\n  }\n\n  function signalTest(name, op) {\n    return !(name === 'parent' || op instanceof vegaDataflow.transforms.proxy);\n  }\n  /**\n   * Sets the current view state and updates the view by invoking run.\n   * @param {object} state - A state object containing signal and/or\n   *   data set values, following the format used by the getState method.\n   * @return {View} - This view instance.\n   */\n\n\n  function setState(state) {\n    this.runAsync(null, v => {\n      v._trigger = false;\n\n      v._runtime.setState(state);\n    }, v => {\n      v._trigger = true;\n    });\n    return this;\n  }\n\n  function timer (callback, delay) {\n    function tick(elapsed) {\n      callback({\n        timestamp: Date.now(),\n        elapsed: elapsed\n      });\n    }\n\n    this._timers.push(d3Timer.interval(tick, delay));\n  }\n\n  function defaultTooltip (handler, event, item, value) {\n    const el = handler.element();\n    if (el) el.setAttribute('title', formatTooltip(value));\n  }\n\n  function formatTooltip(value) {\n    return value == null ? '' : vegaUtil.isArray(value) ? formatArray(value) : vegaUtil.isObject(value) && !vegaUtil.isDate(value) ? formatObject(value) : value + '';\n  }\n\n  function formatObject(obj) {\n    return Object.keys(obj).map(key => {\n      const v = obj[key];\n      return key + ': ' + (vegaUtil.isArray(v) ? formatArray(v) : formatValue(v));\n    }).join('\\n');\n  }\n\n  function formatArray(value) {\n    return '[' + value.map(formatValue).join(', ') + ']';\n  }\n\n  function formatValue(value) {\n    return vegaUtil.isArray(value) ? '[\\u2026]' : vegaUtil.isObject(value) && !vegaUtil.isDate(value) ? '{\\u2026}' : value;\n  }\n\n  /**\n   * Create a new View instance from a Vega dataflow runtime specification.\n   * The generated View will not immediately be ready for display. Callers\n   * should also invoke the initialize method (e.g., to set the parent\n   * DOM element in browser-based deployment) and then invoke the run\n   * method to evaluate the dataflow graph. Rendering will automatically\n   * be performed upon dataflow runs.\n   * @constructor\n   * @param {object} spec - The Vega dataflow runtime specification.\n   */\n\n  function View(spec, options) {\n    const view = this;\n    options = options || {};\n    vegaDataflow.Dataflow.call(view);\n    if (options.loader) view.loader(options.loader);\n    if (options.logger) view.logger(options.logger);\n    if (options.logLevel != null) view.logLevel(options.logLevel);\n\n    if (options.locale || spec.locale) {\n      const loc = vegaUtil.extend({}, spec.locale, options.locale);\n      view.locale(vegaFormat.locale(loc.number, loc.time));\n    }\n\n    view._el = null;\n    view._elBind = null;\n    view._renderType = options.renderer || vegaScenegraph.RenderType.Canvas;\n    view._scenegraph = new vegaScenegraph.Scenegraph();\n    const root = view._scenegraph.root; // initialize renderer, handler and event management\n\n    view._renderer = null;\n    view._tooltip = options.tooltip || defaultTooltip, view._redraw = true;\n    view._handler = new vegaScenegraph.CanvasHandler().scene(root);\n    view._globalCursor = false;\n    view._preventDefault = false;\n    view._timers = [];\n    view._eventListeners = [];\n    view._resizeListeners = []; // initialize event configuration\n\n    view._eventConfig = initializeEventConfig(spec.eventConfig);\n    view.globalCursor(view._eventConfig.globalCursor); // initialize dataflow graph\n\n    const ctx = runtime(view, spec, options.expr);\n    view._runtime = ctx;\n    view._signals = ctx.signals;\n    view._bind = (spec.bindings || []).map(_ => ({\n      state: null,\n      param: vegaUtil.extend({}, _)\n    })); // initialize scenegraph\n\n    if (ctx.root) ctx.root.set(root);\n    root.source = ctx.data.root.input;\n    view.pulse(ctx.data.root.input, view.changeset().insert(root.items)); // initialize view size\n\n    view._width = view.width();\n    view._height = view.height();\n    view._viewWidth = viewWidth(view, view._width);\n    view._viewHeight = viewHeight(view, view._height);\n    view._origin = [0, 0];\n    view._resize = 0;\n    view._autosize = 1;\n    initializeResize(view); // initialize background color\n\n    background(view); // initialize cursor\n\n    cursor(view); // initialize view description\n\n    view.description(spec.description); // initialize hover proessing, if requested\n\n    if (options.hover) view.hover(); // initialize DOM container(s) and renderer\n\n    if (options.container) view.initialize(options.container, options.bind);\n  }\n\n  function lookupSignal(view, name) {\n    return vegaUtil.hasOwnProperty(view._signals, name) ? view._signals[name] : vegaUtil.error('Unrecognized signal name: ' + vegaUtil.stringValue(name));\n  }\n\n  function findOperatorHandler(op, handler) {\n    const h = (op._targets || []).filter(op => op._update && op._update.handler === handler);\n    return h.length ? h[0] : null;\n  }\n\n  function addOperatorListener(view, name, op, handler) {\n    let h = findOperatorHandler(op, handler);\n\n    if (!h) {\n      h = trap(view, () => handler(name, op.value));\n      h.handler = handler;\n      view.on(op, null, h);\n    }\n\n    return view;\n  }\n\n  function removeOperatorListener(view, op, handler) {\n    const h = findOperatorHandler(op, handler);\n    if (h) op._targets.remove(h);\n    return view;\n  }\n\n  vegaUtil.inherits(View, vegaDataflow.Dataflow, {\n    // -- DATAFLOW / RENDERING ----\n    async evaluate(encode, prerun, postrun) {\n      // evaluate dataflow and prerun\n      await vegaDataflow.Dataflow.prototype.evaluate.call(this, encode, prerun); // render as needed\n\n      if (this._redraw || this._resize) {\n        try {\n          if (this._renderer) {\n            if (this._resize) {\n              this._resize = 0;\n              resizeRenderer(this);\n            }\n\n            await this._renderer.renderAsync(this._scenegraph.root);\n          }\n\n          this._redraw = false;\n        } catch (e) {\n          this.error(e);\n        }\n      } // evaluate postrun\n\n\n      if (postrun) vegaDataflow.asyncCallback(this, postrun);\n      return this;\n    },\n\n    dirty(item) {\n      this._redraw = true;\n      this._renderer && this._renderer.dirty(item);\n    },\n\n    // -- GET / SET ----\n    description(text) {\n      if (arguments.length) {\n        const desc = text != null ? text + '' : null;\n        if (desc !== this._desc) ariaLabel(this._el, this._desc = desc);\n        return this;\n      }\n\n      return this._desc;\n    },\n\n    container() {\n      return this._el;\n    },\n\n    scenegraph() {\n      return this._scenegraph;\n    },\n\n    origin() {\n      return this._origin.slice();\n    },\n\n    signal(name, value, options) {\n      const op = lookupSignal(this, name);\n      return arguments.length === 1 ? op.value : this.update(op, value, options);\n    },\n\n    width(_) {\n      return arguments.length ? this.signal('width', _) : this.signal('width');\n    },\n\n    height(_) {\n      return arguments.length ? this.signal('height', _) : this.signal('height');\n    },\n\n    padding(_) {\n      return arguments.length ? this.signal('padding', padding(_)) : padding(this.signal('padding'));\n    },\n\n    autosize(_) {\n      return arguments.length ? this.signal('autosize', _) : this.signal('autosize');\n    },\n\n    background(_) {\n      return arguments.length ? this.signal('background', _) : this.signal('background');\n    },\n\n    renderer(type) {\n      if (!arguments.length) return this._renderType;\n      if (!vegaScenegraph.renderModule(type)) vegaUtil.error('Unrecognized renderer type: ' + type);\n\n      if (type !== this._renderType) {\n        this._renderType = type;\n\n        this._resetRenderer();\n      }\n\n      return this;\n    },\n\n    tooltip(handler) {\n      if (!arguments.length) return this._tooltip;\n\n      if (handler !== this._tooltip) {\n        this._tooltip = handler;\n\n        this._resetRenderer();\n      }\n\n      return this;\n    },\n\n    loader(loader) {\n      if (!arguments.length) return this._loader;\n\n      if (loader !== this._loader) {\n        vegaDataflow.Dataflow.prototype.loader.call(this, loader);\n\n        this._resetRenderer();\n      }\n\n      return this;\n    },\n\n    resize() {\n      // set flag to perform autosize\n      this._autosize = 1; // touch autosize signal to ensure top-level ViewLayout runs\n\n      return this.touch(lookupSignal(this, 'autosize'));\n    },\n\n    _resetRenderer() {\n      if (this._renderer) {\n        this._renderer = null;\n        this.initialize(this._el, this._elBind);\n      }\n    },\n\n    // -- SIZING ----\n    _resizeView: resizeView,\n\n    // -- EVENT HANDLING ----\n    addEventListener(type, handler, options) {\n      let callback = handler;\n\n      if (!(options && options.trap === false)) {\n        // wrap callback in error handler\n        callback = trap(this, handler);\n        callback.raw = handler;\n      }\n\n      this._handler.on(type, callback);\n\n      return this;\n    },\n\n    removeEventListener(type, handler) {\n      var handlers = this._handler.handlers(type),\n          i = handlers.length,\n          h,\n          t; // search registered handlers, remove if match found\n\n\n      while (--i >= 0) {\n        t = handlers[i].type;\n        h = handlers[i].handler;\n\n        if (type === t && (handler === h || handler === h.raw)) {\n          this._handler.off(t, h);\n\n          break;\n        }\n      }\n\n      return this;\n    },\n\n    addResizeListener(handler) {\n      const l = this._resizeListeners;\n\n      if (l.indexOf(handler) < 0) {\n        // add handler if it isn't already registered\n        // note: error trapping handled elsewhere, so\n        // no need to wrap handlers here\n        l.push(handler);\n      }\n\n      return this;\n    },\n\n    removeResizeListener(handler) {\n      var l = this._resizeListeners,\n          i = l.indexOf(handler);\n\n      if (i >= 0) {\n        l.splice(i, 1);\n      }\n\n      return this;\n    },\n\n    addSignalListener(name, handler) {\n      return addOperatorListener(this, name, lookupSignal(this, name), handler);\n    },\n\n    removeSignalListener(name, handler) {\n      return removeOperatorListener(this, lookupSignal(this, name), handler);\n    },\n\n    addDataListener(name, handler) {\n      return addOperatorListener(this, name, dataref(this, name).values, handler);\n    },\n\n    removeDataListener(name, handler) {\n      return removeOperatorListener(this, dataref(this, name).values, handler);\n    },\n\n    globalCursor(_) {\n      if (arguments.length) {\n        if (this._globalCursor !== !!_) {\n          const prev = setCursor(this, null); // clear previous cursor\n\n          this._globalCursor = !!_;\n          if (prev) setCursor(this, prev); // swap cursor\n        }\n\n        return this;\n      } else {\n        return this._globalCursor;\n      }\n    },\n\n    preventDefault(_) {\n      if (arguments.length) {\n        this._preventDefault = _;\n        return this;\n      } else {\n        return this._preventDefault;\n      }\n    },\n\n    timer,\n    events,\n    finalize,\n    hover,\n    // -- DATA ----\n    data,\n    change,\n    insert,\n    remove,\n    // -- SCALES --\n    scale,\n    // -- INITIALIZATION ----\n    initialize,\n    // -- HEADLESS RENDERING ----\n    toImageURL: renderToImageURL,\n    toCanvas: renderToCanvas,\n    toSVG: renderToSVG,\n    // -- SAVE / RESTORE STATE ----\n    getState,\n    setState\n  });\n\n  exports.View = View;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$vega_dataflow$build$vega_dataflow","~$shadow.js","~$module$node_modules$vega_scenegraph$build$vega_scenegraph","~$module$node_modules$vega_format$build$vega_format","~$module$node_modules$vega_util$build$vega_util","~$module$node_modules$d3_timer$dist$d3_timer","~$module$node_modules$d3_array$dist$d3_array","~$module$node_modules$vega_functions$build$vega_functions","~$module$node_modules$vega_runtime$build$vega_runtime"]],"~:properties",["^5",["skip","sources","View","recurse","_resizeHeight","selected","_elBind","min","handler","_autosize","dataflow","right","pad","top","_viewHeight","_runtime","_viewWidth","innerHTML","_preventDefault","scale","elapsed","_timers","group","textContent","x","user","__esModule","max","_resizeView","timestamp","_origin","vega","rank","update","_signals","setState","_width","element","_renderType","name","getState","signals","value","toSVG","xy","_resizeWidth","param","cursor","_resize","item","remove","_el","_eventConfig","_height","_tooltip","events","_handler","_resizeListeners","source","type","_globalCursor","_bind","initialize","y","toImageURL","state","_desc","modified","_renderer","_scenegraph","insert","selectedIndex","_trigger","bottom","set","toCanvas","bg","size","_background","active","hover","raw","trap","_eventListeners","data","view","checked","_redraw","defaults","elements","left","change","timer","finalize","step"]],"~:compiled-at",1621210442494,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$vega_view$build$vega_view.js\",\n\"lineCount\":46,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/vega-view/build/vega-view.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$vega_view$build$vega_view\\\"] = function(global,require,module,exports) {\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('vega-dataflow'), require('vega-scenegraph'), require('d3-array'), require('vega-functions'), require('vega-runtime'), require('d3-timer'), require('vega-format')) :\\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'vega-dataflow', 'vega-scenegraph', 'd3-array', 'vega-functions', 'vega-runtime', 'd3-timer', 'vega-format'], factory) :\\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.vega, global.vega, global.d3, global.vega, global.vega, global.d3, global.vega));\\n}(this, (function (exports, vegaUtil, vegaDataflow, vegaScenegraph, d3Array, vegaFunctions, vegaRuntime, d3Timer, vegaFormat) { 'use strict';\\n\\n  // initialize aria role and label attributes\\n  function initializeAria(view) {\\n    const el = view.container();\\n\\n    if (el) {\\n      el.setAttribute('role', 'graphics-document');\\n      el.setAttribute('aria-roleDescription', 'visualization');\\n      ariaLabel(el, view.description());\\n    }\\n  } // update aria-label if we have a DOM container element\\n\\n  function ariaLabel(el, desc) {\\n    if (el) desc == null ? el.removeAttribute('aria-label') : el.setAttribute('aria-label', desc);\\n  }\\n\\n  function background (view) {\\n    // respond to background signal\\n    view.add(null, _ => {\\n      view._background = _.bg;\\n      view._resize = 1;\\n      return _.bg;\\n    }, {\\n      bg: view._signals.background\\n    });\\n  }\\n\\n  const Default = 'default';\\n  function cursor (view) {\\n    // get cursor signal, add to dataflow if needed\\n    const cursor = view._signals.cursor || (view._signals.cursor = view.add({\\n      user: Default,\\n      item: null\\n    })); // evaluate cursor on each mousemove event\\n\\n    view.on(view.events('view', 'mousemove'), cursor, (_, event) => {\\n      const value = cursor.value,\\n            user = value ? vegaUtil.isString(value) ? value : value.user : Default,\\n            item = event.item && event.item.cursor || null;\\n      return value && user === value.user && item == value.item ? value : {\\n        user: user,\\n        item: item\\n      };\\n    }); // when cursor signal updates, set visible cursor\\n\\n    view.add(null, function (_) {\\n      let user = _.cursor,\\n          item = this.value;\\n\\n      if (!vegaUtil.isString(user)) {\\n        item = user.item;\\n        user = user.user;\\n      }\\n\\n      setCursor(view, user && user !== Default ? user : item || user);\\n      return item;\\n    }, {\\n      cursor: cursor\\n    });\\n  }\\n  function setCursor(view, cursor) {\\n    const el = view.globalCursor() ? typeof document !== 'undefined' && document.body : view.container();\\n\\n    if (el) {\\n      return cursor == null ? el.style.removeProperty('cursor') : el.style.cursor = cursor;\\n    }\\n  }\\n\\n  function dataref(view, name) {\\n    var data = view._runtime.data;\\n\\n    if (!vegaUtil.hasOwnProperty(data, name)) {\\n      vegaUtil.error('Unrecognized data set: ' + name);\\n    }\\n\\n    return data[name];\\n  }\\n  function data(name, values) {\\n    return arguments.length < 2 ? dataref(this, name).values.value : change.call(this, name, vegaDataflow.changeset().remove(vegaUtil.truthy).insert(values));\\n  }\\n  function change(name, changes) {\\n    if (!vegaDataflow.isChangeSet(changes)) {\\n      vegaUtil.error('Second argument to changes must be a changeset.');\\n    }\\n\\n    const dataset = dataref(this, name);\\n    dataset.modified = true;\\n    return this.pulse(dataset.input, changes);\\n  }\\n  function insert(name, _) {\\n    return change.call(this, name, vegaDataflow.changeset().insert(_));\\n  }\\n  function remove(name, _) {\\n    return change.call(this, name, vegaDataflow.changeset().remove(_));\\n  }\\n\\n  function width(view) {\\n    var padding = view.padding();\\n    return Math.max(0, view._viewWidth + padding.left + padding.right);\\n  }\\n  function height(view) {\\n    var padding = view.padding();\\n    return Math.max(0, view._viewHeight + padding.top + padding.bottom);\\n  }\\n  function offset(view) {\\n    var padding = view.padding(),\\n        origin = view._origin;\\n    return [padding.left + origin[0], padding.top + origin[1]];\\n  }\\n  function resizeRenderer(view) {\\n    var origin = offset(view),\\n        w = width(view),\\n        h = height(view);\\n\\n    view._renderer.background(view.background());\\n\\n    view._renderer.resize(w, h, origin);\\n\\n    view._handler.origin(origin);\\n\\n    view._resizeListeners.forEach(handler => {\\n      try {\\n        handler(w, h);\\n      } catch (error) {\\n        view.error(error);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * Extend an event with additional view-specific methods.\\n   * Adds a new property ('vega') to an event that provides a number\\n   * of methods for querying information about the current interaction.\\n   * The vega object provides the following methods:\\n   *   view - Returns the backing View instance.\\n   *   item - Returns the currently active scenegraph item (if any).\\n   *   group - Returns the currently active scenegraph group (if any).\\n   *     This method accepts a single string-typed argument indicating the name\\n   *     of the desired parent group. The scenegraph will be traversed from\\n   *     the item up towards the root to search for a matching group. If no\\n   *     argument is provided the enclosing group for the active item is\\n   *     returned, unless the item it itself a group, in which case it is\\n   *     returned directly.\\n   *   xy - Returns a two-element array containing the x and y coordinates for\\n   *     mouse or touch events. For touch events, this is based on the first\\n   *     elements in the changedTouches array. This method accepts a single\\n   *     argument: either an item instance or mark name that should serve as\\n   *     the reference coordinate system. If no argument is provided the\\n   *     top-level view coordinate system is assumed.\\n   *   x - Returns the current x-coordinate, accepts the same arguments as xy.\\n   *   y - Returns the current y-coordinate, accepts the same arguments as xy.\\n   * @param {Event} event - The input event to extend.\\n   * @param {Item} item - The currently active scenegraph item (if any).\\n   * @return {Event} - The extended input event.\\n   */\\n\\n  function eventExtend (view, event, item) {\\n    var r = view._renderer,\\n        el = r && r.canvas(),\\n        p,\\n        e,\\n        translate;\\n\\n    if (el) {\\n      translate = offset(view);\\n      e = event.changedTouches ? event.changedTouches[0] : event;\\n      p = vegaScenegraph.point(e, el);\\n      p[0] -= translate[0];\\n      p[1] -= translate[1];\\n    }\\n\\n    event.dataflow = view;\\n    event.item = item;\\n    event.vega = extension(view, item, p);\\n    return event;\\n  }\\n\\n  function extension(view, item, point) {\\n    const itemGroup = item ? item.mark.marktype === 'group' ? item : item.mark.group : null;\\n\\n    function group(name) {\\n      var g = itemGroup,\\n          i;\\n      if (name) for (i = item; i; i = i.mark.group) {\\n        if (i.mark.name === name) {\\n          g = i;\\n          break;\\n        }\\n      }\\n      return g && g.mark && g.mark.interactive ? g : {};\\n    }\\n\\n    function xy(item) {\\n      if (!item) return point;\\n      if (vegaUtil.isString(item)) item = group(item);\\n      const p = point.slice();\\n\\n      while (item) {\\n        p[0] -= item.x || 0;\\n        p[1] -= item.y || 0;\\n        item = item.mark && item.mark.group;\\n      }\\n\\n      return p;\\n    }\\n\\n    return {\\n      view: vegaUtil.constant(view),\\n      item: vegaUtil.constant(item || {}),\\n      group: group,\\n      xy: xy,\\n      x: item => xy(item)[0],\\n      y: item => xy(item)[1]\\n    };\\n  }\\n\\n  const VIEW = 'view',\\n        TIMER = 'timer',\\n        WINDOW = 'window',\\n        NO_TRAP = {\\n    trap: false\\n  };\\n  /**\\n   * Initialize event handling configuration.\\n   * @param {object} config - The configuration settings.\\n   * @return {object}\\n   */\\n\\n  function initializeEventConfig(config) {\\n    const events = vegaUtil.extend({\\n      defaults: {}\\n    }, config);\\n\\n    const unpack = (obj, keys) => {\\n      keys.forEach(k => {\\n        if (vegaUtil.isArray(obj[k])) obj[k] = vegaUtil.toSet(obj[k]);\\n      });\\n    };\\n\\n    unpack(events.defaults, ['prevent', 'allow']);\\n    unpack(events, ['view', 'window', 'selector']);\\n    return events;\\n  }\\n  function trackEventListener(view, sources, type, handler) {\\n    view._eventListeners.push({\\n      type: type,\\n      sources: vegaUtil.array(sources),\\n      handler: handler\\n    });\\n  }\\n\\n  function prevent(view, type) {\\n    var def = view._eventConfig.defaults,\\n        prevent = def.prevent,\\n        allow = def.allow;\\n    return prevent === false || allow === true ? false : prevent === true || allow === false ? true : prevent ? prevent[type] : allow ? !allow[type] : view.preventDefault();\\n  }\\n\\n  function permit(view, key, type) {\\n    const rule = view._eventConfig && view._eventConfig[key];\\n\\n    if (rule === false || vegaUtil.isObject(rule) && !rule[type]) {\\n      view.warn(`Blocked ${key} ${type} event listener.`);\\n      return false;\\n    }\\n\\n    return true;\\n  }\\n  /**\\n   * Create a new event stream from an event source.\\n   * @param {object} source - The event source to monitor.\\n   * @param {string} type - The event type.\\n   * @param {function(object): boolean} [filter] - Event filter function.\\n   * @return {EventStream}\\n   */\\n\\n\\n  function events(source, type, filter) {\\n    var view = this,\\n        s = new vegaDataflow.EventStream(filter),\\n        send = function (e, item) {\\n      view.runAsync(null, () => {\\n        if (source === VIEW && prevent(view, type)) {\\n          e.preventDefault();\\n        }\\n\\n        s.receive(eventExtend(view, e, item));\\n      });\\n    },\\n        sources;\\n\\n    if (source === TIMER) {\\n      if (permit(view, 'timer', type)) {\\n        view.timer(send, type);\\n      }\\n    } else if (source === VIEW) {\\n      if (permit(view, 'view', type)) {\\n        // send traps errors, so use {trap: false} option\\n        view.addEventListener(type, send, NO_TRAP);\\n      }\\n    } else {\\n      if (source === WINDOW) {\\n        if (permit(view, 'window', type) && typeof window !== 'undefined') {\\n          sources = [window];\\n        }\\n      } else if (typeof document !== 'undefined') {\\n        if (permit(view, 'selector', type)) {\\n          sources = document.querySelectorAll(source);\\n        }\\n      }\\n\\n      if (!sources) {\\n        view.warn('Can not resolve event source: ' + source);\\n      } else {\\n        for (var i = 0, n = sources.length; i < n; ++i) {\\n          sources[i].addEventListener(type, send);\\n        }\\n\\n        trackEventListener(view, sources, type, send);\\n      }\\n    }\\n\\n    return s;\\n  }\\n\\n  function itemFilter(event) {\\n    return event.item;\\n  }\\n\\n  function markTarget(event) {\\n    // grab upstream collector feeding the mark operator\\n    return event.item.mark.source;\\n  }\\n\\n  function invoke(name) {\\n    return function (_, event) {\\n      return event.vega.view().changeset().encode(event.item, name);\\n    };\\n  }\\n\\n  function hover (hoverSet, leaveSet) {\\n    hoverSet = [hoverSet || 'hover'];\\n    leaveSet = [leaveSet || 'update', hoverSet[0]]; // invoke hover set upon mouseover\\n\\n    this.on(this.events('view', 'mouseover', itemFilter), markTarget, invoke(hoverSet)); // invoke leave set upon mouseout\\n\\n    this.on(this.events('view', 'mouseout', itemFilter), markTarget, invoke(leaveSet));\\n    return this;\\n  }\\n\\n  /**\\n   * Finalize a View instance that is being removed.\\n   * Cancel any running timers.\\n   * Remove all external event listeners.\\n   * Remove any currently displayed tooltip.\\n   */\\n  function finalize () {\\n    var tooltip = this._tooltip,\\n        timers = this._timers,\\n        listeners = this._eventListeners,\\n        n,\\n        m,\\n        e;\\n    n = timers.length;\\n\\n    while (--n >= 0) {\\n      timers[n].stop();\\n    }\\n\\n    n = listeners.length;\\n\\n    while (--n >= 0) {\\n      e = listeners[n];\\n      m = e.sources.length;\\n\\n      while (--m >= 0) {\\n        e.sources[m].removeEventListener(e.type, e.handler);\\n      }\\n    }\\n\\n    if (tooltip) {\\n      tooltip.call(this, this._handler, null, null, null);\\n    }\\n\\n    return this;\\n  }\\n\\n  function element (tag, attr, text) {\\n    const el = document.createElement(tag);\\n\\n    for (const key in attr) el.setAttribute(key, attr[key]);\\n\\n    if (text != null) el.textContent = text;\\n    return el;\\n  }\\n\\n  const BindClass = 'vega-bind',\\n        NameClass = 'vega-bind-name',\\n        RadioClass = 'vega-bind-radio';\\n  /**\\n   * Bind a signal to an external HTML input element. The resulting two-way\\n   * binding will propagate input changes to signals, and propagate signal\\n   * changes to the input element state. If this view instance has no parent\\n   * element, we assume the view is headless and no bindings are created.\\n   * @param {Element|string} el - The parent DOM element to which the input\\n   *   element should be appended as a child. If string-valued, this argument\\n   *   will be treated as a CSS selector. If null or undefined, the parent\\n   *   element of this view will be used as the element.\\n   * @param {object} param - The binding parameters which specify the signal\\n   *   to bind to, the input element type, and type-specific configuration.\\n   * @return {View} - This view instance.\\n   */\\n\\n  function bind (view, el, binding) {\\n    if (!el) return;\\n    const param = binding.param;\\n    let bind = binding.state;\\n\\n    if (!bind) {\\n      bind = binding.state = {\\n        elements: null,\\n        active: false,\\n        set: null,\\n        update: value => {\\n          if (value != view.signal(param.signal)) {\\n            view.runAsync(null, () => {\\n              bind.source = true;\\n              view.signal(param.signal, value);\\n            });\\n          }\\n        }\\n      };\\n\\n      if (param.debounce) {\\n        bind.update = vegaUtil.debounce(param.debounce, bind.update);\\n      }\\n    }\\n\\n    const create = param.input == null && param.element ? target : generate;\\n    create(bind, el, param, view);\\n\\n    if (!bind.active) {\\n      view.on(view._signals[param.signal], null, () => {\\n        bind.source ? bind.source = false : bind.set(view.signal(param.signal));\\n      });\\n      bind.active = true;\\n    }\\n\\n    return bind;\\n  }\\n  /**\\n   * Bind the signal to an external EventTarget.\\n   */\\n\\n  function target(bind, node, param, view) {\\n    const type = param.event || 'input';\\n\\n    const handler = () => bind.update(node.value); // initialize signal value to external input value\\n\\n\\n    view.signal(param.signal, node.value); // listen for changes on the element\\n\\n    node.addEventListener(type, handler); // register with view, so we can remove it upon finalization\\n\\n    trackEventListener(view, node, type, handler); // propagate change to element\\n\\n    bind.set = value => {\\n      node.value = value;\\n      node.dispatchEvent(event(type));\\n    };\\n  }\\n\\n  function event(type) {\\n    return typeof Event !== 'undefined' ? new Event(type) : {\\n      type\\n    };\\n  }\\n  /**\\n   * Generate an HTML input form element and bind it to a signal.\\n   */\\n\\n\\n  function generate(bind, el, param, view) {\\n    const value = view.signal(param.signal);\\n    const div = element('div', {\\n      'class': BindClass\\n    });\\n    const wrapper = param.input === 'radio' ? div : div.appendChild(element('label'));\\n    wrapper.appendChild(element('span', {\\n      'class': NameClass\\n    }, param.name || param.signal));\\n    el.appendChild(div);\\n    let input = form;\\n\\n    switch (param.input) {\\n      case 'checkbox':\\n        input = checkbox;\\n        break;\\n\\n      case 'select':\\n        input = select;\\n        break;\\n\\n      case 'radio':\\n        input = radio;\\n        break;\\n\\n      case 'range':\\n        input = range;\\n        break;\\n    }\\n\\n    input(bind, wrapper, param, value);\\n  }\\n  /**\\n   * Generates an arbitrary input form element.\\n   * The input type is controlled via user-provided parameters.\\n   */\\n\\n\\n  function form(bind, el, param, value) {\\n    const node = element('input');\\n\\n    for (const key in param) {\\n      if (key !== 'signal' && key !== 'element') {\\n        node.setAttribute(key === 'input' ? 'type' : key, param[key]);\\n      }\\n    }\\n\\n    node.setAttribute('name', param.signal);\\n    node.value = value;\\n    el.appendChild(node);\\n    node.addEventListener('input', () => bind.update(node.value));\\n    bind.elements = [node];\\n\\n    bind.set = value => node.value = value;\\n  }\\n  /**\\n   * Generates a checkbox input element.\\n   */\\n\\n\\n  function checkbox(bind, el, param, value) {\\n    const attr = {\\n      type: 'checkbox',\\n      name: param.signal\\n    };\\n    if (value) attr.checked = true;\\n    const node = element('input', attr);\\n    el.appendChild(node);\\n    node.addEventListener('change', () => bind.update(node.checked));\\n    bind.elements = [node];\\n\\n    bind.set = value => node.checked = !!value || null;\\n  }\\n  /**\\n   * Generates a selection list input element.\\n   */\\n\\n\\n  function select(bind, el, param, value) {\\n    const node = element('select', {\\n      name: param.signal\\n    }),\\n          labels = param.labels || [];\\n    param.options.forEach((option, i) => {\\n      const attr = {\\n        value: option\\n      };\\n      if (valuesEqual(option, value)) attr.selected = true;\\n      node.appendChild(element('option', attr, (labels[i] || option) + ''));\\n    });\\n    el.appendChild(node);\\n    node.addEventListener('change', () => {\\n      bind.update(param.options[node.selectedIndex]);\\n    });\\n    bind.elements = [node];\\n\\n    bind.set = value => {\\n      for (let i = 0, n = param.options.length; i < n; ++i) {\\n        if (valuesEqual(param.options[i], value)) {\\n          node.selectedIndex = i;\\n          return;\\n        }\\n      }\\n    };\\n  }\\n  /**\\n   * Generates a radio button group.\\n   */\\n\\n\\n  function radio(bind, el, param, value) {\\n    const group = element('span', {\\n      'class': RadioClass\\n    }),\\n          labels = param.labels || [];\\n    el.appendChild(group);\\n    bind.elements = param.options.map((option, i) => {\\n      const attr = {\\n        type: 'radio',\\n        name: param.signal,\\n        value: option\\n      };\\n      if (valuesEqual(option, value)) attr.checked = true;\\n      const input = element('input', attr);\\n      input.addEventListener('change', () => bind.update(option));\\n      const label = element('label', {}, (labels[i] || option) + '');\\n      label.prepend(input);\\n      group.appendChild(label);\\n      return input;\\n    });\\n\\n    bind.set = value => {\\n      const nodes = bind.elements,\\n            n = nodes.length;\\n\\n      for (let i = 0; i < n; ++i) {\\n        if (valuesEqual(nodes[i].value, value)) nodes[i].checked = true;\\n      }\\n    };\\n  }\\n  /**\\n   * Generates a slider input element.\\n   */\\n\\n\\n  function range(bind, el, param, value) {\\n    value = value !== undefined ? value : (+param.max + +param.min) / 2;\\n    const max = param.max != null ? param.max : Math.max(100, +value) || 100,\\n          min = param.min || Math.min(0, max, +value) || 0,\\n          step = param.step || d3Array.tickStep(min, max, 100);\\n    const node = element('input', {\\n      type: 'range',\\n      name: param.signal,\\n      min: min,\\n      max: max,\\n      step: step\\n    });\\n    node.value = value;\\n    const span = element('span', {}, +value);\\n    el.appendChild(node);\\n    el.appendChild(span);\\n\\n    const update = () => {\\n      span.textContent = node.value;\\n      bind.update(+node.value);\\n    }; // subscribe to both input and change\\n\\n\\n    node.addEventListener('input', update);\\n    node.addEventListener('change', update);\\n    bind.elements = [node];\\n\\n    bind.set = value => {\\n      node.value = value;\\n      span.textContent = value;\\n    };\\n  }\\n\\n  function valuesEqual(a, b) {\\n    return a === b || a + '' === b + '';\\n  }\\n\\n  function initializeRenderer (view, r, el, constructor, scaleFactor, opt) {\\n    r = r || new constructor(view.loader());\\n    return r.initialize(el, width(view), height(view), offset(view), scaleFactor, opt).background(view.background());\\n  }\\n\\n  function trap (view, fn) {\\n    return !fn ? null : function () {\\n      try {\\n        fn.apply(this, arguments);\\n      } catch (error) {\\n        view.error(error);\\n      }\\n    };\\n  }\\n\\n  function initializeHandler (view, prevHandler, el, constructor) {\\n    // instantiate scenegraph handler\\n    const handler = new constructor(view.loader(), trap(view, view.tooltip())).scene(view.scenegraph().root).initialize(el, offset(view), view); // transfer event handlers\\n\\n    if (prevHandler) {\\n      prevHandler.handlers().forEach(h => {\\n        handler.on(h.type, h.handler);\\n      });\\n    }\\n\\n    return handler;\\n  }\\n\\n  function initialize (el, elBind) {\\n    const view = this,\\n          type = view._renderType,\\n          config = view._eventConfig.bind,\\n          module = vegaScenegraph.renderModule(type); // containing dom element\\n\\n    el = view._el = el ? lookup(view, el, true) : null; // initialize aria attributes\\n\\n    initializeAria(view); // select appropriate renderer & handler\\n\\n    if (!module) view.error('Unrecognized renderer type: ' + type);\\n    const Handler = module.handler || vegaScenegraph.CanvasHandler,\\n          Renderer = el ? module.renderer : module.headless; // initialize renderer and input handler\\n\\n    view._renderer = !Renderer ? null : initializeRenderer(view, view._renderer, el, Renderer);\\n    view._handler = initializeHandler(view, view._handler, el, Handler);\\n    view._redraw = true; // initialize signal bindings\\n\\n    if (el && config !== 'none') {\\n      elBind = elBind ? view._elBind = lookup(view, elBind, true) : el.appendChild(element('form', {\\n        'class': 'vega-bindings'\\n      }));\\n\\n      view._bind.forEach(_ => {\\n        if (_.param.element && config !== 'container') {\\n          _.element = lookup(view, _.param.element, !!_.param.input);\\n        }\\n      });\\n\\n      view._bind.forEach(_ => {\\n        bind(view, _.element || elBind, _);\\n      });\\n    }\\n\\n    return view;\\n  }\\n\\n  function lookup(view, el, clear) {\\n    if (typeof el === 'string') {\\n      if (typeof document !== 'undefined') {\\n        el = document.querySelector(el);\\n\\n        if (!el) {\\n          view.error('Signal bind element not found: ' + el);\\n          return null;\\n        }\\n      } else {\\n        view.error('DOM document instance not found.');\\n        return null;\\n      }\\n    }\\n\\n    if (el && clear) {\\n      try {\\n        el.innerHTML = '';\\n      } catch (e) {\\n        el = null;\\n        view.error(e);\\n      }\\n    }\\n\\n    return el;\\n  }\\n\\n  const number = _ => +_ || 0;\\n\\n  const paddingObject = _ => ({\\n    top: _,\\n    bottom: _,\\n    left: _,\\n    right: _\\n  });\\n\\n  function padding (_) {\\n    return vegaUtil.isObject(_) ? {\\n      top: number(_.top),\\n      bottom: number(_.bottom),\\n      left: number(_.left),\\n      right: number(_.right)\\n    } : paddingObject(number(_));\\n  }\\n\\n  /**\\n   * Render the current scene in a headless fashion.\\n   * This method is asynchronous, returning a Promise instance.\\n   * @return {Promise} - A Promise that resolves to a renderer.\\n   */\\n\\n  async function renderHeadless (view, type, scaleFactor, opt) {\\n    const module = vegaScenegraph.renderModule(type),\\n          ctr = module && module.headless;\\n    if (!ctr) vegaUtil.error('Unrecognized renderer type: ' + type);\\n    await view.runAsync();\\n    return initializeRenderer(view, null, null, ctr, scaleFactor, opt).renderAsync(view._scenegraph.root);\\n  }\\n\\n  /**\\n   * Produce an image URL for the visualization. Depending on the type\\n   * parameter, the generated URL contains data for either a PNG or SVG image.\\n   * The URL can be used (for example) to download images of the visualization.\\n   * This method is asynchronous, returning a Promise instance.\\n   * @param {string} type - The image type. One of 'svg', 'png' or 'canvas'.\\n   *   The 'canvas' and 'png' types are synonyms for a PNG image.\\n   * @return {Promise} - A promise that resolves to an image URL.\\n   */\\n\\n  async function renderToImageURL (type, scaleFactor) {\\n    if (type !== vegaScenegraph.RenderType.Canvas && type !== vegaScenegraph.RenderType.SVG && type !== vegaScenegraph.RenderType.PNG) {\\n      vegaUtil.error('Unrecognized image type: ' + type);\\n    }\\n\\n    const r = await renderHeadless(this, type, scaleFactor);\\n    return type === vegaScenegraph.RenderType.SVG ? toBlobURL(r.svg(), 'image/svg+xml') : r.canvas().toDataURL('image/png');\\n  }\\n\\n  function toBlobURL(data, mime) {\\n    const blob = new Blob([data], {\\n      type: mime\\n    });\\n    return window.URL.createObjectURL(blob);\\n  }\\n\\n  /**\\n   * Produce a Canvas instance containing a rendered visualization.\\n   * This method is asynchronous, returning a Promise instance.\\n   * @return {Promise} - A promise that resolves to a Canvas instance.\\n   */\\n\\n  async function renderToCanvas (scaleFactor, opt) {\\n    const r = await renderHeadless(this, vegaScenegraph.RenderType.Canvas, scaleFactor, opt);\\n    return r.canvas();\\n  }\\n\\n  /**\\n   * Produce a rendered SVG string of the visualization.\\n   * This method is asynchronous, returning a Promise instance.\\n   * @return {Promise} - A promise that resolves to an SVG string.\\n   */\\n\\n  async function renderToSVG (scaleFactor) {\\n    const r = await renderHeadless(this, vegaScenegraph.RenderType.SVG, scaleFactor);\\n    return r.svg();\\n  }\\n\\n  function runtime (view, spec, expr) {\\n    return vegaRuntime.context(view, vegaDataflow.transforms, vegaFunctions.functionContext, expr).parse(spec);\\n  }\\n\\n  function scale(name) {\\n    var scales = this._runtime.scales;\\n\\n    if (!vegaUtil.hasOwnProperty(scales, name)) {\\n      vegaUtil.error('Unrecognized scale or projection: ' + name);\\n    }\\n\\n    return scales[name].value;\\n  }\\n\\n  var Width = 'width',\\n      Height = 'height',\\n      Padding = 'padding',\\n      Skip = {\\n    skip: true\\n  };\\n  function viewWidth(view, width) {\\n    var a = view.autosize(),\\n        p = view.padding();\\n    return width - (a && a.contains === Padding ? p.left + p.right : 0);\\n  }\\n  function viewHeight(view, height) {\\n    var a = view.autosize(),\\n        p = view.padding();\\n    return height - (a && a.contains === Padding ? p.top + p.bottom : 0);\\n  }\\n  function initializeResize(view) {\\n    var s = view._signals,\\n        w = s[Width],\\n        h = s[Height],\\n        p = s[Padding];\\n\\n    function resetSize() {\\n      view._autosize = view._resize = 1;\\n    } // respond to width signal\\n\\n\\n    view._resizeWidth = view.add(null, _ => {\\n      view._width = _.size;\\n      view._viewWidth = viewWidth(view, _.size);\\n      resetSize();\\n    }, {\\n      size: w\\n    }); // respond to height signal\\n\\n    view._resizeHeight = view.add(null, _ => {\\n      view._height = _.size;\\n      view._viewHeight = viewHeight(view, _.size);\\n      resetSize();\\n    }, {\\n      size: h\\n    }); // respond to padding signal\\n\\n    const resizePadding = view.add(null, resetSize, {\\n      pad: p\\n    }); // set rank to run immediately after source signal\\n\\n    view._resizeWidth.rank = w.rank + 1;\\n    view._resizeHeight.rank = h.rank + 1;\\n    resizePadding.rank = p.rank + 1;\\n  }\\n  function resizeView(viewWidth, viewHeight, width, height, origin, auto) {\\n    this.runAfter(view => {\\n      let rerun = 0; // reset autosize flag\\n\\n      view._autosize = 0; // width value changed: update signal, skip resize op\\n\\n      if (view.width() !== width) {\\n        rerun = 1;\\n        view.signal(Width, width, Skip); // set width, skip update calc\\n\\n        view._resizeWidth.skip(true); // skip width resize handler\\n\\n      } // height value changed: update signal, skip resize op\\n\\n\\n      if (view.height() !== height) {\\n        rerun = 1;\\n        view.signal(Height, height, Skip); // set height, skip update calc\\n\\n        view._resizeHeight.skip(true); // skip height resize handler\\n\\n      } // view width changed: update view property, set resize flag\\n\\n\\n      if (view._viewWidth !== viewWidth) {\\n        view._resize = 1;\\n        view._viewWidth = viewWidth;\\n      } // view height changed: update view property, set resize flag\\n\\n\\n      if (view._viewHeight !== viewHeight) {\\n        view._resize = 1;\\n        view._viewHeight = viewHeight;\\n      } // origin changed: update view property, set resize flag\\n\\n\\n      if (view._origin[0] !== origin[0] || view._origin[1] !== origin[1]) {\\n        view._resize = 1;\\n        view._origin = origin;\\n      } // run dataflow on width/height signal change\\n\\n\\n      if (rerun) view.run('enter');\\n      if (auto) view.runAfter(v => v.resize());\\n    }, false, 1);\\n  }\\n\\n  /**\\n   * Get the current view state, consisting of signal values and/or data sets.\\n   * @param {object} [options] - Options flags indicating which state to export.\\n   *   If unspecified, all signals and data sets will be exported.\\n   * @param {function(string, Operator):boolean} [options.signals] - Optional\\n   *   predicate function for testing if a signal should be included in the\\n   *   exported state. If unspecified, all signals will be included, except for\\n   *   those named 'parent' or those which refer to a Transform value.\\n   * @param {function(string, object):boolean} [options.data] - Optional\\n   *   predicate function for testing if a data set's input should be included\\n   *   in the exported state. If unspecified, all data sets that have been\\n   *   explicitly modified will be included.\\n   * @param {boolean} [options.recurse=true] - Flag indicating if the exported\\n   *   state should recursively include state from group mark sub-contexts.\\n   * @return {object} - An object containing the exported state values.\\n   */\\n\\n  function getState(options) {\\n    return this._runtime.getState(options || {\\n      data: dataTest,\\n      signals: signalTest,\\n      recurse: true\\n    });\\n  }\\n\\n  function dataTest(name, data) {\\n    return data.modified && vegaUtil.isArray(data.input.value) && name.indexOf('_:vega:_');\\n  }\\n\\n  function signalTest(name, op) {\\n    return !(name === 'parent' || op instanceof vegaDataflow.transforms.proxy);\\n  }\\n  /**\\n   * Sets the current view state and updates the view by invoking run.\\n   * @param {object} state - A state object containing signal and/or\\n   *   data set values, following the format used by the getState method.\\n   * @return {View} - This view instance.\\n   */\\n\\n\\n  function setState(state) {\\n    this.runAsync(null, v => {\\n      v._trigger = false;\\n\\n      v._runtime.setState(state);\\n    }, v => {\\n      v._trigger = true;\\n    });\\n    return this;\\n  }\\n\\n  function timer (callback, delay) {\\n    function tick(elapsed) {\\n      callback({\\n        timestamp: Date.now(),\\n        elapsed: elapsed\\n      });\\n    }\\n\\n    this._timers.push(d3Timer.interval(tick, delay));\\n  }\\n\\n  function defaultTooltip (handler, event, item, value) {\\n    const el = handler.element();\\n    if (el) el.setAttribute('title', formatTooltip(value));\\n  }\\n\\n  function formatTooltip(value) {\\n    return value == null ? '' : vegaUtil.isArray(value) ? formatArray(value) : vegaUtil.isObject(value) && !vegaUtil.isDate(value) ? formatObject(value) : value + '';\\n  }\\n\\n  function formatObject(obj) {\\n    return Object.keys(obj).map(key => {\\n      const v = obj[key];\\n      return key + ': ' + (vegaUtil.isArray(v) ? formatArray(v) : formatValue(v));\\n    }).join('\\\\n');\\n  }\\n\\n  function formatArray(value) {\\n    return '[' + value.map(formatValue).join(', ') + ']';\\n  }\\n\\n  function formatValue(value) {\\n    return vegaUtil.isArray(value) ? '[\\\\u2026]' : vegaUtil.isObject(value) && !vegaUtil.isDate(value) ? '{\\\\u2026}' : value;\\n  }\\n\\n  /**\\n   * Create a new View instance from a Vega dataflow runtime specification.\\n   * The generated View will not immediately be ready for display. Callers\\n   * should also invoke the initialize method (e.g., to set the parent\\n   * DOM element in browser-based deployment) and then invoke the run\\n   * method to evaluate the dataflow graph. Rendering will automatically\\n   * be performed upon dataflow runs.\\n   * @constructor\\n   * @param {object} spec - The Vega dataflow runtime specification.\\n   */\\n\\n  function View(spec, options) {\\n    const view = this;\\n    options = options || {};\\n    vegaDataflow.Dataflow.call(view);\\n    if (options.loader) view.loader(options.loader);\\n    if (options.logger) view.logger(options.logger);\\n    if (options.logLevel != null) view.logLevel(options.logLevel);\\n\\n    if (options.locale || spec.locale) {\\n      const loc = vegaUtil.extend({}, spec.locale, options.locale);\\n      view.locale(vegaFormat.locale(loc.number, loc.time));\\n    }\\n\\n    view._el = null;\\n    view._elBind = null;\\n    view._renderType = options.renderer || vegaScenegraph.RenderType.Canvas;\\n    view._scenegraph = new vegaScenegraph.Scenegraph();\\n    const root = view._scenegraph.root; // initialize renderer, handler and event management\\n\\n    view._renderer = null;\\n    view._tooltip = options.tooltip || defaultTooltip, view._redraw = true;\\n    view._handler = new vegaScenegraph.CanvasHandler().scene(root);\\n    view._globalCursor = false;\\n    view._preventDefault = false;\\n    view._timers = [];\\n    view._eventListeners = [];\\n    view._resizeListeners = []; // initialize event configuration\\n\\n    view._eventConfig = initializeEventConfig(spec.eventConfig);\\n    view.globalCursor(view._eventConfig.globalCursor); // initialize dataflow graph\\n\\n    const ctx = runtime(view, spec, options.expr);\\n    view._runtime = ctx;\\n    view._signals = ctx.signals;\\n    view._bind = (spec.bindings || []).map(_ => ({\\n      state: null,\\n      param: vegaUtil.extend({}, _)\\n    })); // initialize scenegraph\\n\\n    if (ctx.root) ctx.root.set(root);\\n    root.source = ctx.data.root.input;\\n    view.pulse(ctx.data.root.input, view.changeset().insert(root.items)); // initialize view size\\n\\n    view._width = view.width();\\n    view._height = view.height();\\n    view._viewWidth = viewWidth(view, view._width);\\n    view._viewHeight = viewHeight(view, view._height);\\n    view._origin = [0, 0];\\n    view._resize = 0;\\n    view._autosize = 1;\\n    initializeResize(view); // initialize background color\\n\\n    background(view); // initialize cursor\\n\\n    cursor(view); // initialize view description\\n\\n    view.description(spec.description); // initialize hover proessing, if requested\\n\\n    if (options.hover) view.hover(); // initialize DOM container(s) and renderer\\n\\n    if (options.container) view.initialize(options.container, options.bind);\\n  }\\n\\n  function lookupSignal(view, name) {\\n    return vegaUtil.hasOwnProperty(view._signals, name) ? view._signals[name] : vegaUtil.error('Unrecognized signal name: ' + vegaUtil.stringValue(name));\\n  }\\n\\n  function findOperatorHandler(op, handler) {\\n    const h = (op._targets || []).filter(op => op._update && op._update.handler === handler);\\n    return h.length ? h[0] : null;\\n  }\\n\\n  function addOperatorListener(view, name, op, handler) {\\n    let h = findOperatorHandler(op, handler);\\n\\n    if (!h) {\\n      h = trap(view, () => handler(name, op.value));\\n      h.handler = handler;\\n      view.on(op, null, h);\\n    }\\n\\n    return view;\\n  }\\n\\n  function removeOperatorListener(view, op, handler) {\\n    const h = findOperatorHandler(op, handler);\\n    if (h) op._targets.remove(h);\\n    return view;\\n  }\\n\\n  vegaUtil.inherits(View, vegaDataflow.Dataflow, {\\n    // -- DATAFLOW / RENDERING ----\\n    async evaluate(encode, prerun, postrun) {\\n      // evaluate dataflow and prerun\\n      await vegaDataflow.Dataflow.prototype.evaluate.call(this, encode, prerun); // render as needed\\n\\n      if (this._redraw || this._resize) {\\n        try {\\n          if (this._renderer) {\\n            if (this._resize) {\\n              this._resize = 0;\\n              resizeRenderer(this);\\n            }\\n\\n            await this._renderer.renderAsync(this._scenegraph.root);\\n          }\\n\\n          this._redraw = false;\\n        } catch (e) {\\n          this.error(e);\\n        }\\n      } // evaluate postrun\\n\\n\\n      if (postrun) vegaDataflow.asyncCallback(this, postrun);\\n      return this;\\n    },\\n\\n    dirty(item) {\\n      this._redraw = true;\\n      this._renderer && this._renderer.dirty(item);\\n    },\\n\\n    // -- GET / SET ----\\n    description(text) {\\n      if (arguments.length) {\\n        const desc = text != null ? text + '' : null;\\n        if (desc !== this._desc) ariaLabel(this._el, this._desc = desc);\\n        return this;\\n      }\\n\\n      return this._desc;\\n    },\\n\\n    container() {\\n      return this._el;\\n    },\\n\\n    scenegraph() {\\n      return this._scenegraph;\\n    },\\n\\n    origin() {\\n      return this._origin.slice();\\n    },\\n\\n    signal(name, value, options) {\\n      const op = lookupSignal(this, name);\\n      return arguments.length === 1 ? op.value : this.update(op, value, options);\\n    },\\n\\n    width(_) {\\n      return arguments.length ? this.signal('width', _) : this.signal('width');\\n    },\\n\\n    height(_) {\\n      return arguments.length ? this.signal('height', _) : this.signal('height');\\n    },\\n\\n    padding(_) {\\n      return arguments.length ? this.signal('padding', padding(_)) : padding(this.signal('padding'));\\n    },\\n\\n    autosize(_) {\\n      return arguments.length ? this.signal('autosize', _) : this.signal('autosize');\\n    },\\n\\n    background(_) {\\n      return arguments.length ? this.signal('background', _) : this.signal('background');\\n    },\\n\\n    renderer(type) {\\n      if (!arguments.length) return this._renderType;\\n      if (!vegaScenegraph.renderModule(type)) vegaUtil.error('Unrecognized renderer type: ' + type);\\n\\n      if (type !== this._renderType) {\\n        this._renderType = type;\\n\\n        this._resetRenderer();\\n      }\\n\\n      return this;\\n    },\\n\\n    tooltip(handler) {\\n      if (!arguments.length) return this._tooltip;\\n\\n      if (handler !== this._tooltip) {\\n        this._tooltip = handler;\\n\\n        this._resetRenderer();\\n      }\\n\\n      return this;\\n    },\\n\\n    loader(loader) {\\n      if (!arguments.length) return this._loader;\\n\\n      if (loader !== this._loader) {\\n        vegaDataflow.Dataflow.prototype.loader.call(this, loader);\\n\\n        this._resetRenderer();\\n      }\\n\\n      return this;\\n    },\\n\\n    resize() {\\n      // set flag to perform autosize\\n      this._autosize = 1; // touch autosize signal to ensure top-level ViewLayout runs\\n\\n      return this.touch(lookupSignal(this, 'autosize'));\\n    },\\n\\n    _resetRenderer() {\\n      if (this._renderer) {\\n        this._renderer = null;\\n        this.initialize(this._el, this._elBind);\\n      }\\n    },\\n\\n    // -- SIZING ----\\n    _resizeView: resizeView,\\n\\n    // -- EVENT HANDLING ----\\n    addEventListener(type, handler, options) {\\n      let callback = handler;\\n\\n      if (!(options && options.trap === false)) {\\n        // wrap callback in error handler\\n        callback = trap(this, handler);\\n        callback.raw = handler;\\n      }\\n\\n      this._handler.on(type, callback);\\n\\n      return this;\\n    },\\n\\n    removeEventListener(type, handler) {\\n      var handlers = this._handler.handlers(type),\\n          i = handlers.length,\\n          h,\\n          t; // search registered handlers, remove if match found\\n\\n\\n      while (--i >= 0) {\\n        t = handlers[i].type;\\n        h = handlers[i].handler;\\n\\n        if (type === t && (handler === h || handler === h.raw)) {\\n          this._handler.off(t, h);\\n\\n          break;\\n        }\\n      }\\n\\n      return this;\\n    },\\n\\n    addResizeListener(handler) {\\n      const l = this._resizeListeners;\\n\\n      if (l.indexOf(handler) < 0) {\\n        // add handler if it isn't already registered\\n        // note: error trapping handled elsewhere, so\\n        // no need to wrap handlers here\\n        l.push(handler);\\n      }\\n\\n      return this;\\n    },\\n\\n    removeResizeListener(handler) {\\n      var l = this._resizeListeners,\\n          i = l.indexOf(handler);\\n\\n      if (i >= 0) {\\n        l.splice(i, 1);\\n      }\\n\\n      return this;\\n    },\\n\\n    addSignalListener(name, handler) {\\n      return addOperatorListener(this, name, lookupSignal(this, name), handler);\\n    },\\n\\n    removeSignalListener(name, handler) {\\n      return removeOperatorListener(this, lookupSignal(this, name), handler);\\n    },\\n\\n    addDataListener(name, handler) {\\n      return addOperatorListener(this, name, dataref(this, name).values, handler);\\n    },\\n\\n    removeDataListener(name, handler) {\\n      return removeOperatorListener(this, dataref(this, name).values, handler);\\n    },\\n\\n    globalCursor(_) {\\n      if (arguments.length) {\\n        if (this._globalCursor !== !!_) {\\n          const prev = setCursor(this, null); // clear previous cursor\\n\\n          this._globalCursor = !!_;\\n          if (prev) setCursor(this, prev); // swap cursor\\n        }\\n\\n        return this;\\n      } else {\\n        return this._globalCursor;\\n      }\\n    },\\n\\n    preventDefault(_) {\\n      if (arguments.length) {\\n        this._preventDefault = _;\\n        return this;\\n      } else {\\n        return this._preventDefault;\\n      }\\n    },\\n\\n    timer,\\n    events,\\n    finalize,\\n    hover,\\n    // -- DATA ----\\n    data,\\n    change,\\n    insert,\\n    remove,\\n    // -- SCALES --\\n    scale,\\n    // -- INITIALIZATION ----\\n    initialize,\\n    // -- HEADLESS RENDERING ----\\n    toImageURL: renderToImageURL,\\n    toCanvas: renderToCanvas,\\n    toSVG: renderToSVG,\\n    // -- SAVE / RESTORE STATE ----\\n    getState,\\n    setState\\n  });\\n\\n  exports.View = View;\\n\\n  Object.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"globalThis\",\"self\",\"vega\",\"d3\",\"vegaUtil\",\"vegaDataflow\",\"vegaScenegraph\",\"d3Array\",\"vegaFunctions\",\"vegaRuntime\",\"d3Timer\",\"vegaFormat\",\"initializeAria\",\"view\",\"el\",\"container\",\"setAttribute\",\"ariaLabel\",\"description\",\"desc\",\"removeAttribute\",\"background\",\"add\",\"_\",\"_background\",\"bg\",\"_resize\",\"_signals\",\"cursor\",\"user\",\"Default\",\"item\",\"on\",\"events\",\"event\",\"value\",\"isString\",\"setCursor\",\"globalCursor\",\"document\",\"body\",\"style\",\"removeProperty\",\"dataref\",\"name\",\"data\",\"_runtime\",\"hasOwnProperty\",\"error\",\"change\",\"changes\",\"isChangeSet\",\"dataset\",\"modified\",\"pulse\",\"input\",\"width\",\"padding\",\"Math\",\"max\",\"_viewWidth\",\"left\",\"right\",\"height\",\"_viewHeight\",\"top\",\"bottom\",\"offset\",\"origin\",\"_origin\",\"resizeRenderer\",\"w\",\"h\",\"_renderer\",\"resize\",\"_handler\",\"_resizeListeners\",\"forEach\",\"handler\",\"extension\",\"point\",\"group\",\"g\",\"itemGroup\",\"i\",\"mark\",\"interactive\",\"xy\",\"p\",\"slice\",\"x\",\"y\",\"marktype\",\"constant\",\"initializeEventConfig\",\"config\",\"extend\",\"defaults\",\"unpack\",\"obj\",\"keys\",\"k\",\"isArray\",\"toSet\",\"trackEventListener\",\"sources\",\"type\",\"_eventListeners\",\"push\",\"array\",\"permit\",\"key\",\"rule\",\"_eventConfig\",\"isObject\",\"warn\",\"itemFilter\",\"markTarget\",\"source\",\"invoke\",\"changeset\",\"encode\",\"element\",\"tag\",\"attr\",\"text\",\"createElement\",\"textContent\",\"bind\",\"binding\",\"param\",\"state\",\"elements\",\"active\",\"set\",\"update\",\"signal\",\"runAsync\",\"debounce\",\"create\",\"target\",\"generate\",\"node\",\"addEventListener\",\"bind.set\",\"dispatchEvent\",\"Event\",\"div\",\"BindClass\",\"wrapper\",\"appendChild\",\"NameClass\",\"form\",\"checkbox\",\"select\",\"radio\",\"range\",\"checked\",\"labels\",\"options\",\"option\",\"valuesEqual\",\"selected\",\"selectedIndex\",\"n\",\"length\",\"RadioClass\",\"map\",\"label\",\"prepend\",\"nodes\",\"undefined\",\"min\",\"step\",\"tickStep\",\"span\",\"a\",\"b\",\"initializeRenderer\",\"r\",\"constructor\",\"scaleFactor\",\"opt\",\"loader\",\"initialize\",\"trap\",\"fn\",\"apply\",\"arguments\",\"initializeHandler\",\"prevHandler\",\"scene\",\"tooltip\",\"scenegraph\",\"root\",\"handlers\",\"lookup\",\"clear\",\"querySelector\",\"innerHTML\",\"e\",\"renderHeadless\",\"renderModule\",\"ctr\",\"headless\",\"renderAsync\",\"_scenegraph\",\"runtime\",\"spec\",\"expr\",\"context\",\"transforms\",\"functionContext\",\"parse\",\"viewWidth\",\"autosize\",\"Padding\",\"contains\",\"viewHeight\",\"initializeResize\",\"resetSize\",\"_autosize\",\"s\",\"_resizeWidth\",\"_width\",\"size\",\"_resizeHeight\",\"_height\",\"resizePadding\",\"pad\",\"rank\",\"dataTest\",\"indexOf\",\"signalTest\",\"op\",\"proxy\",\"defaultTooltip\",\"formatValue\",\"join\",\"isDate\",\"formatObject\",\"Object\",\"v\",\"View\",\"Dataflow\",\"call\",\"logger\",\"logLevel\",\"locale\",\"loc\",\"number\",\"time\",\"_elBind\",\"_el\",\"_renderType\",\"renderer\",\"RenderType\",\"Canvas\",\"Scenegraph\",\"_tooltip\",\"_redraw\",\"CanvasHandler\",\"_preventDefault\",\"_globalCursor\",\"_timers\",\"eventConfig\",\"ctx\",\"signals\",\"_bind\",\"bindings\",\"insert\",\"items\",\"hover\",\"lookupSignal\",\"stringValue\",\"findOperatorHandler\",\"filter\",\"_targets\",\"_update\",\"addOperatorListener\",\"removeOperatorListener\",\"remove\",\"NO_TRAP\",\"Skip\",\"skip\",\"inherits\",\"evaluate\",\"prerun\",\"postrun\",\"prototype\",\"asyncCallback\",\"dirty\",\"_desc\",\"_resetRenderer\",\"_loader\",\"touch\",\"_resizeView\",\"resizeView\",\"auto\",\"runAfter\",\"rerun\",\"Width\",\"Height\",\"run\",\"callback\",\"raw\",\"removeEventListener\",\"t\",\"off\",\"addResizeListener\",\"l\",\"removeResizeListener\",\"splice\",\"addSignalListener\",\"removeSignalListener\",\"addDataListener\",\"values\",\"removeDataListener\",\"prev\",\"preventDefault\",\"timer\",\"delay\",\"interval\",\"tick\",\"elapsed\",\"timestamp\",\"Date\",\"now\",\"EventStream\",\"send\",\"def\",\"prevent\",\"allow\",\"receive\",\"canvas\",\"translate\",\"changedTouches\",\"dataflow\",\"TIMER\",\"VIEW\",\"WINDOW\",\"window\",\"querySelectorAll\",\"finalize\",\"timers\",\"listeners\",\"stop\",\"m\",\"hoverSet\",\"leaveSet\",\"truthy\",\"scale\",\"scales\",\"elBind\",\"Handler\",\"Renderer\",\"toImageURL\",\"renderToImageURL\",\"SVG\",\"PNG\",\"blob\",\"Blob\",\"mime\",\"URL\",\"createObjectURL\",\"toCanvas\",\"renderToCanvas\",\"toSVG\",\"renderToSVG\",\"svg\",\"getState\",\"recurse\",\"setState\",\"_trigger\",\"defineProperty\"]\n}\n"]