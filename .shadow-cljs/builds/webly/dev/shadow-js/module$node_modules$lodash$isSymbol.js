["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/isSymbol.js"],"~:js","shadow$provide.module$node_modules$lodash$isSymbol=function(global,require,module,exports){var baseGetTag=require(\"module$node_modules$lodash$_baseGetTag\"),isObjectLike=require(\"module$node_modules$lodash$isObjectLike\");module.exports=function(value){return\"symbol\"==typeof value||isObjectLike(value)&&\"[object Symbol]\"==baseGetTag(value)}}","~:source","shadow$provide[\"module$node_modules$lodash$isSymbol\"] = function(global,require,module,exports) {\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseGetTag","~$module$node_modules$lodash$isObjectLike","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1621210442076,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$isSymbol.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC5FC,WAAaH,OAAA,CAAQ,wCAAR,CAD+E,CAE5FI,aAAeJ,OAAA,CAAQ,yCAAR,CA2BnBC,OAAOC,CAAAA,OAAP,CALAG,QAAiB,CAACC,KAAD,CAAQ,CACvB,MAAuB,QAAvB,EAAO,MAAOA,MAAd,EACGF,YAAA,CAAaE,KAAb,CADH,EApBcC,iBAoBd,EAC0BJ,UAAA,CAAWG,KAAX,CAFH,CAxBuE;\",\n\"sources\":[\"node_modules/lodash/isSymbol.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$isSymbol\\\"] = function(global,require,module,exports) {\\nvar baseGetTag = require('./_baseGetTag'),\\n    isObjectLike = require('./isObjectLike');\\n\\n/** `Object#toString` result references. */\\nvar symbolTag = '[object Symbol]';\\n\\n/**\\n * Checks if `value` is classified as a `Symbol` primitive or object.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\\n * @example\\n *\\n * _.isSymbol(Symbol.iterator);\\n * // => true\\n *\\n * _.isSymbol('abc');\\n * // => false\\n */\\nfunction isSymbol(value) {\\n  return typeof value == 'symbol' ||\\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\\n}\\n\\nmodule.exports = isSymbol;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseGetTag\",\"isObjectLike\",\"isSymbol\",\"value\",\"symbolTag\"]\n}\n"]