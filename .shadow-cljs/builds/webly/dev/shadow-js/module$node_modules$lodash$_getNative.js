["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_getNative.js"],"~:js","shadow$provide.module$node_modules$lodash$_getNative=function(global,require,module,exports){var baseIsNative=require(\"module$node_modules$lodash$_baseIsNative\"),getValue=require(\"module$node_modules$lodash$_getValue\");module.exports=function(object,key){object=getValue(object,key);return baseIsNative(object)?object:void 0}}","~:source","shadow$provide[\"module$node_modules$lodash$_getNative\"] = function(global,require,module,exports) {\nvar baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseIsNative","~$shadow.js","~$module$node_modules$lodash$_getValue"]],"~:properties",["^5",[]],"~:compiled-at",1621210442014,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_getNative.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC9FC,aAAeH,OAAA,CAAQ,0CAAR,CAD+E,CAE9FI,SAAWJ,OAAA,CAAQ,sCAAR,CAefC,OAAOC,CAAAA,OAAP,CALAG,QAAkB,CAACC,MAAD,CAASC,GAAT,CAAc,CAC1BC,MAAAA,CAAQJ,QAAA,CAASE,MAAT,CAAiBC,GAAjB,CACZ,OAAOJ,aAAA,CAAaK,MAAb,CAAA,CAAsBA,MAAtB,CAA8BC,IAAAA,EAFP,CAZkE;\",\n\"sources\":[\"node_modules/lodash/_getNative.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_getNative\\\"] = function(global,require,module,exports) {\\nvar baseIsNative = require('./_baseIsNative'),\\n    getValue = require('./_getValue');\\n\\n/**\\n * Gets the native function at `key` of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {string} key The key of the method to get.\\n * @returns {*} Returns the function if it's native, else `undefined`.\\n */\\nfunction getNative(object, key) {\\n  var value = getValue(object, key);\\n  return baseIsNative(value) ? value : undefined;\\n}\\n\\nmodule.exports = getNative;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseIsNative\",\"getValue\",\"getNative\",\"object\",\"key\",\"value\",\"undefined\"]\n}\n"]