["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/uniqueId.js"],"~:js","shadow$provide.module$node_modules$lodash$uniqueId=function(global,require,module,exports){var toString=require(\"module$node_modules$lodash$toString\"),idCounter=0;module.exports=function(prefix){var id=++idCounter;return toString(prefix)+id}}","~:source","shadow$provide[\"module$node_modules$lodash$uniqueId\"] = function(global,require,module,exports) {\nvar toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$toString"]],"~:properties",["^5",[]],"~:compiled-at",1621210442114,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$uniqueId.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAChG,IAAIC,SAAWH,OAAA,CAAQ,qCAAR,CAAf,CAGII,UAAY,CAwBhBH,OAAOC,CAAAA,OAAP,CALAG,QAAiB,CAACC,MAAD,CAAS,CACxB,IAAIC,GAAK,EAAEH,SACX,OAAOD,SAAA,CAASG,MAAT,CAAP,CAA0BC,EAFF,CAvBsE;\",\n\"sources\":[\"node_modules/lodash/uniqueId.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$uniqueId\\\"] = function(global,require,module,exports) {\\nvar toString = require('./toString');\\n\\n/** Used to generate unique IDs. */\\nvar idCounter = 0;\\n\\n/**\\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category Util\\n * @param {string} [prefix=''] The value to prefix the ID with.\\n * @returns {string} Returns the unique ID.\\n * @example\\n *\\n * _.uniqueId('contact_');\\n * // => 'contact_104'\\n *\\n * _.uniqueId();\\n * // => '105'\\n */\\nfunction uniqueId(prefix) {\\n  var id = ++idCounter;\\n  return toString(prefix) + id;\\n}\\n\\nmodule.exports = uniqueId;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"toString\",\"idCounter\",\"uniqueId\",\"prefix\",\"id\"]\n}\n"]