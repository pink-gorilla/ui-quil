["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/load-script/index.js"],"~:js","shadow$provide.module$node_modules$load_script$index=function(global,require,module,exports){function setAttributes(script,attrs){for(var attr in attrs)script.setAttribute(attr,attrs[attr])}function stdOnEnd(script,cb){script.onload=function(){this.onerror=this.onload=null;cb(null,script)};script.onerror=function(){this.onerror=this.onload=null;cb(Error(\"Failed to load \"+this.src),script)}}function ieOnEnd(script,cb){script.onreadystatechange=function(){if(\"complete\"==this.readyState||\"loaded\"==this.readyState)this.onreadystatechange=\nnull,cb(null,script)}}module.exports=function(src,opts,cb){var head=document.head||document.getElementsByTagName(\"head\")[0],script=document.createElement(\"script\");\"function\"===typeof opts&&(cb=opts,opts={});opts=opts||{};cb=cb||function(){};script.type=opts.type||\"text/javascript\";script.charset=opts.charset||\"utf8\";script.async=\"async\"in opts?!!opts.async:!0;script.src=src;opts.attrs&&setAttributes(script,opts.attrs);opts.text&&(script.text=\"\"+opts.text);(\"onload\"in script?stdOnEnd:ieOnEnd)(script,\ncb);script.onload||stdOnEnd(script,cb);head.appendChild(script)}}","~:source","shadow$provide[\"module$node_modules$load_script$index\"] = function(global,require,module,exports) {\n\nmodule.exports = function load (src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0]\n  var script = document.createElement('script')\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n  cb = cb || function() {}\n\n  script.type = opts.type || 'text/javascript'\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true\n  script.src = src\n\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs)\n  }\n\n  if (opts.text) {\n    script.text = '' + opts.text\n  }\n\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd\n  onend(script, cb)\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n\n  head.appendChild(script)\n}\n\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\n\nfunction stdOnEnd (script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null\n    cb(null, script)\n  }\n  script.onerror = function () {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null\n    cb(new Error('Failed to load ' + this.src), script)\n  }\n}\n\nfunction ieOnEnd (script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return\n    this.onreadystatechange = null\n    cb(null, script) // there is no way to catch loading errors in IE8\n  }\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["onerror","src","async","onreadystatechange","text","onload","type","charset"]],"~:compiled-at",1621210442606,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$load_script$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwClGC,QAASA,cAAa,CAACC,MAAD,CAASC,KAAT,CAAgB,CACpC,IAAKC,IAAIA,IAAT,GAAiBD,MAAjB,CACED,MAAOG,CAAAA,YAAP,CAAoBD,IAApB,CAA0BD,KAAA,CAAMC,IAAN,CAA1B,CAFkC,CAMtCE,QAASA,SAAS,CAACJ,MAAD,CAASK,EAAT,CAAa,CAC7BL,MAAOM,CAAAA,MAAP,CAAgBC,QAAS,EAAG,CAC1B,IAAKC,CAAAA,OAAL,CAAe,IAAKF,CAAAA,MAApB,CAA6B,IAC7BD,GAAA,CAAG,IAAH,CAASL,MAAT,CAF0B,CAI5BA,OAAOQ,CAAAA,OAAP,CAAiBC,QAAS,EAAG,CAG3B,IAAKD,CAAAA,OAAL,CAAe,IAAKF,CAAAA,MAApB,CAA6B,IAC7BD,GAAA,CAAOK,KAAJ,CAAU,iBAAV,CAA8B,IAAKC,CAAAA,GAAnC,CAAH,CAA4CX,MAA5C,CAJ2B,CALA,CAa/BY,QAASA,QAAQ,CAACZ,MAAD,CAASK,EAAT,CAAa,CAC5BL,MAAOa,CAAAA,kBAAP,CAA4BC,QAAS,EAAG,CACtC,GAAuB,UAAvB,EAAI,IAAKC,CAAAA,UAAT,EAAwD,QAAxD,EAAqC,IAAKA,CAAAA,UAA1C,CACA,IAAKF,CAAAA,kBACL;AAD0B,IAC1B,CAAAR,EAAA,CAAG,IAAH,CAASL,MAAT,CAHsC,CADZ,CAzD9BH,MAAOC,CAAAA,OAAP,CAAiBkB,QAAc,CAACL,GAAD,CAAMM,IAAN,CAAYZ,EAAZ,CAAgB,CAC7C,IAAIa,KAAOC,QAASD,CAAAA,IAAhBA,EAAwBC,QAASC,CAAAA,oBAAT,CAA8B,MAA9B,CAAA,CAAsC,CAAtC,CAA5B,CACIpB,OAASmB,QAASE,CAAAA,aAAT,CAAuB,QAAvB,CAEO,WAApB,GAAI,MAAOJ,KAAX,GACEZ,EACA,CADKY,IACL,CAAAA,IAAA,CAAO,EAFT,CAKAA,KAAA,CAAOA,IAAP,EAAe,EACfZ,GAAA,CAAKA,EAAL,EAAW,QAAQ,EAAG,EAEtBL,OAAOsB,CAAAA,IAAP,CAAcL,IAAKK,CAAAA,IAAnB,EAA2B,iBAC3BtB,OAAOuB,CAAAA,OAAP,CAAiBN,IAAKM,CAAAA,OAAtB,EAAiC,MACjCvB,OAAOwB,CAAAA,KAAP,CAAe,OAAA,EAAWP,KAAX,CAAkB,CAAC,CAACA,IAAKO,CAAAA,KAAzB,CAAiC,CAAA,CAChDxB,OAAOW,CAAAA,GAAP,CAAaA,GAETM,KAAKhB,CAAAA,KAAT,EACEF,aAAA,CAAcC,MAAd,CAAsBiB,IAAKhB,CAAAA,KAA3B,CAGEgB,KAAKQ,CAAAA,IAAT,GACEzB,MAAOyB,CAAAA,IADT,CACgB,EADhB,CACqBR,IAAKQ,CAAAA,IAD1B,CAKA,EADY,QAAAC,EAAY1B,OAAZ0B,CAAqBtB,QAArBsB,CAAgCd,OAC5C,EAAMZ,MAAN;AAAcK,EAAd,CAKKL,OAAOM,CAAAA,MAAZ,EACEF,QAAA,CAASJ,MAAT,CAAiBK,EAAjB,CAGFa,KAAKS,CAAAA,WAAL,CAAiB3B,MAAjB,CAnC6C,CAFmD;\",\n\"sources\":[\"node_modules/load-script/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$load_script$index\\\"] = function(global,require,module,exports) {\\n\\nmodule.exports = function load (src, opts, cb) {\\n  var head = document.head || document.getElementsByTagName('head')[0]\\n  var script = document.createElement('script')\\n\\n  if (typeof opts === 'function') {\\n    cb = opts\\n    opts = {}\\n  }\\n\\n  opts = opts || {}\\n  cb = cb || function() {}\\n\\n  script.type = opts.type || 'text/javascript'\\n  script.charset = opts.charset || 'utf8';\\n  script.async = 'async' in opts ? !!opts.async : true\\n  script.src = src\\n\\n  if (opts.attrs) {\\n    setAttributes(script, opts.attrs)\\n  }\\n\\n  if (opts.text) {\\n    script.text = '' + opts.text\\n  }\\n\\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd\\n  onend(script, cb)\\n\\n  // some good legacy browsers (firefox) fail the 'in' detection above\\n  // so as a fallback we always set onload\\n  // old IE will ignore this and new IE will set onload\\n  if (!script.onload) {\\n    stdOnEnd(script, cb);\\n  }\\n\\n  head.appendChild(script)\\n}\\n\\nfunction setAttributes(script, attrs) {\\n  for (var attr in attrs) {\\n    script.setAttribute(attr, attrs[attr]);\\n  }\\n}\\n\\nfunction stdOnEnd (script, cb) {\\n  script.onload = function () {\\n    this.onerror = this.onload = null\\n    cb(null, script)\\n  }\\n  script.onerror = function () {\\n    // this.onload = null here is necessary\\n    // because even IE9 works not like others\\n    this.onerror = this.onload = null\\n    cb(new Error('Failed to load ' + this.src), script)\\n  }\\n}\\n\\nfunction ieOnEnd (script, cb) {\\n  script.onreadystatechange = function () {\\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return\\n    this.onreadystatechange = null\\n    cb(null, script) // there is no way to catch loading errors in IE8\\n  }\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"setAttributes\",\"script\",\"attrs\",\"attr\",\"setAttribute\",\"stdOnEnd\",\"cb\",\"onload\",\"script.onload\",\"onerror\",\"script.onerror\",\"Error\",\"src\",\"ieOnEnd\",\"onreadystatechange\",\"script.onreadystatechange\",\"readyState\",\"module.exports\",\"opts\",\"head\",\"document\",\"getElementsByTagName\",\"createElement\",\"type\",\"charset\",\"async\",\"text\",\"onend\",\"appendChild\"]\n}\n"]