["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseGetTag.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseGetTag=function(global,require,module,exports){global=require(\"module$node_modules$lodash$_Symbol\");var getRawTag=require(\"module$node_modules$lodash$_getRawTag\"),objectToString=require(\"module$node_modules$lodash$_objectToString\"),symToStringTag=global?global.toStringTag:void 0;module.exports=function(value){return null==value?void 0===value?\"[object Undefined]\":\"[object Null]\":symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseGetTag\"] = function(global,require,module,exports) {\nvar Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_objectToString","~$module$node_modules$lodash$_getRawTag","~$shadow.js","~$module$node_modules$lodash$_Symbol"]],"~:properties",["^5",[]],"~:compiled-at",1621210442007,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseGetTag.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC/FC,MAAAA,CAASH,OAAA,CAAQ,oCAAR,CADsF,KAE/FI,UAAYJ,OAAA,CAAQ,uCAAR,CAFmF,CAG/FK,eAAiBL,OAAA,CAAQ,4CAAR,CAH8E,CAU/FM,eAAiBH,MAAA,CAASA,MAAOI,CAAAA,WAAhB,CAA8BC,IAAAA,EAkBnDP,OAAOC,CAAAA,OAAP,CATAO,QAAmB,CAACC,KAAD,CAAQ,CACzB,MAAa,KAAb,EAAIA,KAAJ,CACmBF,IAAAA,EAAV,GAAAE,KAAA,CAdQC,oBAcR,CAfGC,eAcZ,CAGQN,cAAD,EAAmBA,cAAnB,GAAqCO,OAAA,CAAOH,KAAP,CAArC,CACHN,SAAA,CAAUM,KAAV,CADG,CAEHL,cAAA,CAAeK,KAAf,CANqB,CAnBwE;\",\n\"sources\":[\"node_modules/lodash/_baseGetTag.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseGetTag\\\"] = function(global,require,module,exports) {\\nvar Symbol = require('./_Symbol'),\\n    getRawTag = require('./_getRawTag'),\\n    objectToString = require('./_objectToString');\\n\\n/** `Object#toString` result references. */\\nvar nullTag = '[object Null]',\\n    undefinedTag = '[object Undefined]';\\n\\n/** Built-in value references. */\\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\\n\\n/**\\n * The base implementation of `getTag` without fallbacks for buggy environments.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nfunction baseGetTag(value) {\\n  if (value == null) {\\n    return value === undefined ? undefinedTag : nullTag;\\n  }\\n  return (symToStringTag && symToStringTag in Object(value))\\n    ? getRawTag(value)\\n    : objectToString(value);\\n}\\n\\nmodule.exports = baseGetTag;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Symbol\",\"getRawTag\",\"objectToString\",\"symToStringTag\",\"toStringTag\",\"undefined\",\"baseGetTag\",\"value\",\"undefinedTag\",\"nullTag\",\"Object\"]\n}\n"]