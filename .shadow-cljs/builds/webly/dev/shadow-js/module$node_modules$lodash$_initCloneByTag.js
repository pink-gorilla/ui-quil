["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_initCloneByTag.js"],"~:js","shadow$provide.module$node_modules$lodash$_initCloneByTag=function(global,require,module,exports){var cloneArrayBuffer=require(\"module$node_modules$lodash$_cloneArrayBuffer\"),cloneDataView=require(\"module$node_modules$lodash$_cloneDataView\"),cloneRegExp=require(\"module$node_modules$lodash$_cloneRegExp\"),cloneSymbol=require(\"module$node_modules$lodash$_cloneSymbol\"),cloneTypedArray=require(\"module$node_modules$lodash$_cloneTypedArray\");module.exports=function(object,tag,isDeep){var Ctor=object.constructor;\nswitch(tag){case \"[object ArrayBuffer]\":return cloneArrayBuffer(object);case \"[object Boolean]\":case \"[object Date]\":return new Ctor(+object);case \"[object DataView]\":return cloneDataView(object,isDeep);case \"[object Float32Array]\":case \"[object Float64Array]\":case \"[object Int8Array]\":case \"[object Int16Array]\":case \"[object Int32Array]\":case \"[object Uint8Array]\":case \"[object Uint8ClampedArray]\":case \"[object Uint16Array]\":case \"[object Uint32Array]\":return cloneTypedArray(object,isDeep);case \"[object Map]\":return new Ctor;\ncase \"[object Number]\":case \"[object String]\":return new Ctor(object);case \"[object RegExp]\":return cloneRegExp(object);case \"[object Set]\":return new Ctor;case \"[object Symbol]\":return cloneSymbol(object)}}}","~:source","shadow$provide[\"module$node_modules$lodash$_initCloneByTag\"] = function(global,require,module,exports) {\nvar cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_cloneTypedArray","~$shadow.js","~$module$node_modules$lodash$_cloneDataView","~$module$node_modules$lodash$_cloneRegExp","~$module$node_modules$lodash$_cloneSymbol","~$module$node_modules$lodash$_cloneArrayBuffer"]],"~:properties",["^5",[]],"~:compiled-at",1621210442062,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_initCloneByTag.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,0CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACnGC,iBAAmBH,OAAA,CAAQ,8CAAR,CADgF,CAEnGI,cAAgBJ,OAAA,CAAQ,2CAAR,CAFmF,CAGnGK,YAAcL,OAAA,CAAQ,yCAAR,CAHqF,CAInGM,YAAcN,OAAA,CAAQ,yCAAR,CAJqF,CAKnGO,gBAAkBP,OAAA,CAAQ,6CAAR,CAwEtBC,OAAOC,CAAAA,OAAP,CApCAM,QAAuB,CAACC,MAAD,CAASC,GAAT,CAAcC,MAAd,CAAsB,CAC3C,IAAIC,KAAOH,MAAOI,CAAAA,WAClB;OAAQH,GAAR,EACE,KA3BiBI,sBA2BjB,CACE,MAAOX,iBAAA,CAAiBM,MAAjB,CAET,MAvCUM,kBAuCV,CACA,KAvCUC,eAuCV,CACE,MAAO,KAAIJ,IAAJ,CAAS,CAACH,MAAV,CAET,MAjCcQ,mBAiCd,CACE,MAAOb,cAAA,CAAcK,MAAd,CAAsBE,MAAtB,CAET,MAnCaO,uBAmCb,CAAiB,KAlCJC,uBAkCI,CACjB,KAlCUC,oBAkCV,CAAc,KAjCHC,qBAiCG,CAAe,KAhClBC,qBAgCkB,CAC7B,KAhCWC,qBAgCX,CAAe,KA/BGC,4BA+BH,CAAsB,KA9BzBC,sBA8ByB,CAAgB,KA7BzCC,sBA6ByC,CACnD,MAAOnB,gBAAA,CAAgBE,MAAhB,CAAwBE,MAAxB,CAET,MAjDSgB,cAiDT,CACE,MAAO,KAAIf,IAEb;KAnDYgB,iBAmDZ,CACA,KAjDYC,iBAiDZ,CACE,MAAO,KAAIjB,IAAJ,CAASH,MAAT,CAET,MAtDYqB,iBAsDZ,CACE,MAAOzB,YAAA,CAAYI,MAAZ,CAET,MAxDSsB,cAwDT,CACE,MAAO,KAAInB,IAEb,MAzDYoB,iBAyDZ,CACE,MAAO1B,YAAA,CAAYG,MAAZ,CA9BX,CAF2C,CAzC0D;\",\n\"sources\":[\"node_modules/lodash/_initCloneByTag.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_initCloneByTag\\\"] = function(global,require,module,exports) {\\nvar cloneArrayBuffer = require('./_cloneArrayBuffer'),\\n    cloneDataView = require('./_cloneDataView'),\\n    cloneRegExp = require('./_cloneRegExp'),\\n    cloneSymbol = require('./_cloneSymbol'),\\n    cloneTypedArray = require('./_cloneTypedArray');\\n\\n/** `Object#toString` result references. */\\nvar boolTag = '[object Boolean]',\\n    dateTag = '[object Date]',\\n    mapTag = '[object Map]',\\n    numberTag = '[object Number]',\\n    regexpTag = '[object RegExp]',\\n    setTag = '[object Set]',\\n    stringTag = '[object String]',\\n    symbolTag = '[object Symbol]';\\n\\nvar arrayBufferTag = '[object ArrayBuffer]',\\n    dataViewTag = '[object DataView]',\\n    float32Tag = '[object Float32Array]',\\n    float64Tag = '[object Float64Array]',\\n    int8Tag = '[object Int8Array]',\\n    int16Tag = '[object Int16Array]',\\n    int32Tag = '[object Int32Array]',\\n    uint8Tag = '[object Uint8Array]',\\n    uint8ClampedTag = '[object Uint8ClampedArray]',\\n    uint16Tag = '[object Uint16Array]',\\n    uint32Tag = '[object Uint32Array]';\\n\\n/**\\n * Initializes an object clone based on its `toStringTag`.\\n *\\n * **Note:** This function only supports cloning values with tags of\\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\\n *\\n * @private\\n * @param {Object} object The object to clone.\\n * @param {string} tag The `toStringTag` of the object to clone.\\n * @param {boolean} [isDeep] Specify a deep clone.\\n * @returns {Object} Returns the initialized clone.\\n */\\nfunction initCloneByTag(object, tag, isDeep) {\\n  var Ctor = object.constructor;\\n  switch (tag) {\\n    case arrayBufferTag:\\n      return cloneArrayBuffer(object);\\n\\n    case boolTag:\\n    case dateTag:\\n      return new Ctor(+object);\\n\\n    case dataViewTag:\\n      return cloneDataView(object, isDeep);\\n\\n    case float32Tag: case float64Tag:\\n    case int8Tag: case int16Tag: case int32Tag:\\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\\n      return cloneTypedArray(object, isDeep);\\n\\n    case mapTag:\\n      return new Ctor;\\n\\n    case numberTag:\\n    case stringTag:\\n      return new Ctor(object);\\n\\n    case regexpTag:\\n      return cloneRegExp(object);\\n\\n    case setTag:\\n      return new Ctor;\\n\\n    case symbolTag:\\n      return cloneSymbol(object);\\n  }\\n}\\n\\nmodule.exports = initCloneByTag;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"cloneArrayBuffer\",\"cloneDataView\",\"cloneRegExp\",\"cloneSymbol\",\"cloneTypedArray\",\"initCloneByTag\",\"object\",\"tag\",\"isDeep\",\"Ctor\",\"constructor\",\"arrayBufferTag\",\"boolTag\",\"dateTag\",\"dataViewTag\",\"float32Tag\",\"float64Tag\",\"int8Tag\",\"int16Tag\",\"int32Tag\",\"uint8Tag\",\"uint8ClampedTag\",\"uint16Tag\",\"uint32Tag\",\"mapTag\",\"numberTag\",\"stringTag\",\"regexpTag\",\"setTag\",\"symbolTag\"]\n}\n"]