["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/graphlib/lib/alg/tarjan.js"],"~:js","shadow$provide.module$node_modules$graphlib$lib$alg$tarjan=function(global,require,module,exports){var _=require(\"module$node_modules$graphlib$lib$lodash\");module.exports=function(g){function dfs(v){var entry=visited[v]={onStack:!0,lowlink:index,index:index++};stack.push(v);g.successors(v).forEach(function(w){_.has(visited,w)?visited[w].onStack&&(entry.lowlink=Math.min(entry.lowlink,visited[w].index)):(dfs(w),entry.lowlink=Math.min(entry.lowlink,visited[w].lowlink))});if(entry.lowlink===entry.index){var cmpt=\n[];do{var w$jscomp$0=stack.pop();visited[w$jscomp$0].onStack=!1;cmpt.push(w$jscomp$0)}while(v!==w$jscomp$0);results.push(cmpt)}}var index=0,stack=[],visited={},results=[];g.nodes().forEach(function(v){_.has(visited,v)||dfs(v)});return results}}","~:source","shadow$provide[\"module$node_modules$graphlib$lib$alg$tarjan\"] = function(global,require,module,exports) {\nvar _ = require(\"../lodash\");\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0;\n  var stack = [];\n  var visited = {}; // node id -> { onStack, lowlink, index }\n  var results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [];\n      var w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$graphlib$lib$lodash"]],"~:properties",["^5",["index","lowlink","onStack"]],"~:compiled-at",1621210442095,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$graphlib$lib$alg$tarjan.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACxG,IAAIC,EAAIH,OAAA,CAAQ,yCAAR,CAERC,OAAOC,CAAAA,OAAP,CAEAE,QAAe,CAACC,CAAD,CAAI,CAMjBC,QAASA,IAAG,CAACC,CAAD,CAAI,CACd,IAAIC,MAAQC,OAAA,CAAQF,CAAR,CAARC,CAAqB,CACvBE,QAAS,CAAA,CADc,CAEvBC,QAASC,KAFc,CAGvBA,MAAOA,KAAA,EAHgB,CAKzBC,MAAMC,CAAAA,IAAN,CAAWP,CAAX,CAEAF,EAAEU,CAAAA,UAAF,CAAaR,CAAb,CAAgBS,CAAAA,OAAhB,CAAwB,QAAQ,CAACC,CAAD,CAAI,CAC7Bd,CAAEe,CAAAA,GAAF,CAAMT,OAAN,CAAeQ,CAAf,CAAL,CAGWR,OAAA,CAAQQ,CAAR,CAAWP,CAAAA,OAHtB,GAIEF,KAAMG,CAAAA,OAJR,CAIkBQ,IAAKC,CAAAA,GAAL,CAASZ,KAAMG,CAAAA,OAAf,CAAwBF,OAAA,CAAQQ,CAAR,CAAWL,CAAAA,KAAnC,CAJlB,GACEN,GAAA,CAAIW,CAAJ,CACA,CAAAT,KAAMG,CAAAA,OAAN,CAAgBQ,IAAKC,CAAAA,GAAL,CAASZ,KAAMG,CAAAA,OAAf,CAAwBF,OAAA,CAAQQ,CAAR,CAAWN,CAAAA,OAAnC,CAFlB,CADkC,CAApC,CASA,IAAIH,KAAMG,CAAAA,OAAV,GAAsBH,KAAMI,CAAAA,KAA5B,CAAmC,CACjC,IAAIS;AAAO,EAEX,GAAG,CACD,IAAAJ,WAAIJ,KAAMS,CAAAA,GAAN,EACJb,QAAA,CAAQQ,UAAR,CAAWP,CAAAA,OAAX,CAAqB,CAAA,CACrBW,KAAKP,CAAAA,IAAL,CAAUG,UAAV,CAHC,CAAH,MAISV,CAJT,GAIeU,UAJf,CAKAM,QAAQT,CAAAA,IAAR,CAAaO,IAAb,CARiC,CAjBrB,CALhB,IAAIT,MAAQ,CAAZ,CACIC,MAAQ,EADZ,CAEIJ,QAAU,EAFd,CAGIc,QAAU,EA+BdlB,EAAEmB,CAAAA,KAAF,EAAUR,CAAAA,OAAV,CAAkB,QAAQ,CAACT,CAAD,CAAI,CACvBJ,CAAEe,CAAAA,GAAF,CAAMT,OAAN,CAAeF,CAAf,CAAL,EACED,GAAA,CAAIC,CAAJ,CAF0B,CAA9B,CAMA,OAAOgB,QAzCU,CALqF;\",\n\"sources\":[\"node_modules/graphlib/lib/alg/tarjan.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$graphlib$lib$alg$tarjan\\\"] = function(global,require,module,exports) {\\nvar _ = require(\\\"../lodash\\\");\\n\\nmodule.exports = tarjan;\\n\\nfunction tarjan(g) {\\n  var index = 0;\\n  var stack = [];\\n  var visited = {}; // node id -> { onStack, lowlink, index }\\n  var results = [];\\n\\n  function dfs(v) {\\n    var entry = visited[v] = {\\n      onStack: true,\\n      lowlink: index,\\n      index: index++\\n    };\\n    stack.push(v);\\n\\n    g.successors(v).forEach(function(w) {\\n      if (!_.has(visited, w)) {\\n        dfs(w);\\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\\n      } else if (visited[w].onStack) {\\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\\n      }\\n    });\\n\\n    if (entry.lowlink === entry.index) {\\n      var cmpt = [];\\n      var w;\\n      do {\\n        w = stack.pop();\\n        visited[w].onStack = false;\\n        cmpt.push(w);\\n      } while (v !== w);\\n      results.push(cmpt);\\n    }\\n  }\\n\\n  g.nodes().forEach(function(v) {\\n    if (!_.has(visited, v)) {\\n      dfs(v);\\n    }\\n  });\\n\\n  return results;\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_\",\"tarjan\",\"g\",\"dfs\",\"v\",\"entry\",\"visited\",\"onStack\",\"lowlink\",\"index\",\"stack\",\"push\",\"successors\",\"forEach\",\"w\",\"has\",\"Math\",\"min\",\"cmpt\",\"pop\",\"results\",\"nodes\"]\n}\n"]