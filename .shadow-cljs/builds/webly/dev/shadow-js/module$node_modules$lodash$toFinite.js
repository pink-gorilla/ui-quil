["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/toFinite.js"],"~:js","shadow$provide.module$node_modules$lodash$toFinite=function(global,require,module,exports){var toNumber=require(\"module$node_modules$lodash$toNumber\"),INFINITY=1/0;module.exports=function(value){if(!value)return 0===value?value:0;value=toNumber(value);return value===INFINITY||value===-INFINITY?1.7976931348623157E308*(0>value?-1:1):value===value?value:0}}","~:source","shadow$provide[\"module$node_modules$lodash$toFinite\"] = function(global,require,module,exports) {\nvar toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$toNumber"]],"~:properties",["^5",[]],"~:compiled-at",1621210442100,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$toFinite.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAChG,IAAIC,SAAWH,OAAA,CAAQ,qCAAR,CAAf,CAGII,SAAW,CAAXA,CAAe,CAsCnBH,OAAOC,CAAAA,OAAP,CAZAG,QAAiB,CAACC,KAAD,CAAQ,CACvB,GAAI,CAACA,KAAL,CACE,MAAiB,EAAV,GAAAA,KAAA,CAAcA,KAAd,CAAsB,CAE/BA,MAAA,CAAQH,QAAA,CAASG,KAAT,CACR,OAAIA,MAAJ,GAAcF,QAAd,EAA0BE,KAA1B,GAAoC,CAACF,QAArC,CA9BgBG,sBA8BhB,EACsB,CAARC,CAAAF,KAAAE,CAAY,EAAZA,CAAiB,CAD/B,EAIOF,KAAA,GAAUA,KAAV,CAAkBA,KAAlB,CAA0B,CATV,CA9BuE;\",\n\"sources\":[\"node_modules/lodash/toFinite.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$toFinite\\\"] = function(global,require,module,exports) {\\nvar toNumber = require('./toNumber');\\n\\n/** Used as references for various `Number` constants. */\\nvar INFINITY = 1 / 0,\\n    MAX_INTEGER = 1.7976931348623157e+308;\\n\\n/**\\n * Converts `value` to a finite number.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.12.0\\n * @category Lang\\n * @param {*} value The value to convert.\\n * @returns {number} Returns the converted number.\\n * @example\\n *\\n * _.toFinite(3.2);\\n * // => 3.2\\n *\\n * _.toFinite(Number.MIN_VALUE);\\n * // => 5e-324\\n *\\n * _.toFinite(Infinity);\\n * // => 1.7976931348623157e+308\\n *\\n * _.toFinite('3.2');\\n * // => 3.2\\n */\\nfunction toFinite(value) {\\n  if (!value) {\\n    return value === 0 ? value : 0;\\n  }\\n  value = toNumber(value);\\n  if (value === INFINITY || value === -INFINITY) {\\n    var sign = (value < 0 ? -1 : 1);\\n    return sign * MAX_INTEGER;\\n  }\\n  return value === value ? value : 0;\\n}\\n\\nmodule.exports = toFinite;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"toNumber\",\"INFINITY\",\"toFinite\",\"value\",\"MAX_INTEGER\",\"sign\"]\n}\n"]