["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@react-leaflet/core/cjs/div-overlay.js"],"~:js","shadow$provide.module$node_modules$$react_leaflet$core$cjs$div_overlay=function(global,require,module,exports){exports.__esModule=!0;exports.createDivOverlayHook=function(useElement,useLifecycle){return function(props,setOpen){const context=(0,_context.useLeafletContext)(),elementRef=useElement((0,_pane.withPane)(props,context),context);(0,_attribution.useAttribution)(context.map,props.attribution);(0,_events.useEventHandlers)(elementRef.current,props.eventHandlers);useLifecycle(elementRef.current,\ncontext,props,setOpen);return elementRef}};var _attribution=require(\"module$node_modules$$react_leaflet$core$cjs$attribution\"),_context=require(\"module$node_modules$$react_leaflet$core$cjs$context\"),_events=require(\"module$node_modules$$react_leaflet$core$cjs$events\"),_pane=require(\"module$node_modules$$react_leaflet$core$cjs$pane\")}","~:source","shadow$provide[\"module$node_modules$$react_leaflet$core$cjs$div_overlay\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.createDivOverlayHook = createDivOverlayHook;\n\nvar _attribution = require(\"./attribution\");\n\nvar _context = require(\"./context\");\n\nvar _events = require(\"./events\");\n\nvar _pane = require(\"./pane\");\n\nfunction createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = (0, _context.useLeafletContext)();\n    const elementRef = useElement((0, _pane.withPane)(props, context), context);\n    (0, _attribution.useAttribution)(context.map, props.attribution);\n    (0, _events.useEventHandlers)(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$react_leaflet$core$cjs$context","~$module$node_modules$$react_leaflet$core$cjs$attribution","~$module$node_modules$$react_leaflet$core$cjs$pane","~$shadow.js","~$module$node_modules$$react_leaflet$core$cjs$events"]],"~:properties",["^5",["__esModule","createDivOverlayHook"]],"~:compiled-at",1621210442207,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$react_leaflet$core$cjs$div_overlay.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,oBAAR,CAUAA,QAA6B,CAACC,UAAD,CAAaC,YAAb,CAA2B,CACtD,MAAOC,SAAsB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CAC5C,MAAMC,QAAU,CAAC,CAAA,CAAGC,QAASC,CAAAA,iBAAb,GAAhB,CACMC,WAAaR,UAAA,CAAW,CAAC,CAAA,CAAGS,KAAMC,CAAAA,QAAV,EAAoBP,KAApB,CAA2BE,OAA3B,CAAX,CAAgDA,OAAhD,CACnB,EAAC,CAAA,CAAGM,YAAaC,CAAAA,cAAjB,EAAiCP,OAAQQ,CAAAA,GAAzC,CAA8CV,KAAMW,CAAAA,WAApD,CACA,EAAC,CAAA,CAAGC,OAAQC,CAAAA,gBAAZ,EAA8BR,UAAWS,CAAAA,OAAzC,CAAkDd,KAAMe,CAAAA,aAAxD,CACAjB,aAAA,CAAaO,UAAWS,CAAAA,OAAxB;AAAiCZ,OAAjC,CAA0CF,KAA1C,CAAiDC,OAAjD,CACA,OAAOI,WANqC,CADQ,CARxD,KAAIG,aAAehB,OAAA,CAAQ,yDAAR,CAAnB,CAEIW,SAAWX,OAAA,CAAQ,qDAAR,CAFf,CAIIoB,QAAUpB,OAAA,CAAQ,oDAAR,CAJd,CAMIc,MAAQd,OAAA,CAAQ,kDAAR,CAZwG;\",\n\"sources\":[\"node_modules/@react-leaflet/core/cjs/div-overlay.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$react_leaflet$core$cjs$div_overlay\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.createDivOverlayHook = createDivOverlayHook;\\n\\nvar _attribution = require(\\\"./attribution\\\");\\n\\nvar _context = require(\\\"./context\\\");\\n\\nvar _events = require(\\\"./events\\\");\\n\\nvar _pane = require(\\\"./pane\\\");\\n\\nfunction createDivOverlayHook(useElement, useLifecycle) {\\n  return function useDivOverlay(props, setOpen) {\\n    const context = (0, _context.useLeafletContext)();\\n    const elementRef = useElement((0, _pane.withPane)(props, context), context);\\n    (0, _attribution.useAttribution)(context.map, props.attribution);\\n    (0, _events.useEventHandlers)(elementRef.current, props.eventHandlers);\\n    useLifecycle(elementRef.current, context, props, setOpen);\\n    return elementRef;\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"createDivOverlayHook\",\"useElement\",\"useLifecycle\",\"useDivOverlay\",\"props\",\"setOpen\",\"context\",\"_context\",\"useLeafletContext\",\"elementRef\",\"_pane\",\"withPane\",\"_attribution\",\"useAttribution\",\"map\",\"attribution\",\"_events\",\"useEventHandlers\",\"current\",\"eventHandlers\"]\n}\n"]