["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-leaflet/cjs/Tooltip.js"],"~:js","shadow$provide.module$node_modules$react_leaflet$cjs$Tooltip=function(global,require,module,exports){exports.__esModule=!0;exports.Tooltip=void 0;global=require(\"module$node_modules$$react_leaflet$core$cjs$index\");var _leaflet=require(\"module$node_modules$leaflet$dist$leaflet_src\"),_react=require(\"module$node_modules$react$index\");require=(0,global.createOverlayComponent)(function(props,context){return{instance:new _leaflet.Tooltip(props,context.overlayContainer),context}},function(element,context,\nprops,setOpen){const {onClose,onOpen}=props;(0,_react.useEffect)(function(){const container=context.overlayContainer;if(null!=container){var {instance}=element,onTooltipOpen=event=>{event.tooltip===instance&&(instance.update(),setOpen(!0),null==onOpen?void 0:onOpen())},onTooltipClose=event=>{event.tooltip===instance&&(setOpen(!1),null==onClose?void 0:onClose())};container.on({tooltipopen:onTooltipOpen,tooltipclose:onTooltipClose});container.bindTooltip(instance);return function(){container.off({tooltipopen:onTooltipOpen,\ntooltipclose:onTooltipClose});null!=container._map&&container.unbindTooltip()}}},[element,context,setOpen,onClose,onOpen])});exports.Tooltip=require}","~:source","shadow$provide[\"module$node_modules$react_leaflet$cjs$Tooltip\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.Tooltip = void 0;\n\nvar _core = require(\"@react-leaflet/core\");\n\nvar _leaflet = require(\"leaflet\");\n\nvar _react = require(\"react\");\n\nconst Tooltip = (0, _core.createOverlayComponent)(function createTooltip(props, context) {\n  return {\n    instance: new _leaflet.Tooltip(props, context.overlayContainer),\n    context\n  };\n}, function useTooltipLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen\n  } = props;\n  (0, _react.useEffect)(function addTooltip() {\n    const container = context.overlayContainer;\n\n    if (container == null) {\n      return;\n    }\n\n    const {\n      instance\n    } = element;\n\n    const onTooltipOpen = event => {\n      if (event.tooltip === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    };\n\n    const onTooltipClose = event => {\n      if (event.tooltip === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    };\n\n    container.on({\n      tooltipopen: onTooltipOpen,\n      tooltipclose: onTooltipClose\n    });\n    container.bindTooltip(instance);\n    return function removeTooltip() {\n      container.off({\n        tooltipopen: onTooltipOpen,\n        tooltipclose: onTooltipClose\n      }); // @ts-ignore protected property\n\n      if (container._map != null) {\n        container.unbindTooltip();\n      }\n    };\n  }, [element, context, setOpen, onClose, onOpen]);\n});\nexports.Tooltip = Tooltip;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$react_leaflet$core$cjs$index","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$leaflet$dist$leaflet_src"]],"~:properties",["^5",["Tooltip","__esModule","context","instance","tooltipclose","tooltipopen"]],"~:compiled-at",1621210442255,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_leaflet$cjs$Tooltip.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1GA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EAEnBC,OAAAA,CAAQL,OAAA,CAAQ,mDAAR,CAEZ,KAAIM,SAAWN,OAAA,CAAQ,8CAAR,CAAf,CAEIO,OAASP,OAAA,CAAQ,iCAAR,CAEPI,QAAAA,CAAU,CAAC,CAAA,CAAGC,MAAMG,CAAAA,sBAAV,EAAkCC,QAAsB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CACvF,MAAO,CACLC,SAAU,IAAIN,QAASF,CAAAA,OAAb,CAAqBM,KAArB,CAA4BC,OAAQE,CAAAA,gBAApC,CADL,CAELF,OAFK,CADgF,CAAzE,CAKbG,QAA4B,CAACC,OAAD,CAAUJ,OAAV;AAAmBD,KAAnB,CAA0BM,OAA1B,CAAmC,CAChE,MAAM,CACJC,OADI,CAEJC,MAFI,CAAA,CAGFR,KACJ,EAAC,CAAA,CAAGH,MAAOY,CAAAA,SAAX,EAAsBC,QAAmB,EAAG,CAC1C,MAAMC,UAAYV,OAAQE,CAAAA,gBAE1B,IAAiB,IAAjB,EAAIQ,SAAJ,CAAA,CAIA,IAAM,CACJT,QADI,CAAA,CAEFG,OAFJ,CAIMO,cAAgBC,KAAAD,EAAS,CACzBC,KAAMC,CAAAA,OAAV,GAAsBZ,QAAtB,GACEA,QAASa,CAAAA,MAAT,EAEA,CADAT,OAAA,CAAQ,CAAA,CAAR,CACA,CAAU,IAAV,EAAAE,MAAA,CAAiB,IAAK,EAAtB,CAA0BA,MAAA,EAH5B,CAD6B,CAJ/B,CAYMQ,eAAiBH,KAAAG,EAAS,CAC1BH,KAAMC,CAAAA,OAAV,GAAsBZ,QAAtB,GACEI,OAAA,CAAQ,CAAA,CAAR,CACA,CAAW,IAAX,EAAAC,OAAA,CAAkB,IAAK,EAAvB,CAA2BA,OAAA,EAF7B,CAD8B,CAOhCI,UAAUM,CAAAA,EAAV,CAAa,CACXC,YAAaN,aADF,CAEXO,aAAcH,cAFH,CAAb,CAIAL,UAAUS,CAAAA,WAAV,CAAsBlB,QAAtB,CACA,OAAOmB,SAAsB,EAAG,CAC9BV,SAAUW,CAAAA,GAAV,CAAc,CACZJ,YAAaN,aADD;AAEZO,aAAcH,cAFF,CAAd,CAKsB,KAAtB,EAAIL,SAAUY,CAAAA,IAAd,EACEZ,SAAUa,CAAAA,aAAV,EAP4B,CA5BhC,CAH0C,CAA5C,CAyCG,CAACnB,OAAD,CAAUJ,OAAV,CAAmBK,OAAnB,CAA4BC,OAA5B,CAAqCC,MAArC,CAzCH,CALgE,CALlD,CAqDhBhB,QAAQE,CAAAA,OAAR,CAAkBA,OAjEwF;\",\n\"sources\":[\"node_modules/react-leaflet/cjs/Tooltip.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_leaflet$cjs$Tooltip\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.Tooltip = void 0;\\n\\nvar _core = require(\\\"@react-leaflet/core\\\");\\n\\nvar _leaflet = require(\\\"leaflet\\\");\\n\\nvar _react = require(\\\"react\\\");\\n\\nconst Tooltip = (0, _core.createOverlayComponent)(function createTooltip(props, context) {\\n  return {\\n    instance: new _leaflet.Tooltip(props, context.overlayContainer),\\n    context\\n  };\\n}, function useTooltipLifecycle(element, context, props, setOpen) {\\n  const {\\n    onClose,\\n    onOpen\\n  } = props;\\n  (0, _react.useEffect)(function addTooltip() {\\n    const container = context.overlayContainer;\\n\\n    if (container == null) {\\n      return;\\n    }\\n\\n    const {\\n      instance\\n    } = element;\\n\\n    const onTooltipOpen = event => {\\n      if (event.tooltip === instance) {\\n        instance.update();\\n        setOpen(true);\\n        onOpen == null ? void 0 : onOpen();\\n      }\\n    };\\n\\n    const onTooltipClose = event => {\\n      if (event.tooltip === instance) {\\n        setOpen(false);\\n        onClose == null ? void 0 : onClose();\\n      }\\n    };\\n\\n    container.on({\\n      tooltipopen: onTooltipOpen,\\n      tooltipclose: onTooltipClose\\n    });\\n    container.bindTooltip(instance);\\n    return function removeTooltip() {\\n      container.off({\\n        tooltipopen: onTooltipOpen,\\n        tooltipclose: onTooltipClose\\n      }); // @ts-ignore protected property\\n\\n      if (container._map != null) {\\n        container.unbindTooltip();\\n      }\\n    };\\n  }, [element, context, setOpen, onClose, onOpen]);\\n});\\nexports.Tooltip = Tooltip;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"Tooltip\",\"_core\",\"_leaflet\",\"_react\",\"createOverlayComponent\",\"createTooltip\",\"props\",\"context\",\"instance\",\"overlayContainer\",\"useTooltipLifecycle\",\"element\",\"setOpen\",\"onClose\",\"onOpen\",\"useEffect\",\"addTooltip\",\"container\",\"onTooltipOpen\",\"event\",\"tooltip\",\"update\",\"onTooltipClose\",\"on\",\"tooltipopen\",\"tooltipclose\",\"bindTooltip\",\"removeTooltip\",\"off\",\"_map\",\"unbindTooltip\"]\n}\n"]