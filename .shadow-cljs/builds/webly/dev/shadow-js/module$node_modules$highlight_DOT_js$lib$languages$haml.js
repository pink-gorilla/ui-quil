["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/haml.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$haml=function(global,require,module,exports){module.exports=function(hljs){return{name:\"HAML\",case_insensitive:!0,contains:[{className:\"meta\",begin:\"^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$\",relevance:10},hljs.COMMENT(\"^\\\\s*(!\\x3d#|\\x3d#|-#|/).*$\",!1,{relevance:0}),{begin:\"^\\\\s*(-|\\x3d|!\\x3d)(?!#)\",starts:{end:\"\\\\n\",subLanguage:\"ruby\"}},{className:\"tag\",begin:\"^\\\\s*%\",contains:[{className:\"selector-tag\",begin:\"\\\\w+\"},\n{className:\"selector-id\",begin:\"#[\\\\w-]+\"},{className:\"selector-class\",begin:\"\\\\.[\\\\w-]+\"},{begin:/\\{\\s*/,end:/\\s*\\}/,contains:[{begin:\":\\\\w+\\\\s*\\x3d\\x3e\",end:\",\\\\s+\",returnBegin:!0,endsWithParent:!0,contains:[{className:\"attr\",begin:\":\\\\w+\"},hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,{begin:\"\\\\w+\",relevance:0}]}]},{begin:\"\\\\(\\\\s*\",end:\"\\\\s*\\\\)\",excludeEnd:!0,contains:[{begin:\"\\\\w+\\\\s*\\x3d\",end:\"\\\\s+\",returnBegin:!0,endsWithParent:!0,contains:[{className:\"attr\",begin:\"\\\\w+\",relevance:0},hljs.APOS_STRING_MODE,\nhljs.QUOTE_STRING_MODE,{begin:\"\\\\w+\",relevance:0}]}]}]},{begin:\"^\\\\s*[\\x3d~]\\\\s*\"},{begin:/#\\{/,starts:{end:/\\}/,subLanguage:\"ruby\"}}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$haml\"] = function(global,require,module,exports) {\n/*\nLanguage: HAML\nRequires: ruby.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://haml.info\nCategory: template\n*/\n\n// TODO support filter tags like :javascript, support inline HTML\nfunction haml(hljs) {\n  return {\n    name: 'HAML',\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n        relevance: 10\n      },\n      // FIXME these comments should be allowed to span indented lines\n      hljs.COMMENT(\n        '^\\\\s*(!=#|=#|-#|/).*$',\n        false,\n        {\n          relevance: 0\n        }\n      ),\n      {\n        begin: '^\\\\s*(-|=|!=)(?!#)',\n        starts: {\n          end: '\\\\n',\n          subLanguage: 'ruby'\n        }\n      },\n      {\n        className: 'tag',\n        begin: '^\\\\s*%',\n        contains: [\n          {\n            className: 'selector-tag',\n            begin: '\\\\w+'\n          },\n          {\n            className: 'selector-id',\n            begin: '#[\\\\w-]+'\n          },\n          {\n            className: 'selector-class',\n            begin: '\\\\.[\\\\w-]+'\n          },\n          {\n            begin: /\\{\\s*/,\n            end: /\\s*\\}/,\n            contains: [\n              {\n                begin: ':\\\\w+\\\\s*=>',\n                end: ',\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: ':\\\\w+'\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: '\\\\(\\\\s*',\n            end: '\\\\s*\\\\)',\n            excludeEnd: true,\n            contains: [\n              {\n                begin: '\\\\w+\\\\s*=',\n                end: '\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: '\\\\w+',\n                    relevance: 0\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: '^\\\\s*[=~]\\\\s*'\n      },\n      {\n        begin: /#\\{/,\n        starts: {\n          end: /\\}/,\n          subLanguage: 'ruby'\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = haml;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","begin","subLanguage","className","contains","relevance","returnBegin","name","starts","excludeEnd","endsWithParent","end"]],"~:compiled-at",1621210441201,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$haml.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqHpHD,MAAOC,CAAAA,OAAP,CA3GAC,QAAa,CAACC,IAAD,CAAO,CAClB,MAAO,CACLC,KAAM,MADD,CAELC,iBAAkB,CAAA,CAFb,CAGLC,SAAU,CACR,CACEC,UAAW,MADb,CAEEC,MAAO,+DAFT,CAGEC,UAAW,EAHb,CADQ,CAORN,IAAKO,CAAAA,OAAL,CACE,6BADF,CAEE,CAAA,CAFF,CAGE,CACED,UAAW,CADb,CAHF,CAPQ,CAcR,CACED,MAAO,0BADT,CAEEG,OAAQ,CACNC,IAAK,KADC,CAENC,YAAa,MAFP,CAFV,CAdQ,CAqBR,CACEN,UAAW,KADb,CAEEC,MAAO,QAFT,CAGEF,SAAU,CACR,CACEC,UAAW,cADb,CAEEC,MAAO,MAFT,CADQ;AAKR,CACED,UAAW,aADb,CAEEC,MAAO,UAFT,CALQ,CASR,CACED,UAAW,gBADb,CAEEC,MAAO,YAFT,CATQ,CAaR,CACEA,MAAO,OADT,CAEEI,IAAK,OAFP,CAGEN,SAAU,CACR,CACEE,MAAO,mBADT,CAEEI,IAAK,OAFP,CAGEE,YAAa,CAAA,CAHf,CAIEC,eAAgB,CAAA,CAJlB,CAKET,SAAU,CACR,CACEC,UAAW,MADb,CAEEC,MAAO,OAFT,CADQ,CAKRL,IAAKa,CAAAA,gBALG,CAMRb,IAAKc,CAAAA,iBANG,CAOR,CACET,MAAO,MADT,CAEEC,UAAW,CAFb,CAPQ,CALZ,CADQ,CAHZ,CAbQ,CAqCR,CACED,MAAO,SADT,CAEEI,IAAK,SAFP,CAGEM,WAAY,CAAA,CAHd,CAIEZ,SAAU,CACR,CACEE,MAAO,cADT,CAEEI,IAAK,MAFP,CAGEE,YAAa,CAAA,CAHf,CAIEC,eAAgB,CAAA,CAJlB,CAKET,SAAU,CACR,CACEC,UAAW,MADb,CAEEC,MAAO,MAFT,CAGEC,UAAW,CAHb,CADQ,CAMRN,IAAKa,CAAAA,gBANG;AAORb,IAAKc,CAAAA,iBAPG,CAQR,CACET,MAAO,MADT,CAEEC,UAAW,CAFb,CARQ,CALZ,CADQ,CAJZ,CArCQ,CAHZ,CArBQ,CAyFR,CACED,MAAO,kBADT,CAzFQ,CA4FR,CACEA,MAAO,KADT,CAEEG,OAAQ,CACNC,IAAK,IADC,CAENC,YAAa,MAFP,CAFV,CA5FQ,CAHL,CADW,CAVgG;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/haml.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$haml\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: HAML\\nRequires: ruby.js\\nAuthor: Dan Allen <dan.j.allen@gmail.com>\\nWebsite: http://haml.info\\nCategory: template\\n*/\\n\\n// TODO support filter tags like :javascript, support inline HTML\\nfunction haml(hljs) {\\n  return {\\n    name: 'HAML',\\n    case_insensitive: true,\\n    contains: [\\n      {\\n        className: 'meta',\\n        begin: '^!!!( (5|1\\\\\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\\\\\b.*))?$',\\n        relevance: 10\\n      },\\n      // FIXME these comments should be allowed to span indented lines\\n      hljs.COMMENT(\\n        '^\\\\\\\\s*(!=#|=#|-#|/).*$',\\n        false,\\n        {\\n          relevance: 0\\n        }\\n      ),\\n      {\\n        begin: '^\\\\\\\\s*(-|=|!=)(?!#)',\\n        starts: {\\n          end: '\\\\\\\\n',\\n          subLanguage: 'ruby'\\n        }\\n      },\\n      {\\n        className: 'tag',\\n        begin: '^\\\\\\\\s*%',\\n        contains: [\\n          {\\n            className: 'selector-tag',\\n            begin: '\\\\\\\\w+'\\n          },\\n          {\\n            className: 'selector-id',\\n            begin: '#[\\\\\\\\w-]+'\\n          },\\n          {\\n            className: 'selector-class',\\n            begin: '\\\\\\\\.[\\\\\\\\w-]+'\\n          },\\n          {\\n            begin: /\\\\{\\\\s*/,\\n            end: /\\\\s*\\\\}/,\\n            contains: [\\n              {\\n                begin: ':\\\\\\\\w+\\\\\\\\s*=>',\\n                end: ',\\\\\\\\s+',\\n                returnBegin: true,\\n                endsWithParent: true,\\n                contains: [\\n                  {\\n                    className: 'attr',\\n                    begin: ':\\\\\\\\w+'\\n                  },\\n                  hljs.APOS_STRING_MODE,\\n                  hljs.QUOTE_STRING_MODE,\\n                  {\\n                    begin: '\\\\\\\\w+',\\n                    relevance: 0\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            begin: '\\\\\\\\(\\\\\\\\s*',\\n            end: '\\\\\\\\s*\\\\\\\\)',\\n            excludeEnd: true,\\n            contains: [\\n              {\\n                begin: '\\\\\\\\w+\\\\\\\\s*=',\\n                end: '\\\\\\\\s+',\\n                returnBegin: true,\\n                endsWithParent: true,\\n                contains: [\\n                  {\\n                    className: 'attr',\\n                    begin: '\\\\\\\\w+',\\n                    relevance: 0\\n                  },\\n                  hljs.APOS_STRING_MODE,\\n                  hljs.QUOTE_STRING_MODE,\\n                  {\\n                    begin: '\\\\\\\\w+',\\n                    relevance: 0\\n                  }\\n                ]\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      {\\n        begin: '^\\\\\\\\s*[=~]\\\\\\\\s*'\\n      },\\n      {\\n        begin: /#\\\\{/,\\n        starts: {\\n          end: /\\\\}/,\\n          subLanguage: 'ruby'\\n        }\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = haml;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"haml\",\"hljs\",\"name\",\"case_insensitive\",\"contains\",\"className\",\"begin\",\"relevance\",\"COMMENT\",\"starts\",\"end\",\"subLanguage\",\"returnBegin\",\"endsWithParent\",\"APOS_STRING_MODE\",\"QUOTE_STRING_MODE\",\"excludeEnd\"]\n}\n"]