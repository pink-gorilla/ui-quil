["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-leaflet/cjs/GeoJSON.js"],"~:js","shadow$provide.module$node_modules$react_leaflet$cjs$GeoJSON=function(global,require,module,exports){exports.__esModule=!0;exports.GeoJSON=void 0;global=require(\"module$node_modules$$react_leaflet$core$cjs$index\");var _leaflet=require(\"module$node_modules$leaflet$dist$leaflet_src\");require=(0,global.createPathComponent)(function($jscomp$destructuring$var9,ctx){var $jscomp$destructuring$var11=Object.assign({},$jscomp$destructuring$var9);$jscomp$destructuring$var9=$jscomp$destructuring$var9.data;$jscomp$destructuring$var11=\n(delete $jscomp$destructuring$var11.data,$jscomp$destructuring$var11);$jscomp$destructuring$var11=new _leaflet.GeoJSON($jscomp$destructuring$var9,$jscomp$destructuring$var11);return{instance:$jscomp$destructuring$var11,context:Object.assign({},ctx,{overlayContainer:$jscomp$destructuring$var11})}},function(layer,props,prevProps){props.style!==prevProps.style&&(null==props.style?layer.resetStyle():layer.setStyle(props.style))});exports.GeoJSON=require}","~:source","shadow$provide[\"module$node_modules$react_leaflet$cjs$GeoJSON\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.GeoJSON = void 0;\n\nvar _core = require(\"@react-leaflet/core\");\n\nvar _leaflet = require(\"leaflet\");\n\nconst GeoJSON = (0, _core.createPathComponent)(function createGeoJSON({\n  data,\n  ...options\n}, ctx) {\n  const instance = new _leaflet.GeoJSON(data, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateGeoJSON(layer, props, prevProps) {\n  if (props.style !== prevProps.style) {\n    if (props.style == null) {\n      layer.resetStyle();\n    } else {\n      layer.setStyle(props.style);\n    }\n  }\n});\nexports.GeoJSON = GeoJSON;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$react_leaflet$core$cjs$index","~$shadow.js","~$module$node_modules$leaflet$dist$leaflet_src"]],"~:properties",["^5",["GeoJSON","__esModule","context","instance","overlayContainer"]],"~:compiled-at",1621210442249,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_leaflet$cjs$GeoJSON.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1GA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EAEnBC,OAAAA,CAAQL,OAAA,CAAQ,mDAAR,CAEZ,KAAIM,SAAWN,OAAA,CAAQ,8CAAR,CAETI,QAAAA,CAAU,CAAC,CAAA,CAAGC,MAAME,CAAAA,mBAAV,EAA+BC,QAAsB,CAAC,0BAAD,CAGlEC,GAHkE,CAG7D,CAH8D,IAAA,4BAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0BAAA,CACpEC,2BAAAA,CADoE,0BACpE,CAAA,IACA,4BAAA;CAAA,OAAA,2BAAA,CAAA,IAAA,CAAA,2BAAA,CAEMC,4BAAAA,CAAW,IAAIL,QAASF,CAAAA,OAAb,CAAqBM,0BAArB,CAA2BE,2BAA3B,CACjB,OAAO,CACLD,SAAAA,2BADK,CAELE,QAAS,MAAA,CAAA,MAAA,CAAA,EAAA,CAAKJ,GAAL,CAAA,CACPK,iBAAkBH,2BADX,CAAA,CAFJ,CAFD,CAHQ,CAWbI,QAAsB,CAACC,KAAD,CAAQC,KAAR,CAAeC,SAAf,CAA0B,CAC7CD,KAAME,CAAAA,KAAV,GAAoBD,SAAUC,CAAAA,KAA9B,GACqB,IAAnB,EAAIF,KAAME,CAAAA,KAAV,CACEH,KAAMI,CAAAA,UAAN,EADF,CAGEJ,KAAMK,CAAAA,QAAN,CAAeJ,KAAME,CAAAA,KAArB,CAJJ,CADiD,CAXnC,CAoBhBjB,QAAQE,CAAAA,OAAR,CAAkBA,OA9BwF;\",\n\"sources\":[\"node_modules/react-leaflet/cjs/GeoJSON.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_leaflet$cjs$GeoJSON\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.GeoJSON = void 0;\\n\\nvar _core = require(\\\"@react-leaflet/core\\\");\\n\\nvar _leaflet = require(\\\"leaflet\\\");\\n\\nconst GeoJSON = (0, _core.createPathComponent)(function createGeoJSON({\\n  data,\\n  ...options\\n}, ctx) {\\n  const instance = new _leaflet.GeoJSON(data, options);\\n  return {\\n    instance,\\n    context: { ...ctx,\\n      overlayContainer: instance\\n    }\\n  };\\n}, function updateGeoJSON(layer, props, prevProps) {\\n  if (props.style !== prevProps.style) {\\n    if (props.style == null) {\\n      layer.resetStyle();\\n    } else {\\n      layer.setStyle(props.style);\\n    }\\n  }\\n});\\nexports.GeoJSON = GeoJSON;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"GeoJSON\",\"_core\",\"_leaflet\",\"createPathComponent\",\"createGeoJSON\",\"ctx\",\"data\",\"instance\",\"options\",\"context\",\"overlayContainer\",\"updateGeoJSON\",\"layer\",\"props\",\"prevProps\",\"style\",\"resetStyle\",\"setStyle\"]\n}\n"]