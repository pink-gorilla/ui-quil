["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-leaflet/cjs/ImageOverlay.js"],"~:js","shadow$provide.module$node_modules$react_leaflet$cjs$ImageOverlay=function(global,require,module,exports){exports.__esModule=!0;exports.ImageOverlay=void 0;var _core=require(\"module$node_modules$$react_leaflet$core$cjs$index\"),_leaflet=require(\"module$node_modules$leaflet$dist$leaflet_src\");global=(0,_core.createLayerComponent)(function($jscomp$destructuring$var12,ctx){var $jscomp$destructuring$var14=Object.assign({},$jscomp$destructuring$var12),bounds=$jscomp$destructuring$var12.bounds;$jscomp$destructuring$var12=\n$jscomp$destructuring$var12.url;$jscomp$destructuring$var14=(delete $jscomp$destructuring$var14.bounds,delete $jscomp$destructuring$var14.url,$jscomp$destructuring$var14);bounds=new _leaflet.ImageOverlay($jscomp$destructuring$var12,bounds,$jscomp$destructuring$var14);return{instance:bounds,context:Object.assign({},ctx,{overlayContainer:bounds})}},function(overlay,props,prevProps){(0,_core.updateMediaOverlay)(overlay,props,prevProps);props.url!==prevProps.url&&overlay.setUrl(props.url)});exports.ImageOverlay=\nglobal}","~:source","shadow$provide[\"module$node_modules$react_leaflet$cjs$ImageOverlay\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.ImageOverlay = void 0;\n\nvar _core = require(\"@react-leaflet/core\");\n\nvar _leaflet = require(\"leaflet\");\n\nconst ImageOverlay = (0, _core.createLayerComponent)(function createImageOveraly({\n  bounds,\n  url,\n  ...options\n}, ctx) {\n  const instance = new _leaflet.ImageOverlay(url, bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateImageOverlay(overlay, props, prevProps) {\n  (0, _core.updateMediaOverlay)(overlay, props, prevProps);\n\n  if (props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n});\nexports.ImageOverlay = ImageOverlay;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$react_leaflet$core$cjs$index","~$shadow.js","~$module$node_modules$leaflet$dist$leaflet_src"]],"~:properties",["^5",["__esModule","ImageOverlay","context","instance","overlayContainer"]],"~:compiled-at",1621210442250,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_leaflet$cjs$ImageOverlay.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/GA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,YAAR,CAAuB,IAAK,EAE5B,KAAIC,MAAQL,OAAA,CAAQ,mDAAR,CAAZ,CAEIM,SAAWN,OAAA,CAAQ,8CAAR,CAETI,OAAAA,CAAe,CAAC,CAAA,CAAGC,KAAME,CAAAA,oBAAV,EAAgCC,QAA2B,CAAC,2BAAD,CAI7EC,GAJ6E,CAIxE,CAJyE,IAAA,4BAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,2BAAA,CAAA,CAC/EC,OAD+E,2BAC/E,CAAA,MACAC,4BAAAA;AAF+E,2BAE/E,CAAA,GACA,4BAAA,EAAA,OAAA,2BAAA,CAAA,MAAA,CAAA,OAAA,2BAAA,CAAA,GAAA,CAAA,2BAAA,CAEMC,OAAAA,CAAW,IAAIN,QAASF,CAAAA,YAAb,CAA0BO,2BAA1B,CAA+BD,MAA/B,CAAuCG,2BAAvC,CACjB,OAAO,CACLD,SAAAA,MADK,CAELE,QAAS,MAAA,CAAA,MAAA,CAAA,EAAA,CAAKL,GAAL,CAAA,CACPM,iBAAkBH,MADX,CAAA,CAFJ,CAFD,CAJa,CAYlBI,QAA2B,CAACC,OAAD,CAAUC,KAAV,CAAiBC,SAAjB,CAA4B,CACxD,CAAC,CAAA,CAAGd,KAAMe,CAAAA,kBAAV,EAA8BH,OAA9B,CAAuCC,KAAvC,CAA8CC,SAA9C,CAEID,MAAMP,CAAAA,GAAV,GAAkBQ,SAAUR,CAAAA,GAA5B,EACEM,OAAQI,CAAAA,MAAR,CAAeH,KAAMP,CAAAA,GAArB,CAJsD,CAZrC,CAmBrBT,QAAQE,CAAAA,YAAR;AAAuBA,MA7BwF;\",\n\"sources\":[\"node_modules/react-leaflet/cjs/ImageOverlay.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_leaflet$cjs$ImageOverlay\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.ImageOverlay = void 0;\\n\\nvar _core = require(\\\"@react-leaflet/core\\\");\\n\\nvar _leaflet = require(\\\"leaflet\\\");\\n\\nconst ImageOverlay = (0, _core.createLayerComponent)(function createImageOveraly({\\n  bounds,\\n  url,\\n  ...options\\n}, ctx) {\\n  const instance = new _leaflet.ImageOverlay(url, bounds, options);\\n  return {\\n    instance,\\n    context: { ...ctx,\\n      overlayContainer: instance\\n    }\\n  };\\n}, function updateImageOverlay(overlay, props, prevProps) {\\n  (0, _core.updateMediaOverlay)(overlay, props, prevProps);\\n\\n  if (props.url !== prevProps.url) {\\n    overlay.setUrl(props.url);\\n  }\\n});\\nexports.ImageOverlay = ImageOverlay;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"ImageOverlay\",\"_core\",\"_leaflet\",\"createLayerComponent\",\"createImageOveraly\",\"ctx\",\"bounds\",\"url\",\"instance\",\"options\",\"context\",\"overlayContainer\",\"updateImageOverlay\",\"overlay\",\"props\",\"prevProps\",\"updateMediaOverlay\",\"setUrl\"]\n}\n"]