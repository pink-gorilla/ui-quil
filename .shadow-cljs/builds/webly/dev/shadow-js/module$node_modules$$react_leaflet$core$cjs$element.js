["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@react-leaflet/core/cjs/element.js"],"~:js","shadow$provide.module$node_modules$$react_leaflet$core$cjs$element=function(global,require,module,exports){exports.__esModule=!0;exports.createElementHook=function(createElement,updateElement){return null==updateElement?function(props,context){return(0,_react.useRef)(createElement(props,context))}:function(props,context){const elementRef=(0,_react.useRef)(createElement(props,context)),propsRef=(0,_react.useRef)(props),{instance}=elementRef.current;(0,_react.useEffect)(function(){propsRef.current!==\nprops&&(updateElement(instance,props,propsRef.current),propsRef.current=props)},[instance,props,context]);return elementRef}};var _react=require(\"module$node_modules$react$index\")}","~:source","shadow$provide[\"module$node_modules$$react_leaflet$core$cjs$element\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.createElementHook = createElementHook;\n\nvar _react = require(\"react\");\n\nfunction createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return (0, _react.useRef)(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = (0, _react.useRef)(createElement(props, context));\n    const propsRef = (0, _react.useRef)(props);\n    const {\n      instance\n    } = elementRef.current;\n    (0, _react.useEffect)(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["createElementHook","__esModule","current"]],"~:compiled-at",1621210442246,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$react_leaflet$core$cjs$element.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhHA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,iBAAR,CAIAA,QAA0B,CAACC,aAAD,CAAgBC,aAAhB,CAA+B,CACvD,MAAqB,KAArB,EAAIA,aAAJ,CACSC,QAAmC,CAACC,KAAD,CAAQC,OAAR,CAAiB,CACzD,MAAO,CAAC,CAAA,CAAGC,MAAOC,CAAAA,MAAX,EAAmBN,aAAA,CAAcG,KAAd,CAAqBC,OAArB,CAAnB,CADkD,CAD7D,CAMOG,QAAiC,CAACJ,KAAD,CAAQC,OAAR,CAAiB,CACvD,MAAMI,WAAa,CAAC,CAAA,CAAGH,MAAOC,CAAAA,MAAX,EAAmBN,aAAA,CAAcG,KAAd,CAAqBC,OAArB,CAAnB,CAAnB,CACMK,SAAW,CAAC,CAAA,CAAGJ,MAAOC,CAAAA,MAAX,EAAmBH,KAAnB,CADjB,CAEM,CACJO,QADI,CAAA,CAEFF,UAAWG,CAAAA,OACf,EAAC,CAAA,CAAGN,MAAOO,CAAAA,SAAX,EAAsBC,QAA2B,EAAG,CAC9CJ,QAASE,CAAAA,OAAb;AAAyBR,KAAzB,GACEF,aAAA,CAAcS,QAAd,CAAwBP,KAAxB,CAA+BM,QAASE,CAAAA,OAAxC,CACA,CAAAF,QAASE,CAAAA,OAAT,CAAmBR,KAFrB,CADkD,CAApD,CAKG,CAACO,QAAD,CAAWP,KAAX,CAAkBC,OAAlB,CALH,CAMA,OAAOI,WAZgD,CAPF,CAFzD,KAAIH,OAASV,OAAA,CAAQ,iCAAR,CANmG;\",\n\"sources\":[\"node_modules/@react-leaflet/core/cjs/element.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$react_leaflet$core$cjs$element\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.createElementHook = createElementHook;\\n\\nvar _react = require(\\\"react\\\");\\n\\nfunction createElementHook(createElement, updateElement) {\\n  if (updateElement == null) {\\n    return function useImmutableLeafletElement(props, context) {\\n      return (0, _react.useRef)(createElement(props, context));\\n    };\\n  }\\n\\n  return function useMutableLeafletElement(props, context) {\\n    const elementRef = (0, _react.useRef)(createElement(props, context));\\n    const propsRef = (0, _react.useRef)(props);\\n    const {\\n      instance\\n    } = elementRef.current;\\n    (0, _react.useEffect)(function updateElementProps() {\\n      if (propsRef.current !== props) {\\n        updateElement(instance, props, propsRef.current);\\n        propsRef.current = props;\\n      }\\n    }, [instance, props, context]);\\n    return elementRef;\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"createElementHook\",\"createElement\",\"updateElement\",\"useImmutableLeafletElement\",\"props\",\"context\",\"_react\",\"useRef\",\"useMutableLeafletElement\",\"elementRef\",\"propsRef\",\"instance\",\"current\",\"useEffect\",\"updateElementProps\"]\n}\n"]