["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-leaflet/cjs/hooks.js"],"~:js","shadow$provide.module$node_modules$react_leaflet$cjs$hooks=function(global,require,module,exports){function useMap(){return(0,_core.useLeafletContext)().map}exports.__esModule=!0;exports.useMap=useMap;exports.useMapEvent=function(type,handler){const map=useMap();(0,_react.useEffect)(function(){map.on(type,handler);return function(){map.off(type,handler)}},[map,type,handler]);return map};exports.useMapEvents=function(handlers){const map=useMap();(0,_react.useEffect)(function(){map.on(handlers);return function(){map.off(handlers)}},\n[map,handlers]);return map};var _core=require(\"module$node_modules$$react_leaflet$core$cjs$index\"),_react=require(\"module$node_modules$react$index\")}","~:source","shadow$provide[\"module$node_modules$react_leaflet$cjs$hooks\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.useMap = useMap;\nexports.useMapEvent = useMapEvent;\nexports.useMapEvents = useMapEvents;\n\nvar _core = require(\"@react-leaflet/core\");\n\nvar _react = require(\"react\");\n\nfunction useMap() {\n  return (0, _core.useLeafletContext)().map;\n}\n\nfunction useMapEvent(type, handler) {\n  const map = useMap();\n  (0, _react.useEffect)(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\n\nfunction useMapEvents(handlers) {\n  const map = useMap();\n  (0, _react.useEffect)(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$react_leaflet$core$cjs$index","~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["__esModule","useMap","useMapEvent","useMapEvents"]],"~:compiled-at",1621210442248,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_leaflet$cjs$hooks.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYxGC,QAASA,OAAM,EAAG,CAChB,MAAO,CAAC,CAAA,CAAGC,KAAMC,CAAAA,iBAAV,GAA+BC,CAAAA,GADtB,CATlBJ,OAAQK,CAAAA,UAAR,CAAqB,CAAA,CACrBL,QAAQC,CAAAA,MAAR,CAAiBA,MACjBD,QAAQM,CAAAA,WAAR,CAWAA,QAAoB,CAACC,IAAD,CAAOC,OAAP,CAAgB,CAClC,MAAMJ,IAAMH,MAAA,EACZ,EAAC,CAAA,CAAGQ,MAAOC,CAAAA,SAAX,EAAsBC,QAA2B,EAAG,CAElDP,GAAIQ,CAAAA,EAAJ,CAAOL,IAAP,CAAaC,OAAb,CACA,OAAOK,SAA8B,EAAG,CAEtCT,GAAIU,CAAAA,GAAJ,CAAQP,IAAR,CAAcC,OAAd,CAFsC,CAHU,CAApD,CAOG,CAACJ,GAAD,CAAMG,IAAN,CAAYC,OAAZ,CAPH,CAQA,OAAOJ,IAV2B,CAVpCJ,QAAQe,CAAAA,YAAR,CAuBAA,QAAqB,CAACC,QAAD,CAAW,CAC9B,MAAMZ,IAAMH,MAAA,EACZ,EAAC,CAAA,CAAGQ,MAAOC,CAAAA,SAAX,EAAsBO,QAA4B,EAAG,CACnDb,GAAIQ,CAAAA,EAAJ,CAAOI,QAAP,CACA,OAAOE,SAA+B,EAAG,CACvCd,GAAIU,CAAAA,GAAJ,CAAQE,QAAR,CADuC,CAFU,CAArD;AAKG,CAACZ,GAAD,CAAMY,QAAN,CALH,CAMA,OAAOZ,IARuB,CArBhC,KAAIF,MAAQJ,OAAA,CAAQ,mDAAR,CAAZ,CAEIW,OAASX,OAAA,CAAQ,iCAAR,CAV2F;\",\n\"sources\":[\"node_modules/react-leaflet/cjs/hooks.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_leaflet$cjs$hooks\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.useMap = useMap;\\nexports.useMapEvent = useMapEvent;\\nexports.useMapEvents = useMapEvents;\\n\\nvar _core = require(\\\"@react-leaflet/core\\\");\\n\\nvar _react = require(\\\"react\\\");\\n\\nfunction useMap() {\\n  return (0, _core.useLeafletContext)().map;\\n}\\n\\nfunction useMapEvent(type, handler) {\\n  const map = useMap();\\n  (0, _react.useEffect)(function addMapEventHandler() {\\n    // @ts-ignore event type\\n    map.on(type, handler);\\n    return function removeMapEventHandler() {\\n      // @ts-ignore event type\\n      map.off(type, handler);\\n    };\\n  }, [map, type, handler]);\\n  return map;\\n}\\n\\nfunction useMapEvents(handlers) {\\n  const map = useMap();\\n  (0, _react.useEffect)(function addMapEventHandlers() {\\n    map.on(handlers);\\n    return function removeMapEventHandlers() {\\n      map.off(handlers);\\n    };\\n  }, [map, handlers]);\\n  return map;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"useMap\",\"_core\",\"useLeafletContext\",\"map\",\"__esModule\",\"useMapEvent\",\"type\",\"handler\",\"_react\",\"useEffect\",\"addMapEventHandler\",\"on\",\"removeMapEventHandler\",\"off\",\"useMapEvents\",\"handlers\",\"addMapEventHandlers\",\"removeMapEventHandlers\"]\n}\n"]