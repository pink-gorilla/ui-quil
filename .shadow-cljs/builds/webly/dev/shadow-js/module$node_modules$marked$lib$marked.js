["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/marked/lib/marked.js"],"~:js","shadow$provide.module$node_modules$marked$lib$marked=function(global$jscomp$0,require,module$jscomp$0,exports){(function(global,factory){\"object\"===typeof exports&&\"undefined\"!==typeof module$jscomp$0?module$jscomp$0.exports=factory():\"function\"===typeof define&&define.amd?define(factory):(global=\"undefined\"!==typeof globalThis?globalThis:global||self,global.marked=factory())})(this,function(){function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=\ndescriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}function _unsupportedIterableToArray(o,minLen){if(o){if(\"string\"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,\n-1);\"Object\"===n&&o.constructor&&(n=o.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(o);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _createForOfIteratorHelperLoose(o,allowArrayLike){var it;if(\"undefined\"===typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=\n_unsupportedIterableToArray(o))||allowArrayLike&&o&&\"number\"===typeof o.length){it&&(o=it);var i=0;return function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}it=o[Symbol.iterator]();return it.next.bind(it)}function unescape$1(html){return html.replace(unescapeTest,function(_,n){n=n.toLowerCase();return\"colon\"===n?\":\":\"#\"===n.charAt(0)?\n\"x\"===n.charAt(1)?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1)):\"\"})}function rtrim$1(str,c,invert){var l=str.length;if(0===l)return\"\";for(var suffLen=0;suffLen<l;){var currChar=str.charAt(l-suffLen-1);if(currChar!==c||invert)if(currChar!==c&&invert)suffLen++;else break;else suffLen++}return str.substr(0,l-suffLen)}function outputLink(cap,link,raw){var href=link.href;link=link.title?_escape(link.title):null;var text=cap[1].replace(/\\\\([\\[\\]])/g,\"$1\");return\"!\"!==\ncap[0].charAt(0)?{type:\"link\",raw,href,title:link,text}:{type:\"image\",raw,href,title:link,text:_escape(text)}}function indentCodeCompensation(raw,text){raw=raw.match(/^(\\s+)(?:```)/);if(null===raw)return text;var indentToCode=raw[1];return text.split(\"\\n\").map(function(node){var matchIndentInNode=node.match(/^\\s+/);return null===matchIndentInNode?node:matchIndentInNode[0].length>=indentToCode.length?node.slice(indentToCode.length):node}).join(\"\\n\")}function smartypants(text){return text.replace(/---/g,\n\"—\").replace(/--/g,\"–\").replace(/(^|[-\\u2014/(\\[{\"\\s])'/g,\"$1‘\").replace(/'/g,\"’\").replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g,\"$1“\").replace(/\"/g,\"”\").replace(/\\.{3}/g,\"…\")}function mangle(text){var out=\"\",i,l=text.length;for(i=0;i<l;i++){var ch=text.charCodeAt(i);.5<Math.random()&&(ch=\"x\"+ch.toString(16));out+=\"\\x26#\"+ch+\";\"}return out}function marked(src,opt,callback){if(\"undefined\"===typeof src||null===src)throw Error(\"marked(): input parameter is undefined or null\");if(\"string\"!==typeof src)throw Error(\"marked(): input parameter is of type \"+\nObject.prototype.toString.call(src)+\", string expected\");\"function\"===typeof opt&&(callback=opt,opt=null);opt=merge({},marked.defaults,opt||{});checkSanitizeDeprecation(opt);if(callback){var highlight=opt.highlight;try{var tokens=Lexer_1.lex(src,opt)}catch(e){return callback(e)}var done=function(err){if(!err)try{var out=Parser_1.parse(tokens,opt)}catch(e){err=e}opt.highlight=highlight;return err?callback(err):callback(null,out)};if(!highlight||3>highlight.length)return done();delete opt.highlight;\nif(!tokens.length)return done();var pending=0;marked.walkTokens(tokens,function(token){\"code\"===token.type&&(pending++,setTimeout(function(){highlight(token.text,token.lang,function(err,code){if(err)return done(err);null!=code&&code!==token.text&&(token.text=code,token.escaped=!0);pending--;0===pending&&done()})},0))});0===pending&&done()}else try{var _tokens=Lexer_1.lex(src,opt);opt.walkTokens&&marked.walkTokens(_tokens,opt.walkTokens);return Parser_1.parse(_tokens,opt)}catch(e){e.message+=\"\\nPlease report this to https://github.com/markedjs/marked.\";\nif(opt.silent)return\"\\x3cp\\x3eAn error occurred:\\x3c/p\\x3e\\x3cpre\\x3e\"+escape(e.message+\"\",!0)+\"\\x3c/pre\\x3e\";throw e;}}var defaults$5=function(fn){var module={exports:{}};return fn(module,module.exports),module.exports}(function(module){function getDefaults(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:\"\",highlight:null,langPrefix:\"language-\",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}\nmodule.exports={defaults:getDefaults(),getDefaults,changeDefaults:function(newDefaults){module.exports.defaults=newDefaults}}}),escapeTest=/[&<>\"']/,escapeReplace=/[&<>\"']/g,escapeTestNoEncode=/[<>\"']|&(?!#?\\w+;)/,escapeReplaceNoEncode=/[<>\"']|&(?!#?\\w+;)/g,escapeReplacements={\"\\x26\":\"\\x26amp;\",\"\\x3c\":\"\\x26lt;\",\"\\x3e\":\"\\x26gt;\",'\"':\"\\x26quot;\",\"'\":\"\\x26#39;\"},getEscapeReplacement=function(ch){return escapeReplacements[ch]},unescapeTest=/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,caret=/(^|[^\\[])\\^/g,\nnonWordAndColonTest=/[^\\w:]/g,originIndependentUrl=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i,baseUrls={},justDomain=/^[^:]+:\\/*[^/]*$/,protocol=/^([^:]+:)[\\s\\S]*$/,domain=/^([^:]+:\\/*[^/]*)[\\s\\S]*$/,JSCompiler_object_inline_escape_5304=function(html,encode){if(encode){if(escapeTest.test(html))return html.replace(escapeReplace,getEscapeReplacement)}else if(escapeTestNoEncode.test(html))return html.replace(escapeReplaceNoEncode,getEscapeReplacement);return html},JSCompiler_object_inline_merge_5310=function(obj){for(var i=\n1,target,key;i<arguments.length;i++)for(key in target=arguments[i],target)Object.prototype.hasOwnProperty.call(target,key)&&(obj[key]=target[key]);return obj},defaults$4=defaults$5.defaults,splitCells=function(tableRow,count){tableRow=tableRow.replace(/\\|/g,function(match,offset,str){for(match=!1;0<=--offset&&\"\\\\\"===str[offset];)match=!match;return match?\"|\":\" |\"}).split(/ \\|/);var i=0;if(tableRow.length>count)tableRow.splice(count);else for(;tableRow.length<count;)tableRow.push(\"\");for(;i<tableRow.length;i++)tableRow[i]=\ntableRow[i].trim().replace(/\\\\\\|/g,\"|\");return tableRow},_escape=JSCompiler_object_inline_escape_5304,Tokenizer_1=function(){function Tokenizer(options){this.options=options||defaults$4}var _proto=Tokenizer.prototype;_proto.space=function(src){if(src=this.rules.block.newline.exec(src))return 1<src[0].length?{type:\"space\",raw:src[0]}:{raw:\"\\n\"}};_proto.code=function(src){if(src=this.rules.block.code.exec(src)){var text=src[0].replace(/^ {1,4}/gm,\"\");return{type:\"code\",raw:src[0],codeBlockStyle:\"indented\",\ntext:this.options.pedantic?text:rtrim$1(text,\"\\n\")}}};_proto.fences=function(src){if(src=this.rules.block.fences.exec(src)){var raw=src[0],text=indentCodeCompensation(raw,src[3]||\"\");return{type:\"code\",raw,lang:src[2]?src[2].trim():src[2],text}}};_proto.heading=function(src){if(src=this.rules.block.heading.exec(src)){var text=src[2].trim();if(/#$/.test(text)){var trimmed=rtrim$1(text,\"#\");if(this.options.pedantic)text=trimmed.trim();else if(!trimmed||/ $/.test(trimmed))text=trimmed.trim()}return{type:\"heading\",\nraw:src[0],depth:src[1].length,text}}};_proto.nptable=function(src){if(src=this.rules.block.nptable.exec(src))if(src={type:\"table\",header:splitCells(src[1].replace(/^ *| *\\| *$/g,\"\")),align:src[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:src[3]?src[3].replace(/\\n$/,\"\").split(\"\\n\"):[],raw:src[0]},src.header.length===src.align.length){var l=src.align.length,i;for(i=0;i<l;i++)/^ *-+: *$/.test(src.align[i])?src.align[i]=\"right\":/^ *:-+: *$/.test(src.align[i])?src.align[i]=\"center\":/^ *:-+ *$/.test(src.align[i])?\nsrc.align[i]=\"left\":src.align[i]=null;l=src.cells.length;for(i=0;i<l;i++)src.cells[i]=splitCells(src.cells[i],src.header.length);return src}};_proto.hr=function(src){if(src=this.rules.block.hr.exec(src))return{type:\"hr\",raw:src[0]}};_proto.blockquote=function(src){if(src=this.rules.block.blockquote.exec(src)){var text=src[0].replace(/^ *> ?/gm,\"\");return{type:\"blockquote\",raw:src[0],text}}};_proto.list=function(src){var cap=this.rules.block.list.exec(src);if(cap){src=cap[0];var bull=cap[2],isordered=\n1<bull.length,list={type:\"list\",raw:src,ordered:isordered,start:isordered?+bull.slice(0,-1):\"\",loose:!1,items:[]};cap=cap[0].match(this.rules.block.item);var next=!1,item,bnext,l=cap.length;var bcurr=this.rules.block.listItemStart.exec(cap[0]);for(var i=0;i<l;i++){src=item=cap[i];if(!this.options.pedantic&&(bnext=item.match(new RegExp(\"\\\\n\\\\s*\\\\n {0,\"+(bcurr[0].length-1)+\"}\\\\S\")))){var space=item.length-bnext.index+cap.slice(i+1).join(\"\\n\").length;list.raw=list.raw.substring(0,list.raw.length-space);\nsrc=item=item.substring(0,bnext.index);l=i+1}if(i!==l-1){bnext=this.rules.block.listItemStart.exec(cap[i+1]);if(this.options.pedantic?bnext[1].length>bcurr[1].length:bnext[1].length>=bcurr[0].length||3<bnext[1].length){cap.splice(i,2,cap[i]+(!this.options.pedantic&&bnext[1].length<bcurr[0].length&&!cap[i].match(/\\n$/)?\"\":\"\\n\")+cap[i+1]);i--;l--;continue}else if(!this.options.pedantic||this.options.smartLists?bnext[2][bnext[2].length-1]!==bull[bull.length-1]:isordered===(1===bnext[2].length))space=\ncap.slice(i+1).join(\"\\n\").length,list.raw=list.raw.substring(0,list.raw.length-space),i=l-1;bcurr=bnext}space=item.length;item=item.replace(/^ *([*+-]|\\d+[.)]) ?/,\"\");~item.indexOf(\"\\n \")&&(space-=item.length,item=this.options.pedantic?item.replace(/^ {1,4}/gm,\"\"):item.replace(new RegExp(\"^ {1,\"+space+\"}\",\"gm\"),\"\"));item=rtrim$1(item,\"\\n\");i!==l-1&&(src+=\"\\n\");space=next||/\\n\\n(?!\\s*$)/.test(src);i!==l-1&&(next=\"\\n\\n\"===src.slice(-2),space||(space=next));space&&(list.loose=!0);if(this.options.gfm){var istask=\n/^\\[[ xX]\\] /.test(item);var ischecked=void 0;istask&&(ischecked=\" \"!==item[1],item=item.replace(/^\\[[ xX]\\] +/,\"\"))}list.items.push({type:\"list_item\",raw:src,task:istask,checked:ischecked,loose:space,text:item})}return list}};_proto.html=function(src){if(src=this.rules.block.html.exec(src))return{type:this.options.sanitize?\"paragraph\":\"html\",raw:src[0],pre:!this.options.sanitizer&&(\"pre\"===src[1]||\"script\"===src[1]||\"style\"===src[1]),text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(src[0]):\n_escape(src[0]):src[0]}};_proto.def=function(src){if(src=this.rules.block.def.exec(src))return src[3]&&(src[3]=src[3].substring(1,src[3].length-1)),{type:\"def\",tag:src[1].toLowerCase().replace(/\\s+/g,\" \"),raw:src[0],href:src[2],title:src[3]}};_proto.table=function(src){var cap=this.rules.block.table.exec(src);if(cap&&(src={type:\"table\",header:splitCells(cap[1].replace(/^ *| *\\| *$/g,\"\")),align:cap[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:cap[3]?cap[3].replace(/\\n$/,\"\").split(\"\\n\"):[]},src.header.length===\nsrc.align.length)){src.raw=cap[0];cap=src.align.length;var i;for(i=0;i<cap;i++)/^ *-+: *$/.test(src.align[i])?src.align[i]=\"right\":/^ *:-+: *$/.test(src.align[i])?src.align[i]=\"center\":/^ *:-+ *$/.test(src.align[i])?src.align[i]=\"left\":src.align[i]=null;cap=src.cells.length;for(i=0;i<cap;i++)src.cells[i]=splitCells(src.cells[i].replace(/^ *\\| *| *\\| *$/g,\"\"),src.header.length);return src}};_proto.lheading=function(src){if(src=this.rules.block.lheading.exec(src))return{type:\"heading\",raw:src[0],depth:\"\\x3d\"===\nsrc[2].charAt(0)?1:2,text:src[1]}};_proto.paragraph=function(src){if(src=this.rules.block.paragraph.exec(src))return{type:\"paragraph\",raw:src[0],text:\"\\n\"===src[1].charAt(src[1].length-1)?src[1].slice(0,-1):src[1]}};_proto.text=function(src){if(src=this.rules.block.text.exec(src))return{type:\"text\",raw:src[0],text:src[0]}};_proto.escape=function(src){if(src=this.rules.inline.escape.exec(src))return{type:\"escape\",raw:src[0],text:_escape(src[1])}};_proto.tag=function(src,inLink,inRawBlock){if(src=this.rules.inline.tag.exec(src))return!inLink&&\n/^<a /i.test(src[0])?inLink=!0:inLink&&/^<\\/a>/i.test(src[0])&&(inLink=!1),!inRawBlock&&/^<(pre|code|kbd|script)(\\s|>)/i.test(src[0])?inRawBlock=!0:inRawBlock&&/^<\\/(pre|code|kbd|script)(\\s|>)/i.test(src[0])&&(inRawBlock=!1),{type:this.options.sanitize?\"text\":\"html\",raw:src[0],inLink,inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(src[0]):_escape(src[0]):src[0]}};_proto.link=function(src){if(src=this.rules.inline.link.exec(src)){var trimmedUrl=src[2].trim();if(!this.options.pedantic&&\n/^</.test(trimmedUrl)){if(!/>$/.test(trimmedUrl))return;var rtrimSlash=rtrim$1(trimmedUrl.slice(0,-1),\"\\\\\");if(0===(trimmedUrl.length-rtrimSlash.length)%2)return}else{a:{rtrimSlash=src[2];if(-1!==rtrimSlash.indexOf(\")\"))for(var l=rtrimSlash.length,level=0,i=0;i<l;i++)if(\"\\\\\"===rtrimSlash[i])i++;else if(\"(\"===rtrimSlash[i])level++;else if(\")\"===rtrimSlash[i]&&(level--,0>level)){rtrimSlash=i;break a}rtrimSlash=-1}-1<rtrimSlash&&(l=(0===src[0].indexOf(\"!\")?5:4)+src[1].length+rtrimSlash,src[2]=src[2].substring(0,\nrtrimSlash),src[0]=src[0].substring(0,l).trim(),src[3]=\"\")}rtrimSlash=src[2];l=\"\";if(this.options.pedantic){if(level=/^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(rtrimSlash))rtrimSlash=level[1],l=level[3]}else l=src[3]?src[3].slice(1,-1):\"\";rtrimSlash=rtrimSlash.trim();/^</.test(rtrimSlash)&&(rtrimSlash=this.options.pedantic&&!/>$/.test(trimmedUrl)?rtrimSlash.slice(1):rtrimSlash.slice(1,-1));return outputLink(src,{href:rtrimSlash?rtrimSlash.replace(this.rules.inline._escapes,\"$1\"):rtrimSlash,title:l?l.replace(this.rules.inline._escapes,\n\"$1\"):l},src[0])}};_proto.reflink=function(src,links){var cap;if((cap=this.rules.inline.reflink.exec(src))||(cap=this.rules.inline.nolink.exec(src)))return src=(cap[2]||cap[1]).replace(/\\s+/g,\" \"),src=links[src.toLowerCase()],src&&src.href?outputLink(cap,src,cap[0]):(links=cap[0].charAt(0),{type:\"text\",raw:links,text:links})};_proto.emStrong=function(src,maskedSrc,prevChar){void 0===prevChar&&(prevChar=\"\");var match=this.rules.inline.emStrong.lDelim.exec(src);if(match&&(!match[3]||!prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/))){var nextChar=\nmatch[1]||match[2]||\"\";if(!nextChar||nextChar&&(\"\"===prevChar||this.rules.inline.punctuation.exec(prevChar))){prevChar=match[0].length-1;var rDelim;nextChar=prevChar;var midDelimTotal=0,endReg=\"*\"===match[0][0]?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;endReg.lastIndex=0;for(maskedSrc=maskedSrc.slice(-1*src.length+prevChar);null!=(match=endReg.exec(maskedSrc));)if(rDelim=match[1]||match[2]||match[3]||match[4]||match[5]||match[6])if(rDelim=rDelim.length,match[3]||match[4])nextChar+=\nrDelim;else if((match[5]||match[6])&&prevChar%3&&!((prevChar+rDelim)%3))midDelimTotal+=rDelim;else if(nextChar-=rDelim,!(0<nextChar)){0>=nextChar+midDelimTotal-rDelim&&!maskedSrc.slice(endReg.lastIndex).match(endReg)&&(rDelim=Math.min(rDelim,rDelim+nextChar+midDelimTotal));if(Math.min(prevChar,rDelim)%2)return{type:\"em\",raw:src.slice(0,prevChar+match.index+rDelim+1),text:src.slice(1,prevChar+match.index+rDelim)};if(0===Math.min(prevChar,rDelim)%2)return{type:\"strong\",raw:src.slice(0,prevChar+match.index+\nrDelim+1),text:src.slice(2,prevChar+match.index+rDelim-1)}}}}};_proto.codespan=function(src){if(src=this.rules.inline.code.exec(src)){var text=src[2].replace(/\\n/g,\" \"),hasNonSpaceChars=/[^ ]/.test(text),hasSpaceCharsOnBothEnds=/^ /.test(text)&&/ $/.test(text);hasNonSpaceChars&&hasSpaceCharsOnBothEnds&&(text=text.substring(1,text.length-1));text=_escape(text,!0);return{type:\"codespan\",raw:src[0],text}}};_proto.br=function(src){if(src=this.rules.inline.br.exec(src))return{type:\"br\",raw:src[0]}};_proto.del=\nfunction(src){if(src=this.rules.inline.del.exec(src))return{type:\"del\",raw:src[0],text:src[2]}};_proto.autolink=function(src,mangle){if(src=this.rules.inline.autolink.exec(src)){if(\"@\"===src[2]){mangle=_escape(this.options.mangle?mangle(src[1]):src[1]);var href=\"mailto:\"+mangle}else href=mangle=_escape(src[1]);return{type:\"link\",raw:src[0],text:mangle,href,tokens:[{type:\"text\",raw:mangle,text:mangle}]}}};_proto.url=function(src,mangle){if(src=this.rules.inline.url.exec(src)){if(\"@\"===src[2]){mangle=\n_escape(this.options.mangle?mangle(src[0]):src[0]);var href=\"mailto:\"+mangle}else{do mangle=src[0],src[0]=this.rules.inline._backpedal.exec(src[0])[0];while(mangle!==src[0]);mangle=_escape(src[0]);href=\"www.\"===src[1]?\"http://\"+mangle:mangle}return{type:\"link\",raw:src[0],text:mangle,href,tokens:[{type:\"text\",raw:mangle,text:mangle}]}}};_proto.inlineText=function(src,inRawBlock,smartypants){if(src=this.rules.inline.text.exec(src))return inRawBlock=inRawBlock?this.options.sanitize?this.options.sanitizer?\nthis.options.sanitizer(src[0]):_escape(src[0]):src[0]:_escape(this.options.smartypants?smartypants(src[0]):src[0]),{type:\"text\",raw:src[0],text:inRawBlock}};return Tokenizer}(),noopTest={exec:function(){}},edit=function(regex,opt){regex=regex.source||regex;opt=opt||\"\";var obj={replace:function(name,val){val=val.source||val;val=val.replace(caret,\"$1\");regex=regex.replace(name,val);return obj},getRegex:function(){return new RegExp(regex,opt)}};return obj},block$1={newline:/^(?: *(?:\\n|$))+/,code:/^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\nfences:/^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,list:/^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,html:\"^ {0,3}(?:\\x3c(script|pre|style)[\\\\s\\x3e][\\\\s\\\\S]*?(?:\\x3c/\\\\1\\x3e[^\\\\n]*\\\\n+|$)|comment[^\\\\n]*(\\\\n+|$)|\\x3c\\\\?[\\\\s\\\\S]*?(?:\\\\?\\x3e\\\\n*|$)|\\x3c![A-Z][\\\\s\\\\S]*?(?:\\x3e\\\\n*|$)|\\x3c!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]\\x3e\\\\n*|$)|\\x3c/?(tag)(?: +|\\\\n|/?\\x3e)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)|\\x3c(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?\\x3e(?\\x3d[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)|\\x3c/(?!script|pre|style)[a-z][\\\\w-]*\\\\s*\\x3e(?\\x3d[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$))\",\ndef:/^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,nptable:noopTest,table:noopTest,lheading:/^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,_paragraph:/^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,text:/^[^\\n]+/,_label:/(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/,_title:/(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/};block$1.def=edit(block$1.def).replace(\"label\",block$1._label).replace(\"title\",block$1._title).getRegex();block$1.bullet=\n/(?:[*+-]|\\d{1,9}[.)])/;block$1.item=/^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;block$1.item=edit(block$1.item,\"gm\").replace(/bull/g,block$1.bullet).getRegex();block$1.listItemStart=edit(/^( *)(bull) */).replace(\"bull\",block$1.bullet).getRegex();block$1.list=edit(block$1.list).replace(/bull/g,block$1.bullet).replace(\"hr\",\"\\\\n+(?\\x3d\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))\").replace(\"def\",\"\\\\n+(?\\x3d\"+block$1.def.source+\")\").getRegex();block$1._tag=\"address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul\";\nblock$1._comment=/\\x3c!--(?!-?>)[\\s\\S]*?(?:--\\x3e|$)/;block$1.html=edit(block$1.html,\"i\").replace(\"comment\",block$1._comment).replace(\"tag\",block$1._tag).replace(\"attribute\",/ +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();block$1.paragraph=edit(block$1._paragraph).replace(\"hr\",block$1.hr).replace(\"heading\",\" {0,3}#{1,6} \").replace(\"|lheading\",\"\").replace(\"blockquote\",\" {0,3}\\x3e\").replace(\"fences\",\" {0,3}(?:`{3,}(?\\x3d[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\",\n\" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\",\"\\x3c/?(?:tag)(?: +|\\\\n|/?\\x3e)|\\x3c(?:script|pre|style|!--)\").replace(\"tag\",block$1._tag).getRegex();block$1.blockquote=edit(block$1.blockquote).replace(\"paragraph\",block$1.paragraph).getRegex();block$1.normal=JSCompiler_object_inline_merge_5310({},block$1);block$1.gfm=JSCompiler_object_inline_merge_5310({},block$1.normal,{nptable:\"^ *([^|\\\\n ].*\\\\|.*)\\\\n {0,3}([-:]+ *\\\\|[-| :]*)(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)\",\ntable:\"^ *\\\\|(.+)\\\\n {0,3}\\\\|?( *[-:]+[-| :]*)(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)\"});block$1.gfm.nptable=edit(block$1.gfm.nptable).replace(\"hr\",block$1.hr).replace(\"heading\",\" {0,3}#{1,6} \").replace(\"blockquote\",\" {0,3}\\x3e\").replace(\"code\",\" {4}[^\\\\n]\").replace(\"fences\",\" {0,3}(?:`{3,}(?\\x3d[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\",\" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\",\"\\x3c/?(?:tag)(?: +|\\\\n|/?\\x3e)|\\x3c(?:script|pre|style|!--)\").replace(\"tag\",\nblock$1._tag).getRegex();block$1.gfm.table=edit(block$1.gfm.table).replace(\"hr\",block$1.hr).replace(\"heading\",\" {0,3}#{1,6} \").replace(\"blockquote\",\" {0,3}\\x3e\").replace(\"code\",\" {4}[^\\\\n]\").replace(\"fences\",\" {0,3}(?:`{3,}(?\\x3d[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\",\" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\",\"\\x3c/?(?:tag)(?: +|\\\\n|/?\\x3e)|\\x3c(?:script|pre|style|!--)\").replace(\"tag\",block$1._tag).getRegex();block$1.pedantic=JSCompiler_object_inline_merge_5310({},block$1.normal,{html:edit(\"^ *(?:comment *(?:\\\\n|\\\\s*$)|\\x3c(tag)[\\\\s\\\\S]+?\\x3c/\\\\1\\x3e *(?:\\\\n{2,}|\\\\s*$)|\\x3ctag(?:\\\"[^\\\"]*\\\"|'[^']*'|\\\\s[^'\\\"/\\x3e\\\\s]*)*?/?\\x3e *(?:\\\\n{2,}|\\\\s*$))\").replace(\"comment\",\nblock$1._comment).replace(/tag/g,\"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b\").getRegex(),def:/^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,heading:/^(#{1,6})(.*)(?:\\n+|$)/,fences:noopTest,paragraph:edit(block$1.normal._paragraph).replace(\"hr\",block$1.hr).replace(\"heading\",\" *#{1,6} *[^\\n]\").replace(\"lheading\",block$1.lheading).replace(\"blockquote\",\" {0,3}\\x3e\").replace(\"|fences\",\n\"\").replace(\"|list\",\"\").replace(\"|html\",\"\").getRegex()});var inline$1={escape:/^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,autolink:/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,url:noopTest,tag:\"^comment|^\\x3c/[a-zA-Z][\\\\w:-]*\\\\s*\\x3e|^\\x3c[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?\\x3e|^\\x3c\\\\?[\\\\s\\\\S]*?\\\\?\\x3e|^\\x3c![a-zA-Z]+\\\\s[\\\\s\\\\S]*?\\x3e|^\\x3c!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]\\x3e\",link:/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,reflink:/^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,nolink:/^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\nreflinkSearch:\"reflink|nolink(?!\\\\()\",emStrong:{lDelim:/^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,rDelimAst:/__[^_]*?\\*[^_]*?__|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,rDelimUnd:/\\*\\*[^*]*?_[^*]*?\\*\\*|[punct*](_+)(?=[\\s]|$)|[^punct*_\\s](_+)(?=[punct*\\s]|$)|[punct*\\s](_+)(?=[^punct*_\\s])|[\\s](_+)(?=[punct*])|[punct*](_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\nbr:/^( {2,}|\\\\)\\n(?!\\s*$)/,del:noopTest,text:/^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,punctuation:/^([\\spunctuation])/,_punctuation:\"!\\\"#$%\\x26'()+\\\\-.,/:;\\x3c\\x3d\\x3e?@\\\\[\\\\]`^{|}~\"};inline$1.punctuation=edit(inline$1.punctuation).replace(/punctuation/g,inline$1._punctuation).getRegex();inline$1.blockSkip=/\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;inline$1.escapedEmSt=/\\\\\\*|\\\\_/g;inline$1._comment=edit(block$1._comment).replace(\"(?:--\\x3e|$)\",\"--\\x3e\").getRegex();\ninline$1.emStrong.lDelim=edit(inline$1.emStrong.lDelim).replace(/punct/g,inline$1._punctuation).getRegex();inline$1.emStrong.rDelimAst=edit(inline$1.emStrong.rDelimAst,\"g\").replace(/punct/g,inline$1._punctuation).getRegex();inline$1.emStrong.rDelimUnd=edit(inline$1.emStrong.rDelimUnd,\"g\").replace(/punct/g,inline$1._punctuation).getRegex();inline$1._escapes=/\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;inline$1._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;inline$1._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline$1.autolink=edit(inline$1.autolink).replace(\"scheme\",inline$1._scheme).replace(\"email\",inline$1._email).getRegex();inline$1._attribute=/\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;inline$1.tag=edit(inline$1.tag).replace(\"comment\",inline$1._comment).replace(\"attribute\",inline$1._attribute).getRegex();inline$1._label=/(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;inline$1._href=/<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;inline$1._title=/\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\ninline$1.link=edit(inline$1.link).replace(\"label\",inline$1._label).replace(\"href\",inline$1._href).replace(\"title\",inline$1._title).getRegex();inline$1.reflink=edit(inline$1.reflink).replace(\"label\",inline$1._label).getRegex();inline$1.reflinkSearch=edit(inline$1.reflinkSearch,\"g\").replace(\"reflink\",inline$1.reflink).replace(\"nolink\",inline$1.nolink).getRegex();inline$1.normal=JSCompiler_object_inline_merge_5310({},inline$1);inline$1.pedantic=JSCompiler_object_inline_merge_5310({},inline$1.normal,\n{strong:{start:/^__|\\*\\*/,middle:/^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,endAst:/\\*\\*(?!\\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\\*/,middle:/^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,endAst:/\\*(?!\\*)/g,endUnd:/_(?!_)/g},link:edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace(\"label\",inline$1._label).getRegex(),reflink:edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace(\"label\",inline$1._label).getRegex()});inline$1.gfm=JSCompiler_object_inline_merge_5310({},inline$1.normal,\n{escape:edit(inline$1.escape).replace(\"])\",\"~|])\").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/});\ninline$1.gfm.url=edit(inline$1.gfm.url,\"i\").replace(\"email\",inline$1.gfm._extended_email).getRegex();inline$1.breaks=JSCompiler_object_inline_merge_5310({},inline$1.gfm,{br:edit(inline$1.br).replace(\"{2,}\",\"*\").getRegex(),text:edit(inline$1.gfm.text).replace(\"\\\\b_\",\"\\\\b_| {2,}\\\\n\").replace(/\\{2,\\}/g,\"*\").getRegex()});var defaults$3=defaults$5.defaults,repeatString=function(pattern,count){if(1>count)return\"\";for(var result=\"\";1<count;)count&1&&(result+=pattern),count>>=1,pattern+=pattern;return result+\npattern},Lexer_1=function(){function Lexer(options){this.tokens=[];this.tokens.links=Object.create(null);this.options=options||defaults$3;this.options.tokenizer=this.options.tokenizer||new Tokenizer_1;this.tokenizer=this.options.tokenizer;this.tokenizer.options=this.options;options={block:block$1.normal,inline:inline$1.normal};this.options.pedantic?(options.block=block$1.pedantic,options.inline=inline$1.pedantic):this.options.gfm&&(options.block=block$1.gfm,options.inline=this.options.breaks?inline$1.breaks:\ninline$1.gfm);this.tokenizer.rules=options}Lexer.lex=function(src,options){return(new Lexer(options)).lex(src)};Lexer.lexInline=function(src,options){return(new Lexer(options)).inlineTokens(src)};var _proto=Lexer.prototype;_proto.lex=function(src){src=src.replace(/\\r\\n|\\r/g,\"\\n\").replace(/\\t/g,\"    \");this.blockTokens(src,this.tokens,!0);this.inline(this.tokens);return this.tokens};_proto.blockTokens=function(src,tokens,top){void 0===tokens&&(tokens=[]);void 0===top&&(top=!0);this.options.pedantic&&\n(src=src.replace(/^ +$/gm,\"\"));for(var token,i,l;src;)if(token=this.tokenizer.space(src))src=src.substring(token.raw.length),token.type&&tokens.push(token);else if(token=this.tokenizer.code(src))src=src.substring(token.raw.length),(i=tokens[tokens.length-1])&&\"paragraph\"===i.type?(i.raw+=\"\\n\"+token.raw,i.text+=\"\\n\"+token.text):tokens.push(token);else if(token=this.tokenizer.fences(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.heading(src))src=src.substring(token.raw.length),\ntokens.push(token);else if(token=this.tokenizer.nptable(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.hr(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.blockquote(src))src=src.substring(token.raw.length),token.tokens=this.blockTokens(token.text,[],top),tokens.push(token);else if(token=this.tokenizer.list(src)){src=src.substring(token.raw.length);l=token.items.length;for(i=0;i<l;i++)token.items[i].tokens=this.blockTokens(token.items[i].text,\n[],!1);tokens.push(token)}else if(token=this.tokenizer.html(src))src=src.substring(token.raw.length),tokens.push(token);else if(top&&(token=this.tokenizer.def(src)))src=src.substring(token.raw.length),this.tokens.links[token.tag]||(this.tokens.links[token.tag]={href:token.href,title:token.title});else if(token=this.tokenizer.table(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.lheading(src))src=src.substring(token.raw.length),tokens.push(token);else if(top&&\n(token=this.tokenizer.paragraph(src)))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.text(src))src=src.substring(token.raw.length),(i=tokens[tokens.length-1])&&\"text\"===i.type?(i.raw+=\"\\n\"+token.raw,i.text+=\"\\n\"+token.text):tokens.push(token);else if(src)if(src=\"Infinite loop on byte: \"+src.charCodeAt(0),this.options.silent){console.error(src);break}else throw Error(src);return tokens};_proto.inline=function(tokens){var i,j,k,l=tokens.length;for(i=0;i<l;i++){var token=\ntokens[i];switch(token.type){case \"paragraph\":case \"text\":case \"heading\":token.tokens=[];this.inlineTokens(token.text,token.tokens);break;case \"table\":token.tokens={header:[],cells:[]};var l2=token.header.length;for(j=0;j<l2;j++)token.tokens.header[j]=[],this.inlineTokens(token.header[j],token.tokens.header[j]);l2=token.cells.length;for(j=0;j<l2;j++){var row=token.cells[j];token.tokens.cells[j]=[];for(k=0;k<row.length;k++)token.tokens.cells[j][k]=[],this.inlineTokens(row[k],token.tokens.cells[j][k])}break;\ncase \"blockquote\":this.inline(token.tokens);break;case \"list\":for(l2=token.items.length,j=0;j<l2;j++)this.inline(token.items[j].tokens)}}return tokens};_proto.inlineTokens=function(src,tokens,inLink,inRawBlock){void 0===tokens&&(tokens=[]);void 0===inLink&&(inLink=!1);void 0===inRawBlock&&(inRawBlock=!1);var token,maskedSrc=src,prevChar;if(this.tokens.links){var lastToken=Object.keys(this.tokens.links);if(0<lastToken.length)for(;null!=(token=this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc));)lastToken.includes(token[0].slice(token[0].lastIndexOf(\"[\")+\n1,-1))&&(maskedSrc=maskedSrc.slice(0,token.index)+\"[\"+repeatString(\"a\",token[0].length-2)+\"]\"+maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;null!=(token=this.tokenizer.rules.inline.blockSkip.exec(maskedSrc));)maskedSrc=maskedSrc.slice(0,token.index)+\"[\"+repeatString(\"a\",token[0].length-2)+\"]\"+maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;null!=(token=this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc));)maskedSrc=maskedSrc.slice(0,token.index)+\n\"++\"+maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);for(;src;){keepPrevChar||(prevChar=\"\");var keepPrevChar=!1;if(token=this.tokenizer.escape(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.tag(src,inLink,inRawBlock))src=src.substring(token.raw.length),inLink=token.inLink,inRawBlock=token.inRawBlock,(lastToken=tokens[tokens.length-1])&&\"text\"===token.type&&\"text\"===lastToken.type?(lastToken.raw+=token.raw,lastToken.text+=token.text):tokens.push(token);\nelse if(token=this.tokenizer.link(src))src=src.substring(token.raw.length),\"link\"===token.type&&(token.tokens=this.inlineTokens(token.text,[],!0,inRawBlock)),tokens.push(token);else if(token=this.tokenizer.reflink(src,this.tokens.links))src=src.substring(token.raw.length),lastToken=tokens[tokens.length-1],\"link\"===token.type?(token.tokens=this.inlineTokens(token.text,[],!0,inRawBlock),tokens.push(token)):lastToken&&\"text\"===token.type&&\"text\"===lastToken.type?(lastToken.raw+=token.raw,lastToken.text+=\ntoken.text):tokens.push(token);else if(token=this.tokenizer.emStrong(src,maskedSrc,prevChar))src=src.substring(token.raw.length),token.tokens=this.inlineTokens(token.text,[],inLink,inRawBlock),tokens.push(token);else if(token=this.tokenizer.codespan(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.br(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.del(src))src=src.substring(token.raw.length),token.tokens=this.inlineTokens(token.text,\n[],inLink,inRawBlock),tokens.push(token);else if(token=this.tokenizer.autolink(src,mangle))src=src.substring(token.raw.length),tokens.push(token);else if(!inLink&&(token=this.tokenizer.url(src,mangle)))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.inlineText(src,inRawBlock,smartypants))src=src.substring(token.raw.length),\"_\"!==token.raw.slice(-1)&&(prevChar=token.raw.slice(-1)),keepPrevChar=!0,(lastToken=tokens[tokens.length-1])&&\"text\"===lastToken.type?(lastToken.raw+=\ntoken.raw,lastToken.text+=token.text):tokens.push(token);else if(src)if(src=\"Infinite loop on byte: \"+src.charCodeAt(0),this.options.silent){console.error(src);break}else throw Error(src);}return tokens};_createClass(Lexer,null,[{key:\"rules\",get:function(){return{block:block$1,inline:inline$1}}}]);return Lexer}(),defaults$2=defaults$5.defaults,cleanUrl=function(sanitize,base,href){if(sanitize){try{var prot=decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest,\"\").toLowerCase()}catch(e){return null}if(0===\nprot.indexOf(\"javascript:\")||0===prot.indexOf(\"vbscript:\")||0===prot.indexOf(\"data:\"))return null}base&&!originIndependentUrl.test(href)&&(sanitize=base,baseUrls[\" \"+sanitize]||(justDomain.test(sanitize)?baseUrls[\" \"+sanitize]=sanitize+\"/\":baseUrls[\" \"+sanitize]=rtrim$1(sanitize,\"/\",!0)),sanitize=baseUrls[\" \"+sanitize],base=-1===sanitize.indexOf(\":\"),href=\"//\"===href.substring(0,2)?base?href:sanitize.replace(protocol,\"$1\")+href:\"/\"===href.charAt(0)?base?href:sanitize.replace(domain,\"$1\")+href:sanitize+\nhref);try{href=encodeURI(href).replace(/%25/g,\"%\")}catch(e){return null}return href},Renderer_1=function(){function Renderer(options){this.options=options||defaults$2}var _proto=Renderer.prototype;_proto.code=function(_code,infostring,escaped){infostring=(infostring||\"\").match(/\\S*/)[0];if(this.options.highlight){var out=this.options.highlight(_code,infostring);null!=out&&out!==_code&&(escaped=!0,_code=out)}_code=_code.replace(/\\n$/,\"\")+\"\\n\";return infostring?'\\x3cpre\\x3e\\x3ccode class\\x3d\"'+this.options.langPrefix+\nJSCompiler_object_inline_escape_5304(infostring,!0)+'\"\\x3e'+(escaped?_code:JSCompiler_object_inline_escape_5304(_code,!0))+\"\\x3c/code\\x3e\\x3c/pre\\x3e\\n\":\"\\x3cpre\\x3e\\x3ccode\\x3e\"+(escaped?_code:JSCompiler_object_inline_escape_5304(_code,!0))+\"\\x3c/code\\x3e\\x3c/pre\\x3e\\n\"};_proto.blockquote=function(quote){return\"\\x3cblockquote\\x3e\\n\"+quote+\"\\x3c/blockquote\\x3e\\n\"};_proto.html=function(_html){return _html};_proto.heading=function(text,level,raw,slugger){return this.options.headerIds?\"\\x3ch\"+level+\n' id\\x3d\"'+this.options.headerPrefix+slugger.slug(raw)+'\"\\x3e'+text+\"\\x3c/h\"+level+\"\\x3e\\n\":\"\\x3ch\"+level+\"\\x3e\"+text+\"\\x3c/h\"+level+\"\\x3e\\n\"};_proto.hr=function(){return this.options.xhtml?\"\\x3chr/\\x3e\\n\":\"\\x3chr\\x3e\\n\"};_proto.list=function(body,ordered,start){var type=ordered?\"ol\":\"ul\";return\"\\x3c\"+type+(ordered&&1!==start?' start\\x3d\"'+start+'\"':\"\")+\"\\x3e\\n\"+body+\"\\x3c/\"+type+\"\\x3e\\n\"};_proto.listitem=function(text){return\"\\x3cli\\x3e\"+text+\"\\x3c/li\\x3e\\n\"};_proto.checkbox=function(checked){return\"\\x3cinput \"+\n(checked?'checked\\x3d\"\" ':\"\")+'disabled\\x3d\"\" type\\x3d\"checkbox\"'+(this.options.xhtml?\" /\":\"\")+\"\\x3e \"};_proto.paragraph=function(text){return\"\\x3cp\\x3e\"+text+\"\\x3c/p\\x3e\\n\"};_proto.table=function(header,body){body&&(body=\"\\x3ctbody\\x3e\"+body+\"\\x3c/tbody\\x3e\");return\"\\x3ctable\\x3e\\n\\x3cthead\\x3e\\n\"+header+\"\\x3c/thead\\x3e\\n\"+body+\"\\x3c/table\\x3e\\n\"};_proto.tablerow=function(content){return\"\\x3ctr\\x3e\\n\"+content+\"\\x3c/tr\\x3e\\n\"};_proto.tablecell=function(content,flags){var type=flags.header?\"th\":\"td\";\nreturn(flags.align?\"\\x3c\"+type+' align\\x3d\"'+flags.align+'\"\\x3e':\"\\x3c\"+type+\"\\x3e\")+content+\"\\x3c/\"+type+\"\\x3e\\n\"};_proto.strong=function(text){return\"\\x3cstrong\\x3e\"+text+\"\\x3c/strong\\x3e\"};_proto.em=function(text){return\"\\x3cem\\x3e\"+text+\"\\x3c/em\\x3e\"};_proto.codespan=function(text){return\"\\x3ccode\\x3e\"+text+\"\\x3c/code\\x3e\"};_proto.br=function(){return this.options.xhtml?\"\\x3cbr/\\x3e\":\"\\x3cbr\\x3e\"};_proto.del=function(text){return\"\\x3cdel\\x3e\"+text+\"\\x3c/del\\x3e\"};_proto.link=function(href,title,\ntext){href=cleanUrl(this.options.sanitize,this.options.baseUrl,href);if(null===href)return text;href='\\x3ca href\\x3d\"'+JSCompiler_object_inline_escape_5304(href)+'\"';title&&(href+=' title\\x3d\"'+title+'\"');return href+(\"\\x3e\"+text+\"\\x3c/a\\x3e\")};_proto.image=function(href,title,text){href=cleanUrl(this.options.sanitize,this.options.baseUrl,href);if(null===href)return text;href='\\x3cimg src\\x3d\"'+href+'\" alt\\x3d\"'+text+'\"';title&&(href+=' title\\x3d\"'+title+'\"');return href+=this.options.xhtml?\"/\\x3e\":\n\"\\x3e\"};_proto.text=function(_text){return _text};return Renderer}(),TextRenderer_1=function(){function TextRenderer(){}var _proto=TextRenderer.prototype;_proto.strong=function(text){return text};_proto.em=function(text){return text};_proto.codespan=function(text){return text};_proto.del=function(text){return text};_proto.html=function(text){return text};_proto.text=function(_text){return _text};_proto.link=function(href,title,text){return\"\"+text};_proto.image=function(href,title,text){return\"\"+text};\n_proto.br=function(){return\"\"};return TextRenderer}(),Slugger_1=function(){function Slugger(){this.seen={}}var _proto=Slugger.prototype;_proto.serialize=function(value){return value.toLowerCase().trim().replace(/<[!\\/a-z].*?>/ig,\"\").replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g,\"\").replace(/\\s/g,\"-\")};_proto.getNextSafeSlug=function(originalSlug,isDryRun){var slug=originalSlug,occurenceAccumulator=0;if(this.seen.hasOwnProperty(slug)){occurenceAccumulator=this.seen[originalSlug];\ndo occurenceAccumulator++,slug=originalSlug+\"-\"+occurenceAccumulator;while(this.seen.hasOwnProperty(slug))}isDryRun||(this.seen[originalSlug]=occurenceAccumulator,this.seen[slug]=0);return slug};_proto.slug=function(value,options){void 0===options&&(options={});value=this.serialize(value);return this.getNextSafeSlug(value,options.dryrun)};return Slugger}(),defaults$1=defaults$5.defaults,Parser_1=function(){function Parser(options){this.options=options||defaults$1;this.options.renderer=this.options.renderer||\nnew Renderer_1;this.renderer=this.options.renderer;this.renderer.options=this.options;this.textRenderer=new TextRenderer_1;this.slugger=new Slugger_1}Parser.parse=function(tokens,options){return(new Parser(options)).parse(tokens)};Parser.parseInline=function(tokens,options){return(new Parser(options)).parseInline(tokens)};var _proto=Parser.prototype;_proto.parse=function(tokens,top){void 0===top&&(top=!0);var out=\"\",i,j,k,header,l=tokens.length;for(i=0;i<l;i++){var token=tokens[i];switch(token.type){case \"space\":continue;\ncase \"hr\":out+=this.renderer.hr();continue;case \"heading\":out+=this.renderer.heading(this.parseInline(token.tokens),token.depth,unescape$1(this.parseInline(token.tokens,this.textRenderer)),this.slugger);continue;case \"code\":out+=this.renderer.code(token.text,token.lang,token.escaped);continue;case \"table\":var cell=header=\"\";var l2=token.header.length;for(j=0;j<l2;j++)cell+=this.renderer.tablecell(this.parseInline(token.tokens.header[j]),{header:!0,align:token.align[j]});header+=this.renderer.tablerow(cell);\nvar body=\"\";l2=token.cells.length;for(j=0;j<l2;j++){var row=token.tokens.cells[j];cell=\"\";var l3=row.length;for(k=0;k<l3;k++)cell+=this.renderer.tablecell(this.parseInline(row[k]),{header:!1,align:token.align[k]});body+=this.renderer.tablerow(cell)}out+=this.renderer.table(header,body);continue;case \"blockquote\":body=this.parse(token.tokens);out+=this.renderer.blockquote(body);continue;case \"list\":k=token.ordered;l3=token.start;row=token.loose;l2=token.items.length;body=\"\";for(j=0;j<l2;j++){header=\ntoken.items[j];var checked=header.checked;var task=header.task;cell=\"\";if(header.task){var checkbox=this.renderer.checkbox(checked);row?0<header.tokens.length&&\"text\"===header.tokens[0].type?(header.tokens[0].text=checkbox+\" \"+header.tokens[0].text,header.tokens[0].tokens&&0<header.tokens[0].tokens.length&&\"text\"===header.tokens[0].tokens[0].type&&(header.tokens[0].tokens[0].text=checkbox+\" \"+header.tokens[0].tokens[0].text)):header.tokens.unshift({type:\"text\",text:checkbox}):cell+=checkbox}cell+=\nthis.parse(header.tokens,row);body+=this.renderer.listitem(cell,task,checked)}out+=this.renderer.list(body,k,l3);continue;case \"html\":out+=this.renderer.html(token.text);continue;case \"paragraph\":out+=this.renderer.paragraph(this.parseInline(token.tokens));continue;case \"text\":for(body=token.tokens?this.parseInline(token.tokens):token.text;i+1<l&&\"text\"===tokens[i+1].type;)token=tokens[++i],body+=\"\\n\"+(token.tokens?this.parseInline(token.tokens):token.text);out+=top?this.renderer.paragraph(body):\nbody;continue;default:tokens='Token with \"'+token.type+'\" type was not found.';if(this.options.silent){console.error(tokens);return}throw Error(tokens);}}return out};_proto.parseInline=function(tokens,renderer){renderer=renderer||this.renderer;var out=\"\",i,l=tokens.length;for(i=0;i<l;i++){var token=tokens[i];switch(token.type){case \"escape\":out+=renderer.text(token.text);break;case \"html\":out+=renderer.html(token.text);break;case \"link\":out+=renderer.link(token.href,token.title,this.parseInline(token.tokens,\nrenderer));break;case \"image\":out+=renderer.image(token.href,token.title,token.text);break;case \"strong\":out+=renderer.strong(this.parseInline(token.tokens,renderer));break;case \"em\":out+=renderer.em(this.parseInline(token.tokens,renderer));break;case \"codespan\":out+=renderer.codespan(token.text);break;case \"br\":out+=renderer.br();break;case \"del\":out+=renderer.del(this.parseInline(token.tokens,renderer));break;case \"text\":out+=renderer.text(token.text);break;default:tokens='Token with \"'+token.type+\n'\" type was not found.';if(this.options.silent){console.error(tokens);return}throw Error(tokens);}}return out};return Parser}(),merge=JSCompiler_object_inline_merge_5310,checkSanitizeDeprecation=function(opt){opt&&opt.sanitize&&!opt.silent&&console.warn(\"marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options\")},escape=JSCompiler_object_inline_escape_5304;\nJSCompiler_object_inline_merge_5310=defaults$5.getDefaults;var changeDefaults=defaults$5.changeDefaults;defaults$5=defaults$5.defaults;marked.options=marked.setOptions=function(opt){merge(marked.defaults,opt);changeDefaults(marked.defaults);return marked};marked.getDefaults=JSCompiler_object_inline_merge_5310;marked.defaults=defaults$5;marked.use=function(extension){var opts=merge({},extension);extension.renderer&&function(){var renderer=marked.defaults.renderer||new Renderer_1,_loop=function(prop){var prevRenderer=\nrenderer[prop];renderer[prop]=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_len=extension.renderer[prop].apply(renderer,args);!1===_len&&(_len=prevRenderer.apply(renderer,args));return _len}},prop$jscomp$0;for(prop$jscomp$0 in extension.renderer)_loop(prop$jscomp$0);opts.renderer=renderer}();extension.tokenizer&&function(){var tokenizer=marked.defaults.tokenizer||new Tokenizer_1,_loop2=function(prop){var prevTokenizer=tokenizer[prop];\ntokenizer[prop]=function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];_len2=extension.tokenizer[prop].apply(tokenizer,args);!1===_len2&&(_len2=prevTokenizer.apply(tokenizer,args));return _len2}},prop$jscomp$0;for(prop$jscomp$0 in extension.tokenizer)_loop2(prop$jscomp$0);opts.tokenizer=tokenizer}();if(extension.walkTokens){var walkTokens=marked.defaults.walkTokens;opts.walkTokens=function(token){extension.walkTokens(token);walkTokens&&\nwalkTokens(token)}}marked.setOptions(opts)};marked.walkTokens=function(tokens,callback){tokens=_createForOfIteratorHelperLoose(tokens);for(var _step;!(_step=tokens()).done;)switch(_step=_step.value,callback(_step),_step.type){case \"table\":for(var _iterator2=_createForOfIteratorHelperLoose(_step.tokens.header),_step2;!(_step2=_iterator2()).done;)marked.walkTokens(_step2.value,callback);for(_step=_createForOfIteratorHelperLoose(_step.tokens.cells);!(_iterator2=_step()).done;)for(_iterator2=_createForOfIteratorHelperLoose(_iterator2.value);!(_step2=\n_iterator2()).done;)marked.walkTokens(_step2.value,callback);break;case \"list\":marked.walkTokens(_step.items,callback);break;default:_step.tokens&&marked.walkTokens(_step.tokens,callback)}};marked.parseInline=function(src,opt){if(\"undefined\"===typeof src||null===src)throw Error(\"marked.parseInline(): input parameter is undefined or null\");if(\"string\"!==typeof src)throw Error(\"marked.parseInline(): input parameter is of type \"+Object.prototype.toString.call(src)+\", string expected\");opt=merge({},marked.defaults,\nopt||{});checkSanitizeDeprecation(opt);try{var tokens=Lexer_1.lexInline(src,opt);opt.walkTokens&&marked.walkTokens(tokens,opt.walkTokens);return Parser_1.parseInline(tokens,opt)}catch(e){e.message+=\"\\nPlease report this to https://github.com/markedjs/marked.\";if(opt.silent)return\"\\x3cp\\x3eAn error occurred:\\x3c/p\\x3e\\x3cpre\\x3e\"+escape(e.message+\"\",!0)+\"\\x3c/pre\\x3e\";throw e;}};marked.Parser=Parser_1;marked.parser=Parser_1.parse;marked.Renderer=Renderer_1;marked.TextRenderer=TextRenderer_1;marked.Lexer=\nLexer_1;marked.lexer=Lexer_1.lex;marked.Tokenizer=Tokenizer_1;marked.Slugger=Slugger_1;return marked.parse=marked})}","~:source","shadow$provide[\"module$node_modules$marked$lib$marked\"] = function(global,require,module,exports) {\n/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn) {\n    var module = { exports: {} };\n  \treturn fn(module, module.exports), module.exports;\n  }\n\n  var defaults$5 = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n\n  var defaults$4 = defaults$5.defaults;\n  var rtrim = helpers.rtrim,\n      splitCells = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked,\n            endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if ( // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n\n          item = rtrim(item, '\\n');\n\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n      edit = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block$1.item = edit(block$1.item, 'gm').replace(/bull/g, block$1.bullet).getRegex();\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.nptable = edit(block$1.gfm.nptable).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n\n  var defaults$3 = defaults$5.defaults;\n  var block = rules.block,\n      inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.defaults;\n  var cleanUrl = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$1 = defaults$5.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge = helpers.merge,\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n      escape = helpers.escape;\n  var getDefaults = defaults$5.getDefaults,\n      changeDefaults = defaults$5.changeDefaults,\n      defaults = defaults$5.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["Renderer","Slugger","table","message","listItemStart","tablerow","setOptions","space","lang","parser","heading","br","renderer","headerIds","list","langPrefix","endAst","url","inRawBlock","ordered","align","punctuation","seen","serialize","silent","pedantic","endUnd","lheading","_scheme","tokenizer","newline","TextRenderer","inlineTokens","image","escapedEmSt","headerPrefix","breaks","xhtml","inline","_email","getDefaults","key","_escapes","rDelimAst","getNextSafeSlug","em","lastIndex","marked","_punctuation","_href","slugger","gfm","checkbox","lexInline","block","nolink","blockTokens","Parser","normal","exec","hr","_label","escape","lexer","href","del","slug","configurable","replace","tag","_backpedal","value","items","enumerable","rules","baseUrl","textRenderer","codeBlockStyle","start","sanitizer","text","item","emStrong","writable","smartLists","lex","paragraph","_extended_email","task","listitem","escaped","links","getRegex","tablecell","_tag","title","link","parseInline","cells","type","fences","rDelimUnd","inLink","pre","depth","Tokenizer","middle","blockquote","lDelim","mangle","bullet","parse","Lexer","strong","_comment","def","highlight","inlineText","html","loose","reflinkSearch","nptable","raw","_paragraph","_attribute","options","walkTokens","use","blockSkip","get","codespan","_title","checked","code","done","defaults","sanitize","header","smartypants","reflink","autolink","changeDefaults","tokens"]],"~:compiled-at",1621210442605,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$marked$lib$marked.js\",\n\"lineCount\":90,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/marked/lib/marked.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$marked$lib$marked\\\"] = function(global,require,module,exports) {\\n/**\\n * marked - a markdown parser\\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\\n * https://github.com/markedjs/marked\\n */\\n\\n/**\\n * DO NOT EDIT THIS FILE\\n * The code in this file is generated from files in ./src/\\n */\\n\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n  typeof define === 'function' && define.amd ? define(factory) :\\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\\n}(this, (function () { 'use strict';\\n\\n  function _defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];\\n      descriptor.enumerable = descriptor.enumerable || false;\\n      descriptor.configurable = true;\\n      if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n      Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }\\n\\n  function _createClass(Constructor, protoProps, staticProps) {\\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n    if (staticProps) _defineProperties(Constructor, staticProps);\\n    return Constructor;\\n  }\\n\\n  function _unsupportedIterableToArray(o, minLen) {\\n    if (!o) return;\\n    if (typeof o === \\\"string\\\") return _arrayLikeToArray(o, minLen);\\n    var n = Object.prototype.toString.call(o).slice(8, -1);\\n    if (n === \\\"Object\\\" && o.constructor) n = o.constructor.name;\\n    if (n === \\\"Map\\\" || n === \\\"Set\\\") return Array.from(o);\\n    if (n === \\\"Arguments\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\\n  }\\n\\n  function _arrayLikeToArray(arr, len) {\\n    if (len == null || len > arr.length) len = arr.length;\\n\\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\\n\\n    return arr2;\\n  }\\n\\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\\n    var it;\\n\\n    if (typeof Symbol === \\\"undefined\\\" || o[Symbol.iterator] == null) {\\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \\\"number\\\") {\\n        if (it) o = it;\\n        var i = 0;\\n        return function () {\\n          if (i >= o.length) return {\\n            done: true\\n          };\\n          return {\\n            done: false,\\n            value: o[i++]\\n          };\\n        };\\n      }\\n\\n      throw new TypeError(\\\"Invalid attempt to iterate non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\");\\n    }\\n\\n    it = o[Symbol.iterator]();\\n    return it.next.bind(it);\\n  }\\n\\n  function createCommonjsModule(fn) {\\n    var module = { exports: {} };\\n  \\treturn fn(module, module.exports), module.exports;\\n  }\\n\\n  var defaults$5 = createCommonjsModule(function (module) {\\n    function getDefaults() {\\n      return {\\n        baseUrl: null,\\n        breaks: false,\\n        gfm: true,\\n        headerIds: true,\\n        headerPrefix: '',\\n        highlight: null,\\n        langPrefix: 'language-',\\n        mangle: true,\\n        pedantic: false,\\n        renderer: null,\\n        sanitize: false,\\n        sanitizer: null,\\n        silent: false,\\n        smartLists: false,\\n        smartypants: false,\\n        tokenizer: null,\\n        walkTokens: null,\\n        xhtml: false\\n      };\\n    }\\n\\n    function changeDefaults(newDefaults) {\\n      module.exports.defaults = newDefaults;\\n    }\\n\\n    module.exports = {\\n      defaults: getDefaults(),\\n      getDefaults: getDefaults,\\n      changeDefaults: changeDefaults\\n    };\\n  });\\n\\n  /**\\n   * Helpers\\n   */\\n  var escapeTest = /[&<>\\\"']/;\\n  var escapeReplace = /[&<>\\\"']/g;\\n  var escapeTestNoEncode = /[<>\\\"']|&(?!#?\\\\w+;)/;\\n  var escapeReplaceNoEncode = /[<>\\\"']|&(?!#?\\\\w+;)/g;\\n  var escapeReplacements = {\\n    '&': '&amp;',\\n    '<': '&lt;',\\n    '>': '&gt;',\\n    '\\\"': '&quot;',\\n    \\\"'\\\": '&#39;'\\n  };\\n\\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\\n    return escapeReplacements[ch];\\n  };\\n\\n  function escape$2(html, encode) {\\n    if (encode) {\\n      if (escapeTest.test(html)) {\\n        return html.replace(escapeReplace, getEscapeReplacement);\\n      }\\n    } else {\\n      if (escapeTestNoEncode.test(html)) {\\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\\n      }\\n    }\\n\\n    return html;\\n  }\\n\\n  var unescapeTest = /&(#(?:\\\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\\\w+));?/ig;\\n\\n  function unescape$1(html) {\\n    // explicitly match decimal, hex, and named HTML entities\\n    return html.replace(unescapeTest, function (_, n) {\\n      n = n.toLowerCase();\\n      if (n === 'colon') return ':';\\n\\n      if (n.charAt(0) === '#') {\\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\\n      }\\n\\n      return '';\\n    });\\n  }\\n\\n  var caret = /(^|[^\\\\[])\\\\^/g;\\n\\n  function edit$1(regex, opt) {\\n    regex = regex.source || regex;\\n    opt = opt || '';\\n    var obj = {\\n      replace: function replace(name, val) {\\n        val = val.source || val;\\n        val = val.replace(caret, '$1');\\n        regex = regex.replace(name, val);\\n        return obj;\\n      },\\n      getRegex: function getRegex() {\\n        return new RegExp(regex, opt);\\n      }\\n    };\\n    return obj;\\n  }\\n\\n  var nonWordAndColonTest = /[^\\\\w:]/g;\\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\\n\\n  function cleanUrl$1(sanitize, base, href) {\\n    if (sanitize) {\\n      var prot;\\n\\n      try {\\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\\n      } catch (e) {\\n        return null;\\n      }\\n\\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\\n        return null;\\n      }\\n    }\\n\\n    if (base && !originIndependentUrl.test(href)) {\\n      href = resolveUrl(base, href);\\n    }\\n\\n    try {\\n      href = encodeURI(href).replace(/%25/g, '%');\\n    } catch (e) {\\n      return null;\\n    }\\n\\n    return href;\\n  }\\n\\n  var baseUrls = {};\\n  var justDomain = /^[^:]+:\\\\/*[^/]*$/;\\n  var protocol = /^([^:]+:)[\\\\s\\\\S]*$/;\\n  var domain = /^([^:]+:\\\\/*[^/]*)[\\\\s\\\\S]*$/;\\n\\n  function resolveUrl(base, href) {\\n    if (!baseUrls[' ' + base]) {\\n      // we can ignore everything in base after the last slash of its path component,\\n      // but we might need to add _that_\\n      // https://tools.ietf.org/html/rfc3986#section-3\\n      if (justDomain.test(base)) {\\n        baseUrls[' ' + base] = base + '/';\\n      } else {\\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\\n      }\\n    }\\n\\n    base = baseUrls[' ' + base];\\n    var relativeBase = base.indexOf(':') === -1;\\n\\n    if (href.substring(0, 2) === '//') {\\n      if (relativeBase) {\\n        return href;\\n      }\\n\\n      return base.replace(protocol, '$1') + href;\\n    } else if (href.charAt(0) === '/') {\\n      if (relativeBase) {\\n        return href;\\n      }\\n\\n      return base.replace(domain, '$1') + href;\\n    } else {\\n      return base + href;\\n    }\\n  }\\n\\n  var noopTest$1 = {\\n    exec: function noopTest() {}\\n  };\\n\\n  function merge$2(obj) {\\n    var i = 1,\\n        target,\\n        key;\\n\\n    for (; i < arguments.length; i++) {\\n      target = arguments[i];\\n\\n      for (key in target) {\\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\\n          obj[key] = target[key];\\n        }\\n      }\\n    }\\n\\n    return obj;\\n  }\\n\\n  function splitCells$1(tableRow, count) {\\n    // ensure that every cell-delimiting pipe has a space\\n    // before it to distinguish it from an escaped pipe\\n    var row = tableRow.replace(/\\\\|/g, function (match, offset, str) {\\n      var escaped = false,\\n          curr = offset;\\n\\n      while (--curr >= 0 && str[curr] === '\\\\\\\\') {\\n        escaped = !escaped;\\n      }\\n\\n      if (escaped) {\\n        // odd number of slashes means | is escaped\\n        // so we leave it alone\\n        return '|';\\n      } else {\\n        // add space before unescaped |\\n        return ' |';\\n      }\\n    }),\\n        cells = row.split(/ \\\\|/);\\n    var i = 0;\\n\\n    if (cells.length > count) {\\n      cells.splice(count);\\n    } else {\\n      while (cells.length < count) {\\n        cells.push('');\\n      }\\n    }\\n\\n    for (; i < cells.length; i++) {\\n      // leading or trailing whitespace is ignored per the gfm spec\\n      cells[i] = cells[i].trim().replace(/\\\\\\\\\\\\|/g, '|');\\n    }\\n\\n    return cells;\\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\\n  // /c*$/ is vulnerable to REDOS.\\n  // invert: Remove suffix of non-c chars instead. Default falsey.\\n\\n\\n  function rtrim$1(str, c, invert) {\\n    var l = str.length;\\n\\n    if (l === 0) {\\n      return '';\\n    } // Length of suffix matching the invert condition.\\n\\n\\n    var suffLen = 0; // Step left until we fail to match the invert condition.\\n\\n    while (suffLen < l) {\\n      var currChar = str.charAt(l - suffLen - 1);\\n\\n      if (currChar === c && !invert) {\\n        suffLen++;\\n      } else if (currChar !== c && invert) {\\n        suffLen++;\\n      } else {\\n        break;\\n      }\\n    }\\n\\n    return str.substr(0, l - suffLen);\\n  }\\n\\n  function findClosingBracket$1(str, b) {\\n    if (str.indexOf(b[1]) === -1) {\\n      return -1;\\n    }\\n\\n    var l = str.length;\\n    var level = 0,\\n        i = 0;\\n\\n    for (; i < l; i++) {\\n      if (str[i] === '\\\\\\\\') {\\n        i++;\\n      } else if (str[i] === b[0]) {\\n        level++;\\n      } else if (str[i] === b[1]) {\\n        level--;\\n\\n        if (level < 0) {\\n          return i;\\n        }\\n      }\\n    }\\n\\n    return -1;\\n  }\\n\\n  function checkSanitizeDeprecation$1(opt) {\\n    if (opt && opt.sanitize && !opt.silent) {\\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\\n    }\\n  } // copied from https://stackoverflow.com/a/5450113/806777\\n\\n\\n  function repeatString$1(pattern, count) {\\n    if (count < 1) {\\n      return '';\\n    }\\n\\n    var result = '';\\n\\n    while (count > 1) {\\n      if (count & 1) {\\n        result += pattern;\\n      }\\n\\n      count >>= 1;\\n      pattern += pattern;\\n    }\\n\\n    return result + pattern;\\n  }\\n\\n  var helpers = {\\n    escape: escape$2,\\n    unescape: unescape$1,\\n    edit: edit$1,\\n    cleanUrl: cleanUrl$1,\\n    resolveUrl: resolveUrl,\\n    noopTest: noopTest$1,\\n    merge: merge$2,\\n    splitCells: splitCells$1,\\n    rtrim: rtrim$1,\\n    findClosingBracket: findClosingBracket$1,\\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\\n    repeatString: repeatString$1\\n  };\\n\\n  var defaults$4 = defaults$5.defaults;\\n  var rtrim = helpers.rtrim,\\n      splitCells = helpers.splitCells,\\n      _escape = helpers.escape,\\n      findClosingBracket = helpers.findClosingBracket;\\n\\n  function outputLink(cap, link, raw) {\\n    var href = link.href;\\n    var title = link.title ? _escape(link.title) : null;\\n    var text = cap[1].replace(/\\\\\\\\([\\\\[\\\\]])/g, '$1');\\n\\n    if (cap[0].charAt(0) !== '!') {\\n      return {\\n        type: 'link',\\n        raw: raw,\\n        href: href,\\n        title: title,\\n        text: text\\n      };\\n    } else {\\n      return {\\n        type: 'image',\\n        raw: raw,\\n        href: href,\\n        title: title,\\n        text: _escape(text)\\n      };\\n    }\\n  }\\n\\n  function indentCodeCompensation(raw, text) {\\n    var matchIndentToCode = raw.match(/^(\\\\s+)(?:```)/);\\n\\n    if (matchIndentToCode === null) {\\n      return text;\\n    }\\n\\n    var indentToCode = matchIndentToCode[1];\\n    return text.split('\\\\n').map(function (node) {\\n      var matchIndentInNode = node.match(/^\\\\s+/);\\n\\n      if (matchIndentInNode === null) {\\n        return node;\\n      }\\n\\n      var indentInNode = matchIndentInNode[0];\\n\\n      if (indentInNode.length >= indentToCode.length) {\\n        return node.slice(indentToCode.length);\\n      }\\n\\n      return node;\\n    }).join('\\\\n');\\n  }\\n  /**\\n   * Tokenizer\\n   */\\n\\n\\n  var Tokenizer_1 = /*#__PURE__*/function () {\\n    function Tokenizer(options) {\\n      this.options = options || defaults$4;\\n    }\\n\\n    var _proto = Tokenizer.prototype;\\n\\n    _proto.space = function space(src) {\\n      var cap = this.rules.block.newline.exec(src);\\n\\n      if (cap) {\\n        if (cap[0].length > 1) {\\n          return {\\n            type: 'space',\\n            raw: cap[0]\\n          };\\n        }\\n\\n        return {\\n          raw: '\\\\n'\\n        };\\n      }\\n    };\\n\\n    _proto.code = function code(src) {\\n      var cap = this.rules.block.code.exec(src);\\n\\n      if (cap) {\\n        var text = cap[0].replace(/^ {1,4}/gm, '');\\n        return {\\n          type: 'code',\\n          raw: cap[0],\\n          codeBlockStyle: 'indented',\\n          text: !this.options.pedantic ? rtrim(text, '\\\\n') : text\\n        };\\n      }\\n    };\\n\\n    _proto.fences = function fences(src) {\\n      var cap = this.rules.block.fences.exec(src);\\n\\n      if (cap) {\\n        var raw = cap[0];\\n        var text = indentCodeCompensation(raw, cap[3] || '');\\n        return {\\n          type: 'code',\\n          raw: raw,\\n          lang: cap[2] ? cap[2].trim() : cap[2],\\n          text: text\\n        };\\n      }\\n    };\\n\\n    _proto.heading = function heading(src) {\\n      var cap = this.rules.block.heading.exec(src);\\n\\n      if (cap) {\\n        var text = cap[2].trim(); // remove trailing #s\\n\\n        if (/#$/.test(text)) {\\n          var trimmed = rtrim(text, '#');\\n\\n          if (this.options.pedantic) {\\n            text = trimmed.trim();\\n          } else if (!trimmed || / $/.test(trimmed)) {\\n            // CommonMark requires space before trailing #s\\n            text = trimmed.trim();\\n          }\\n        }\\n\\n        return {\\n          type: 'heading',\\n          raw: cap[0],\\n          depth: cap[1].length,\\n          text: text\\n        };\\n      }\\n    };\\n\\n    _proto.nptable = function nptable(src) {\\n      var cap = this.rules.block.nptable.exec(src);\\n\\n      if (cap) {\\n        var item = {\\n          type: 'table',\\n          header: splitCells(cap[1].replace(/^ *| *\\\\| *$/g, '')),\\n          align: cap[2].replace(/^ *|\\\\| *$/g, '').split(/ *\\\\| */),\\n          cells: cap[3] ? cap[3].replace(/\\\\n$/, '').split('\\\\n') : [],\\n          raw: cap[0]\\n        };\\n\\n        if (item.header.length === item.align.length) {\\n          var l = item.align.length;\\n          var i;\\n\\n          for (i = 0; i < l; i++) {\\n            if (/^ *-+: *$/.test(item.align[i])) {\\n              item.align[i] = 'right';\\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\\n              item.align[i] = 'center';\\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\\n              item.align[i] = 'left';\\n            } else {\\n              item.align[i] = null;\\n            }\\n          }\\n\\n          l = item.cells.length;\\n\\n          for (i = 0; i < l; i++) {\\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\\n          }\\n\\n          return item;\\n        }\\n      }\\n    };\\n\\n    _proto.hr = function hr(src) {\\n      var cap = this.rules.block.hr.exec(src);\\n\\n      if (cap) {\\n        return {\\n          type: 'hr',\\n          raw: cap[0]\\n        };\\n      }\\n    };\\n\\n    _proto.blockquote = function blockquote(src) {\\n      var cap = this.rules.block.blockquote.exec(src);\\n\\n      if (cap) {\\n        var text = cap[0].replace(/^ *> ?/gm, '');\\n        return {\\n          type: 'blockquote',\\n          raw: cap[0],\\n          text: text\\n        };\\n      }\\n    };\\n\\n    _proto.list = function list(src) {\\n      var cap = this.rules.block.list.exec(src);\\n\\n      if (cap) {\\n        var raw = cap[0];\\n        var bull = cap[2];\\n        var isordered = bull.length > 1;\\n        var list = {\\n          type: 'list',\\n          raw: raw,\\n          ordered: isordered,\\n          start: isordered ? +bull.slice(0, -1) : '',\\n          loose: false,\\n          items: []\\n        }; // Get each top-level item.\\n\\n        var itemMatch = cap[0].match(this.rules.block.item);\\n        var next = false,\\n            item,\\n            space,\\n            bcurr,\\n            bnext,\\n            addBack,\\n            loose,\\n            istask,\\n            ischecked,\\n            endMatch;\\n        var l = itemMatch.length;\\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\\n\\n        for (var i = 0; i < l; i++) {\\n          item = itemMatch[i];\\n          raw = item;\\n\\n          if (!this.options.pedantic) {\\n            // Determine if current item contains the end of the list\\n            endMatch = item.match(new RegExp('\\\\\\\\n\\\\\\\\s*\\\\\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\\\\\S'));\\n\\n            if (endMatch) {\\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\\\n').length;\\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\\n              item = item.substring(0, endMatch.index);\\n              raw = item;\\n              l = i + 1;\\n            }\\n          } // Determine whether the next list item belongs here.\\n          // Backpedal if it does not belong in this list.\\n\\n\\n          if (i !== l - 1) {\\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\\n\\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\\n              // nested list or continuation\\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\\\n$/) ? '' : '\\\\n') + itemMatch[i + 1]);\\n              i--;\\n              l--;\\n              continue;\\n            } else if ( // different bullet style\\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\\n              addBack = itemMatch.slice(i + 1).join('\\\\n').length;\\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\\n              i = l - 1;\\n            }\\n\\n            bcurr = bnext;\\n          } // Remove the list item's bullet\\n          // so it is seen as the next token.\\n\\n\\n          space = item.length;\\n          item = item.replace(/^ *([*+-]|\\\\d+[.)]) ?/, ''); // Outdent whatever the\\n          // list item contains. Hacky.\\n\\n          if (~item.indexOf('\\\\n ')) {\\n            space -= item.length;\\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\\n          } // trim item newlines at end\\n\\n\\n          item = rtrim(item, '\\\\n');\\n\\n          if (i !== l - 1) {\\n            raw = raw + '\\\\n';\\n          } // Determine whether item is loose or not.\\n          // Use: /(^|\\\\n)(?! )[^\\\\n]+\\\\n\\\\n(?!\\\\s*$)/\\n          // for discount behavior.\\n\\n\\n          loose = next || /\\\\n\\\\n(?!\\\\s*$)/.test(raw);\\n\\n          if (i !== l - 1) {\\n            next = raw.slice(-2) === '\\\\n\\\\n';\\n            if (!loose) loose = next;\\n          }\\n\\n          if (loose) {\\n            list.loose = true;\\n          } // Check for task list items\\n\\n\\n          if (this.options.gfm) {\\n            istask = /^\\\\[[ xX]\\\\] /.test(item);\\n            ischecked = undefined;\\n\\n            if (istask) {\\n              ischecked = item[1] !== ' ';\\n              item = item.replace(/^\\\\[[ xX]\\\\] +/, '');\\n            }\\n          }\\n\\n          list.items.push({\\n            type: 'list_item',\\n            raw: raw,\\n            task: istask,\\n            checked: ischecked,\\n            loose: loose,\\n            text: item\\n          });\\n        }\\n\\n        return list;\\n      }\\n    };\\n\\n    _proto.html = function html(src) {\\n      var cap = this.rules.block.html.exec(src);\\n\\n      if (cap) {\\n        return {\\n          type: this.options.sanitize ? 'paragraph' : 'html',\\n          raw: cap[0],\\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\\n        };\\n      }\\n    };\\n\\n    _proto.def = function def(src) {\\n      var cap = this.rules.block.def.exec(src);\\n\\n      if (cap) {\\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\\n        var tag = cap[1].toLowerCase().replace(/\\\\s+/g, ' ');\\n        return {\\n          type: 'def',\\n          tag: tag,\\n          raw: cap[0],\\n          href: cap[2],\\n          title: cap[3]\\n        };\\n      }\\n    };\\n\\n    _proto.table = function table(src) {\\n      var cap = this.rules.block.table.exec(src);\\n\\n      if (cap) {\\n        var item = {\\n          type: 'table',\\n          header: splitCells(cap[1].replace(/^ *| *\\\\| *$/g, '')),\\n          align: cap[2].replace(/^ *|\\\\| *$/g, '').split(/ *\\\\| */),\\n          cells: cap[3] ? cap[3].replace(/\\\\n$/, '').split('\\\\n') : []\\n        };\\n\\n        if (item.header.length === item.align.length) {\\n          item.raw = cap[0];\\n          var l = item.align.length;\\n          var i;\\n\\n          for (i = 0; i < l; i++) {\\n            if (/^ *-+: *$/.test(item.align[i])) {\\n              item.align[i] = 'right';\\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\\n              item.align[i] = 'center';\\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\\n              item.align[i] = 'left';\\n            } else {\\n              item.align[i] = null;\\n            }\\n          }\\n\\n          l = item.cells.length;\\n\\n          for (i = 0; i < l; i++) {\\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\\\| *| *\\\\| *$/g, ''), item.header.length);\\n          }\\n\\n          return item;\\n        }\\n      }\\n    };\\n\\n    _proto.lheading = function lheading(src) {\\n      var cap = this.rules.block.lheading.exec(src);\\n\\n      if (cap) {\\n        return {\\n          type: 'heading',\\n          raw: cap[0],\\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\\n          text: cap[1]\\n        };\\n      }\\n    };\\n\\n    _proto.paragraph = function paragraph(src) {\\n      var cap = this.rules.block.paragraph.exec(src);\\n\\n      if (cap) {\\n        return {\\n          type: 'paragraph',\\n          raw: cap[0],\\n          text: cap[1].charAt(cap[1].length - 1) === '\\\\n' ? cap[1].slice(0, -1) : cap[1]\\n        };\\n      }\\n    };\\n\\n    _proto.text = function text(src) {\\n      var cap = this.rules.block.text.exec(src);\\n\\n      if (cap) {\\n        return {\\n          type: 'text',\\n          raw: cap[0],\\n          text: cap[0]\\n        };\\n      }\\n    };\\n\\n    _proto.escape = function escape(src) {\\n      var cap = this.rules.inline.escape.exec(src);\\n\\n      if (cap) {\\n        return {\\n          type: 'escape',\\n          raw: cap[0],\\n          text: _escape(cap[1])\\n        };\\n      }\\n    };\\n\\n    _proto.tag = function tag(src, inLink, inRawBlock) {\\n      var cap = this.rules.inline.tag.exec(src);\\n\\n      if (cap) {\\n        if (!inLink && /^<a /i.test(cap[0])) {\\n          inLink = true;\\n        } else if (inLink && /^<\\\\/a>/i.test(cap[0])) {\\n          inLink = false;\\n        }\\n\\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\\\s|>)/i.test(cap[0])) {\\n          inRawBlock = true;\\n        } else if (inRawBlock && /^<\\\\/(pre|code|kbd|script)(\\\\s|>)/i.test(cap[0])) {\\n          inRawBlock = false;\\n        }\\n\\n        return {\\n          type: this.options.sanitize ? 'text' : 'html',\\n          raw: cap[0],\\n          inLink: inLink,\\n          inRawBlock: inRawBlock,\\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\\n        };\\n      }\\n    };\\n\\n    _proto.link = function link(src) {\\n      var cap = this.rules.inline.link.exec(src);\\n\\n      if (cap) {\\n        var trimmedUrl = cap[2].trim();\\n\\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\\n          // commonmark requires matching angle brackets\\n          if (!/>$/.test(trimmedUrl)) {\\n            return;\\n          } // ending angle bracket cannot be escaped\\n\\n\\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\\\\\');\\n\\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\\n            return;\\n          }\\n        } else {\\n          // find closing parenthesis\\n          var lastParenIndex = findClosingBracket(cap[2], '()');\\n\\n          if (lastParenIndex > -1) {\\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\\n            var linkLen = start + cap[1].length + lastParenIndex;\\n            cap[2] = cap[2].substring(0, lastParenIndex);\\n            cap[0] = cap[0].substring(0, linkLen).trim();\\n            cap[3] = '';\\n          }\\n        }\\n\\n        var href = cap[2];\\n        var title = '';\\n\\n        if (this.options.pedantic) {\\n          // split pedantic href and title\\n          var link = /^([^'\\\"]*[^\\\\s])\\\\s+(['\\\"])(.*)\\\\2/.exec(href);\\n\\n          if (link) {\\n            href = link[1];\\n            title = link[3];\\n          }\\n        } else {\\n          title = cap[3] ? cap[3].slice(1, -1) : '';\\n        }\\n\\n        href = href.trim();\\n\\n        if (/^</.test(href)) {\\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\\n            // pedantic allows starting angle bracket without ending angle bracket\\n            href = href.slice(1);\\n          } else {\\n            href = href.slice(1, -1);\\n          }\\n        }\\n\\n        return outputLink(cap, {\\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\\n        }, cap[0]);\\n      }\\n    };\\n\\n    _proto.reflink = function reflink(src, links) {\\n      var cap;\\n\\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\\n        var link = (cap[2] || cap[1]).replace(/\\\\s+/g, ' ');\\n        link = links[link.toLowerCase()];\\n\\n        if (!link || !link.href) {\\n          var text = cap[0].charAt(0);\\n          return {\\n            type: 'text',\\n            raw: text,\\n            text: text\\n          };\\n        }\\n\\n        return outputLink(cap, link, cap[0]);\\n      }\\n    };\\n\\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\\n      if (prevChar === void 0) {\\n        prevChar = '';\\n      }\\n\\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\\n      if (!match) return;\\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\\\xAA\\\\xB2\\\\xB3\\\\xB5\\\\xB9\\\\xBA\\\\xBC-\\\\xBE\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0560-\\\\u0588\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F2\\\\u0620-\\\\u064A\\\\u0660-\\\\u0669\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07C0-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u0860-\\\\u086A\\\\u08A0-\\\\u08B4\\\\u08B6-\\\\u08C7\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0966-\\\\u096F\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09E6-\\\\u09F1\\\\u09F4-\\\\u09F9\\\\u09FC\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A66-\\\\u0A6F\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AE6-\\\\u0AEF\\\\u0AF9\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B66-\\\\u0B6F\\\\u0B71-\\\\u0B77\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0BE6-\\\\u0BF2\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58-\\\\u0C5A\\\\u0C60\\\\u0C61\\\\u0C66-\\\\u0C6F\\\\u0C78-\\\\u0C7E\\\\u0C80\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D04-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D54-\\\\u0D56\\\\u0D58-\\\\u0D61\\\\u0D66-\\\\u0D78\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0DE6-\\\\u0DEF\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E50-\\\\u0E59\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E86-\\\\u0E8A\\\\u0E8C-\\\\u0EA3\\\\u0EA5\\\\u0EA7-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0ED0-\\\\u0ED9\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F20-\\\\u0F33\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F-\\\\u1049\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u1090-\\\\u1099\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1369-\\\\u137C\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u17E0-\\\\u17E9\\\\u17F0-\\\\u17F9\\\\u1810-\\\\u1819\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1946-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u19D0-\\\\u19DA\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B50-\\\\u1B59\\\\u1B83-\\\\u1BA0\\\\u1BAE-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C40-\\\\u1C49\\\\u1C4D-\\\\u1C7D\\\\u1C80-\\\\u1C88\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5\\\\u1CF6\\\\u1CFA\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2070\\\\u2071\\\\u2074-\\\\u2079\\\\u207F-\\\\u2089\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2150-\\\\u2189\\\\u2460-\\\\u249B\\\\u24EA-\\\\u24FF\\\\u2776-\\\\u2793\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2CFD\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u3192-\\\\u3195\\\\u31A0-\\\\u31BF\\\\u31F0-\\\\u31FF\\\\u3220-\\\\u3229\\\\u3248-\\\\u324F\\\\u3251-\\\\u325F\\\\u3280-\\\\u3289\\\\u32B1-\\\\u32BF\\\\u3400-\\\\u4DBF\\\\u4E00-\\\\u9FFC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA7BF\\\\uA7C2-\\\\uA7CA\\\\uA7F5-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA830-\\\\uA835\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8D0-\\\\uA8D9\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA8FE\\\\uA900-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF-\\\\uA9D9\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA50-\\\\uAA59\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB69\\\\uAB70-\\\\uABE2\\\\uABF0-\\\\uABF9\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF10-\\\\uFF19\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD07-\\\\uDD33\\\\uDD40-\\\\uDD78\\\\uDD8A\\\\uDD8B\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDEE1-\\\\uDEFB\\\\uDF00-\\\\uDF23\\\\uDF2D-\\\\uDF4A\\\\uDF50-\\\\uDF75\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC00-\\\\uDC9D\\\\uDCA0-\\\\uDCA9\\\\uDCB0-\\\\uDCD3\\\\uDCD8-\\\\uDCFB\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC58-\\\\uDC76\\\\uDC79-\\\\uDC9E\\\\uDCA7-\\\\uDCAF\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDCFB-\\\\uDD1B\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBC-\\\\uDDCF\\\\uDDD2-\\\\uDE00\\\\uDE10-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE35\\\\uDE40-\\\\uDE48\\\\uDE60-\\\\uDE7E\\\\uDE80-\\\\uDE9F\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE4\\\\uDEEB-\\\\uDEEF\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF58-\\\\uDF72\\\\uDF78-\\\\uDF91\\\\uDFA9-\\\\uDFAF]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDC80-\\\\uDCB2\\\\uDCC0-\\\\uDCF2\\\\uDCFA-\\\\uDD23\\\\uDD30-\\\\uDD39\\\\uDE60-\\\\uDE7E\\\\uDE80-\\\\uDEA9\\\\uDEB0\\\\uDEB1\\\\uDF00-\\\\uDF27\\\\uDF30-\\\\uDF45\\\\uDF51-\\\\uDF54\\\\uDFB0-\\\\uDFCB\\\\uDFE0-\\\\uDFF6]|\\\\uD804[\\\\uDC03-\\\\uDC37\\\\uDC52-\\\\uDC6F\\\\uDC83-\\\\uDCAF\\\\uDCD0-\\\\uDCE8\\\\uDCF0-\\\\uDCF9\\\\uDD03-\\\\uDD26\\\\uDD36-\\\\uDD3F\\\\uDD44\\\\uDD47\\\\uDD50-\\\\uDD72\\\\uDD76\\\\uDD83-\\\\uDDB2\\\\uDDC1-\\\\uDDC4\\\\uDDD0-\\\\uDDDA\\\\uDDDC\\\\uDDE1-\\\\uDDF4\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE2B\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEDE\\\\uDEF0-\\\\uDEF9\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3D\\\\uDF50\\\\uDF5D-\\\\uDF61]|\\\\uD805[\\\\uDC00-\\\\uDC34\\\\uDC47-\\\\uDC4A\\\\uDC50-\\\\uDC59\\\\uDC5F-\\\\uDC61\\\\uDC80-\\\\uDCAF\\\\uDCC4\\\\uDCC5\\\\uDCC7\\\\uDCD0-\\\\uDCD9\\\\uDD80-\\\\uDDAE\\\\uDDD8-\\\\uDDDB\\\\uDE00-\\\\uDE2F\\\\uDE44\\\\uDE50-\\\\uDE59\\\\uDE80-\\\\uDEAA\\\\uDEB8\\\\uDEC0-\\\\uDEC9\\\\uDF00-\\\\uDF1A\\\\uDF30-\\\\uDF3B]|\\\\uD806[\\\\uDC00-\\\\uDC2B\\\\uDCA0-\\\\uDCF2\\\\uDCFF-\\\\uDD06\\\\uDD09\\\\uDD0C-\\\\uDD13\\\\uDD15\\\\uDD16\\\\uDD18-\\\\uDD2F\\\\uDD3F\\\\uDD41\\\\uDD50-\\\\uDD59\\\\uDDA0-\\\\uDDA7\\\\uDDAA-\\\\uDDD0\\\\uDDE1\\\\uDDE3\\\\uDE00\\\\uDE0B-\\\\uDE32\\\\uDE3A\\\\uDE50\\\\uDE5C-\\\\uDE89\\\\uDE9D\\\\uDEC0-\\\\uDEF8]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC2E\\\\uDC40\\\\uDC50-\\\\uDC6C\\\\uDC72-\\\\uDC8F\\\\uDD00-\\\\uDD06\\\\uDD08\\\\uDD09\\\\uDD0B-\\\\uDD30\\\\uDD46\\\\uDD50-\\\\uDD59\\\\uDD60-\\\\uDD65\\\\uDD67\\\\uDD68\\\\uDD6A-\\\\uDD89\\\\uDD98\\\\uDDA0-\\\\uDDA9\\\\uDEE0-\\\\uDEF2\\\\uDFB0\\\\uDFC0-\\\\uDFD4]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|[\\\\uD80C\\\\uD81C-\\\\uD820\\\\uD822\\\\uD840-\\\\uD868\\\\uD86A-\\\\uD86C\\\\uD86F-\\\\uD872\\\\uD874-\\\\uD879\\\\uD880-\\\\uD883][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2E]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDE60-\\\\uDE69\\\\uDED0-\\\\uDEED\\\\uDF00-\\\\uDF2F\\\\uDF40-\\\\uDF43\\\\uDF50-\\\\uDF59\\\\uDF5B-\\\\uDF61\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDE40-\\\\uDE96\\\\uDF00-\\\\uDF4A\\\\uDF50\\\\uDF93-\\\\uDF9F\\\\uDFE0\\\\uDFE1\\\\uDFE3]|\\\\uD821[\\\\uDC00-\\\\uDFF7]|\\\\uD823[\\\\uDC00-\\\\uDCD5\\\\uDD00-\\\\uDD08]|\\\\uD82C[\\\\uDC00-\\\\uDD1E\\\\uDD50-\\\\uDD52\\\\uDD64-\\\\uDD67\\\\uDD70-\\\\uDEFB]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99]|\\\\uD834[\\\\uDEE0-\\\\uDEF3\\\\uDF60-\\\\uDF78]|\\\\uD835[\\\\uDC00-\\\\uDC54\\\\uDC56-\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD1E-\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD52-\\\\uDEA5\\\\uDEA8-\\\\uDEC0\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEFA\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF34\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF6E\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDFA8\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFCB\\\\uDFCE-\\\\uDFFF]|\\\\uD838[\\\\uDD00-\\\\uDD2C\\\\uDD37-\\\\uDD3D\\\\uDD40-\\\\uDD49\\\\uDD4E\\\\uDEC0-\\\\uDEEB\\\\uDEF0-\\\\uDEF9]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDCC7-\\\\uDCCF\\\\uDD00-\\\\uDD43\\\\uDD4B\\\\uDD50-\\\\uDD59]|\\\\uD83B[\\\\uDC71-\\\\uDCAB\\\\uDCAD-\\\\uDCAF\\\\uDCB1-\\\\uDCB4\\\\uDD01-\\\\uDD2D\\\\uDD2F-\\\\uDD3D\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD83C[\\\\uDD00-\\\\uDD0C]|\\\\uD83E[\\\\uDFF0-\\\\uDFF9]|\\\\uD869[\\\\uDC00-\\\\uDEDD\\\\uDF00-\\\\uDFFF]|\\\\uD86D[\\\\uDC00-\\\\uDF34\\\\uDF40-\\\\uDFFF]|\\\\uD86E[\\\\uDC00-\\\\uDC1D\\\\uDC20-\\\\uDFFF]|\\\\uD873[\\\\uDC00-\\\\uDEA1\\\\uDEB0-\\\\uDFFF]|\\\\uD87A[\\\\uDC00-\\\\uDFE0]|\\\\uD87E[\\\\uDC00-\\\\uDE1D]|\\\\uD884[\\\\uDC00-\\\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\\\p{L}\\\\p{N} includes non-english alphabet/numbers as well\\n\\n      var nextChar = match[1] || match[2] || '';\\n\\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\\n        var lLength = match[0].length - 1;\\n        var rDelim,\\n            rLength,\\n            delimTotal = lLength,\\n            midDelimTotal = 0;\\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\\n        endReg.lastIndex = 0;\\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\\n\\n        while ((match = endReg.exec(maskedSrc)) != null) {\\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\\n\\n          rLength = rDelim.length;\\n\\n          if (match[3] || match[4]) {\\n            // found another Left Delim\\n            delimTotal += rLength;\\n            continue;\\n          } else if (match[5] || match[6]) {\\n            // either Left or Right Delim\\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\\n              midDelimTotal += rLength;\\n              continue; // CommonMark Emphasis Rules 9-10\\n            }\\n          }\\n\\n          delimTotal -= rLength;\\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\\n\\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\\n          }\\n\\n          if (Math.min(lLength, rLength) % 2) {\\n            return {\\n              type: 'em',\\n              raw: src.slice(0, lLength + match.index + rLength + 1),\\n              text: src.slice(1, lLength + match.index + rLength)\\n            };\\n          }\\n\\n          if (Math.min(lLength, rLength) % 2 === 0) {\\n            return {\\n              type: 'strong',\\n              raw: src.slice(0, lLength + match.index + rLength + 1),\\n              text: src.slice(2, lLength + match.index + rLength - 1)\\n            };\\n          }\\n        }\\n      }\\n    };\\n\\n    _proto.codespan = function codespan(src) {\\n      var cap = this.rules.inline.code.exec(src);\\n\\n      if (cap) {\\n        var text = cap[2].replace(/\\\\n/g, ' ');\\n        var hasNonSpaceChars = /[^ ]/.test(text);\\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\\n\\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\\n          text = text.substring(1, text.length - 1);\\n        }\\n\\n        text = _escape(text, true);\\n        return {\\n          type: 'codespan',\\n          raw: cap[0],\\n          text: text\\n        };\\n      }\\n    };\\n\\n    _proto.br = function br(src) {\\n      var cap = this.rules.inline.br.exec(src);\\n\\n      if (cap) {\\n        return {\\n          type: 'br',\\n          raw: cap[0]\\n        };\\n      }\\n    };\\n\\n    _proto.del = function del(src) {\\n      var cap = this.rules.inline.del.exec(src);\\n\\n      if (cap) {\\n        return {\\n          type: 'del',\\n          raw: cap[0],\\n          text: cap[2]\\n        };\\n      }\\n    };\\n\\n    _proto.autolink = function autolink(src, mangle) {\\n      var cap = this.rules.inline.autolink.exec(src);\\n\\n      if (cap) {\\n        var text, href;\\n\\n        if (cap[2] === '@') {\\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\\n          href = 'mailto:' + text;\\n        } else {\\n          text = _escape(cap[1]);\\n          href = text;\\n        }\\n\\n        return {\\n          type: 'link',\\n          raw: cap[0],\\n          text: text,\\n          href: href,\\n          tokens: [{\\n            type: 'text',\\n            raw: text,\\n            text: text\\n          }]\\n        };\\n      }\\n    };\\n\\n    _proto.url = function url(src, mangle) {\\n      var cap;\\n\\n      if (cap = this.rules.inline.url.exec(src)) {\\n        var text, href;\\n\\n        if (cap[2] === '@') {\\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\\n          href = 'mailto:' + text;\\n        } else {\\n          // do extended autolink path validation\\n          var prevCapZero;\\n\\n          do {\\n            prevCapZero = cap[0];\\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\\n          } while (prevCapZero !== cap[0]);\\n\\n          text = _escape(cap[0]);\\n\\n          if (cap[1] === 'www.') {\\n            href = 'http://' + text;\\n          } else {\\n            href = text;\\n          }\\n        }\\n\\n        return {\\n          type: 'link',\\n          raw: cap[0],\\n          text: text,\\n          href: href,\\n          tokens: [{\\n            type: 'text',\\n            raw: text,\\n            text: text\\n          }]\\n        };\\n      }\\n    };\\n\\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\\n      var cap = this.rules.inline.text.exec(src);\\n\\n      if (cap) {\\n        var text;\\n\\n        if (inRawBlock) {\\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\\n        } else {\\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\\n        }\\n\\n        return {\\n          type: 'text',\\n          raw: cap[0],\\n          text: text\\n        };\\n      }\\n    };\\n\\n    return Tokenizer;\\n  }();\\n\\n  var noopTest = helpers.noopTest,\\n      edit = helpers.edit,\\n      merge$1 = helpers.merge;\\n  /**\\n   * Block-Level Grammar\\n   */\\n\\n  var block$1 = {\\n    newline: /^(?: *(?:\\\\n|$))+/,\\n    code: /^( {4}[^\\\\n]+(?:\\\\n(?: *(?:\\\\n|$))*)?)+/,\\n    fences: /^ {0,3}(`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})([^\\\\n]*)\\\\n(?:|([\\\\s\\\\S]*?)\\\\n)(?: {0,3}\\\\1[~`]* *(?:\\\\n+|$)|$)/,\\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)/,\\n    heading: /^ {0,3}(#{1,6})(?=\\\\s|$)(.*)(?:\\\\n+|$)/,\\n    blockquote: /^( {0,3}> ?(paragraph|[^\\\\n]*)(?:\\\\n|$))+/,\\n    list: /^( {0,3})(bull) [\\\\s\\\\S]+?(?:hr|def|\\\\n{2,}(?! )(?! {0,3}bull )\\\\n*|\\\\s*$)/,\\n    html: '^ {0,3}(?:' // optional indentation\\n    + '<(script|pre|style)[\\\\\\\\s>][\\\\\\\\s\\\\\\\\S]*?(?:</\\\\\\\\1>[^\\\\\\\\n]*\\\\\\\\n+|$)' // (1)\\n    + '|comment[^\\\\\\\\n]*(\\\\\\\\n+|$)' // (2)\\n    + '|<\\\\\\\\?[\\\\\\\\s\\\\\\\\S]*?(?:\\\\\\\\?>\\\\\\\\n*|$)' // (3)\\n    + '|<![A-Z][\\\\\\\\s\\\\\\\\S]*?(?:>\\\\\\\\n*|$)' // (4)\\n    + '|<!\\\\\\\\[CDATA\\\\\\\\[[\\\\\\\\s\\\\\\\\S]*?(?:\\\\\\\\]\\\\\\\\]>\\\\\\\\n*|$)' // (5)\\n    + '|</?(tag)(?: +|\\\\\\\\n|/?>)[\\\\\\\\s\\\\\\\\S]*?(?:\\\\\\\\n{2,}|$)' // (6)\\n    + '|<(?!script|pre|style)([a-z][\\\\\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\\\\\t]*(?:\\\\\\\\n|$))[\\\\\\\\s\\\\\\\\S]*?(?:\\\\\\\\n{2,}|$)' // (7) open tag\\n    + '|</(?!script|pre|style)[a-z][\\\\\\\\w-]*\\\\\\\\s*>(?=[ \\\\\\\\t]*(?:\\\\\\\\n|$))[\\\\\\\\s\\\\\\\\S]*?(?:\\\\\\\\n{2,}|$)' // (7) closing tag\\n    + ')',\\n    def: /^ {0,3}\\\\[(label)\\\\]: *\\\\n? *<?([^\\\\s>]+)>?(?:(?: +\\\\n? *| *\\\\n *)(title))? *(?:\\\\n+|$)/,\\n    nptable: noopTest,\\n    table: noopTest,\\n    lheading: /^([^\\\\n]+)\\\\n {0,3}(=+|-+) *(?:\\\\n+|$)/,\\n    // regex template, placeholders will be replaced according to different paragraph\\n    // interruption rules of commonmark and the original markdown spec:\\n    _paragraph: /^([^\\\\n]+(?:\\\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\\\n)[^\\\\n]+)*)/,\\n    text: /^[^\\\\n]+/\\n  };\\n  block$1._label = /(?!\\\\s*\\\\])(?:\\\\\\\\[\\\\[\\\\]]|[^\\\\[\\\\]])+/;\\n  block$1._title = /(?:\\\"(?:\\\\\\\\\\\"?|[^\\\"\\\\\\\\])*\\\"|'[^'\\\\n]*(?:\\\\n[^'\\\\n]+)*\\\\n?'|\\\\([^()]*\\\\))/;\\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\\n  block$1.bullet = /(?:[*+-]|\\\\d{1,9}[.)])/;\\n  block$1.item = /^( *)(bull) ?[^\\\\n]*(?:\\\\n(?! *bull ?)[^\\\\n]*)*/;\\n  block$1.item = edit(block$1.item, 'gm').replace(/bull/g, block$1.bullet).getRegex();\\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\\\\\n+(?=\\\\\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\\\\\* *){3,})(?:\\\\\\\\n+|$))').replace('def', '\\\\\\\\n+(?=' + block$1.def.source + ')').getRegex();\\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\\n  block$1._comment = /\\u003c!--(?!-?>)[\\\\s\\\\S]*?(?:--\\u003e|$)/;\\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\\\w.:-]*(?: *= *\\\"[^\\\"\\\\n]*\\\"| *= *'[^'\\\\n]*'| *= *[^\\\\s\\\"'=<>`]+)?/).getRegex();\\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\\\\\n]*\\\\\\\\n)|~{3,})[^\\\\\\\\n]*\\\\\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\\n  .replace('html', '</?(?:tag)(?: +|\\\\\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\\n  .getRegex();\\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\\n  /**\\n   * Normal Block Grammar\\n   */\\n\\n  block$1.normal = merge$1({}, block$1);\\n  /**\\n   * GFM Block Grammar\\n   */\\n\\n  block$1.gfm = merge$1({}, block$1.normal, {\\n    nptable: '^ *([^|\\\\\\\\n ].*\\\\\\\\|.*)\\\\\\\\n' // Header\\n    + ' {0,3}([-:]+ *\\\\\\\\|[-| :]*)' // Align\\n    + '(?:\\\\\\\\n((?:(?!\\\\\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\\\\\n|$))*)\\\\\\\\n*|$)',\\n    // Cells\\n    table: '^ *\\\\\\\\|(.+)\\\\\\\\n' // Header\\n    + ' {0,3}\\\\\\\\|?( *[-:]+[-| :]*)' // Align\\n    + '(?:\\\\\\\\n *((?:(?!\\\\\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\\\\\n|$))*)\\\\\\\\n*|$)' // Cells\\n\\n  });\\n  block$1.gfm.nptable = edit(block$1.gfm.nptable).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\\\\\n]*\\\\\\\\n)|~{3,})[^\\\\\\\\n]*\\\\\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\\n  .replace('html', '</?(?:tag)(?: +|\\\\\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\\n  .getRegex();\\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\\\\\n]*\\\\\\\\n)|~{3,})[^\\\\\\\\n]*\\\\\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\\n  .replace('html', '</?(?:tag)(?: +|\\\\\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\\n  .getRegex();\\n  /**\\n   * Pedantic grammar (original John Gruber's loose markdown specification)\\n   */\\n\\n  block$1.pedantic = merge$1({}, block$1.normal, {\\n    html: edit('^ *(?:comment *(?:\\\\\\\\n|\\\\\\\\s*$)' + '|<(tag)[\\\\\\\\s\\\\\\\\S]+?</\\\\\\\\1> *(?:\\\\\\\\n{2,}|\\\\\\\\s*$)' // closed tag\\n    + '|<tag(?:\\\"[^\\\"]*\\\"|\\\\'[^\\\\']*\\\\'|\\\\\\\\s[^\\\\'\\\"/>\\\\\\\\s]*)*?/?> *(?:\\\\\\\\n{2,}|\\\\\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\\\\\b)\\\\\\\\w+(?!:|[^\\\\\\\\w\\\\\\\\s@]*@)\\\\\\\\b').getRegex(),\\n    def: /^ *\\\\[([^\\\\]]+)\\\\]: *<?([^\\\\s>]+)>?(?: +([\\\"(][^\\\\n]+[\\\")]))? *(?:\\\\n+|$)/,\\n    heading: /^(#{1,6})(.*)(?:\\\\n+|$)/,\\n    fences: noopTest,\\n    // fences not supported\\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\\n  });\\n  /**\\n   * Inline-Level Grammar\\n   */\\n\\n  var inline$1 = {\\n    escape: /^\\\\\\\\([!\\\"#$%&'()*+,\\\\-./:;<=>?@\\\\[\\\\]\\\\\\\\^_`{|}~])/,\\n    autolink: /^<(scheme:[^\\\\s\\\\x00-\\\\x1f<>]*|email)>/,\\n    url: noopTest,\\n    tag: '^comment' + '|^</[a-zA-Z][\\\\\\\\w:-]*\\\\\\\\s*>' // self-closing tag\\n    + '|^<[a-zA-Z][\\\\\\\\w-]*(?:attribute)*?\\\\\\\\s*/?>' // open tag\\n    + '|^<\\\\\\\\?[\\\\\\\\s\\\\\\\\S]*?\\\\\\\\?>' // processing instruction, e.g. <?php ?>\\n    + '|^<![a-zA-Z]+\\\\\\\\s[\\\\\\\\s\\\\\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\\n    + '|^<!\\\\\\\\[CDATA\\\\\\\\[[\\\\\\\\s\\\\\\\\S]*?\\\\\\\\]\\\\\\\\]>',\\n    // CDATA section\\n    link: /^!?\\\\[(label)\\\\]\\\\(\\\\s*(href)(?:\\\\s+(title))?\\\\s*\\\\)/,\\n    reflink: /^!?\\\\[(label)\\\\]\\\\[(?!\\\\s*\\\\])((?:\\\\\\\\[\\\\[\\\\]]?|[^\\\\[\\\\]\\\\\\\\])+)\\\\]/,\\n    nolink: /^!?\\\\[(?!\\\\s*\\\\])((?:\\\\[[^\\\\[\\\\]]*\\\\]|\\\\\\\\[\\\\[\\\\]]|[^\\\\[\\\\]])*)\\\\](?:\\\\[\\\\])?/,\\n    reflinkSearch: 'reflink|nolink(?!\\\\\\\\()',\\n    emStrong: {\\n      lDelim: /^(?:\\\\*+(?:([punct_])|[^\\\\s*]))|^_+(?:([punct*])|([^\\\\s_]))/,\\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\\n      rDelimAst: /\\\\_\\\\_[^_]*?\\\\*[^_]*?\\\\_\\\\_|[punct_](\\\\*+)(?=[\\\\s]|$)|[^punct*_\\\\s](\\\\*+)(?=[punct_\\\\s]|$)|[punct_\\\\s](\\\\*+)(?=[^punct*_\\\\s])|[\\\\s](\\\\*+)(?=[punct_])|[punct_](\\\\*+)(?=[punct_])|[^punct*_\\\\s](\\\\*+)(?=[^punct*_\\\\s])/,\\n      rDelimUnd: /\\\\*\\\\*[^*]*?\\\\_[^*]*?\\\\*\\\\*|[punct*](\\\\_+)(?=[\\\\s]|$)|[^punct*_\\\\s](\\\\_+)(?=[punct*\\\\s]|$)|[punct*\\\\s](\\\\_+)(?=[^punct*_\\\\s])|[\\\\s](\\\\_+)(?=[punct*])|[punct*](\\\\_+)(?=[punct*])/ // ^- Not allowed for _\\n\\n    },\\n    code: /^(`+)([^`]|[^`][\\\\s\\\\S]*?[^`])\\\\1(?!`)/,\\n    br: /^( {2,}|\\\\\\\\)\\\\n(?!\\\\s*$)/,\\n    del: noopTest,\\n    text: /^(`+|[^`])(?:(?= {2,}\\\\n)|[\\\\s\\\\S]*?(?:(?=[\\\\\\\\<!\\\\[`*_]|\\\\b_|$)|[^ ](?= {2,}\\\\n)))/,\\n    punctuation: /^([\\\\spunctuation])/\\n  }; // list of punctuation marks from CommonMark spec\\n  // without * and _ to handle the different emphasis markers * and _\\n\\n  inline$1._punctuation = '!\\\"#$%&\\\\'()+\\\\\\\\-.,/:;<=>?@\\\\\\\\[\\\\\\\\]`^{|}~';\\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\\n\\n  inline$1.blockSkip = /\\\\[[^\\\\]]*?\\\\]\\\\([^\\\\)]*?\\\\)|`[^`]*?`|<[^>]*?>/g;\\n  inline$1.escapedEmSt = /\\\\\\\\\\\\*|\\\\\\\\_/g;\\n  inline$1._comment = edit(block$1._comment).replace('(?:--\\u003e|$)', '--\\u003e').getRegex();\\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\\n  inline$1._escapes = /\\\\\\\\([!\\\"#$%&'()*+,\\\\-./:;<=>?@\\\\[\\\\]\\\\\\\\^_`{|}~])/g;\\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\\n  inline$1._attribute = /\\\\s+[a-zA-Z:_][\\\\w.:-]*(?:\\\\s*=\\\\s*\\\"[^\\\"]*\\\"|\\\\s*=\\\\s*'[^']*'|\\\\s*=\\\\s*[^\\\\s\\\"'=<>`]+)?/;\\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\\n  inline$1._label = /(?:\\\\[(?:\\\\\\\\.|[^\\\\[\\\\]\\\\\\\\])*\\\\]|\\\\\\\\.|`[^`]*`|[^\\\\[\\\\]\\\\\\\\`])*?/;\\n  inline$1._href = /<(?:\\\\\\\\.|[^\\\\n<>\\\\\\\\])+>|[^\\\\s\\\\x00-\\\\x1f]*/;\\n  inline$1._title = /\\\"(?:\\\\\\\\\\\"?|[^\\\"\\\\\\\\])*\\\"|'(?:\\\\\\\\'?|[^'\\\\\\\\])*'|\\\\((?:\\\\\\\\\\\\)?|[^)\\\\\\\\])*\\\\)/;\\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\\n  /**\\n   * Normal Inline Grammar\\n   */\\n\\n  inline$1.normal = merge$1({}, inline$1);\\n  /**\\n   * Pedantic Inline Grammar\\n   */\\n\\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\\n    strong: {\\n      start: /^__|\\\\*\\\\*/,\\n      middle: /^__(?=\\\\S)([\\\\s\\\\S]*?\\\\S)__(?!_)|^\\\\*\\\\*(?=\\\\S)([\\\\s\\\\S]*?\\\\S)\\\\*\\\\*(?!\\\\*)/,\\n      endAst: /\\\\*\\\\*(?!\\\\*)/g,\\n      endUnd: /__(?!_)/g\\n    },\\n    em: {\\n      start: /^_|\\\\*/,\\n      middle: /^()\\\\*(?=\\\\S)([\\\\s\\\\S]*?\\\\S)\\\\*(?!\\\\*)|^_(?=\\\\S)([\\\\s\\\\S]*?\\\\S)_(?!_)/,\\n      endAst: /\\\\*(?!\\\\*)/g,\\n      endUnd: /_(?!_)/g\\n    },\\n    link: edit(/^!?\\\\[(label)\\\\]\\\\((.*?)\\\\)/).replace('label', inline$1._label).getRegex(),\\n    reflink: edit(/^!?\\\\[(label)\\\\]\\\\s*\\\\[([^\\\\]]*)\\\\]/).replace('label', inline$1._label).getRegex()\\n  });\\n  /**\\n   * GFM Inline Grammar\\n   */\\n\\n  inline$1.gfm = merge$1({}, inline$1.normal, {\\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\\n    url: /^((?:ftp|https?):\\\\/\\\\/|www\\\\.)(?:[a-zA-Z0-9\\\\-]+\\\\.?)+[^\\\\s<]*|^email/,\\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\\\([^)]*\\\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\\n    del: /^(~~?)(?=[^\\\\s~])([\\\\s\\\\S]*?[^\\\\s~])\\\\1(?=[^~]|$)/,\\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\\\n)|[\\\\s\\\\S]*?(?:(?=[\\\\\\\\<!\\\\[`*~_]|\\\\b_|https?:\\\\/\\\\/|ftp:\\\\/\\\\/|www\\\\.|$)|[^ ](?= {2,}\\\\n)|[^a-zA-Z0-9.!#$%&'*+\\\\/=?_`{\\\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\\\/=?_`{\\\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\\\/=?_`{\\\\|}~-]+@))/\\n  });\\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\\n  /**\\n   * GFM + Line Breaks Inline Grammar\\n   */\\n\\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\\n    text: edit(inline$1.gfm.text).replace('\\\\\\\\b_', '\\\\\\\\b_| {2,}\\\\\\\\n').replace(/\\\\{2,\\\\}/g, '*').getRegex()\\n  });\\n  var rules = {\\n    block: block$1,\\n    inline: inline$1\\n  };\\n\\n  var defaults$3 = defaults$5.defaults;\\n  var block = rules.block,\\n      inline = rules.inline;\\n  var repeatString = helpers.repeatString;\\n  /**\\n   * smartypants text replacement\\n   */\\n\\n  function smartypants(text) {\\n    return text // em-dashes\\n    .replace(/---/g, \\\"\\\\u2014\\\") // en-dashes\\n    .replace(/--/g, \\\"\\\\u2013\\\") // opening singles\\n    .replace(/(^|[-\\\\u2014/(\\\\[{\\\"\\\\s])'/g, \\\"$1\\\\u2018\\\") // closing singles & apostrophes\\n    .replace(/'/g, \\\"\\\\u2019\\\") // opening doubles\\n    .replace(/(^|[-\\\\u2014/(\\\\[{\\\\u2018\\\\s])\\\"/g, \\\"$1\\\\u201C\\\") // closing doubles\\n    .replace(/\\\"/g, \\\"\\\\u201D\\\") // ellipses\\n    .replace(/\\\\.{3}/g, \\\"\\\\u2026\\\");\\n  }\\n  /**\\n   * mangle email addresses\\n   */\\n\\n\\n  function mangle(text) {\\n    var out = '',\\n        i,\\n        ch;\\n    var l = text.length;\\n\\n    for (i = 0; i < l; i++) {\\n      ch = text.charCodeAt(i);\\n\\n      if (Math.random() > 0.5) {\\n        ch = 'x' + ch.toString(16);\\n      }\\n\\n      out += '&#' + ch + ';';\\n    }\\n\\n    return out;\\n  }\\n  /**\\n   * Block Lexer\\n   */\\n\\n\\n  var Lexer_1 = /*#__PURE__*/function () {\\n    function Lexer(options) {\\n      this.tokens = [];\\n      this.tokens.links = Object.create(null);\\n      this.options = options || defaults$3;\\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\\n      this.tokenizer = this.options.tokenizer;\\n      this.tokenizer.options = this.options;\\n      var rules = {\\n        block: block.normal,\\n        inline: inline.normal\\n      };\\n\\n      if (this.options.pedantic) {\\n        rules.block = block.pedantic;\\n        rules.inline = inline.pedantic;\\n      } else if (this.options.gfm) {\\n        rules.block = block.gfm;\\n\\n        if (this.options.breaks) {\\n          rules.inline = inline.breaks;\\n        } else {\\n          rules.inline = inline.gfm;\\n        }\\n      }\\n\\n      this.tokenizer.rules = rules;\\n    }\\n    /**\\n     * Expose Rules\\n     */\\n\\n\\n    /**\\n     * Static Lex Method\\n     */\\n    Lexer.lex = function lex(src, options) {\\n      var lexer = new Lexer(options);\\n      return lexer.lex(src);\\n    }\\n    /**\\n     * Static Lex Inline Method\\n     */\\n    ;\\n\\n    Lexer.lexInline = function lexInline(src, options) {\\n      var lexer = new Lexer(options);\\n      return lexer.inlineTokens(src);\\n    }\\n    /**\\n     * Preprocessing\\n     */\\n    ;\\n\\n    var _proto = Lexer.prototype;\\n\\n    _proto.lex = function lex(src) {\\n      src = src.replace(/\\\\r\\\\n|\\\\r/g, '\\\\n').replace(/\\\\t/g, '    ');\\n      this.blockTokens(src, this.tokens, true);\\n      this.inline(this.tokens);\\n      return this.tokens;\\n    }\\n    /**\\n     * Lexing\\n     */\\n    ;\\n\\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\\n      if (tokens === void 0) {\\n        tokens = [];\\n      }\\n\\n      if (top === void 0) {\\n        top = true;\\n      }\\n\\n      if (this.options.pedantic) {\\n        src = src.replace(/^ +$/gm, '');\\n      }\\n\\n      var token, i, l, lastToken;\\n\\n      while (src) {\\n        // newline\\n        if (token = this.tokenizer.space(src)) {\\n          src = src.substring(token.raw.length);\\n\\n          if (token.type) {\\n            tokens.push(token);\\n          }\\n\\n          continue;\\n        } // code\\n\\n\\n        if (token = this.tokenizer.code(src)) {\\n          src = src.substring(token.raw.length);\\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\\n\\n          if (lastToken && lastToken.type === 'paragraph') {\\n            lastToken.raw += '\\\\n' + token.raw;\\n            lastToken.text += '\\\\n' + token.text;\\n          } else {\\n            tokens.push(token);\\n          }\\n\\n          continue;\\n        } // fences\\n\\n\\n        if (token = this.tokenizer.fences(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // heading\\n\\n\\n        if (token = this.tokenizer.heading(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // table no leading pipe (gfm)\\n\\n\\n        if (token = this.tokenizer.nptable(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // hr\\n\\n\\n        if (token = this.tokenizer.hr(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // blockquote\\n\\n\\n        if (token = this.tokenizer.blockquote(src)) {\\n          src = src.substring(token.raw.length);\\n          token.tokens = this.blockTokens(token.text, [], top);\\n          tokens.push(token);\\n          continue;\\n        } // list\\n\\n\\n        if (token = this.tokenizer.list(src)) {\\n          src = src.substring(token.raw.length);\\n          l = token.items.length;\\n\\n          for (i = 0; i < l; i++) {\\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\\n          }\\n\\n          tokens.push(token);\\n          continue;\\n        } // html\\n\\n\\n        if (token = this.tokenizer.html(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // def\\n\\n\\n        if (top && (token = this.tokenizer.def(src))) {\\n          src = src.substring(token.raw.length);\\n\\n          if (!this.tokens.links[token.tag]) {\\n            this.tokens.links[token.tag] = {\\n              href: token.href,\\n              title: token.title\\n            };\\n          }\\n\\n          continue;\\n        } // table (gfm)\\n\\n\\n        if (token = this.tokenizer.table(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // lheading\\n\\n\\n        if (token = this.tokenizer.lheading(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // top-level paragraph\\n\\n\\n        if (top && (token = this.tokenizer.paragraph(src))) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // text\\n\\n\\n        if (token = this.tokenizer.text(src)) {\\n          src = src.substring(token.raw.length);\\n          lastToken = tokens[tokens.length - 1];\\n\\n          if (lastToken && lastToken.type === 'text') {\\n            lastToken.raw += '\\\\n' + token.raw;\\n            lastToken.text += '\\\\n' + token.text;\\n          } else {\\n            tokens.push(token);\\n          }\\n\\n          continue;\\n        }\\n\\n        if (src) {\\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\\n\\n          if (this.options.silent) {\\n            console.error(errMsg);\\n            break;\\n          } else {\\n            throw new Error(errMsg);\\n          }\\n        }\\n      }\\n\\n      return tokens;\\n    };\\n\\n    _proto.inline = function inline(tokens) {\\n      var i, j, k, l2, row, token;\\n      var l = tokens.length;\\n\\n      for (i = 0; i < l; i++) {\\n        token = tokens[i];\\n\\n        switch (token.type) {\\n          case 'paragraph':\\n          case 'text':\\n          case 'heading':\\n            {\\n              token.tokens = [];\\n              this.inlineTokens(token.text, token.tokens);\\n              break;\\n            }\\n\\n          case 'table':\\n            {\\n              token.tokens = {\\n                header: [],\\n                cells: []\\n              }; // header\\n\\n              l2 = token.header.length;\\n\\n              for (j = 0; j < l2; j++) {\\n                token.tokens.header[j] = [];\\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\\n              } // cells\\n\\n\\n              l2 = token.cells.length;\\n\\n              for (j = 0; j < l2; j++) {\\n                row = token.cells[j];\\n                token.tokens.cells[j] = [];\\n\\n                for (k = 0; k < row.length; k++) {\\n                  token.tokens.cells[j][k] = [];\\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\\n                }\\n              }\\n\\n              break;\\n            }\\n\\n          case 'blockquote':\\n            {\\n              this.inline(token.tokens);\\n              break;\\n            }\\n\\n          case 'list':\\n            {\\n              l2 = token.items.length;\\n\\n              for (j = 0; j < l2; j++) {\\n                this.inline(token.items[j].tokens);\\n              }\\n\\n              break;\\n            }\\n        }\\n      }\\n\\n      return tokens;\\n    }\\n    /**\\n     * Lexing/Compiling\\n     */\\n    ;\\n\\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\\n      if (tokens === void 0) {\\n        tokens = [];\\n      }\\n\\n      if (inLink === void 0) {\\n        inLink = false;\\n      }\\n\\n      if (inRawBlock === void 0) {\\n        inRawBlock = false;\\n      }\\n\\n      var token, lastToken; // String with links masked to avoid interference with em and strong\\n\\n      var maskedSrc = src;\\n      var match;\\n      var keepPrevChar, prevChar; // Mask out reflinks\\n\\n      if (this.tokens.links) {\\n        var links = Object.keys(this.tokens.links);\\n\\n        if (links.length > 0) {\\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\\n            }\\n          }\\n        }\\n      } // Mask out other blocks\\n\\n\\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\\n      } // Mask out escaped em & strong delimiters\\n\\n\\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\\n      }\\n\\n      while (src) {\\n        if (!keepPrevChar) {\\n          prevChar = '';\\n        }\\n\\n        keepPrevChar = false; // escape\\n\\n        if (token = this.tokenizer.escape(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // tag\\n\\n\\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\\n          src = src.substring(token.raw.length);\\n          inLink = token.inLink;\\n          inRawBlock = token.inRawBlock;\\n          var _lastToken = tokens[tokens.length - 1];\\n\\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\\n            _lastToken.raw += token.raw;\\n            _lastToken.text += token.text;\\n          } else {\\n            tokens.push(token);\\n          }\\n\\n          continue;\\n        } // link\\n\\n\\n        if (token = this.tokenizer.link(src)) {\\n          src = src.substring(token.raw.length);\\n\\n          if (token.type === 'link') {\\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\\n          }\\n\\n          tokens.push(token);\\n          continue;\\n        } // reflink, nolink\\n\\n\\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\\n          src = src.substring(token.raw.length);\\n          var _lastToken2 = tokens[tokens.length - 1];\\n\\n          if (token.type === 'link') {\\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\\n            tokens.push(token);\\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\\n            _lastToken2.raw += token.raw;\\n            _lastToken2.text += token.text;\\n          } else {\\n            tokens.push(token);\\n          }\\n\\n          continue;\\n        } // em & strong\\n\\n\\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\\n          src = src.substring(token.raw.length);\\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\\n          tokens.push(token);\\n          continue;\\n        } // code\\n\\n\\n        if (token = this.tokenizer.codespan(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // br\\n\\n\\n        if (token = this.tokenizer.br(src)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // del (gfm)\\n\\n\\n        if (token = this.tokenizer.del(src)) {\\n          src = src.substring(token.raw.length);\\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\\n          tokens.push(token);\\n          continue;\\n        } // autolink\\n\\n\\n        if (token = this.tokenizer.autolink(src, mangle)) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // url (gfm)\\n\\n\\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\\n          src = src.substring(token.raw.length);\\n          tokens.push(token);\\n          continue;\\n        } // text\\n\\n\\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\\n          src = src.substring(token.raw.length);\\n\\n          if (token.raw.slice(-1) !== '_') {\\n            // Track prevChar before string of ____ started\\n            prevChar = token.raw.slice(-1);\\n          }\\n\\n          keepPrevChar = true;\\n          lastToken = tokens[tokens.length - 1];\\n\\n          if (lastToken && lastToken.type === 'text') {\\n            lastToken.raw += token.raw;\\n            lastToken.text += token.text;\\n          } else {\\n            tokens.push(token);\\n          }\\n\\n          continue;\\n        }\\n\\n        if (src) {\\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\\n\\n          if (this.options.silent) {\\n            console.error(errMsg);\\n            break;\\n          } else {\\n            throw new Error(errMsg);\\n          }\\n        }\\n      }\\n\\n      return tokens;\\n    };\\n\\n    _createClass(Lexer, null, [{\\n      key: \\\"rules\\\",\\n      get: function get() {\\n        return {\\n          block: block,\\n          inline: inline\\n        };\\n      }\\n    }]);\\n\\n    return Lexer;\\n  }();\\n\\n  var defaults$2 = defaults$5.defaults;\\n  var cleanUrl = helpers.cleanUrl,\\n      escape$1 = helpers.escape;\\n  /**\\n   * Renderer\\n   */\\n\\n  var Renderer_1 = /*#__PURE__*/function () {\\n    function Renderer(options) {\\n      this.options = options || defaults$2;\\n    }\\n\\n    var _proto = Renderer.prototype;\\n\\n    _proto.code = function code(_code, infostring, escaped) {\\n      var lang = (infostring || '').match(/\\\\S*/)[0];\\n\\n      if (this.options.highlight) {\\n        var out = this.options.highlight(_code, lang);\\n\\n        if (out != null && out !== _code) {\\n          escaped = true;\\n          _code = out;\\n        }\\n      }\\n\\n      _code = _code.replace(/\\\\n$/, '') + '\\\\n';\\n\\n      if (!lang) {\\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\\\n';\\n      }\\n\\n      return '<pre><code class=\\\"' + this.options.langPrefix + escape$1(lang, true) + '\\\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\\\n';\\n    };\\n\\n    _proto.blockquote = function blockquote(quote) {\\n      return '<blockquote>\\\\n' + quote + '</blockquote>\\\\n';\\n    };\\n\\n    _proto.html = function html(_html) {\\n      return _html;\\n    };\\n\\n    _proto.heading = function heading(text, level, raw, slugger) {\\n      if (this.options.headerIds) {\\n        return '<h' + level + ' id=\\\"' + this.options.headerPrefix + slugger.slug(raw) + '\\\">' + text + '</h' + level + '>\\\\n';\\n      } // ignore IDs\\n\\n\\n      return '<h' + level + '>' + text + '</h' + level + '>\\\\n';\\n    };\\n\\n    _proto.hr = function hr() {\\n      return this.options.xhtml ? '<hr/>\\\\n' : '<hr>\\\\n';\\n    };\\n\\n    _proto.list = function list(body, ordered, start) {\\n      var type = ordered ? 'ol' : 'ul',\\n          startatt = ordered && start !== 1 ? ' start=\\\"' + start + '\\\"' : '';\\n      return '<' + type + startatt + '>\\\\n' + body + '</' + type + '>\\\\n';\\n    };\\n\\n    _proto.listitem = function listitem(text) {\\n      return '<li>' + text + '</li>\\\\n';\\n    };\\n\\n    _proto.checkbox = function checkbox(checked) {\\n      return '<input ' + (checked ? 'checked=\\\"\\\" ' : '') + 'disabled=\\\"\\\" type=\\\"checkbox\\\"' + (this.options.xhtml ? ' /' : '') + '> ';\\n    };\\n\\n    _proto.paragraph = function paragraph(text) {\\n      return '<p>' + text + '</p>\\\\n';\\n    };\\n\\n    _proto.table = function table(header, body) {\\n      if (body) body = '<tbody>' + body + '</tbody>';\\n      return '<table>\\\\n' + '<thead>\\\\n' + header + '</thead>\\\\n' + body + '</table>\\\\n';\\n    };\\n\\n    _proto.tablerow = function tablerow(content) {\\n      return '<tr>\\\\n' + content + '</tr>\\\\n';\\n    };\\n\\n    _proto.tablecell = function tablecell(content, flags) {\\n      var type = flags.header ? 'th' : 'td';\\n      var tag = flags.align ? '<' + type + ' align=\\\"' + flags.align + '\\\">' : '<' + type + '>';\\n      return tag + content + '</' + type + '>\\\\n';\\n    } // span level renderer\\n    ;\\n\\n    _proto.strong = function strong(text) {\\n      return '<strong>' + text + '</strong>';\\n    };\\n\\n    _proto.em = function em(text) {\\n      return '<em>' + text + '</em>';\\n    };\\n\\n    _proto.codespan = function codespan(text) {\\n      return '<code>' + text + '</code>';\\n    };\\n\\n    _proto.br = function br() {\\n      return this.options.xhtml ? '<br/>' : '<br>';\\n    };\\n\\n    _proto.del = function del(text) {\\n      return '<del>' + text + '</del>';\\n    };\\n\\n    _proto.link = function link(href, title, text) {\\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\\n\\n      if (href === null) {\\n        return text;\\n      }\\n\\n      var out = '<a href=\\\"' + escape$1(href) + '\\\"';\\n\\n      if (title) {\\n        out += ' title=\\\"' + title + '\\\"';\\n      }\\n\\n      out += '>' + text + '</a>';\\n      return out;\\n    };\\n\\n    _proto.image = function image(href, title, text) {\\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\\n\\n      if (href === null) {\\n        return text;\\n      }\\n\\n      var out = '<img src=\\\"' + href + '\\\" alt=\\\"' + text + '\\\"';\\n\\n      if (title) {\\n        out += ' title=\\\"' + title + '\\\"';\\n      }\\n\\n      out += this.options.xhtml ? '/>' : '>';\\n      return out;\\n    };\\n\\n    _proto.text = function text(_text) {\\n      return _text;\\n    };\\n\\n    return Renderer;\\n  }();\\n\\n  /**\\n   * TextRenderer\\n   * returns only the textual part of the token\\n   */\\n  var TextRenderer_1 = /*#__PURE__*/function () {\\n    function TextRenderer() {}\\n\\n    var _proto = TextRenderer.prototype;\\n\\n    // no need for block level renderers\\n    _proto.strong = function strong(text) {\\n      return text;\\n    };\\n\\n    _proto.em = function em(text) {\\n      return text;\\n    };\\n\\n    _proto.codespan = function codespan(text) {\\n      return text;\\n    };\\n\\n    _proto.del = function del(text) {\\n      return text;\\n    };\\n\\n    _proto.html = function html(text) {\\n      return text;\\n    };\\n\\n    _proto.text = function text(_text) {\\n      return _text;\\n    };\\n\\n    _proto.link = function link(href, title, text) {\\n      return '' + text;\\n    };\\n\\n    _proto.image = function image(href, title, text) {\\n      return '' + text;\\n    };\\n\\n    _proto.br = function br() {\\n      return '';\\n    };\\n\\n    return TextRenderer;\\n  }();\\n\\n  /**\\n   * Slugger generates header id\\n   */\\n  var Slugger_1 = /*#__PURE__*/function () {\\n    function Slugger() {\\n      this.seen = {};\\n    }\\n\\n    var _proto = Slugger.prototype;\\n\\n    _proto.serialize = function serialize(value) {\\n      return value.toLowerCase().trim() // remove html tags\\n      .replace(/<[!\\\\/a-z].*?>/ig, '') // remove unwanted chars\\n      .replace(/[\\\\u2000-\\\\u206F\\\\u2E00-\\\\u2E7F\\\\\\\\'!\\\"#$%&()*+,./:;<=>?@[\\\\]^`{|}~]/g, '').replace(/\\\\s/g, '-');\\n    }\\n    /**\\n     * Finds the next safe (unique) slug to use\\n     */\\n    ;\\n\\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\\n      var slug = originalSlug;\\n      var occurenceAccumulator = 0;\\n\\n      if (this.seen.hasOwnProperty(slug)) {\\n        occurenceAccumulator = this.seen[originalSlug];\\n\\n        do {\\n          occurenceAccumulator++;\\n          slug = originalSlug + '-' + occurenceAccumulator;\\n        } while (this.seen.hasOwnProperty(slug));\\n      }\\n\\n      if (!isDryRun) {\\n        this.seen[originalSlug] = occurenceAccumulator;\\n        this.seen[slug] = 0;\\n      }\\n\\n      return slug;\\n    }\\n    /**\\n     * Convert string to unique id\\n     * @param {object} options\\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\\n     */\\n    ;\\n\\n    _proto.slug = function slug(value, options) {\\n      if (options === void 0) {\\n        options = {};\\n      }\\n\\n      var slug = this.serialize(value);\\n      return this.getNextSafeSlug(slug, options.dryrun);\\n    };\\n\\n    return Slugger;\\n  }();\\n\\n  var defaults$1 = defaults$5.defaults;\\n  var unescape = helpers.unescape;\\n  /**\\n   * Parsing & Compiling\\n   */\\n\\n  var Parser_1 = /*#__PURE__*/function () {\\n    function Parser(options) {\\n      this.options = options || defaults$1;\\n      this.options.renderer = this.options.renderer || new Renderer_1();\\n      this.renderer = this.options.renderer;\\n      this.renderer.options = this.options;\\n      this.textRenderer = new TextRenderer_1();\\n      this.slugger = new Slugger_1();\\n    }\\n    /**\\n     * Static Parse Method\\n     */\\n\\n\\n    Parser.parse = function parse(tokens, options) {\\n      var parser = new Parser(options);\\n      return parser.parse(tokens);\\n    }\\n    /**\\n     * Static Parse Inline Method\\n     */\\n    ;\\n\\n    Parser.parseInline = function parseInline(tokens, options) {\\n      var parser = new Parser(options);\\n      return parser.parseInline(tokens);\\n    }\\n    /**\\n     * Parse Loop\\n     */\\n    ;\\n\\n    var _proto = Parser.prototype;\\n\\n    _proto.parse = function parse(tokens, top) {\\n      if (top === void 0) {\\n        top = true;\\n      }\\n\\n      var out = '',\\n          i,\\n          j,\\n          k,\\n          l2,\\n          l3,\\n          row,\\n          cell,\\n          header,\\n          body,\\n          token,\\n          ordered,\\n          start,\\n          loose,\\n          itemBody,\\n          item,\\n          checked,\\n          task,\\n          checkbox;\\n      var l = tokens.length;\\n\\n      for (i = 0; i < l; i++) {\\n        token = tokens[i];\\n\\n        switch (token.type) {\\n          case 'space':\\n            {\\n              continue;\\n            }\\n\\n          case 'hr':\\n            {\\n              out += this.renderer.hr();\\n              continue;\\n            }\\n\\n          case 'heading':\\n            {\\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\\n              continue;\\n            }\\n\\n          case 'code':\\n            {\\n              out += this.renderer.code(token.text, token.lang, token.escaped);\\n              continue;\\n            }\\n\\n          case 'table':\\n            {\\n              header = ''; // header\\n\\n              cell = '';\\n              l2 = token.header.length;\\n\\n              for (j = 0; j < l2; j++) {\\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\\n                  header: true,\\n                  align: token.align[j]\\n                });\\n              }\\n\\n              header += this.renderer.tablerow(cell);\\n              body = '';\\n              l2 = token.cells.length;\\n\\n              for (j = 0; j < l2; j++) {\\n                row = token.tokens.cells[j];\\n                cell = '';\\n                l3 = row.length;\\n\\n                for (k = 0; k < l3; k++) {\\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\\n                    header: false,\\n                    align: token.align[k]\\n                  });\\n                }\\n\\n                body += this.renderer.tablerow(cell);\\n              }\\n\\n              out += this.renderer.table(header, body);\\n              continue;\\n            }\\n\\n          case 'blockquote':\\n            {\\n              body = this.parse(token.tokens);\\n              out += this.renderer.blockquote(body);\\n              continue;\\n            }\\n\\n          case 'list':\\n            {\\n              ordered = token.ordered;\\n              start = token.start;\\n              loose = token.loose;\\n              l2 = token.items.length;\\n              body = '';\\n\\n              for (j = 0; j < l2; j++) {\\n                item = token.items[j];\\n                checked = item.checked;\\n                task = item.task;\\n                itemBody = '';\\n\\n                if (item.task) {\\n                  checkbox = this.renderer.checkbox(checked);\\n\\n                  if (loose) {\\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\\n\\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\\n                      }\\n                    } else {\\n                      item.tokens.unshift({\\n                        type: 'text',\\n                        text: checkbox\\n                      });\\n                    }\\n                  } else {\\n                    itemBody += checkbox;\\n                  }\\n                }\\n\\n                itemBody += this.parse(item.tokens, loose);\\n                body += this.renderer.listitem(itemBody, task, checked);\\n              }\\n\\n              out += this.renderer.list(body, ordered, start);\\n              continue;\\n            }\\n\\n          case 'html':\\n            {\\n              // TODO parse inline content if parameter markdown=1\\n              out += this.renderer.html(token.text);\\n              continue;\\n            }\\n\\n          case 'paragraph':\\n            {\\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\\n              continue;\\n            }\\n\\n          case 'text':\\n            {\\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\\n\\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\\n                token = tokens[++i];\\n                body += '\\\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\\n              }\\n\\n              out += top ? this.renderer.paragraph(body) : body;\\n              continue;\\n            }\\n\\n          default:\\n            {\\n              var errMsg = 'Token with \\\"' + token.type + '\\\" type was not found.';\\n\\n              if (this.options.silent) {\\n                console.error(errMsg);\\n                return;\\n              } else {\\n                throw new Error(errMsg);\\n              }\\n            }\\n        }\\n      }\\n\\n      return out;\\n    }\\n    /**\\n     * Parse Inline Tokens\\n     */\\n    ;\\n\\n    _proto.parseInline = function parseInline(tokens, renderer) {\\n      renderer = renderer || this.renderer;\\n      var out = '',\\n          i,\\n          token;\\n      var l = tokens.length;\\n\\n      for (i = 0; i < l; i++) {\\n        token = tokens[i];\\n\\n        switch (token.type) {\\n          case 'escape':\\n            {\\n              out += renderer.text(token.text);\\n              break;\\n            }\\n\\n          case 'html':\\n            {\\n              out += renderer.html(token.text);\\n              break;\\n            }\\n\\n          case 'link':\\n            {\\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\\n              break;\\n            }\\n\\n          case 'image':\\n            {\\n              out += renderer.image(token.href, token.title, token.text);\\n              break;\\n            }\\n\\n          case 'strong':\\n            {\\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\\n              break;\\n            }\\n\\n          case 'em':\\n            {\\n              out += renderer.em(this.parseInline(token.tokens, renderer));\\n              break;\\n            }\\n\\n          case 'codespan':\\n            {\\n              out += renderer.codespan(token.text);\\n              break;\\n            }\\n\\n          case 'br':\\n            {\\n              out += renderer.br();\\n              break;\\n            }\\n\\n          case 'del':\\n            {\\n              out += renderer.del(this.parseInline(token.tokens, renderer));\\n              break;\\n            }\\n\\n          case 'text':\\n            {\\n              out += renderer.text(token.text);\\n              break;\\n            }\\n\\n          default:\\n            {\\n              var errMsg = 'Token with \\\"' + token.type + '\\\" type was not found.';\\n\\n              if (this.options.silent) {\\n                console.error(errMsg);\\n                return;\\n              } else {\\n                throw new Error(errMsg);\\n              }\\n            }\\n        }\\n      }\\n\\n      return out;\\n    };\\n\\n    return Parser;\\n  }();\\n\\n  var merge = helpers.merge,\\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\\n      escape = helpers.escape;\\n  var getDefaults = defaults$5.getDefaults,\\n      changeDefaults = defaults$5.changeDefaults,\\n      defaults = defaults$5.defaults;\\n  /**\\n   * Marked\\n   */\\n\\n  function marked(src, opt, callback) {\\n    // throw error in case of non string input\\n    if (typeof src === 'undefined' || src === null) {\\n      throw new Error('marked(): input parameter is undefined or null');\\n    }\\n\\n    if (typeof src !== 'string') {\\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\\n    }\\n\\n    if (typeof opt === 'function') {\\n      callback = opt;\\n      opt = null;\\n    }\\n\\n    opt = merge({}, marked.defaults, opt || {});\\n    checkSanitizeDeprecation(opt);\\n\\n    if (callback) {\\n      var highlight = opt.highlight;\\n      var tokens;\\n\\n      try {\\n        tokens = Lexer_1.lex(src, opt);\\n      } catch (e) {\\n        return callback(e);\\n      }\\n\\n      var done = function done(err) {\\n        var out;\\n\\n        if (!err) {\\n          try {\\n            out = Parser_1.parse(tokens, opt);\\n          } catch (e) {\\n            err = e;\\n          }\\n        }\\n\\n        opt.highlight = highlight;\\n        return err ? callback(err) : callback(null, out);\\n      };\\n\\n      if (!highlight || highlight.length < 3) {\\n        return done();\\n      }\\n\\n      delete opt.highlight;\\n      if (!tokens.length) return done();\\n      var pending = 0;\\n      marked.walkTokens(tokens, function (token) {\\n        if (token.type === 'code') {\\n          pending++;\\n          setTimeout(function () {\\n            highlight(token.text, token.lang, function (err, code) {\\n              if (err) {\\n                return done(err);\\n              }\\n\\n              if (code != null && code !== token.text) {\\n                token.text = code;\\n                token.escaped = true;\\n              }\\n\\n              pending--;\\n\\n              if (pending === 0) {\\n                done();\\n              }\\n            });\\n          }, 0);\\n        }\\n      });\\n\\n      if (pending === 0) {\\n        done();\\n      }\\n\\n      return;\\n    }\\n\\n    try {\\n      var _tokens = Lexer_1.lex(src, opt);\\n\\n      if (opt.walkTokens) {\\n        marked.walkTokens(_tokens, opt.walkTokens);\\n      }\\n\\n      return Parser_1.parse(_tokens, opt);\\n    } catch (e) {\\n      e.message += '\\\\nPlease report this to https://github.com/markedjs/marked.';\\n\\n      if (opt.silent) {\\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\\n      }\\n\\n      throw e;\\n    }\\n  }\\n  /**\\n   * Options\\n   */\\n\\n\\n  marked.options = marked.setOptions = function (opt) {\\n    merge(marked.defaults, opt);\\n    changeDefaults(marked.defaults);\\n    return marked;\\n  };\\n\\n  marked.getDefaults = getDefaults;\\n  marked.defaults = defaults;\\n  /**\\n   * Use Extension\\n   */\\n\\n  marked.use = function (extension) {\\n    var opts = merge({}, extension);\\n\\n    if (extension.renderer) {\\n      (function () {\\n        var renderer = marked.defaults.renderer || new Renderer_1();\\n\\n        var _loop = function _loop(prop) {\\n          var prevRenderer = renderer[prop];\\n\\n          renderer[prop] = function () {\\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n              args[_key] = arguments[_key];\\n            }\\n\\n            var ret = extension.renderer[prop].apply(renderer, args);\\n\\n            if (ret === false) {\\n              ret = prevRenderer.apply(renderer, args);\\n            }\\n\\n            return ret;\\n          };\\n        };\\n\\n        for (var prop in extension.renderer) {\\n          _loop(prop);\\n        }\\n\\n        opts.renderer = renderer;\\n      })();\\n    }\\n\\n    if (extension.tokenizer) {\\n      (function () {\\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\\n\\n        var _loop2 = function _loop2(prop) {\\n          var prevTokenizer = tokenizer[prop];\\n\\n          tokenizer[prop] = function () {\\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n              args[_key2] = arguments[_key2];\\n            }\\n\\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\\n\\n            if (ret === false) {\\n              ret = prevTokenizer.apply(tokenizer, args);\\n            }\\n\\n            return ret;\\n          };\\n        };\\n\\n        for (var prop in extension.tokenizer) {\\n          _loop2(prop);\\n        }\\n\\n        opts.tokenizer = tokenizer;\\n      })();\\n    }\\n\\n    if (extension.walkTokens) {\\n      var walkTokens = marked.defaults.walkTokens;\\n\\n      opts.walkTokens = function (token) {\\n        extension.walkTokens(token);\\n\\n        if (walkTokens) {\\n          walkTokens(token);\\n        }\\n      };\\n    }\\n\\n    marked.setOptions(opts);\\n  };\\n  /**\\n   * Run callback for every token\\n   */\\n\\n\\n  marked.walkTokens = function (tokens, callback) {\\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\\n      var token = _step.value;\\n      callback(token);\\n\\n      switch (token.type) {\\n        case 'table':\\n          {\\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\\n              var cell = _step2.value;\\n              marked.walkTokens(cell, callback);\\n            }\\n\\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\\n              var row = _step3.value;\\n\\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\\n                var _cell = _step4.value;\\n                marked.walkTokens(_cell, callback);\\n              }\\n            }\\n\\n            break;\\n          }\\n\\n        case 'list':\\n          {\\n            marked.walkTokens(token.items, callback);\\n            break;\\n          }\\n\\n        default:\\n          {\\n            if (token.tokens) {\\n              marked.walkTokens(token.tokens, callback);\\n            }\\n          }\\n      }\\n    }\\n  };\\n  /**\\n   * Parse Inline\\n   */\\n\\n\\n  marked.parseInline = function (src, opt) {\\n    // throw error in case of non string input\\n    if (typeof src === 'undefined' || src === null) {\\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\\n    }\\n\\n    if (typeof src !== 'string') {\\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\\n    }\\n\\n    opt = merge({}, marked.defaults, opt || {});\\n    checkSanitizeDeprecation(opt);\\n\\n    try {\\n      var tokens = Lexer_1.lexInline(src, opt);\\n\\n      if (opt.walkTokens) {\\n        marked.walkTokens(tokens, opt.walkTokens);\\n      }\\n\\n      return Parser_1.parseInline(tokens, opt);\\n    } catch (e) {\\n      e.message += '\\\\nPlease report this to https://github.com/markedjs/marked.';\\n\\n      if (opt.silent) {\\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\\n      }\\n\\n      throw e;\\n    }\\n  };\\n  /**\\n   * Expose\\n   */\\n\\n\\n  marked.Parser = Parser_1;\\n  marked.parser = Parser_1.parse;\\n  marked.Renderer = Renderer_1;\\n  marked.TextRenderer = TextRenderer_1;\\n  marked.Lexer = Lexer_1;\\n  marked.lexer = Lexer_1.lex;\\n  marked.Tokenizer = Tokenizer_1;\\n  marked.Slugger = Slugger_1;\\n  marked.parse = marked;\\n  var marked_1 = marked;\\n\\n  return marked_1;\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"globalThis\",\"self\",\"marked\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"prototype\",\"_unsupportedIterableToArray\",\"o\",\"minLen\",\"_arrayLikeToArray\",\"n\",\"toString\",\"call\",\"slice\",\"constructor\",\"name\",\"Array\",\"from\",\"test\",\"arr\",\"len\",\"arr2\",\"_createForOfIteratorHelperLoose\",\"allowArrayLike\",\"it\",\"Symbol\",\"iterator\",\"isArray\",\"done\",\"value\",\"TypeError\",\"next\",\"bind\",\"unescape$1\",\"html\",\"replace\",\"unescapeTest\",\"_\",\"toLowerCase\",\"charAt\",\"String\",\"fromCharCode\",\"parseInt\",\"substring\",\"rtrim$1\",\"str\",\"c\",\"invert\",\"l\",\"suffLen\",\"currChar\",\"substr\",\"outputLink\",\"cap\",\"link\",\"raw\",\"href\",\"title\",\"_escape\",\"text\",\"type\",\"indentCodeCompensation\",\"matchIndentToCode\",\"match\",\"indentToCode\",\"split\",\"map\",\"node\",\"matchIndentInNode\",\"indentInNode\",\"join\",\"smartypants\",\"mangle\",\"out\",\"ch\",\"charCodeAt\",\"Math\",\"random\",\"src\",\"opt\",\"callback\",\"Error\",\"merge\",\"defaults\",\"checkSanitizeDeprecation\",\"highlight\",\"tokens\",\"Lexer_1\",\"lex\",\"e\",\"err\",\"Parser_1\",\"parse\",\"pending\",\"walkTokens\",\"token\",\"setTimeout\",\"lang\",\"code\",\"escaped\",\"_tokens\",\"message\",\"silent\",\"escape\",\"defaults$5\",\"createCommonjsModule\",\"fn\",\"getDefaults\",\"baseUrl\",\"breaks\",\"gfm\",\"headerIds\",\"headerPrefix\",\"langPrefix\",\"pedantic\",\"renderer\",\"sanitize\",\"sanitizer\",\"smartLists\",\"tokenizer\",\"xhtml\",\"changeDefaults\",\"newDefaults\",\"escapeTest\",\"escapeReplace\",\"escapeTestNoEncode\",\"escapeReplaceNoEncode\",\"escapeReplacements\",\"getEscapeReplacement\",\"caret\",\"nonWordAndColonTest\",\"originIndependentUrl\",\"baseUrls\",\"justDomain\",\"protocol\",\"domain\",\"escape$2\",\"encode\",\"merge$2\",\"obj\",\"arguments\",\"hasOwnProperty\",\"defaults$4\",\"splitCells\",\"splitCells$1\",\"tableRow\",\"count\",\"cells\",\"row\",\"offset\",\"curr\",\"splice\",\"push\",\"trim\",\"Tokenizer_1\",\"Tokenizer\",\"options\",\"_proto\",\"space\",\"_proto.space\",\"rules\",\"block\",\"newline\",\"exec\",\"_proto.code\",\"codeBlockStyle\",\"fences\",\"_proto.fences\",\"heading\",\"_proto.heading\",\"trimmed\",\"depth\",\"nptable\",\"_proto.nptable\",\"item\",\"header\",\"align\",\"hr\",\"_proto.hr\",\"blockquote\",\"_proto.blockquote\",\"list\",\"_proto.list\",\"bull\",\"isordered\",\"ordered\",\"start\",\"loose\",\"items\",\"itemMatch\",\"bnext\",\"bcurr\",\"listItemStart\",\"endMatch\",\"RegExp\",\"addBack\",\"index\",\"indexOf\",\"istask\",\"ischecked\",\"undefined\",\"task\",\"checked\",\"_proto.html\",\"pre\",\"def\",\"_proto.def\",\"tag\",\"table\",\"_proto.table\",\"lheading\",\"_proto.lheading\",\"paragraph\",\"_proto.paragraph\",\"_proto.text\",\"_proto.escape\",\"inline\",\"_proto.tag\",\"inLink\",\"inRawBlock\",\"_proto.link\",\"trimmedUrl\",\"rtrimSlash\",\"level\",\"lastParenIndex\",\"linkLen\",\"_escapes\",\"reflink\",\"_proto.reflink\",\"links\",\"nolink\",\"emStrong\",\"_proto.emStrong\",\"maskedSrc\",\"prevChar\",\"lDelim\",\"nextChar\",\"punctuation\",\"lLength\",\"rDelim\",\"delimTotal\",\"midDelimTotal\",\"endReg\",\"rDelimAst\",\"rDelimUnd\",\"lastIndex\",\"rLength\",\"min\",\"codespan\",\"_proto.codespan\",\"hasNonSpaceChars\",\"hasSpaceCharsOnBothEnds\",\"br\",\"_proto.br\",\"del\",\"_proto.del\",\"autolink\",\"_proto.autolink\",\"url\",\"_proto.url\",\"prevCapZero\",\"_backpedal\",\"inlineText\",\"_proto.inlineText\",\"noopTest\",\"noopTest$1\",\"edit\",\"edit$1\",\"regex\",\"source\",\"val\",\"getRegex\",\"block$1\",\"_paragraph\",\"_label\",\"_title\",\"bullet\",\"_tag\",\"_comment\",\"normal\",\"inline$1\",\"reflinkSearch\",\"_punctuation\",\"blockSkip\",\"escapedEmSt\",\"_scheme\",\"_email\",\"_attribute\",\"_href\",\"strong\",\"middle\",\"endAst\",\"endUnd\",\"em\",\"_extended_email\",\"defaults$3\",\"repeatString\",\"repeatString$1\",\"pattern\",\"result\",\"Lexer\",\"create\",\"Lexer.lex\",\"lexer\",\"lexInline\",\"Lexer.lexInline\",\"inlineTokens\",\"_proto.lex\",\"blockTokens\",\"_proto.blockTokens\",\"top\",\"lastToken\",\"errMsg\",\"console\",\"error\",\"_proto.inline\",\"j\",\"k\",\"l2\",\"_proto.inlineTokens\",\"keys\",\"includes\",\"lastIndexOf\",\"keepPrevChar\",\"_lastToken\",\"_lastToken2\",\"get\",\"defaults$2\",\"cleanUrl\",\"cleanUrl$1\",\"base\",\"prot\",\"decodeURIComponent\",\"relativeBase\",\"encodeURI\",\"Renderer_1\",\"Renderer\",\"_code\",\"infostring\",\"quote\",\"_html\",\"slugger\",\"slug\",\"body\",\"startatt\",\"listitem\",\"_proto.listitem\",\"checkbox\",\"_proto.checkbox\",\"tablerow\",\"_proto.tablerow\",\"content\",\"tablecell\",\"_proto.tablecell\",\"flags\",\"_proto.strong\",\"_proto.em\",\"image\",\"_proto.image\",\"_text\",\"TextRenderer_1\",\"TextRenderer\",\"Slugger_1\",\"Slugger\",\"seen\",\"serialize\",\"_proto.serialize\",\"getNextSafeSlug\",\"_proto.getNextSafeSlug\",\"originalSlug\",\"isDryRun\",\"occurenceAccumulator\",\"_proto.slug\",\"dryrun\",\"defaults$1\",\"Parser\",\"textRenderer\",\"Parser.parse\",\"parser\",\"parseInline\",\"Parser.parseInline\",\"_proto.parse\",\"cell\",\"l3\",\"itemBody\",\"unshift\",\"_proto.parseInline\",\"checkSanitizeDeprecation$1\",\"warn\",\"setOptions\",\"marked.setOptions\",\"use\",\"marked.use\",\"extension\",\"opts\",\"_loop\",\"prop\",\"prevRenderer\",\"_len\",\"args\",\"_key\",\"ret\",\"apply\",\"_loop2\",\"prevTokenizer\",\"_len2\",\"_key2\",\"opts.walkTokens\",\"marked.walkTokens\",\"_iterator\",\"_step\",\"_iterator2\",\"_step2\",\"_iterator3\",\"_step3\",\"_iterator4\",\"_step4\",\"marked.parseInline\"]\n}\n"]