["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseReduce.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseReduce=function(global,require,module,exports){module.exports=function(collection$jscomp$0,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection$jscomp$0,function(value,index,collection){accumulator=initAccum?(initAccum=!1,value):iteratee(accumulator,value,index,collection)});return accumulator}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseReduce\"] = function(global,require,module,exports) {\n/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1621210442083,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseReduce.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuBnGD,MAAOC,CAAAA,OAAP,CATAC,QAAmB,CAACC,mBAAD,CAAaC,QAAb,CAAuBC,WAAvB,CAAoCC,SAApC,CAA+CC,QAA/C,CAAyD,CAC1EA,QAAA,CAASJ,mBAAT,CAAqB,QAAQ,CAACK,KAAD,CAAQC,KAAR,CAAeN,UAAf,CAA2B,CACtDE,WAAA,CAAcC,SAAA,EACTA,SAAA,CAAY,CAAA,CAAZ,CAAmBE,KADV,EAEVJ,QAAA,CAASC,WAAT,CAAsBG,KAAtB,CAA6BC,KAA7B,CAAoCN,UAApC,CAHkD,CAAxD,CAKA,OAAOE,YANmE,CAduB;\",\n\"sources\":[\"node_modules/lodash/_baseReduce.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseReduce\\\"] = function(global,require,module,exports) {\\n/**\\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @param {*} accumulator The initial value.\\n * @param {boolean} initAccum Specify using the first or last element of\\n *  `collection` as the initial value.\\n * @param {Function} eachFunc The function to iterate over `collection`.\\n * @returns {*} Returns the accumulated value.\\n */\\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\\n  eachFunc(collection, function(value, index, collection) {\\n    accumulator = initAccum\\n      ? (initAccum = false, value)\\n      : iteratee(accumulator, value, index, collection);\\n  });\\n  return accumulator;\\n}\\n\\nmodule.exports = baseReduce;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseReduce\",\"collection\",\"iteratee\",\"accumulator\",\"initAccum\",\"eachFunc\",\"value\",\"index\"]\n}\n"]