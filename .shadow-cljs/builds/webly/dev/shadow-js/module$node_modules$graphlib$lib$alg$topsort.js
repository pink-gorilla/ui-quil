["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/graphlib/lib/alg/topsort.js"],"~:js","shadow$provide.module$node_modules$graphlib$lib$alg$topsort=function(global,require,module,exports){function topsort(g){function visit(node){if(_.has(stack,node))throw new CycleException;_.has(visited,node)||(stack[node]=!0,visited[node]=!0,_.each(g.predecessors(node),visit),delete stack[node],results.push(node))}var visited={},stack={},results=[];_.each(g.sinks(),visit);if(_.size(visited)!==g.nodeCount())throw new CycleException;return results}function CycleException(){}var _=require(\"module$node_modules$graphlib$lib$lodash\");\nmodule.exports=topsort;topsort.CycleException=CycleException;CycleException.prototype=Error()}","~:source","shadow$provide[\"module$node_modules$graphlib$lib$alg$topsort\"] = function(global,require,module,exports) {\nvar _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$graphlib$lib$lodash"]],"~:properties",["^5",["prototype","CycleException"]],"~:compiled-at",1621210442096,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$graphlib$lib$alg$topsort.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAMzGC,QAASA,QAAO,CAACC,CAAD,CAAI,CAKlBC,QAASA,MAAK,CAACC,IAAD,CAAO,CACnB,GAAIC,CAAEC,CAAAA,GAAF,CAAMC,KAAN,CAAaH,IAAb,CAAJ,CACE,KAAM,KAAII,cAAV,CAGGH,CAAEC,CAAAA,GAAF,CAAMG,OAAN,CAAeL,IAAf,CAAL,GACEG,KAAA,CAAMH,IAAN,CAIA,CAJc,CAAA,CAId,CAHAK,OAAA,CAAQL,IAAR,CAGA,CAHgB,CAAA,CAGhB,CAFAC,CAAEK,CAAAA,IAAF,CAAOR,CAAES,CAAAA,YAAF,CAAeP,IAAf,CAAP,CAA6BD,KAA7B,CAEA,CADA,OAAOI,KAAA,CAAMH,IAAN,CACP,CAAAQ,OAAQC,CAAAA,IAAR,CAAaT,IAAb,CALF,CALmB,CAJrB,IAAIK,QAAU,EAAd,CACIF,MAAQ,EADZ,CAEIK,QAAU,EAgBdP,EAAEK,CAAAA,IAAF,CAAOR,CAAEY,CAAAA,KAAF,EAAP,CAAkBX,KAAlB,CAEA,IAAIE,CAAEU,CAAAA,IAAF,CAAON,OAAP,CAAJ,GAAwBP,CAAEc,CAAAA,SAAF,EAAxB,CACE,KAAM,KAAIR,cAAV,CAGF,MAAOI,QAzBW,CA4BpBJ,QAASA,eAAc,EAAG,EAjC1B,IAAIH,EAAIP,OAAA,CAAQ,yCAAR,CAERC;MAAOC,CAAAA,OAAP,CAAiBC,OACjBA,QAAQO,CAAAA,cAAR,CAAyBA,cA+BzBA,eAAeS,CAAAA,SAAf,CAA+BC,KAAJ,EAnC8E;\",\n\"sources\":[\"node_modules/graphlib/lib/alg/topsort.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$graphlib$lib$alg$topsort\\\"] = function(global,require,module,exports) {\\nvar _ = require(\\\"../lodash\\\");\\n\\nmodule.exports = topsort;\\ntopsort.CycleException = CycleException;\\n\\nfunction topsort(g) {\\n  var visited = {};\\n  var stack = {};\\n  var results = [];\\n\\n  function visit(node) {\\n    if (_.has(stack, node)) {\\n      throw new CycleException();\\n    }\\n\\n    if (!_.has(visited, node)) {\\n      stack[node] = true;\\n      visited[node] = true;\\n      _.each(g.predecessors(node), visit);\\n      delete stack[node];\\n      results.push(node);\\n    }\\n  }\\n\\n  _.each(g.sinks(), visit);\\n\\n  if (_.size(visited) !== g.nodeCount()) {\\n    throw new CycleException();\\n  }\\n\\n  return results;\\n}\\n\\nfunction CycleException() {}\\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"topsort\",\"g\",\"visit\",\"node\",\"_\",\"has\",\"stack\",\"CycleException\",\"visited\",\"each\",\"predecessors\",\"results\",\"push\",\"sinks\",\"size\",\"nodeCount\",\"prototype\",\"Error\"]\n}\n"]