["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_arrayMap.js"],"~:js","shadow$provide.module$node_modules$lodash$_arrayMap=function(global,require,module,exports){module.exports=function(array,iteratee){for(var index=-1,length=null==array?0:array.length,result=Array(length);++index<length;)result[index]=iteratee(array[index],index,array);return result}}","~:source","shadow$provide[\"module$node_modules$lodash$_arrayMap\"] = function(global,require,module,exports) {\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1621210442077,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_arrayMap.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqBjGD,MAAOC,CAAAA,OAAP,CAXAC,QAAiB,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAKjC,IALiC,IAC7BC,MAAQ,EADqB,CAE7BC,OAAkB,IAAT,EAAAH,KAAA,CAAgB,CAAhB,CAAoBA,KAAMG,CAAAA,MAFN,CAG7BC,OAASC,KAAA,CAAMF,MAAN,CAEb,CAAO,EAAED,KAAT,CAAiBC,MAAjB,CAAA,CACEC,MAAA,CAAOF,KAAP,CAAA,CAAgBD,QAAA,CAASD,KAAA,CAAME,KAAN,CAAT,CAAuBA,KAAvB,CAA8BF,KAA9B,CAElB,OAAOI,OAR0B,CAV8D;\",\n\"sources\":[\"node_modules/lodash/_arrayMap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_arrayMap\\\"] = function(global,require,module,exports) {\\n/**\\n * A specialized version of `_.map` for arrays without support for iteratee\\n * shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array} Returns the new mapped array.\\n */\\nfunction arrayMap(array, iteratee) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length,\\n      result = Array(length);\\n\\n  while (++index < length) {\\n    result[index] = iteratee(array[index], index, array);\\n  }\\n  return result;\\n}\\n\\nmodule.exports = arrayMap;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"arrayMap\",\"array\",\"iteratee\",\"index\",\"length\",\"result\",\"Array\"]\n}\n"]